{
  "data": [
    {
      "input": "Una tabla de accidente con las columnas de, accidente de identificación, accidente de clase, unidad administrativa, accidente de tiempo, asentamiento o fuera, categoría de camino, letrero de camino o asentamiento, texto de camino o asentamiento, letrero de sección o calle, texto de sección o calle, calle estacionaria o casa, descripción de la escena, causa de accidente, tipo de accidente, accidente meteorológico, estado del tráfico, estado de la carretera, estado de la superficie de la carretera, x, y, x wgs, y wgs",
      "output": "('nesreca', 'CREATE TABLE `nesreca` (\\n  `id_nesreca` char(6) NOT NULL  `klas_nesreca` char(1) NOT NULL,\\n  `upravna_enota` char(4) NOT NULL,\\n  `cas_nesreca` datetime NOT NULL,\\n  `naselje_ali_izven` char(1) NOT NULL,\\n  `kategorija_cesta` char(1) DEFAULT NULL,\\n  `oznaka_cesta_ali_naselje` char(5) NOT NULL,\\n  `tekst_cesta_ali_naselje` varchar(25) NOT NULL,\\n  `oznaka_odsek_ali_ulica` char(5) NOT NULL,\\n  `tekst_odsek_ali_ulica` varchar(25) NOT NULL,\\n  `stacionazna_ali_hisna_st` varchar(9) DEFAULT NULL,\\n  `opis_prizorisce` char(1) NOT NULL,\\n  `vzrok_nesreca` char(2) NOT NULL,\\n  `tip_nesreca` char(2) NOT NULL,\\n  `vreme_nesreca` char(1) NOT NULL,\\n  `stanje_promet` char(1) NOT NULL,\\n  `stanje_vozisce` char(2) NOT NULL,\\n  `stanje_povrsina_vozisce` char(2) NOT NULL,\\n  `x` int(11) DEFAULT NULL,\\n  `y` int(11) DEFAULT NULL,\\n  `x_wgs84` double DEFAULT NULL,\\n  `y_wgs84` double DEFAULT NULL,\\n  PRIMARY KEY (`id_nesreca`),\\n  KEY `nesreca_cas_nesreca_idx` (`cas_nesreca`),\\n  KEY `nesreca_pos_idx` (`x`,`y`),\\n  KEY `nesreca_pos_wgs_84` (`x_wgs84`,`y_wgs84`),\\n  KEY `upravna_enota` (`upravna_enota`),\\n  CONSTRAINT `nesreca_ibfk_1` FOREIGN KEY (`upravna_enota`) REFERENCES `upravna_enota` (`id_upravna_enota`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de persona con las columnas de, id accidente, autor o participante, edad, sexo, unidad administrativa, nacionalidad, lesión, tipo de participante, cinturón de seguridad o casco, pista de conducción L L, pista de conducción M M, alcoholímetro, examen pericial, edad d, prueba de manejo d, alcoholímetro d , revisión por pares d",
      "output": "('oseba', 'CREATE TABLE `oseba` (\\n  `id_nesreca` char(6) NOT NULL  `povzrocitelj_ali_udelezenec` char(1) DEFAULT NULL,\\n  `starost` tinyint(3) unsigned DEFAULT NULL,\\n  `spol` char(1) NOT NULL,\\n  `upravna_enota` char(4) NOT NULL,\\n  `drzavljanstvo` char(3) NOT NULL,\\n  `poskodba` char(1) DEFAULT NULL,\\n  `vrsta_udelezenca` char(2) DEFAULT NULL,\\n  `varnostni_pas_ali_celada` char(1) DEFAULT NULL,\\n  `vozniski_staz_LL` tinyint(3) unsigned DEFAULT NULL,\\n  `vozniski_staz_MM` tinyint(3) unsigned DEFAULT NULL,\\n  `alkotest` decimal(3,2) DEFAULT NULL,\\n  `strokovni_pregled` decimal(3,2) DEFAULT NULL,\\n  `starost_d` char(1) DEFAULT NULL,\\n  `vozniski_staz_d` char(1) NOT NULL,\\n  `alkotest_d` char(1) NOT NULL,\\n  `strokovni_pregled_d` char(1) NOT NULL,\\n  KEY `oseba_id_nesreca` (`id_nesreca`),\\n  KEY `upravna_enota` (`upravna_enota`),\\n  CONSTRAINT `oseba_ibfk_1` FOREIGN KEY (`id_nesreca`) REFERENCES `nesreca` (`id_nesreca`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `oseba_ibfk_2` FOREIGN KEY (`upravna_enota`) REFERENCES `upravna_enota` (`id_upravna_enota`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Unidad administrativa con las columnas de, id unidad administrativa, nombre unidad administrativa, st habitantes, area",
      "output": "('upravna_enota', 'CREATE TABLE `upravna_enota` (\\n  `id_upravna_enota` char(4) NOT NULL  `ime_upravna_enota` varchar(255) NOT NULL,\\n  `st_prebivalcev` int(10) unsigned DEFAULT NULL,\\n  `povrsina` smallint(5) unsigned DEFAULT NULL,\\n  PRIMARY KEY (`id_upravna_enota`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de anuncio con las columnas de, ID de anuncio, ID de usuario, ts",
      "output": "('ad', 'CREATE TABLE `ad` (\\n  `ad_id` int(11) NOT NULL  `user_id` int(11) NOT NULL,\\n  `ts` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`ts`,`ad_id`,`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Versión de construcción A W con las columnas de, ID de información del sistema, versión de la base de datos, fecha de la versión, fecha de modificación",
      "output": "('AWBuildVersion', \"CREATE TABLE `AWBuildVersion` (\\n  `SystemInformationID` tinyint(3) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary key for AWBuildVersion records.'  `Database Version` varchar(25) NOT NULL COMMENT 'Version number of the database in 9.yy.mm.dd.00 format.',\\n  `VersionDate` datetime NOT NULL COMMENT 'Date and time the record was last updated.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SystemInformationID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='Current version number of the AdventureWorks 2014 sample database. '\")"
    },
    {
      "input": "Una tabla de Dirección con las columnas de, Id. de dirección, Línea de dirección, Línea de dirección, Ciudad, Id. de provincia estatal, Código postal, Ubicación espacial, rowguid, Fecha de modificación",
      "output": "('Address', \"CREATE TABLE `Address` (\\n  `AddressID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Address records.'  `AddressLine1` varchar(60) NOT NULL COMMENT 'First street address line.',\\n  `AddressLine2` varchar(60) DEFAULT NULL COMMENT 'Second street address line.',\\n  `City` varchar(30) NOT NULL COMMENT 'Name of the city.',\\n  `StateProvinceID` int(11) NOT NULL COMMENT 'Unique identification number for the state or province. Foreign key to StateProvince table.',\\n  `PostalCode` varchar(15) NOT NULL COMMENT 'Postal code for the street address.',\\n  `SpatialLocation` geometry DEFAULT NULL COMMENT 'Latitude and longitude of this address.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`AddressID`),\\n  UNIQUE KEY `AK_Address_rowguid` (`rowguid`),\\n  UNIQUE KEY `IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_Post1` (`AddressLine1`,`AddressLine2`,`City`,`StateProvinceID`,`PostalCode`),\\n  KEY `IX_Address_StateProvinceID` (`StateProvinceID`),\\n  KEY `GUID_Address` (`rowguid`),\\n  CONSTRAINT `FK_Address_StateProvince_StateProvinceID` FOREIGN KEY (`StateProvinceID`) REFERENCES `StateProvince` (`StateProvinceID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=32522 DEFAULT CHARSET=utf8 COMMENT='Street address information for customers, employees, and vendors.'\")"
    },
    {
      "input": "Una tabla de Tipo de dirección con las columnas de, ID de tipo de dirección, nombre, rowguid, fecha de modificación",
      "output": "('AddressType', \"CREATE TABLE `AddressType` (\\n  `AddressTypeID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for AddressType records.'  `Name` varchar(100) NOT NULL COMMENT 'Address type description. For example, Billing, Home, or Shipping.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`AddressTypeID`),\\n  UNIQUE KEY `AK_AddressType_rowguid` (`rowguid`),\\n  UNIQUE KEY `AK_AddressType_Name` (`Name`),\\n  KEY `GUID_AddressType` (`rowguid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT='Types of addresses stored in the Address table. '\")"
    },
    {
      "input": "Una tabla de Lista de materiales con las columnas de, Id. de lista de materiales, Id. de ensamblaje de producto, Id. de componente, Fecha de inicio, Fecha de finalización, Código de medida de unidad, Nivel de lista de materiales, Cantidad por ensamblaje, Fecha de modificación",
      "output": "('BillOfMaterials', \"CREATE TABLE `BillOfMaterials` (\\n  `BillOfMaterialsID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for BillOfMaterials records.'  `ProductAssemblyID` int(11) DEFAULT NULL COMMENT 'Parent product identification number. Foreign key to Product.ProductID.',\\n  `ComponentID` int(11) NOT NULL COMMENT 'Component identification number. Foreign key to Product.ProductID.',\\n  `StartDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date the component started being used in the assembly item.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'Date the component stopped being used in the assembly item.',\\n  `UnitMeasureCode` char(3) NOT NULL COMMENT 'Standard code identifying the unit of measure for the quantity.',\\n  `BOMLevel` smallint(6) NOT NULL COMMENT 'Indicates the depth the component is from its parent (AssemblyID).',\\n  `PerAssemblyQty` decimal(8,2) NOT NULL DEFAULT 1.00 COMMENT 'Quantity of the component needed to create the assembly.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BillOfMaterialsID`),\\n  UNIQUE KEY `AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate` (`ProductAssemblyID`,`ComponentID`,`StartDate`),\\n  KEY `IX_BillOfMaterials_UnitMeasureCode` (`UnitMeasureCode`),\\n  KEY `FK_BillOfMaterials_Product_ComponentID` (`ComponentID`),\\n  CONSTRAINT `FK_BillOfMaterials_Product_ComponentID` FOREIGN KEY (`ComponentID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BillOfMaterials_Product_ProductAssemblyID` FOREIGN KEY (`ProductAssemblyID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BillOfMaterials_UnitMeasure_UnitMeasureCode` FOREIGN KEY (`UnitMeasureCode`) REFERENCES `UnitMeasure` (`UnitMeasureCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=3483 DEFAULT CHARSET=utf8 COMMENT='Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.'\")"
    },
    {
      "input": "Una tabla de Entidad de negocios con las columnas de, Id. de entidad comercial, rowguid, Fecha de modificación",
      "output": "('BusinessEntity', \"CREATE TABLE `BusinessEntity` (\\n  `BusinessEntityID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for all customers, vendors, and employees.'  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_BusinessEntity_rowguid` (`rowguid`),\\n  KEY `GUID_BusinessEntity` (`rowguid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=20778 DEFAULT CHARSET=utf8 COMMENT='Source of the ID that connects vendors, customers, and employees with address and contact information.'\")"
    },
    {
      "input": "Una tabla de Dirección de la entidad comercial con las columnas de, Id. de entidad comercial, Id. de dirección, Id. de tipo de dirección, rowguid, Fecha de modificación",
      "output": "('BusinessEntityAddress', \"CREATE TABLE `BusinessEntityAddress` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.'  `AddressID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Address.AddressID.',\\n  `AddressTypeID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to AddressType.AddressTypeID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`AddressID`,`AddressTypeID`),\\n  UNIQUE KEY `AK_BusinessEntityAddress_rowguid` (`rowguid`),\\n  KEY `IX_BusinessEntityAddress_AddressID` (`AddressID`),\\n  KEY `IX_BusinessEntityAddress_AddressTypeID` (`AddressTypeID`),\\n  KEY `GUID_BusinessEntityAddress` (`rowguid`),\\n  CONSTRAINT `FK_BusinessEntityAddress_AddressType_AddressTypeID` FOREIGN KEY (`AddressTypeID`) REFERENCES `AddressType` (`AddressTypeID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BusinessEntityAddress_Address_AddressID` FOREIGN KEY (`AddressID`) REFERENCES `Address` (`AddressID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping customers, vendors, and employees to their addresses.'\")"
    },
    {
      "input": "Una tabla de Contacto de la entidad comercial con las columnas de, Id. de entidad comercial, Id. de persona, Id. de tipo de contacto, rowguid, Fecha de modificación",
      "output": "('BusinessEntityContact', \"CREATE TABLE `BusinessEntityContact` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.'  `PersonID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Person.BusinessEntityID.',\\n  `ContactTypeID` int(11) NOT NULL COMMENT 'Primary key.  Foreign key to ContactType.ContactTypeID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`PersonID`,`ContactTypeID`),\\n  UNIQUE KEY `AK_BusinessEntityContact_rowguid` (`rowguid`),\\n  KEY `IX_BusinessEntityContact_PersonID` (`PersonID`),\\n  KEY `IX_BusinessEntityContact_ContactTypeID` (`ContactTypeID`),\\n  KEY `GUID_BusinessEntityContact` (`rowguid`),\\n  CONSTRAINT `FK_BusinessEntityContact_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BusinessEntityContact_ContactType_ContactTypeID` FOREIGN KEY (`ContactTypeID`) REFERENCES `ContactType` (`ContactTypeID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BusinessEntityContact_Person_PersonID` FOREIGN KEY (`PersonID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping stores, vendors, and employees to people'\")"
    },
    {
      "input": "Una tabla de Tipo de Contacto con las columnas de, ID de tipo de contacto, nombre, fecha de modificación",
      "output": "('ContactType', \"CREATE TABLE `ContactType` (\\n  `ContactTypeID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ContactType records.'  `Name` varchar(100) NOT NULL COMMENT 'Contact type description.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ContactTypeID`),\\n  UNIQUE KEY `AK_ContactType_Name` (`Name`)\\n) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 COMMENT='Lookup table containing the types of business entity contacts.'\")"
    },
    {
      "input": "Una tabla de País Región con las columnas de, código de región del país, nombre, fecha de modificación",
      "output": "('CountryRegion', \"CREATE TABLE `CountryRegion` (\\n  `CountryRegionCode` varchar(3) NOT NULL COMMENT 'ISO standard code for countries and regions.'  `Name` varchar(100) NOT NULL COMMENT 'Country or region name.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CountryRegionCode`),\\n  UNIQUE KEY `AK_CountryRegion_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Lookup table containing the ISO standard codes for countries and regions.'\")"
    },
    {
      "input": "Una tabla de País Región Moneda con las columnas de, código de región del país, código de moneda, fecha de modificación",
      "output": "('CountryRegionCurrency', \"CREATE TABLE `CountryRegionCurrency` (\\n  `CountryRegionCode` varchar(3) NOT NULL COMMENT 'ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.'  `CurrencyCode` char(3) NOT NULL COMMENT 'ISO standard currency code. Foreign key to Currency.CurrencyCode.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CountryRegionCode`,`CurrencyCode`),\\n  KEY `IX_CountryRegionCurrency_CurrencyCode` (`CurrencyCode`),\\n  CONSTRAINT `FK_CountryRegionCurrency_CountryRegion_CountryRegionCode` FOREIGN KEY (`CountryRegionCode`) REFERENCES `CountryRegion` (`CountryRegionCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_CountryRegionCurrency_Currency_CurrencyCode` FOREIGN KEY (`CurrencyCode`) REFERENCES `Currency` (`CurrencyCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping ISO currency codes to a country or region.'\")"
    },
    {
      "input": "Una tabla de Tarjeta de crédito con las columnas de, ID de tarjeta de crédito, tipo de tarjeta, número de tarjeta, mes de vencimiento, año de vencimiento, fecha de modificación",
      "output": "('CreditCard', \"CREATE TABLE `CreditCard` (\\n  `CreditCardID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for CreditCard records.'  `CardType` varchar(50) NOT NULL COMMENT 'Credit card name.',\\n  `CardNumber` varchar(25) NOT NULL COMMENT 'Credit card number.',\\n  `ExpMonth` tinyint(3) unsigned NOT NULL COMMENT 'Credit card expiration month.',\\n  `ExpYear` smallint(6) NOT NULL COMMENT 'Credit card expiration year.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CreditCardID`),\\n  UNIQUE KEY `AK_CreditCard_CardNumber` (`CardNumber`)\\n) ENGINE=InnoDB AUTO_INCREMENT=19238 DEFAULT CHARSET=utf8 COMMENT='Customer credit card information.'\")"
    },
    {
      "input": "Una tabla de Cultura con las columnas de, ID de cultura, nombre, fecha de modificación",
      "output": "('Culture', \"CREATE TABLE `Culture` (\\n  `CultureID` char(6) NOT NULL COMMENT 'Primary key for Culture records.'  `Name` varchar(100) NOT NULL COMMENT 'Culture description.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CultureID`),\\n  UNIQUE KEY `AK_Culture_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Lookup table containing the languages in which some AdventureWorks data is stored.'\")"
    },
    {
      "input": "Una tabla de Divisa con las columnas de, código de moneda, nombre, fecha de modificación",
      "output": "('Currency', \"CREATE TABLE `Currency` (\\n  `CurrencyCode` char(3) NOT NULL COMMENT 'The ISO code for the Currency.'  `Name` varchar(100) NOT NULL COMMENT 'Currency name.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CurrencyCode`),\\n  UNIQUE KEY `AK_Currency_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Lookup table containing standard ISO currencies.'\")"
    },
    {
      "input": "Una tabla de Taza de cambio con las columnas de, Id. de tipo de cambio, Fecha de tipo de cambio, Desde código de moneda, A código de moneda, Tipo de cambio medio, Tipo de cambio al final del día, Fecha de modificación",
      "output": "('CurrencyRate', \"CREATE TABLE `CurrencyRate` (\\n  `CurrencyRateID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for CurrencyRate records.'  `CurrencyRateDate` datetime NOT NULL COMMENT 'Date and time the exchange rate was obtained.',\\n  `FromCurrencyCode` char(3) NOT NULL COMMENT 'Exchange rate was converted from this currency code.',\\n  `ToCurrencyCode` char(3) NOT NULL COMMENT 'Exchange rate was converted to this currency code.',\\n  `AverageRate` decimal(19,4) NOT NULL COMMENT 'Average exchange rate for the day.',\\n  `EndOfDayRate` decimal(19,4) NOT NULL COMMENT 'Final exchange rate for the day.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CurrencyRateID`),\\n  UNIQUE KEY `AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode` (`CurrencyRateDate`,`FromCurrencyCode`,`ToCurrencyCode`),\\n  KEY `FK_CurrencyRate_Currency_FromCurrencyCode` (`FromCurrencyCode`),\\n  KEY `FK_CurrencyRate_Currency_ToCurrencyCode` (`ToCurrencyCode`),\\n  CONSTRAINT `FK_CurrencyRate_Currency_FromCurrencyCode` FOREIGN KEY (`FromCurrencyCode`) REFERENCES `Currency` (`CurrencyCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_CurrencyRate_Currency_ToCurrencyCode` FOREIGN KEY (`ToCurrencyCode`) REFERENCES `Currency` (`CurrencyCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=13533 DEFAULT CHARSET=utf8 COMMENT='Currency exchange rates.'\")"
    },
    {
      "input": "Una tabla de Cliente con las columnas de, Id. de cliente, Id. de persona, Id. de tienda, Id. de territorio, Número de cuenta, rowguid, Fecha de modificación",
      "output": "('Customer', \"CREATE TABLE `Customer` (\\n  `CustomerID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key.'  `PersonID` int(11) DEFAULT NULL COMMENT 'Foreign key to Person.BusinessEntityID',\\n  `StoreID` int(11) DEFAULT NULL COMMENT 'Foreign key to Store.BusinessEntityID',\\n  `TerritoryID` int(11) DEFAULT NULL COMMENT 'ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `AccountNumber` varchar(10) NOT NULL COMMENT 'Unique number identifying the customer assigned by the accounting system.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CustomerID`),\\n  UNIQUE KEY `AK_Customer_rowguid` (`rowguid`),\\n  UNIQUE KEY `AK_Customer_AccountNumber` (`AccountNumber`),\\n  KEY `IX_Customer_TerritoryID` (`TerritoryID`),\\n  KEY `FK_Customer_Person_PersonID` (`PersonID`),\\n  KEY `FK_Customer_Store_StoreID` (`StoreID`),\\n  KEY `GUID_Customer` (`rowguid`),\\n  CONSTRAINT `FK_Customer_Person_PersonID` FOREIGN KEY (`PersonID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Customer_SalesTerritory_TerritoryID` FOREIGN KEY (`TerritoryID`) REFERENCES `SalesTerritory` (`TerritoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Customer_Store_StoreID` FOREIGN KEY (`StoreID`) REFERENCES `Store` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=30119 DEFAULT CHARSET=utf8 COMMENT='Current customer information. Also see the Person and Store tables.'\")"
    },
    {
      "input": "Una tabla de Registro de base de datos con las columnas de, Id. de registro de la base de datos, Hora de publicación, Usuario de la base de datos, Evento, Esquema, Objeto, TSQL, Evento Xml",
      "output": "('DatabaseLog', \"CREATE TABLE `DatabaseLog` (\\n  `DatabaseLogID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for DatabaseLog records.'  `PostTime` datetime NOT NULL COMMENT 'The date and time the DDL change occurred.',\\n  `DatabaseUser` varchar(160) NOT NULL COMMENT 'The user who implemented the DDL change.',\\n  `Event` varchar(160) NOT NULL COMMENT 'The type of DDL statement that was executed.',\\n  `Schema` varchar(160) DEFAULT NULL COMMENT 'The schema to which the changed object belongs.',\\n  `Object` varchar(160) DEFAULT NULL COMMENT 'The object that was changed by the DDL statment.',\\n  `TSQL` longtext NOT NULL COMMENT 'The exact Transact-SQL statement that was executed.',\\n  `XmlEvent` text NOT NULL COMMENT 'The raw XML data generated by database trigger.',\\n  PRIMARY KEY (`DatabaseLogID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=1598 DEFAULT CHARSET=utf8 COMMENT='Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.'\")"
    },
    {
      "input": "Una tabla de Departamento con las columnas de, ID de departamento, nombre, nombre de grupo, fecha de modificación",
      "output": "('Department', \"CREATE TABLE `Department` (\\n  `DepartmentID` smallint(6) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Department records.'  `Name` varchar(100) NOT NULL COMMENT 'Name of the department.',\\n  `GroupName` varchar(100) NOT NULL COMMENT 'Name of the group to which the department belongs.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`DepartmentID`),\\n  UNIQUE KEY `AK_Department_Name` (`Name`)\\n) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COMMENT='Lookup table containing the departments within the Adventure Works Cycles company.'\")"
    },
    {
      "input": "Una tabla de Documento con las columnas de, Nodo de documento, Nivel de documento, Título, Propietario, Bandera de carpeta, Nombre de archivo, Extensión de archivo, Revisión, Número de cambio, Estado, Resumen de documento, Documento, rowguid, Fecha de modificación",
      "output": "('Document', \"CREATE TABLE `Document` (\\n  `DocumentNode` varchar(255) NOT NULL COMMENT 'Primary key for Document records.'  `DocumentLevel` smallint(6) DEFAULT NULL COMMENT 'Depth in the document hierarchy.',\\n  `Title` varchar(50) NOT NULL COMMENT 'Title of the document.',\\n  `Owner` int(11) NOT NULL COMMENT 'Employee who controls the document.  Foreign key to Employee.BusinessEntityID',\\n  `FolderFlag` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = This is a folder, 1 = This is a document.',\\n  `FileName` varchar(400) NOT NULL COMMENT 'File name of the document',\\n  `FileExtension` varchar(8) NOT NULL COMMENT 'File extension indicating the document type. For example, .doc or .txt.',\\n  `Revision` char(5) NOT NULL COMMENT 'Revision number of the document. ',\\n  `ChangeNumber` int(11) NOT NULL DEFAULT 0 COMMENT 'Engineering change approval number.',\\n  `Status` tinyint(3) unsigned NOT NULL COMMENT '1 = Pending approval, 2 = Approved, 3 = Obsolete',\\n  `DocumentSummary` longtext DEFAULT NULL COMMENT 'Document abstract.',\\n  `Document` longblob DEFAULT NULL COMMENT 'Complete document.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Required for FileStream.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`DocumentNode`),\\n  UNIQUE KEY `UQ__Document__F73921F763026E5E` (`rowguid`),\\n  UNIQUE KEY `AK_Document_rowguid` (`rowguid`),\\n  UNIQUE KEY `AK_Document_DocumentLevel_DocumentNode` (`DocumentLevel`,`DocumentNode`),\\n  KEY `IX_Document_FileName_Revision` (`FileName`(255),`Revision`),\\n  KEY `FK_Document_Employee_Owner` (`Owner`),\\n  KEY `GUID_Document` (`rowguid`),\\n  CONSTRAINT `FK_Document_Employee_Owner` FOREIGN KEY (`Owner`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Product maintenance documents.'\")"
    },
    {
      "input": "Una tabla de Dirección de correo electrónico con las columnas de, Id. de entidad comercial, Id. de dirección de correo electrónico, Dirección de correo electrónico, rowguid, Fecha de modificación",
      "output": "('EmailAddress', \"CREATE TABLE `EmailAddress` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID'  `EmailAddressID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key. ID of this email address.',\\n  `EmailAddress` varchar(50) DEFAULT NULL COMMENT 'E-mail address for the person.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`EmailAddressID`,`BusinessEntityID`),\\n  KEY `IX_EmailAddress_EmailAddress` (`EmailAddress`),\\n  KEY `FK_EmailAddress_Person_BusinessEntityID` (`BusinessEntityID`),\\n  KEY `GUID_EmailAddress` (`rowguid`),\\n  CONSTRAINT `FK_EmailAddress_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=19973 DEFAULT CHARSET=utf8 COMMENT='Where to send a person email.'\")"
    },
    {
      "input": "Una tabla de Empleado con las columnas de, Id. de entidad comercial, Número de identificación nacional, Id. de inicio de sesión, Nodo de organización, Nivel de organización, Título del trabajo, Fecha de nacimiento, Estado civil, Sexo, Fecha de contratación, Indicador asalariado, Horas de vacaciones, Horas de licencia por enfermedad, Indicador actual, rowguid, Fecha de modificación",
      "output": "('Employee', \"CREATE TABLE `Employee` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.'  `NationalIDNumber` varchar(15) NOT NULL COMMENT 'Unique national identification number such as a social security number.',\\n  `LoginID` varchar(256) NOT NULL COMMENT 'Network login.',\\n  `OrganizationNode` varchar(255) DEFAULT NULL COMMENT 'Where the employee is located in corporate hierarchy.',\\n  `OrganizationLevel` smallint(6) DEFAULT NULL COMMENT 'The depth of the employee in the corporate hierarchy.',\\n  `JobTitle` varchar(50) NOT NULL COMMENT 'Work title such as Buyer or Sales Representative.',\\n  `BirthDate` date NOT NULL COMMENT 'Date of birth.',\\n  `MaritalStatus` char(1) NOT NULL COMMENT 'M = Married, S = Single',\\n  `Gender` char(1) NOT NULL COMMENT 'M = Male, F = Female',\\n  `HireDate` date NOT NULL COMMENT 'Employee hired on this date.',\\n  `SalariedFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT 'Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.',\\n  `VacationHours` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Number of available vacation hours.',\\n  `SickLeaveHours` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Number of available sick leave hours.',\\n  `CurrentFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Inactive, 1 = Active',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_Employee_NationalIDNumber` (`NationalIDNumber`),\\n  UNIQUE KEY `AK_Employee_rowguid` (`rowguid`),\\n  UNIQUE KEY `AK_Employee_LoginID` (`LoginID`(255)),\\n  KEY `IX_Employee_OrganizationNode` (`OrganizationNode`),\\n  KEY `IX_Employee_OrganizationLevel_OrganizationNode` (`OrganizationLevel`,`OrganizationNode`),\\n  KEY `GUID_Employee` (`rowguid`),\\n  CONSTRAINT `FK_Employee_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Employee information such as salary, department, and title.'\")"
    },
    {
      "input": "Una tabla de Historial del departamento de empleados con las columnas de, Id. de entidad comercial, Id. de departamento, Id. de turno, Fecha de inicio, Fecha de finalización, Fecha de modificación",
      "output": "('EmployeeDepartmentHistory', \"CREATE TABLE `EmployeeDepartmentHistory` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Employee identification number. Foreign key to Employee.BusinessEntityID.'  `DepartmentID` smallint(6) NOT NULL COMMENT 'Department in which the employee worked including currently. Foreign key to Department.DepartmentID.',\\n  `ShiftID` tinyint(3) unsigned NOT NULL COMMENT 'Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.',\\n  `StartDate` date NOT NULL COMMENT 'Date the employee started work in the department.',\\n  `EndDate` date DEFAULT NULL COMMENT 'Date the employee left the department. NULL = Current department.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`StartDate`,`DepartmentID`,`ShiftID`),\\n  KEY `IX_EmployeeDepartmentHistory_DepartmentID` (`DepartmentID`),\\n  KEY `IX_EmployeeDepartmentHistory_ShiftID` (`ShiftID`),\\n  CONSTRAINT `FK_EmployeeDepartmentHistory_Department_DepartmentID` FOREIGN KEY (`DepartmentID`) REFERENCES `Department` (`DepartmentID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_EmployeeDepartmentHistory_Employee_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_EmployeeDepartmentHistory_Shift_ShiftID` FOREIGN KEY (`ShiftID`) REFERENCES `Shift` (`ShiftID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Employee department transfers.'\")"
    },
    {
      "input": "Una tabla de Historial de pago de empleados con las columnas de, ID de entidad comercial, fecha de cambio de tarifa, tarifa, frecuencia de pago, fecha de modificación",
      "output": "('EmployeePayHistory', \"CREATE TABLE `EmployeePayHistory` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Employee identification number. Foreign key to Employee.BusinessEntityID.'  `RateChangeDate` datetime NOT NULL COMMENT 'Date the change in pay is effective',\\n  `Rate` decimal(19,4) NOT NULL COMMENT 'Salary hourly rate.',\\n  `PayFrequency` tinyint(3) unsigned NOT NULL COMMENT '1 = Salary received monthly, 2 = Salary received biweekly',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`RateChangeDate`),\\n  CONSTRAINT `FK_EmployeePayHistory_Employee_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Employee pay history.'\")"
    },
    {
      "input": "Una tabla de Registro de errores con las columnas de, Id. de registro de error, Hora de error, Nombre de usuario, Número de error, Gravedad de error, Estado de error, Procedimiento de error, Línea de error, Mensaje de error",
      "output": "('ErrorLog', \"CREATE TABLE `ErrorLog` (\\n  `ErrorLogID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ErrorLog records.'  `ErrorTime` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'The date and time at which the error occurred.',\\n  `UserName` varchar(160) NOT NULL COMMENT 'The user who executed the batch in which the error occurred.',\\n  `ErrorNumber` int(11) NOT NULL COMMENT 'The error number of the error that occurred.',\\n  `ErrorSeverity` int(11) DEFAULT NULL COMMENT 'The severity of the error that occurred.',\\n  `ErrorState` int(11) DEFAULT NULL COMMENT 'The state number of the error that occurred.',\\n  `ErrorProcedure` varchar(126) DEFAULT NULL COMMENT 'The name of the stored procedure or trigger where the error occurred.',\\n  `ErrorLine` int(11) DEFAULT NULL COMMENT 'The line number at which the error occurred.',\\n  `ErrorMessage` varchar(4000) NOT NULL COMMENT 'The message text of the error that occurred.',\\n  PRIMARY KEY (`ErrorLogID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.'\")"
    },
    {
      "input": "Una tabla de Ilustración con las columnas de, ID de ilustración, Diagrama, Fecha de modificación",
      "output": "('Illustration', \"CREATE TABLE `Illustration` (\\n  `IllustrationID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Illustration records.'  `Diagram` text DEFAULT NULL COMMENT 'Illustrations used in manufacturing instructions. Stored as XML.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`IllustrationID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 COMMENT='Bicycle assembly diagrams.'\")"
    },
    {
      "input": "Una tabla de Candidato de trabajo con las columnas de, ID de candidato de trabajo, ID de entidad comercial, currículum, fecha de modificación",
      "output": "('JobCandidate', \"CREATE TABLE `JobCandidate` (\\n  `JobCandidateID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for JobCandidate records.'  `BusinessEntityID` int(11) DEFAULT NULL COMMENT 'Employee identification number if applicant was hired. Foreign key to Employee.BusinessEntityID.',\\n  `Resume` text DEFAULT NULL COMMENT 'Résumé in XML format.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`JobCandidateID`),\\n  KEY `IX_JobCandidate_BusinessEntityID` (`BusinessEntityID`),\\n  CONSTRAINT `FK_JobCandidate_Employee_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COMMENT='Résumés submitted to Human Resources by job applicants.'\")"
    },
    {
      "input": "Una tabla de Ubicación con las columnas de, ID de ubicación, nombre, tasa de costo, disponibilidad, fecha de modificación",
      "output": "('Location', \"CREATE TABLE `Location` (\\n  `LocationID` smallint(6) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Location records.'  `Name` varchar(100) NOT NULL COMMENT 'Location description.',\\n  `CostRate` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Standard hourly cost of the manufacturing location.',\\n  `Availability` decimal(8,2) NOT NULL DEFAULT 0.00 COMMENT 'Work capacity (in hours) of the manufacturing location.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`LocationID`),\\n  UNIQUE KEY `AK_Location_Name` (`Name`)\\n) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8 COMMENT='Product inventory and manufacturing locations.'\")"
    },
    {
      "input": "Una tabla de Clave con las columnas de, Id. de entidad comercial, Hash de contraseña, Salt de contraseña, rowguid, Fecha de modificación",
      "output": "('Password', \"CREATE TABLE `Password` (\\n  `BusinessEntityID` int(11) NOT NULL  `PasswordHash` varchar(128) NOT NULL COMMENT 'Password for the e-mail account.',\\n  `PasswordSalt` varchar(10) NOT NULL COMMENT 'Random value concatenated with the password string before the password is hashed.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  KEY `GUID_Password` (`rowguid`),\\n  CONSTRAINT `FK_Password_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='One way hashed authentication information'\")"
    },
    {
      "input": "Una tabla de Persona con las columnas de, Id. de entidad comercial, Tipo de persona, Estilo de nombre, Título, Nombre, Segundo nombre, Apellido, Sufijo, Promoción de correo electrónico, Información de contacto adicional, Datos demográficos, rowguid, Fecha de modificación",
      "output": "('Person', \"CREATE TABLE `Person` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key for Person records.'  `PersonType` char(2) NOT NULL COMMENT 'Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact',\\n  `NameStyle` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.',\\n  `Title` varchar(8) DEFAULT NULL COMMENT 'A courtesy title. For example, Mr. or Ms.',\\n  `FirstName` varchar(100) NOT NULL COMMENT 'First name of the person.',\\n  `MiddleName` varchar(100) DEFAULT NULL COMMENT 'Middle name or middle initial of the person.',\\n  `LastName` varchar(100) NOT NULL COMMENT 'Last name of the person.',\\n  `Suffix` varchar(10) DEFAULT NULL COMMENT 'Surname suffix. For example, Sr. or Jr.',\\n  `EmailPromotion` int(11) NOT NULL DEFAULT 0 COMMENT '0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. ',\\n  `AdditionalContactInfo` text DEFAULT NULL COMMENT 'Additional contact information about the person stored in xml format. ',\\n  `Demographics` text DEFAULT NULL COMMENT 'Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_Person_rowguid` (`rowguid`),\\n  KEY `IX_Person_LastName_FirstName_MiddleName` (`LastName`,`FirstName`,`MiddleName`),\\n  KEY `PXML_Person_AddContact` (`AdditionalContactInfo`(255)),\\n  KEY `PXML_Person_Demographics` (`Demographics`(255)),\\n  KEY `XMLPATH_Person_Demographics` (`Demographics`(255)),\\n  KEY `XMLPROPERTY_Person_Demographics` (`Demographics`(255)),\\n  KEY `XMLVALUE_Person_Demographics` (`Demographics`(255)),\\n  KEY `GUID_Person` (`rowguid`),\\n  CONSTRAINT `FK_Person_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.'\")"
    },
    {
      "input": "Una tabla de Tarjeta de crédito personal con las columnas de, Id. de entidad comercial, Id. de tarjeta de crédito, Fecha de modificación",
      "output": "('PersonCreditCard', \"CREATE TABLE `PersonCreditCard` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Business entity identification number. Foreign key to Person.BusinessEntityID.'  `CreditCardID` int(11) NOT NULL COMMENT 'Credit card identification number. Foreign key to CreditCard.CreditCardID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`CreditCardID`),\\n  KEY `FK_PersonCreditCard_CreditCard_CreditCardID` (`CreditCardID`),\\n  CONSTRAINT `FK_PersonCreditCard_CreditCard_CreditCardID` FOREIGN KEY (`CreditCardID`) REFERENCES `CreditCard` (`CreditCardID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_PersonCreditCard_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping people to their credit card information in the CreditCard table. '\")"
    },
    {
      "input": "Una tabla de Persona Teléfono con las columnas de, Id. de entidad comercial, Número de teléfono, Id. de tipo de número de teléfono, Fecha de modificación",
      "output": "('PersonPhone', \"CREATE TABLE `PersonPhone` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Business entity identification number. Foreign key to Person.BusinessEntityID.'  `PhoneNumber` varchar(50) NOT NULL COMMENT 'Telephone number identification number.',\\n  `PhoneNumberTypeID` int(11) NOT NULL COMMENT 'Kind of phone number. Foreign key to PhoneNumberType.PhoneNumberTypeID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`PhoneNumber`,`PhoneNumberTypeID`),\\n  KEY `IX_PersonPhone_PhoneNumber` (`PhoneNumber`),\\n  KEY `FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID` (`PhoneNumberTypeID`),\\n  CONSTRAINT `FK_PersonPhone_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID` FOREIGN KEY (`PhoneNumberTypeID`) REFERENCES `PhoneNumberType` (`PhoneNumberTypeID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Telephone number and type of a person.'\")"
    },
    {
      "input": "Una tabla de Tipo de número de teléfono con las columnas de, ID de tipo de número de teléfono, nombre, fecha de modificación",
      "output": "('PhoneNumberType', \"CREATE TABLE `PhoneNumberType` (\\n  `PhoneNumberTypeID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for telephone number type records.'  `Name` varchar(100) NOT NULL COMMENT 'Name of the telephone number type',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PhoneNumberTypeID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='Type of phone number of a person.'\")"
    },
    {
      "input": "Una tabla de Producto con las columnas de, Id. de producto, Nombre, Número de producto, Indicador de marca, Indicador de productos terminados, Color, Nivel de inventario de seguridad, Punto de reorden, Costo estándar, Precio de lista, Tamaño, Código de medida de unidad de tamaño, Código de medida de unidad de peso, Peso, Días de fabricación, Producto Línea, Clase, Estilo, Id. de subcategoría de producto, Id. de modelo de producto, Fecha de inicio de venta, Fecha de finalización de venta, Fecha de discontinuación, rowguid, Fecha de modificación",
      "output": "('Product', \"CREATE TABLE `Product` (\\n  `ProductID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Product records.'  `Name` varchar(100) NOT NULL COMMENT 'Name of the product.',\\n  `ProductNumber` varchar(25) NOT NULL COMMENT 'Unique product identification number.',\\n  `MakeFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Product is purchased, 1 = Product is manufactured in-house.',\\n  `FinishedGoodsFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Product is not a salable item. 1 = Product is salable.',\\n  `Color` varchar(15) DEFAULT NULL COMMENT 'Product color.',\\n  `SafetyStockLevel` smallint(6) NOT NULL COMMENT 'Minimum inventory quantity. ',\\n  `ReorderPoint` smallint(6) NOT NULL COMMENT 'Inventory level that triggers a purchase order or work order. ',\\n  `StandardCost` decimal(19,4) NOT NULL COMMENT 'Standard cost of the product.',\\n  `ListPrice` decimal(19,4) NOT NULL COMMENT 'Selling price.',\\n  `Size` varchar(5) DEFAULT NULL COMMENT 'Product size.',\\n  `SizeUnitMeasureCode` char(3) DEFAULT NULL COMMENT 'Unit of measure for Size column.',\\n  `WeightUnitMeasureCode` char(3) DEFAULT NULL COMMENT 'Unit of measure for Weight column.',\\n  `Weight` decimal(8,2) DEFAULT NULL COMMENT 'Product weight.',\\n  `DaysToManufacture` int(11) NOT NULL COMMENT 'Number of days required to manufacture the product.',\\n  `ProductLine` char(2) DEFAULT NULL COMMENT 'R = Road, M = Mountain, T = Touring, S = Standard',\\n  `Class` char(2) DEFAULT NULL COMMENT 'H = High, M = Medium, L = Low',\\n  `Style` char(2) DEFAULT NULL COMMENT 'W = Womens, M = Mens, U = Universal',\\n  `ProductSubcategoryID` int(11) DEFAULT NULL COMMENT 'Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. ',\\n  `ProductModelID` int(11) DEFAULT NULL COMMENT 'Product is a member of this product model. Foreign key to ProductModel.ProductModelID.',\\n  `SellStartDate` datetime NOT NULL COMMENT 'Date the product was available for sale.',\\n  `SellEndDate` datetime DEFAULT NULL COMMENT 'Date the product was no longer available for sale.',\\n  `DiscontinuedDate` datetime DEFAULT NULL COMMENT 'Date the product was discontinued.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`),\\n  UNIQUE KEY `AK_Product_ProductNumber` (`ProductNumber`),\\n  UNIQUE KEY `AK_Product_Name` (`Name`),\\n  UNIQUE KEY `AK_Product_rowguid` (`rowguid`),\\n  KEY `FK_Product_UnitMeasure_SizeUnitMeasureCode` (`SizeUnitMeasureCode`),\\n  KEY `FK_Product_UnitMeasure_WeightUnitMeasureCode` (`WeightUnitMeasureCode`),\\n  KEY `FK_Product_ProductModel_ProductModelID` (`ProductModelID`),\\n  KEY `FK_Product_ProductSubcategory_ProductSubcategoryID` (`ProductSubcategoryID`),\\n  KEY `GUID_Product` (`rowguid`),\\n  CONSTRAINT `FK_Product_ProductModel_ProductModelID` FOREIGN KEY (`ProductModelID`) REFERENCES `ProductModel` (`ProductModelID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Product_ProductSubcategory_ProductSubcategoryID` FOREIGN KEY (`ProductSubcategoryID`) REFERENCES `ProductSubcategory` (`ProductSubcategoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Product_UnitMeasure_SizeUnitMeasureCode` FOREIGN KEY (`SizeUnitMeasureCode`) REFERENCES `UnitMeasure` (`UnitMeasureCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Product_UnitMeasure_WeightUnitMeasureCode` FOREIGN KEY (`WeightUnitMeasureCode`) REFERENCES `UnitMeasure` (`UnitMeasureCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=1000 DEFAULT CHARSET=utf8 COMMENT='Products sold or used in the manfacturing of sold products.'\")"
    },
    {
      "input": "Una tabla de categoria de producto con las columnas de, ID de categoría de producto, nombre, rowguid, fecha de modificación",
      "output": "('ProductCategory', \"CREATE TABLE `ProductCategory` (\\n  `ProductCategoryID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductCategory records.'  `Name` varchar(100) NOT NULL COMMENT 'Category description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductCategoryID`),\\n  UNIQUE KEY `AK_ProductCategory_Name` (`Name`),\\n  UNIQUE KEY `AK_ProductCategory_rowguid` (`rowguid`),\\n  KEY `GUID_ProductCategory` (`rowguid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='High-level product categorization.'\")"
    },
    {
      "input": "Una tabla de Historial de costos del producto con las columnas de, Id. de producto, Fecha de inicio, Fecha de finalización, Costo estándar, Fecha de modificación",
      "output": "('ProductCostHistory', \"CREATE TABLE `ProductCostHistory` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID'  `StartDate` datetime NOT NULL COMMENT 'Product cost start date.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'Product cost end date.',\\n  `StandardCost` decimal(19,4) NOT NULL COMMENT 'Standard cost of the product.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`StartDate`),\\n  CONSTRAINT `FK_ProductCostHistory_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Changes in the cost of a product over time.'\")"
    },
    {
      "input": "Una tabla de Descripción del producto con las columnas de, Id. de descripción del producto, Descripción, rowguid, Fecha de modificación",
      "output": "('ProductDescription', \"CREATE TABLE `ProductDescription` (\\n  `ProductDescriptionID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductDescription records.'  `Description` varchar(400) NOT NULL COMMENT 'Description of the product.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductDescriptionID`),\\n  UNIQUE KEY `AK_ProductDescription_rowguid` (`rowguid`),\\n  KEY `GUID_ProductDescription` (`rowguid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=2011 DEFAULT CHARSET=utf8 COMMENT='Product descriptions in several languages.'\")"
    },
    {
      "input": "Una tabla de Documento del producto con las columnas de, Id. de producto, Nodo de documento, Fecha de modificación",
      "output": "('ProductDocument', \"CREATE TABLE `ProductDocument` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `DocumentNode` varchar(255) NOT NULL COMMENT 'Document identification number. Foreign key to Document.DocumentNode.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`DocumentNode`),\\n  KEY `FK_ProductDocument_Document_DocumentNode` (`DocumentNode`),\\n  CONSTRAINT `FK_ProductDocument_Document_DocumentNode` FOREIGN KEY (`DocumentNode`) REFERENCES `Document` (`DocumentNode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductDocument_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping products to related product documents.'\")"
    },
    {
      "input": "Una tabla de Inventario de productos con las columnas de, Id. de producto, Id. de ubicación, Estante, Contenedor, Cantidad, rowguid, Fecha de modificación",
      "output": "('ProductInventory', \"CREATE TABLE `ProductInventory` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `LocationID` smallint(6) NOT NULL COMMENT 'Inventory location identification number. Foreign key to Location.LocationID. ',\\n  `Shelf` varchar(10) NOT NULL COMMENT 'Storage compartment within an inventory location.',\\n  `Bin` tinyint(3) unsigned NOT NULL COMMENT 'Storage container on a shelf in an inventory location.',\\n  `Quantity` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Quantity of products in the inventory location.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`LocationID`),\\n  KEY `FK_ProductInventory_Location_LocationID` (`LocationID`),\\n  KEY `GUID_ProductInventory` (`rowguid`),\\n  CONSTRAINT `FK_ProductInventory_Location_LocationID` FOREIGN KEY (`LocationID`) REFERENCES `Location` (`LocationID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductInventory_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Product inventory information.'\")"
    },
    {
      "input": "Una tabla de Lista de productos Historial de precios con las columnas de, ID de producto, fecha de inicio, fecha de finalización, precio de catálogo, fecha de modificación",
      "output": "('ProductListPriceHistory', \"CREATE TABLE `ProductListPriceHistory` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID'  `StartDate` datetime NOT NULL COMMENT 'List price start date.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'List price end date',\\n  `ListPrice` decimal(19,4) NOT NULL COMMENT 'Product list price.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`StartDate`),\\n  CONSTRAINT `FK_ProductListPriceHistory_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Changes in the list price of a product over time.'\")"
    },
    {
      "input": "Una tabla de Modelo del Producto con las columnas de, ID de modelo de producto, nombre, descripción del catálogo, instrucciones, rowguid, fecha de modificación",
      "output": "('ProductModel', \"CREATE TABLE `ProductModel` (\\n  `ProductModelID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductModel records.'  `Name` varchar(100) NOT NULL COMMENT 'Product model description.',\\n  `CatalogDescription` text DEFAULT NULL COMMENT 'Detailed product catalog information in xml format.',\\n  `Instructions` text DEFAULT NULL COMMENT 'Manufacturing instructions in xml format.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductModelID`),\\n  UNIQUE KEY `AK_ProductModel_Name` (`Name`),\\n  UNIQUE KEY `AK_ProductModel_rowguid` (`rowguid`),\\n  KEY `PXML_ProductModel_CatalogDescription` (`CatalogDescription`(255)),\\n  KEY `PXML_ProductModel_Instructions` (`Instructions`(255)),\\n  KEY `GUID_ProductModel` (`rowguid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=129 DEFAULT CHARSET=utf8 COMMENT='Product model classification.'\")"
    },
    {
      "input": "Una tabla de Ilustración del modelo del producto con las columnas de, Id. de modelo de producto, Id. de ilustración, Fecha de modificación",
      "output": "('ProductModelIllustration', \"CREATE TABLE `ProductModelIllustration` (\\n  `ProductModelID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductModel.ProductModelID.'  `IllustrationID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Illustration.IllustrationID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductModelID`,`IllustrationID`),\\n  KEY `FK_ProductModelIllustration_Illustration_IllustrationID` (`IllustrationID`),\\n  CONSTRAINT `FK_ProductModelIllustration_Illustration_IllustrationID` FOREIGN KEY (`IllustrationID`) REFERENCES `Illustration` (`IllustrationID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductModelIllustration_ProductModel_ProductModelID` FOREIGN KEY (`ProductModelID`) REFERENCES `ProductModel` (`ProductModelID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping product models and illustrations.'\")"
    },
    {
      "input": "Una tabla de Producto Modelo Producto Descripción Cultura con las columnas de, Id. de modelo de producto, Id. de descripción de producto, Id. de cultura, Fecha de modificación",
      "output": "('ProductModelProductDescriptionCulture', \"CREATE TABLE `ProductModelProductDescriptionCulture` (\\n  `ProductModelID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductModel.ProductModelID.'  `ProductDescriptionID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductDescription.ProductDescriptionID.',\\n  `CultureID` char(6) NOT NULL COMMENT 'Culture identification number. Foreign key to Culture.CultureID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductModelID`,`ProductDescriptionID`,`CultureID`),\\n  KEY `FK_ProductModelProductDescriptionCulture_ProductDescription_Pr3` (`ProductDescriptionID`),\\n  KEY `FK_ProductModelProductDescriptionCulture_Culture_CultureID` (`CultureID`),\\n  CONSTRAINT `FK_ProductModelProductDescriptionCulture_Culture_CultureID` FOREIGN KEY (`CultureID`) REFERENCES `Culture` (`CultureID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductModelProductDescriptionCulture_ProductDescription_Pr3` FOREIGN KEY (`ProductDescriptionID`) REFERENCES `ProductDescription` (`ProductDescriptionID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductModelProductDescriptionCulture_ProductModel_ProductM4` FOREIGN KEY (`ProductModelID`) REFERENCES `ProductModel` (`ProductModelID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping product descriptions and the language the description is written in.'\")"
    },
    {
      "input": "Una tabla de Foto del producto con las columnas de, ID de foto de producto, Foto de miniatura, Nombre de archivo de foto en miniatura, Foto grande, Nombre de archivo de foto grande, Fecha de modificación",
      "output": "('ProductPhoto', \"CREATE TABLE `ProductPhoto` (\\n  `ProductPhotoID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductPhoto records.'  `ThumbNailPhoto` longblob DEFAULT NULL COMMENT 'Small image of the product.',\\n  `ThumbnailPhotoFileName` varchar(50) DEFAULT NULL COMMENT 'Small image file name.',\\n  `LargePhoto` longblob DEFAULT NULL COMMENT 'Large image of the product.',\\n  `LargePhotoFileName` varchar(50) DEFAULT NULL COMMENT 'Large image file name.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductPhotoID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=182 DEFAULT CHARSET=utf8 COMMENT='Product images.'\")"
    },
    {
      "input": "Una tabla de Producto Foto del producto con las columnas de, Id. de producto, Id. de foto de producto, Principal, Fecha de modificación",
      "output": "('ProductProductPhoto', \"CREATE TABLE `ProductProductPhoto` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `ProductPhotoID` int(11) NOT NULL COMMENT 'Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.',\\n  `Primary` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = Photo is not the principal image. 1 = Photo is the principal image.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`ProductPhotoID`),\\n  KEY `FK_ProductProductPhoto_ProductPhoto_ProductPhotoID` (`ProductPhotoID`),\\n  CONSTRAINT `FK_ProductProductPhoto_ProductPhoto_ProductPhotoID` FOREIGN KEY (`ProductPhotoID`) REFERENCES `ProductPhoto` (`ProductPhotoID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductProductPhoto_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping products and product photos.'\")"
    },
    {
      "input": "Una tabla de Revision de producto con las columnas de, Id. de revisión del producto, Id. del producto, Nombre del revisor, Fecha de revisión, Dirección de correo electrónico, Calificación, Comentarios, Fecha de modificación",
      "output": "('ProductReview', \"CREATE TABLE `ProductReview` (\\n  `ProductReviewID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductReview records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `ReviewerName` varchar(100) NOT NULL COMMENT 'Name of the reviewer.',\\n  `ReviewDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date review was submitted.',\\n  `EmailAddress` varchar(50) NOT NULL COMMENT 'Reviewer''s e-mail address.',\\n  `Rating` int(11) NOT NULL COMMENT 'Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.',\\n  `Comments` varchar(3850) DEFAULT NULL COMMENT 'Reviewer''s comments',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductReviewID`),\\n  KEY `IX_ProductReview_ProductID_Name` (`ProductID`,`ReviewerName`,`Comments`(255)),\\n  CONSTRAINT `FK_ProductReview_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='Customer reviews of products they have purchased.'\")"
    },
    {
      "input": "Una tabla de Subcategoría de producto con las columnas de, Id. de subcategoría de producto, Id. de categoría de producto, Nombre, rowguid, Fecha de modificación",
      "output": "('ProductSubcategory', \"CREATE TABLE `ProductSubcategory` (\\n  `ProductSubcategoryID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductSubcategory records.'  `ProductCategoryID` int(11) NOT NULL COMMENT 'Product category identification number. Foreign key to ProductCategory.ProductCategoryID.',\\n  `Name` varchar(100) NOT NULL COMMENT 'Subcategory description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductSubcategoryID`),\\n  UNIQUE KEY `AK_ProductSubcategory_Name` (`Name`),\\n  UNIQUE KEY `AK_ProductSubcategory_rowguid` (`rowguid`),\\n  KEY `FK_ProductSubcategory_ProductCategory_ProductCategoryID` (`ProductCategoryID`),\\n  KEY `GUID_ProductSubcategory` (`rowguid`),\\n  CONSTRAINT `FK_ProductSubcategory_ProductCategory_ProductCategoryID` FOREIGN KEY (`ProductCategoryID`) REFERENCES `ProductCategory` (`ProductCategoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8 COMMENT='Product subcategories. See ProductCategory table.'\")"
    },
    {
      "input": "Una tabla de Proveedor de productos con las columnas de, Id. de producto, Id. de entidad comercial, Plazo medio de entrega, Precio estándar, Costo de última recepción, Fecha de última recepción, Cantidad mínima de pedido, Cantidad máxima de pedido, Cantidad en pedido, Código de unidad de medida, Fecha de modificación",
      "output": "('ProductVendor', \"CREATE TABLE `ProductVendor` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Product.ProductID.'  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Vendor.BusinessEntityID.',\\n  `AverageLeadTime` int(11) NOT NULL COMMENT 'The average span of time (in days) between placing an order with the vendor and receiving the purchased product.',\\n  `StandardPrice` decimal(19,4) NOT NULL COMMENT 'The vendor''s usual selling price.',\\n  `LastReceiptCost` decimal(19,4) DEFAULT NULL COMMENT 'The selling price when last purchased.',\\n  `LastReceiptDate` datetime DEFAULT NULL COMMENT 'Date the product was last received by the vendor.',\\n  `MinOrderQty` int(11) NOT NULL COMMENT 'The maximum quantity that should be ordered.',\\n  `MaxOrderQty` int(11) NOT NULL COMMENT 'The minimum quantity that should be ordered.',\\n  `OnOrderQty` int(11) DEFAULT NULL COMMENT 'The quantity currently on order.',\\n  `UnitMeasureCode` char(3) NOT NULL COMMENT 'The product''s unit of measure.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`BusinessEntityID`),\\n  KEY `IX_ProductVendor_UnitMeasureCode` (`UnitMeasureCode`),\\n  KEY `IX_ProductVendor_BusinessEntityID` (`BusinessEntityID`),\\n  CONSTRAINT `FK_ProductVendor_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductVendor_UnitMeasure_UnitMeasureCode` FOREIGN KEY (`UnitMeasureCode`) REFERENCES `UnitMeasure` (`UnitMeasureCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductVendor_Vendor_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Vendor` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping vendors with the products they supply.'\")"
    },
    {
      "input": "Una tabla de Detalle de orden de compra con las columnas de, ID de pedido de compra, ID de detalle de pedido de compra, Fecha de vencimiento, Cantidad de pedido, ID de producto, Precio unitario, Total de línea, Cantidad recibida, Cantidad rechazada, Cantidad almacenada, Fecha de modificación",
      "output": "('PurchaseOrderDetail', \"CREATE TABLE `PurchaseOrderDetail` (\\n  `PurchaseOrderID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.'  `PurchaseOrderDetailID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key. One line number per purchased product.',\\n  `DueDate` datetime NOT NULL COMMENT 'Date the product is expected to be received.',\\n  `OrderQty` smallint(6) NOT NULL COMMENT 'Quantity ordered.',\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `UnitPrice` decimal(19,4) NOT NULL COMMENT 'Vendor''s selling price of a single product.',\\n  `LineTotal` decimal(19,4) NOT NULL COMMENT 'Per product subtotal. Computed as OrderQty * UnitPrice.',\\n  `ReceivedQty` decimal(8,2) NOT NULL COMMENT 'Quantity actually received from the vendor.',\\n  `RejectedQty` decimal(8,2) NOT NULL COMMENT 'Quantity rejected during inspection.',\\n  `StockedQty` decimal(9,2) NOT NULL COMMENT 'Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PurchaseOrderDetailID`,`PurchaseOrderID`),\\n  KEY `IX_PurchaseOrderDetail_ProductID` (`ProductID`),\\n  KEY `FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID` (`PurchaseOrderID`),\\n  CONSTRAINT `FK_PurchaseOrderDetail_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID` FOREIGN KEY (`PurchaseOrderID`) REFERENCES `PurchaseOrderHeader` (`PurchaseOrderID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=8846 DEFAULT CHARSET=utf8 COMMENT='Individual products associated with a specific purchase order. See PurchaseOrderHeader.'\")"
    },
    {
      "input": "Una tabla de Encabezado de orden de compra con las columnas de, Id. de orden de compra, Número de revisión, Estado, Id. de empleado, Id. de proveedor, Id. de método de envío, Fecha de pedido, Fecha de envío, Subtotal, Importe de impuestos, Flete, Total adeudado, Fecha de modificación",
      "output": "('PurchaseOrderHeader', \"CREATE TABLE `PurchaseOrderHeader` (\\n  `PurchaseOrderID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key.'  `RevisionNumber` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT 'Incremental number to track changes to the purchase order over time.',\\n  `Status` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT 'Order current status. 1 = Pending"
    },
    {
      "input": "Una tabla de Detalle de orden de venta con las columnas de, Id. de pedido de venta, Id. de detalle de pedido de venta, Número de seguimiento del transportista, Cantidad de pedido, Id. de producto, Id. de oferta especial, Precio unitario, Descuento de precio unitario, Total de línea, ID de fila, Fecha de modificación",
      "output": "('SalesOrderDetail', \"CREATE TABLE `SalesOrderDetail` (\\n  `SalesOrderID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.'  `SalesOrderDetailID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key. One incremental unique number per product sold.',\\n  `CarrierTrackingNumber` varchar(25) DEFAULT NULL COMMENT 'Shipment tracking number supplied by the shipper.',\\n  `OrderQty` smallint(6) NOT NULL COMMENT 'Quantity ordered per product.',\\n  `ProductID` int(11) NOT NULL COMMENT 'Product sold to customer. Foreign key to Product.ProductID.',\\n  `SpecialOfferID` int(11) NOT NULL COMMENT 'Promotional code. Foreign key to SpecialOffer.SpecialOfferID.',\\n  `UnitPrice` decimal(19,4) NOT NULL COMMENT 'Selling price of a single product.',\\n  `UnitPriceDiscount` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Discount amount.',\\n  `LineTotal` decimal(38,6) NOT NULL COMMENT 'Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SalesOrderDetailID`,`SalesOrderID`),\\n  UNIQUE KEY `AK_SalesOrderDetail_rowguid` (`rowguid`),\\n  KEY `IX_SalesOrderDetail_ProductID` (`ProductID`),\\n  KEY `FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID` (`SalesOrderID`),\\n  KEY `FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID` (`SpecialOfferID`,`ProductID`),\\n  KEY `GUID_SalesOrderDetail` (`rowguid`),\\n  CONSTRAINT `FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID` FOREIGN KEY (`SalesOrderID`) REFERENCES `SalesOrderHeader` (`SalesOrderID`) ON DELETE CASCADE ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID` FOREIGN KEY (`SpecialOfferID`, `ProductID`) REFERENCES `SpecialOfferProduct` (`SpecialOfferID`, `ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=121318 DEFAULT CHARSET=utf8 COMMENT='Individual products associated with a specific sales order. See SalesOrderHeader.'\")"
    },
    {
      "input": "Una tabla de Encabezado de orden de venta con las columnas de, Id. de orden de venta, Número de revisión, Fecha de orden, Fecha de vencimiento, Fecha de envío, Estado, Bandera de orden en línea, Número de orden de venta, Número de orden de compra, Número de cuenta, Id. de cliente, Id. de persona de ventas, Id. de territorio, Id. de factura a dirección, Enviar Id. de dirección de destino, Id. de método de envío, Id. de tarjeta de crédito, Código de aprobación de tarjeta de crédito, Id. de tipo de cambio, Subtotal, Importe de impuestos, Flete, Total adeudado, Comentario, rowguid, Fecha de modificación",
      "output": "('SalesOrderHeader', \"CREATE TABLE `SalesOrderHeader` (\\n  `SalesOrderID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key.'  `RevisionNumber` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT 'Incremental number to track changes to the sales order over time.',\\n  `OrderDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Dates the sales order was created.',\\n  `DueDate` datetime NOT NULL COMMENT 'Date the order is due to the customer.',\\n  `ShipDate` datetime DEFAULT NULL COMMENT 'Date the order was shipped to the customer.',\\n  `Status` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT 'Order current status. 1 = In process"
    },
    {
      "input": "Una tabla de Encabezado de orden de venta Razón de venta con las columnas de, Id. de orden de venta, Id. de motivo de venta, Fecha de modificación",
      "output": "('SalesOrderHeaderSalesReason', \"CREATE TABLE `SalesOrderHeaderSalesReason` (\\n  `SalesOrderID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.'  `SalesReasonID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesReason.SalesReasonID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SalesOrderID`,`SalesReasonID`),\\n  KEY `FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID` (`SalesReasonID`),\\n  CONSTRAINT `FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID` FOREIGN KEY (`SalesOrderID`) REFERENCES `SalesOrderHeader` (`SalesOrderID`) ON DELETE CASCADE ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID` FOREIGN KEY (`SalesReasonID`) REFERENCES `SalesReason` (`SalesReasonID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping sales orders to sales reason codes.'\")"
    },
    {
      "input": "Una tabla de Vendedor con las columnas de, Id. de entidad comercial, Id. de territorio, Cuota de ventas, Bonificación, Porcentaje de comisión, Ventas Y T D, Ventas del último año, rowguid, Fecha de modificación",
      "output": "('SalesPerson', \"CREATE TABLE `SalesPerson` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID'  `TerritoryID` int(11) DEFAULT NULL COMMENT 'Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `SalesQuota` decimal(19,4) DEFAULT NULL COMMENT 'Projected yearly sales.',\\n  `Bonus` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Bonus due if quota is met.',\\n  `CommissionPct` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Commision percent received per sale.',\\n  `SalesYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales total year to date.',\\n  `SalesLastYear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales total of previous year.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_SalesPerson_rowguid` (`rowguid`),\\n  KEY `FK_SalesPerson_SalesTerritory_TerritoryID` (`TerritoryID`),\\n  KEY `GUID_SalesPerson` (`rowguid`),\\n  CONSTRAINT `FK_SalesPerson_Employee_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SalesPerson_SalesTerritory_TerritoryID` FOREIGN KEY (`TerritoryID`) REFERENCES `SalesTerritory` (`TerritoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Sales representative current information.'\")"
    },
    {
      "input": "Una tabla de Historial de cuotas de vendedores con las columnas de, Id. de entidad comercial, Fecha de cuota, Cuota de ventas, rowguid, Fecha de modificación",
      "output": "('SalesPersonQuotaHistory', \"CREATE TABLE `SalesPersonQuotaHistory` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.'  `QuotaDate` datetime NOT NULL COMMENT 'Sales quota date.',\\n  `SalesQuota` decimal(19,4) NOT NULL COMMENT 'Sales quota amount.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`QuotaDate`),\\n  UNIQUE KEY `AK_SalesPersonQuotaHistory_rowguid` (`rowguid`),\\n  KEY `GUID_SalesPersonQuotaHistory` (`rowguid`),\\n  CONSTRAINT `FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `SalesPerson` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Sales performance tracking.'\")"
    },
    {
      "input": "Una tabla de Motivo de venta con las columnas de, Id. de motivo de venta, Nombre, Tipo de motivo, Fecha de modificación",
      "output": "('SalesReason', \"CREATE TABLE `SalesReason` (\\n  `SalesReasonID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for SalesReason records.'  `Name` varchar(100) NOT NULL COMMENT 'Sales reason description.',\\n  `ReasonType` varchar(100) NOT NULL COMMENT 'Category the sales reason belongs to.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SalesReasonID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COMMENT='Lookup table of customer purchase reasons.'\")"
    },
    {
      "input": "Una tabla de Tasa de impuesto sobre las ventas con las columnas de, Id. de tasa de impuesto sobre las ventas, Id. de provincia estatal, Tipo de impuesto, Tasa de impuesto, Nombre, rowguid, Fecha de modificación",
      "output": "('SalesTaxRate', \"CREATE TABLE `SalesTaxRate` (\\n  `SalesTaxRateID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for SalesTaxRate records.'  `StateProvinceID` int(11) NOT NULL COMMENT 'State, province, or country/region the sales tax applies to.',\\n  `TaxType` tinyint(3) unsigned NOT NULL COMMENT '1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.',\\n  `TaxRate` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Tax rate amount.',\\n  `Name` varchar(100) NOT NULL COMMENT 'Tax rate description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SalesTaxRateID`),\\n  UNIQUE KEY `AK_SalesTaxRate_StateProvinceID_TaxType` (`StateProvinceID`,`TaxType`),\\n  UNIQUE KEY `AK_SalesTaxRate_rowguid` (`rowguid`),\\n  KEY `GUID_SalesTaxRate` (`rowguid`),\\n  CONSTRAINT `FK_SalesTaxRate_StateProvince_StateProvinceID` FOREIGN KEY (`StateProvinceID`) REFERENCES `StateProvince` (`StateProvinceID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8 COMMENT='Tax rate lookup table.'\")"
    },
    {
      "input": "Una tabla de Territorio de ventas con las columnas de, Id. de territorio, Nombre, Código de región de país, Grupo, Ventas Y T D, Ventas del año pasado, Costo Y T D, Costo del año pasado, rowguid, Fecha de modificación",
      "output": "('SalesTerritory', \"CREATE TABLE `SalesTerritory` (\\n  `TerritoryID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for SalesTerritory records.'  `Name` varchar(100) NOT NULL COMMENT 'Sales territory description',\\n  `CountryRegionCode` varchar(3) NOT NULL COMMENT 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ',\\n  `Group` varchar(50) NOT NULL COMMENT 'Geographic area to which the sales territory belong.',\\n  `SalesYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales in the territory year to date.',\\n  `SalesLastYear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales in the territory the previous year.',\\n  `CostYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Business costs in the territory year to date.',\\n  `CostLastYear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Business costs in the territory the previous year.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TerritoryID`),\\n  UNIQUE KEY `AK_SalesTerritory_Name` (`Name`),\\n  UNIQUE KEY `AK_SalesTerritory_rowguid` (`rowguid`),\\n  KEY `FK_SalesTerritory_CountryRegion_CountryRegionCode` (`CountryRegionCode`),\\n  KEY `GUID_SalesTerritory` (`rowguid`),\\n  CONSTRAINT `FK_SalesTerritory_CountryRegion_CountryRegionCode` FOREIGN KEY (`CountryRegionCode`) REFERENCES `CountryRegion` (`CountryRegionCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COMMENT='Sales territory lookup table.'\")"
    },
    {
      "input": "Una tabla de Historial del territorio de ventas con las columnas de, Id. de entidad comercial, Id. de territorio, Fecha de inicio, Fecha de finalización, rowguid, Fecha de modificación",
      "output": "('SalesTerritoryHistory', \"CREATE TABLE `SalesTerritoryHistory` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. The sales rep.  Foreign key to SalesPerson.BusinessEntityID.'  `TerritoryID` int(11) NOT NULL COMMENT 'Primary key. Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `StartDate` datetime NOT NULL COMMENT 'Primary key. Date the sales representive started work in the territory.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'Date the sales representative left work in the territory.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`StartDate`,`TerritoryID`),\\n  UNIQUE KEY `AK_SalesTerritoryHistory_rowguid` (`rowguid`),\\n  KEY `FK_SalesTerritoryHistory_SalesTerritory_TerritoryID` (`TerritoryID`),\\n  KEY `GUID_SalesTerritoryHistory` (`rowguid`),\\n  CONSTRAINT `FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `SalesPerson` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SalesTerritoryHistory_SalesTerritory_TerritoryID` FOREIGN KEY (`TerritoryID`) REFERENCES `SalesTerritory` (`TerritoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Sales representative transfers to other sales territories.'\")"
    },
    {
      "input": "Una tabla de Motivo de desecho con las columnas de, Id. de motivo de desecho, Nombre, Fecha de modificación",
      "output": "('ScrapReason', \"CREATE TABLE `ScrapReason` (\\n  `ScrapReasonID` smallint(6) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ScrapReason records.'  `Name` varchar(100) NOT NULL COMMENT 'Failure description.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ScrapReasonID`),\\n  UNIQUE KEY `AK_ScrapReason_Name` (`Name`)\\n) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COMMENT='Manufacturing failure reasons lookup table.'\")"
    },
    {
      "input": "Una tabla de Cambio con las columnas de, ID de turno, nombre, hora de inicio, hora de finalización, fecha de modificación",
      "output": "('Shift', \"CREATE TABLE `Shift` (\\n  `ShiftID` tinyint(3) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Shift records.'  `Name` varchar(100) NOT NULL COMMENT 'Shift description.',\\n  `StartTime` time NOT NULL COMMENT 'Shift start time.',\\n  `EndTime` time NOT NULL COMMENT 'Shift end time.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ShiftID`),\\n  UNIQUE KEY `AK_Shift_Name` (`Name`),\\n  UNIQUE KEY `AK_Shift_StartTime_EndTime` (`StartTime`,`EndTime`)\\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='Work shift lookup table.'\")"
    },
    {
      "input": "Una tabla de Método de envío con las columnas de, Id. de método de envío, Nombre, Base de envío, Tarifa de envío, rowguid, Fecha de modificación",
      "output": "('ShipMethod', \"CREATE TABLE `ShipMethod` (\\n  `ShipMethodID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ShipMethod records.'  `Name` varchar(100) NOT NULL COMMENT 'Shipping company name.',\\n  `ShipBase` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Minimum shipping charge.',\\n  `ShipRate` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Shipping charge per pound.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ShipMethodID`),\\n  UNIQUE KEY `AK_ShipMethod_Name` (`Name`),\\n  UNIQUE KEY `AK_ShipMethod_rowguid` (`rowguid`),\\n  KEY `GUID_ShipMethod` (`rowguid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='Shipping company lookup table.'\")"
    },
    {
      "input": "Una tabla de Artículo del carrito de compras con las columnas de, Id. del artículo del carrito de compras, Id. del carrito de compras, Cantidad, Id. del producto, Fecha de creación, Fecha de modificación",
      "output": "('ShoppingCartItem', \"CREATE TABLE `ShoppingCartItem` (\\n  `ShoppingCartItemID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ShoppingCartItem records.'  `ShoppingCartID` varchar(50) NOT NULL COMMENT 'Shopping cart identification number.',\\n  `Quantity` int(11) NOT NULL DEFAULT 1 COMMENT 'Product quantity ordered.',\\n  `ProductID` int(11) NOT NULL COMMENT 'Product ordered. Foreign key to Product.ProductID.',\\n  `DateCreated` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date the time the record was created.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ShoppingCartItemID`),\\n  KEY `IX_ShoppingCartItem_ShoppingCartID_ProductID` (`ShoppingCartID`,`ProductID`),\\n  KEY `FK_ShoppingCartItem_Product_ProductID` (`ProductID`),\\n  CONSTRAINT `FK_ShoppingCartItem_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='Contains online customer orders until the order is submitted or cancelled.'\")"
    },
    {
      "input": "Una tabla de Oferta especial con las columnas de, ID de oferta especial, descripción, porcentaje de descuento, tipo, categoría, fecha de inicio, fecha de finalización, cantidad mínima, cantidad máxima, ID de fila, fecha de modificación",
      "output": "('SpecialOffer', \"CREATE TABLE `SpecialOffer` (\\n  `SpecialOfferID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for SpecialOffer records.'  `Description` varchar(255) NOT NULL COMMENT 'Discount description.',\\n  `DiscountPct` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Discount precentage.',\\n  `Type` varchar(50) NOT NULL COMMENT 'Discount type category.',\\n  `Category` varchar(50) NOT NULL COMMENT 'Group the discount applies to such as Reseller or Customer.',\\n  `StartDate` datetime NOT NULL COMMENT 'Discount start date.',\\n  `EndDate` datetime NOT NULL COMMENT 'Discount end date.',\\n  `MinQty` int(11) NOT NULL DEFAULT 0 COMMENT 'Minimum discount percent allowed.',\\n  `MaxQty` int(11) DEFAULT NULL COMMENT 'Maximum discount percent allowed.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SpecialOfferID`),\\n  UNIQUE KEY `AK_SpecialOffer_rowguid` (`rowguid`),\\n  KEY `GUID_SpecialOffer` (`rowguid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COMMENT='Sale discounts lookup table.'\")"
    },
    {
      "input": "Una tabla de Producto de oferta especial con las columnas de, Id. de oferta especial, Id. de producto, rowguid, Fecha de modificación",
      "output": "('SpecialOfferProduct', \"CREATE TABLE `SpecialOfferProduct` (\\n  `SpecialOfferID` int(11) NOT NULL COMMENT 'Primary key for SpecialOfferProduct records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SpecialOfferID`,`ProductID`),\\n  UNIQUE KEY `AK_SpecialOfferProduct_rowguid` (`rowguid`),\\n  KEY `IX_SpecialOfferProduct_ProductID` (`ProductID`),\\n  KEY `GUID_SpecialOfferProduct` (`rowguid`),\\n  CONSTRAINT `FK_SpecialOfferProduct_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID` FOREIGN KEY (`SpecialOfferID`) REFERENCES `SpecialOffer` (`SpecialOfferID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Cross-reference table mapping products to special offer discounts.'\")"
    },
    {
      "input": "Una tabla de Provincia del estado con las columnas de, Id. de provincia estatal, Código de provincia estatal, Código de región de país, Es solo bandera de provincia estatal, Nombre, Id. de territorio, rowguid, Fecha de modificación",
      "output": "('StateProvince', \"CREATE TABLE `StateProvince` (\\n  `StateProvinceID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for StateProvince records.'  `StateProvinceCode` char(3) NOT NULL COMMENT 'ISO standard state or province code.',\\n  `CountryRegionCode` varchar(3) NOT NULL COMMENT 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ',\\n  `IsOnlyStateProvinceFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.',\\n  `Name` varchar(100) NOT NULL COMMENT 'State or province description.',\\n  `TerritoryID` int(11) NOT NULL COMMENT 'ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`StateProvinceID`),\\n  UNIQUE KEY `AK_StateProvince_Name` (`Name`),\\n  UNIQUE KEY `AK_StateProvince_StateProvinceCode_CountryRegionCode` (`StateProvinceCode`,`CountryRegionCode`),\\n  UNIQUE KEY `AK_StateProvince_rowguid` (`rowguid`),\\n  KEY `FK_StateProvince_CountryRegion_CountryRegionCode` (`CountryRegionCode`),\\n  KEY `FK_StateProvince_SalesTerritory_TerritoryID` (`TerritoryID`),\\n  KEY `GUID_StateProvince` (`rowguid`),\\n  CONSTRAINT `FK_StateProvince_CountryRegion_CountryRegionCode` FOREIGN KEY (`CountryRegionCode`) REFERENCES `CountryRegion` (`CountryRegionCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_StateProvince_SalesTerritory_TerritoryID` FOREIGN KEY (`TerritoryID`) REFERENCES `SalesTerritory` (`TerritoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=182 DEFAULT CHARSET=utf8 COMMENT='State and province lookup table.'\")"
    },
    {
      "input": "Una tabla de Tienda con las columnas de, Id. de entidad comercial, Nombre, Id. de vendedor, Datos demográficos, rowguid, Fecha de modificación",
      "output": "('Store', \"CREATE TABLE `Store` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Customer.BusinessEntityID.'  `Name` varchar(100) NOT NULL COMMENT 'Name of the store.',\\n  `SalesPersonID` int(11) DEFAULT NULL COMMENT 'ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.',\\n  `Demographics` text DEFAULT NULL COMMENT 'Demographic informationg about the store such as the number of employees, annual sales and store type.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_Store_rowguid` (`rowguid`),\\n  KEY `IX_Store_SalesPersonID` (`SalesPersonID`),\\n  KEY `PXML_Store_Demographics` (`Demographics`(255)),\\n  KEY `GUID_Store` (`rowguid`),\\n  CONSTRAINT `FK_Store_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Store_SalesPerson_SalesPersonID` FOREIGN KEY (`SalesPersonID`) REFERENCES `SalesPerson` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Customers (resellers) of Adventure Works products.'\")"
    },
    {
      "input": "Una tabla de Historial de transacciones con las columnas de, ID de transacción, ID de producto, ID de pedido de referencia, ID de línea de pedido de referencia, Fecha de transacción, Tipo de transacción, Cantidad, Costo real, Fecha de modificación",
      "output": "('TransactionHistory', \"CREATE TABLE `TransactionHistory` (\\n  `TransactionID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for TransactionHistory records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `ReferenceOrderID` int(11) NOT NULL COMMENT 'Purchase order, sales order, or work order identification number.',\\n  `ReferenceOrderLineID` int(11) NOT NULL DEFAULT 0 COMMENT 'Line number associated with the purchase order, sales order, or work order.',\\n  `TransactionDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time of the transaction.',\\n  `TransactionType` char(1) NOT NULL COMMENT 'W = WorkOrder, S = SalesOrder, P = PurchaseOrder',\\n  `Quantity` int(11) NOT NULL COMMENT 'Product quantity.',\\n  `ActualCost` decimal(19,4) NOT NULL COMMENT 'Product cost.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TransactionID`),\\n  KEY `IX_TransactionHistory_ProductID` (`ProductID`),\\n  KEY `IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID` (`ReferenceOrderID`,`ReferenceOrderLineID`),\\n  CONSTRAINT `FK_TransactionHistory_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=213443 DEFAULT CHARSET=utf8 COMMENT='Record of each purchase order, sales order, or work order transaction year to date.'\")"
    },
    {
      "input": "Una tabla de Archivo de historial de transacciones con las columnas de, ID de transacción, ID de producto, ID de pedido de referencia, ID de línea de pedido de referencia, Fecha de transacción, Tipo de transacción, Cantidad, Costo real, Fecha de modificación",
      "output": "('TransactionHistoryArchive', \"CREATE TABLE `TransactionHistoryArchive` (\\n  `TransactionID` int(11) NOT NULL COMMENT 'Primary key for TransactionHistoryArchive records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `ReferenceOrderID` int(11) NOT NULL COMMENT 'Purchase order, sales order, or work order identification number.',\\n  `ReferenceOrderLineID` int(11) NOT NULL DEFAULT 0 COMMENT 'Line number associated with the purchase order, sales order, or work order.',\\n  `TransactionDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time of the transaction.',\\n  `TransactionType` char(1) NOT NULL COMMENT 'W = Work Order, S = Sales Order, P = Purchase Order',\\n  `Quantity` int(11) NOT NULL COMMENT 'Product quantity.',\\n  `ActualCost` decimal(19,4) NOT NULL COMMENT 'Product cost.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TransactionID`),\\n  KEY `IX_TransactionHistoryArchive_ProductID` (`ProductID`),\\n  KEY `IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLi2` (`ReferenceOrderID`,`ReferenceOrderLineID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Transactions for previous years.'\")"
    },
    {
      "input": "Una tabla de Unidad de medida con las columnas de, Código de unidad de medida, Nombre, Fecha de modificación",
      "output": "('UnitMeasure', \"CREATE TABLE `UnitMeasure` (\\n  `UnitMeasureCode` char(3) NOT NULL COMMENT 'Primary key.'  `Name` varchar(100) NOT NULL COMMENT 'Unit of measure description.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`UnitMeasureCode`),\\n  UNIQUE KEY `AK_UnitMeasure_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Unit of measure lookup table.'\")"
    },
    {
      "input": "Una tabla de Vendedor con las columnas de, ID de entidad comercial, número de cuenta, nombre, calificación crediticia, estado de proveedor preferido, indicador activo, U R L del servicio web de compras, fecha de modificación",
      "output": "('Vendor', \"CREATE TABLE `Vendor` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID'  `AccountNumber` varchar(30) NOT NULL COMMENT 'Vendor account (identification) number.',\\n  `Name` varchar(100) NOT NULL COMMENT 'Company name.',\\n  `CreditRating` tinyint(3) unsigned NOT NULL COMMENT '1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average',\\n  `PreferredVendorStatus` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.',\\n  `ActiveFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Vendor no longer used. 1 = Vendor is actively used.',\\n  `PurchasingWebServiceURL` varchar(1024) DEFAULT NULL COMMENT 'Vendor URL.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_Vendor_AccountNumber` (`AccountNumber`),\\n  CONSTRAINT `FK_Vendor_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Companies from whom Adventure Works Cycles purchases parts or other goods.'\")"
    },
    {
      "input": "Una tabla de Orden de trabajo con las columnas de, Id. de orden de trabajo, Id. de producto, Cantidad de pedido, Cantidad almacenada, Cantidad desechada, Fecha de inicio, Fecha de finalización, Fecha de vencimiento, Id. de motivo de desecho, Fecha de modificación",
      "output": "('WorkOrder', \"CREATE TABLE `WorkOrder` (\\n  `WorkOrderID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for WorkOrder records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `OrderQty` int(11) NOT NULL COMMENT 'Product quantity to build.',\\n  `StockedQty` int(11) NOT NULL COMMENT 'Quantity built and put in inventory.',\\n  `ScrappedQty` smallint(6) NOT NULL COMMENT 'Quantity that failed inspection.',\\n  `StartDate` datetime NOT NULL COMMENT 'Work order start date.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'Work order end date.',\\n  `DueDate` datetime NOT NULL COMMENT 'Work order due date.',\\n  `ScrapReasonID` smallint(6) DEFAULT NULL COMMENT 'Reason for inspection failure.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`WorkOrderID`),\\n  KEY `IX_WorkOrder_ScrapReasonID` (`ScrapReasonID`),\\n  KEY `IX_WorkOrder_ProductID` (`ProductID`),\\n  CONSTRAINT `FK_WorkOrder_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_WorkOrder_ScrapReason_ScrapReasonID` FOREIGN KEY (`ScrapReasonID`) REFERENCES `ScrapReason` (`ScrapReasonID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB AUTO_INCREMENT=72592 DEFAULT CHARSET=utf8 COMMENT='Manufacturing work orders.'\")"
    },
    {
      "input": "Una tabla de Enrutamiento de órdenes de trabajo con las columnas de, Id. de orden de trabajo, Id. de producto, Secuencia de operación, Id. de ubicación, Fecha de inicio programada, Fecha de finalización programada, Fecha de inicio real, Fecha de finalización real, Horas de recursos reales, Costo planificado, Costo real, Fecha de modificación",
      "output": "('WorkOrderRouting', \"CREATE TABLE `WorkOrderRouting` (\\n  `WorkOrderID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to WorkOrder.WorkOrderID.'  `ProductID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Product.ProductID.',\\n  `OperationSequence` smallint(6) NOT NULL COMMENT 'Primary key. Indicates the manufacturing process sequence.',\\n  `LocationID` smallint(6) NOT NULL COMMENT 'Manufacturing location where the part is processed. Foreign key to Location.LocationID.',\\n  `ScheduledStartDate` datetime NOT NULL COMMENT 'Planned manufacturing start date.',\\n  `ScheduledEndDate` datetime NOT NULL COMMENT 'Planned manufacturing end date.',\\n  `ActualStartDate` datetime DEFAULT NULL COMMENT 'Actual start date.',\\n  `ActualEndDate` datetime DEFAULT NULL COMMENT 'Actual end date.',\\n  `ActualResourceHrs` decimal(9,4) DEFAULT NULL COMMENT 'Number of manufacturing hours used.',\\n  `PlannedCost` decimal(19,4) NOT NULL COMMENT 'Estimated manufacturing cost.',\\n  `ActualCost` decimal(19,4) DEFAULT NULL COMMENT 'Actual manufacturing cost.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`WorkOrderID`,`ProductID`,`OperationSequence`),\\n  KEY `IX_WorkOrderRouting_ProductID` (`ProductID`),\\n  KEY `FK_WorkOrderRouting_Location_LocationID` (`LocationID`),\\n  CONSTRAINT `FK_WorkOrderRouting_Location_LocationID` FOREIGN KEY (`LocationID`) REFERENCES `Location` (`LocationID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_WorkOrderRouting_WorkOrder_WorkOrderID` FOREIGN KEY (`WorkOrderID`) REFERENCES `WorkOrder` (`WorkOrderID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Work order details.'\")"
    },
    {
      "input": "Una tabla de ID DE LÍNEA AÉREA con las columnas de, Código, Descripción",
      "output": "('L_AIRLINE_ID', 'CREATE TABLE `L_AIRLINE_ID` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_AIRLINE_ID_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de AEROPUERTO L con las columnas de, Código, Descripción",
      "output": "('L_AIRPORT', 'CREATE TABLE `L_AIRPORT` (\\n  `Code` char(3) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_AIRPORT_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de IDENTIFICACIÓN DEL AEROPUERTO con las columnas de, Código, Descripción",
      "output": "('L_AIRPORT_ID', 'CREATE TABLE `L_AIRPORT_ID` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_AIRPORT_ID_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L AEROPUERTO SEQ ID con las columnas de, Código, Descripción",
      "output": "('L_AIRPORT_SEQ_ID', 'CREATE TABLE `L_AIRPORT_SEQ_ID` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_AIRPORT_SEQ_ID_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L CANCELACIÓN con las columnas de, Código, Descripción",
      "output": "('L_CANCELLATION', 'CREATE TABLE `L_CANCELLATION` (\\n  `Code` char(1) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_CANCELLATION_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ID DE MERCADO DE LA CIUDAD L con las columnas de, Código, Descripción",
      "output": "('L_CITY_MARKET_ID', 'CREATE TABLE `L_CITY_MARKET_ID` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_CITY_MARKET_ID_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L DEPARRBLK con las columnas de, Código, Descripción",
      "output": "('L_DEPARRBLK', 'CREATE TABLE `L_DEPARRBLK` (\\n  `Code` char(9) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_DEPARRBLK_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de GRUPO DE DISTANCIA L con las columnas de, Código, Descripción",
      "output": "('L_DISTANCE_GROUP_250', 'CREATE TABLE `L_DISTANCE_GROUP_250` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_DISTANCE_GROUP_250_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L DESVÍOS con las columnas de, Código, Descripción",
      "output": "('L_DIVERSIONS', 'CREATE TABLE `L_DIVERSIONS` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_DIVERSIONS_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L MESES con las columnas de, Código, Descripción",
      "output": "('L_MONTHS', 'CREATE TABLE `L_MONTHS` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_MONTHS_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de GRUPOS DE DEMORA A TIEMPO L con las columnas de, Código, Descripción",
      "output": "('L_ONTIME_DELAY_GROUPS', 'CREATE TABLE `L_ONTIME_DELAY_GROUPS` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_ONTIME_DELAY_GROUPS_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L CUARTOS con las columnas de, Código, Descripción",
      "output": "('L_QUARTERS', 'CREATE TABLE `L_QUARTERS` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_QUARTERS_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L ESTADO ABR AVIACIÓN con las columnas de, Código, Descripción",
      "output": "('L_STATE_ABR_AVIATION', 'CREATE TABLE `L_STATE_ABR_AVIATION` (\\n  `Code` char(2) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_STATE_ABR_AVIATION_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L ESTADO FIPS con las columnas de, Código, Descripción",
      "output": "('L_STATE_FIPS', 'CREATE TABLE `L_STATE_FIPS` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_STATE_FIPS_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L PORTADORES ÚNICOS con las columnas de, Código, Descripción",
      "output": "('L_UNIQUE_CARRIERS', 'CREATE TABLE `L_UNIQUE_CARRIERS` (\\n  `Code` varchar(255) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_UNIQUE_CARRIERS_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L DÍAS DE LA SEMANA con las columnas de, Código, Descripción",
      "output": "('L_WEEKDAYS', 'CREATE TABLE `L_WEEKDAYS` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_WEEKDAYS_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L CÓDIGOS DE ÁREA DEL MUNDO con las columnas de, Código, Descripción",
      "output": "('L_WORLD_AREA_CODES', 'CREATE TABLE `L_WORLD_AREA_CODES` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_WORLD_AREA_CODES_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de L SÍ NO RESP. con las columnas de, Código, Descripción",
      "output": "('L_YESNO_RESP', 'CREATE TABLE `L_YESNO_RESP` (\\n  `Code` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `L_YESNO_RESP_Code_key` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Puntualidad Puntualidad Rendimiento con las columnas de, Año, Trimestre, Mes, Día del mes, Día de la semana, Fecha de vuelo, Aerolínea única, ID de la aerolínea, Aerolínea, Núm. de cola, Núm. de vuelo, Id. del aeropuerto de origen, Id. de secuencia del aeropuerto de origen, Id. del mercado de la ciudad de origen, Origen, Nombre de la ciudad de origen , Estado de origen, Fips de estado de origen, Nombre de estado de origen, Wac de origen, Id. de aeropuerto de destino, Id. de secuencia de aeropuerto de destino, Id. de mercado de ciudad de destino, Dest, Nombre de ciudad de destino, Estado de destino, Fips de estado de destino, Nombre de estado de destino, Wac de destino, C R S Hora de salida, Hora de salida, Demora de salida, Minutos de retraso de salida, Del dep, Grupos de retraso de salida, Bloqueo de tiempo de salida, Salida de rodaje, Ruedas apagadas, Ruedas encendidas, Entrada de rodaje, C R S Hora de llegada, Hora de llegada, Demora de llegada, Minutos de demora de llegada, Arr Del, Grupos de retraso de llegada, Arr Time Blk, Cancelado, Código de cancelación, Desviado, Tiempo transcurrido C R S, Tiempo transcurrido real, Tiempo de aire, Vuelos, Distancia, Grupo de distancia, Demora del transportista, Demora climática, Demora N A S, Demora de seguridad, Aeronave tardía Retraso, tiempo de primera salida, tiempo G total agregado, tiempo G agregado más largo, aterrizajes en el aeropuerto de la división, destino alcanzado de la división, tiempo transcurrido real de la división, retraso de llegada de la división, Distancia de división, Aeropuerto de división, Id. de aeropuerto de división, Id. de secuencia de aeropuerto de división, Ruedas de división activadas, Tiempo total G de división, Tiempo G más largo de división, Ruedas de división desactivadas, Núm. de cola de división, Aeropuerto de división, Id. de aeropuerto de división, Id. de secuencia de aeropuerto de división, División Ruedas encendidas, Div. Tiempo total G, Div. Tiempo G más largo",
      "output": "('On_Time_On_Time_Performance_2016_1', \"CREATE TABLE `On_Time_On_Time_Performance_2016_1` (\\n  `Year` int(11) DEFAULT NULL  `Quarter` int(11) DEFAULT NULL,\\n  `Month` int(11) DEFAULT NULL,\\n  `DayofMonth` int(11) DEFAULT NULL,\\n  `DayOfWeek` int(11) DEFAULT NULL,\\n  `FlightDate` date DEFAULT NULL,\\n  `UniqueCarrier` varchar(255) DEFAULT 'NULL',\\n  `AirlineID` int(11) NOT NULL,\\n  `Carrier` char(2) DEFAULT NULL,\\n  `TailNum` varchar(6) DEFAULT NULL,\\n  `FlightNum` int(11) DEFAULT NULL,\\n  `OriginAirportID` int(11) DEFAULT NULL,\\n  `OriginAirportSeqID` int(11) DEFAULT NULL,\\n  `OriginCityMarketID` int(11) DEFAULT NULL,\\n  `Origin` char(3) DEFAULT NULL,\\n  `OriginCityName` varchar(34) DEFAULT NULL,\\n  `OriginState` char(2) DEFAULT NULL,\\n  `OriginStateFips` int(11) DEFAULT NULL,\\n  `OriginStateName` varchar(46) DEFAULT NULL,\\n  `OriginWac` int(11) DEFAULT NULL,\\n  `DestAirportID` int(11) DEFAULT NULL,\\n  `DestAirportSeqID` int(11) DEFAULT NULL,\\n  `DestCityMarketID` int(11) DEFAULT NULL,\\n  `Dest` char(3) DEFAULT NULL,\\n  `DestCityName` varchar(34) DEFAULT NULL,\\n  `DestState` char(2) DEFAULT NULL,\\n  `DestStateFips` int(11) DEFAULT NULL,\\n  `DestStateName` varchar(46) DEFAULT NULL,\\n  `DestWac` int(11) DEFAULT NULL,\\n  `CRSDepTime` int(11) DEFAULT NULL,\\n  `DepTime` int(11) DEFAULT NULL,\\n  `DepDelay` decimal(65,2) DEFAULT NULL,\\n  `DepDelayMinutes` float DEFAULT NULL,\\n  `DepDel15` int(11) DEFAULT NULL,\\n  `DepartureDelayGroups` int(11) DEFAULT NULL,\\n  `DepTimeBlk` char(9) DEFAULT NULL,\\n  `TaxiOut` float DEFAULT NULL,\\n  `WheelsOff` int(11) DEFAULT NULL,\\n  `WheelsOn` int(11) DEFAULT NULL,\\n  `TaxiIn` float DEFAULT NULL,\\n  `CRSArrTime` int(11) DEFAULT NULL,\\n  `ArrTime` int(11) DEFAULT NULL,\\n  `ArrDelay` decimal(65,2) DEFAULT NULL,\\n  `ArrDelayMinutes` float DEFAULT NULL,\\n  `ArrDel15` int(11) DEFAULT NULL,\\n  `ArrivalDelayGroups` int(11) DEFAULT NULL,\\n  `ArrTimeBlk` char(9) DEFAULT NULL,\\n  `Cancelled` int(11) DEFAULT NULL,\\n  `CancellationCode` char(1) DEFAULT NULL,\\n  `Diverted` int(11) DEFAULT NULL,\\n  `CRSElapsedTime` float DEFAULT NULL,\\n  `ActualElapsedTime` float DEFAULT NULL,\\n  `AirTime` float DEFAULT NULL,\\n  `Flights` float DEFAULT NULL,\\n  `Distance` float DEFAULT NULL,\\n  `DistanceGroup` int(11) DEFAULT NULL,\\n  `CarrierDelay` decimal(65,2) DEFAULT NULL,\\n  `WeatherDelay` decimal(65,2) DEFAULT NULL,\\n  `NASDelay` decimal(65,2) DEFAULT NULL,\\n  `SecurityDelay` decimal(65,2) DEFAULT NULL,\\n  `LateAircraftDelay` decimal(65,2) DEFAULT NULL,\\n  `FirstDepTime` decimal(65,2) DEFAULT NULL,\\n  `TotalAddGTime` decimal(65,2) DEFAULT NULL,\\n  `LongestAddGTime` decimal(65,2) DEFAULT NULL,\\n  `DivAirportLandings` int(11) DEFAULT NULL,\\n  `DivReachedDest` decimal(65,2) DEFAULT NULL,\\n  `DivActualElapsedTime` decimal(65,2) DEFAULT NULL,\\n  `DivArrDelay` decimal(65,2) DEFAULT NULL,\\n  `DivDistance` decimal(65,2) DEFAULT NULL,\\n  `Div1Airport` char(3) DEFAULT NULL,\\n  `Div1AirportID` int(11) DEFAULT NULL,\\n  `Div1AirportSeqID` int(11) DEFAULT NULL,\\n  `Div1WheelsOn` decimal(65,2) DEFAULT NULL,\\n  `Div1TotalGTime` decimal(65,2) DEFAULT NULL,\\n  `Div1LongestGTime` decimal(65,2) DEFAULT NULL,\\n  `Div1WheelsOff` decimal(65,2) DEFAULT NULL,\\n  `Div1TailNum` varchar(6) DEFAULT NULL,\\n  `Div2Airport` char(3) DEFAULT NULL,\\n  `Div2AirportID` int(11) DEFAULT NULL,\\n  `Div2AirportSeqID` int(11) DEFAULT NULL,\\n  `Div2WheelsOn` decimal(65,2) DEFAULT NULL,\\n  `Div2TotalGTime` decimal(65,2) DEFAULT NULL,\\n  `Div2LongestGTime` decimal(65,2) DEFAULT NULL,\\n  KEY `On_Time_On_Time_Performance_2016_1_DivAirportLandings_fkey` (`DivAirportLandings`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DepartureDelayGroups_fkey` (`DepartureDelayGroups`),\\n  KEY `On_Time_On_Time_Performance_2016_1_ArrivalDelayGroups_fkey` (`ArrivalDelayGroups`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Div1AirportSeqID_fkey` (`Div1AirportSeqID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Div2AirportSeqID_fkey` (`Div2AirportSeqID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Div1AirportID_fkey` (`Div1AirportID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Div2AirportID_fkey` (`Div2AirportID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Diverted_fkey` (`Diverted`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Cancelled_fkey` (`Cancelled`),\\n  KEY `On_Time_On_Time_Performance_2016_1_ArrDel15_fkey` (`ArrDel15`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DepDel15_fkey` (`DepDel15`),\\n  KEY `On_Time_On_Time_Performance_2016_1_CancellationCode_fkey` (`CancellationCode`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DepTimeBlk_fkey` (`DepTimeBlk`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DestState_fkey` (`DestState`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Dest_fkey` (`Dest`),\\n  KEY `On_Time_On_Time_Performance_2016_1_OriginState_fkey` (`OriginState`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Origin_fkey` (`Origin`),\\n  KEY `On_Time_On_Time_Performance_2016_1_UniqueCarrier_fkey` (`UniqueCarrier`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DestStateFips_fkey` (`DestStateFips`),\\n  KEY `On_Time_On_Time_Performance_2016_1_OriginStateFips_fkey` (`OriginStateFips`),\\n  KEY `On_Time_On_Time_Performance_2016_1_OriginWac_fkey` (`OriginWac`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DestWac_fkey` (`DestWac`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DayOfWeek_fkey` (`DayOfWeek`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DistanceGroup_fkey` (`DistanceGroup`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Quarter_fkey` (`Quarter`),\\n  KEY `On_Time_On_Time_Performance_2016_1_Month_fkey` (`Month`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DestCityMarketID_fkey` (`DestCityMarketID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_OriginCityMarketID_fkey` (`OriginCityMarketID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DestAirportSeqID_fkey` (`DestAirportSeqID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_OriginAirportSeqID_fkey` (`OriginAirportSeqID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_DestAirportID_fkey` (`DestAirportID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_OriginAirportID_fkey` (`OriginAirportID`),\\n  KEY `On_Time_On_Time_Performance_2016_1_AirlineID_fkey` (`AirlineID`),\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_AirlineID_fkey` FOREIGN KEY (`AirlineID`) REFERENCES `L_AIRLINE_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_ArrDel15_fkey` FOREIGN KEY (`ArrDel15`) REFERENCES `L_YESNO_RESP` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_ArrivalDelayGroups_fkey` FOREIGN KEY (`ArrivalDelayGroups`) REFERENCES `L_ONTIME_DELAY_GROUPS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_CancellationCode_fkey` FOREIGN KEY (`CancellationCode`) REFERENCES `L_CANCELLATION` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Cancelled_fkey` FOREIGN KEY (`Cancelled`) REFERENCES `L_YESNO_RESP` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DayOfWeek_fkey` FOREIGN KEY (`DayOfWeek`) REFERENCES `L_WEEKDAYS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DepDel15_fkey` FOREIGN KEY (`DepDel15`) REFERENCES `L_YESNO_RESP` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DepTimeBlk_fkey` FOREIGN KEY (`DepTimeBlk`) REFERENCES `L_DEPARRBLK` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DepartureDelayGroups_fkey` FOREIGN KEY (`DepartureDelayGroups`) REFERENCES `L_ONTIME_DELAY_GROUPS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DestAirportID_fkey` FOREIGN KEY (`DestAirportID`) REFERENCES `L_AIRPORT_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DestAirportSeqID_fkey` FOREIGN KEY (`DestAirportSeqID`) REFERENCES `L_AIRPORT_SEQ_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DestCityMarketID_fkey` FOREIGN KEY (`DestCityMarketID`) REFERENCES `L_CITY_MARKET_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DestStateFips_fkey` FOREIGN KEY (`DestStateFips`) REFERENCES `L_STATE_FIPS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DestState_fkey` FOREIGN KEY (`DestState`) REFERENCES `L_STATE_ABR_AVIATION` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DestWac_fkey` FOREIGN KEY (`DestWac`) REFERENCES `L_WORLD_AREA_CODES` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Dest_fkey` FOREIGN KEY (`Dest`) REFERENCES `L_AIRPORT` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DistanceGroup_fkey` FOREIGN KEY (`DistanceGroup`) REFERENCES `L_DISTANCE_GROUP_250` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Div1AirportID_fkey` FOREIGN KEY (`Div1AirportID`) REFERENCES `L_AIRPORT_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Div1AirportSeqID_fkey` FOREIGN KEY (`Div1AirportSeqID`) REFERENCES `L_AIRPORT_SEQ_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Div2AirportID_fkey` FOREIGN KEY (`Div2AirportID`) REFERENCES `L_AIRPORT_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Div2AirportSeqID_fkey` FOREIGN KEY (`Div2AirportSeqID`) REFERENCES `L_AIRPORT_SEQ_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_DivAirportLandings_fkey` FOREIGN KEY (`DivAirportLandings`) REFERENCES `L_DIVERSIONS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Diverted_fkey` FOREIGN KEY (`Diverted`) REFERENCES `L_YESNO_RESP` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Month_fkey` FOREIGN KEY (`Month`) REFERENCES `L_MONTHS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_OriginAirportID_fkey` FOREIGN KEY (`OriginAirportID`) REFERENCES `L_AIRPORT_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_OriginAirportSeqID_fkey` FOREIGN KEY (`OriginAirportSeqID`) REFERENCES `L_AIRPORT_SEQ_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_OriginCityMarketID_fkey` FOREIGN KEY (`OriginCityMarketID`) REFERENCES `L_CITY_MARKET_ID` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_OriginStateFips_fkey` FOREIGN KEY (`OriginStateFips`) REFERENCES `L_STATE_FIPS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_OriginState_fkey` FOREIGN KEY (`OriginState`) REFERENCES `L_STATE_ABR_AVIATION` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_OriginWac_fkey` FOREIGN KEY (`OriginWac`) REFERENCES `L_WORLD_AREA_CODES` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Origin_fkey` FOREIGN KEY (`Origin`) REFERENCES `L_AIRPORT` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_Quarter_fkey` FOREIGN KEY (`Quarter`) REFERENCES `L_QUARTERS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `On_Time_On_Time_Performance_2016_1_UniqueCarrier_fkey` FOREIGN KEY (`UniqueCarrier`) REFERENCES `L_UNIQUE_CARRIERS` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Control con las columnas de, ICO, ROKVYS, MESVYS, ZORCHK, ZMCHARZA, ZMTELAKT, AKTPOZAM, ZMDIET, LEKCHOL, LKTLAK, ZMKOUR, POCCIG, PRACNES, SRDCE, HYPERT, CEVMOZ, DIAB, JINAONE, BOLHR, BODK HODN DOD, AÑO, HODN, AÑO, HODN , YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, MASS, SYST, DIAST, TRIC , SUBSC, HYPERSD, HYPERS, HYPERD , HYPCHL, HYPTGL, CHLST, CHLSTMG, TRIGL, TRIGLMG, HDL, HDLMG, MOC, GLYKEMIE, KYSMOC, LDL",
      "output": "('Contr', 'CREATE TABLE `Contr` (\\n  `ICO` int(11) NOT NULL  `ROKVYS` int(11) DEFAULT NULL,\\n  `MESVYS` int(11) DEFAULT NULL,\\n  `PORADK` int(11) NOT NULL,\\n  `ZMCHARZA` int(11) DEFAULT NULL,\\n  `ZMTELAKT` int(11) DEFAULT NULL,\\n  `AKTPOZAM` int(11) DEFAULT NULL,\\n  `ZMDIET` int(11) DEFAULT NULL,\\n  `LEKCHOL` varchar(255) DEFAULT NULL,\\n  `LEKTLAK` int(11) DEFAULT NULL,\\n  `ZMKOUR` int(11) DEFAULT NULL,\\n  `POCCIG` int(11) DEFAULT NULL,\\n  `PRACNES` int(11) DEFAULT NULL,\\n  `SRDCE` varchar(255) DEFAULT NULL,\\n  `HYPERT` varchar(255) DEFAULT NULL,\\n  `CEVMOZ` varchar(255) DEFAULT NULL,\\n  `DIAB` varchar(255) DEFAULT NULL,\\n  `JINAONE` int(11) DEFAULT NULL,\\n  `BOLHR` int(11) DEFAULT NULL,\\n  `BOLDK` int(11) DEFAULT NULL,\\n  `DUSN` int(11) DEFAULT NULL,\\n  `HODNSK` int(11) DEFAULT NULL,\\n  `HODN0` int(11) DEFAULT NULL,\\n  `ROK0` int(11) DEFAULT NULL,\\n  `HODN1` varchar(255) DEFAULT NULL,\\n  `ROK1` varchar(255) DEFAULT NULL,\\n  `HODN2` varchar(255) DEFAULT NULL,\\n  `ROK2` varchar(255) DEFAULT NULL,\\n  `HODN3` varchar(255) DEFAULT NULL,\\n  `ROK3` varchar(255) DEFAULT NULL,\\n  `HODN4` varchar(255) DEFAULT NULL,\\n  `ROK4` varchar(255) DEFAULT NULL,\\n  `HODN11` varchar(255) DEFAULT NULL,\\n  `ROK11` varchar(255) DEFAULT NULL,\\n  `HODN12` varchar(255) DEFAULT NULL,\\n  `ROK12` varchar(255) DEFAULT NULL,\\n  `HODN13` varchar(255) DEFAULT NULL,\\n  `ROK13` varchar(255) DEFAULT NULL,\\n  `HODN14` varchar(255) DEFAULT NULL,\\n  `ROK14` varchar(255) DEFAULT NULL,\\n  `HODN15` varchar(255) DEFAULT NULL,\\n  `ROK15` varchar(255) DEFAULT NULL,\\n  `HODN21` varchar(255) DEFAULT NULL,\\n  `ROK21` varchar(255) DEFAULT NULL,\\n  `HODN23` varchar(255) DEFAULT NULL,\\n  `ROK23` varchar(255) DEFAULT NULL,\\n  `HMOT` int(11) DEFAULT NULL,\\n  `SYST` int(11) DEFAULT NULL,\\n  `DIAST` int(11) DEFAULT NULL,\\n  `TRIC` int(11) DEFAULT NULL,\\n  `SUBSC` int(11) DEFAULT NULL,\\n  `HYPERSD` int(11) DEFAULT NULL,\\n  `HYPERS` int(11) DEFAULT NULL,\\n  `HYPERD` int(11) DEFAULT NULL,\\n  `HYPCHL` int(11) DEFAULT NULL,\\n  `HYPTGL` int(11) DEFAULT NULL,\\n  `CHLST` float DEFAULT NULL,\\n  `CHLSTMG` int(11) DEFAULT NULL,\\n  `TRIGL` float DEFAULT NULL,\\n  `TRIGLMG` int(11) DEFAULT NULL,\\n  `HDL` varchar(255) DEFAULT NULL,\\n  `HDLMG` varchar(255) DEFAULT NULL,\\n  `MOC` int(11) DEFAULT NULL,\\n  `GLYKEMIE` varchar(255) DEFAULT NULL,\\n  `KYSMOC` varchar(255) DEFAULT NULL,\\n  `LDL` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`ICO`,`PORADK`),\\n  KEY `ICO` (`ICO`),\\n  CONSTRAINT `Contr_ibfk_1` FOREIGN KEY (`ICO`) REFERENCES `Entry` (`ICO`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Muerte con las columnas de, ICO, DENUMR, MESUMR, ROKUMR, PRICUMR",
      "output": "('Death', 'CREATE TABLE `Death` (\\n  `ICO` int(11) NOT NULL  `DENUMR` varchar(255) DEFAULT NULL,\\n  `MESUMR` varchar(255) DEFAULT NULL,\\n  `ROKUMR` int(11) DEFAULT NULL,\\n  `PRICUMR` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ICO`),\\n  KEY `ICO` (`ICO`),\\n  CONSTRAINT `Death_ibfk_1` FOREIGN KEY (`ICO`) REFERENCES `Entry` (`ICO`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Entrada con las columnas deY, CAJ, AZÚCAR, IM, IML, HT, HTD, HTL, ICT, ICTL, DIABET, DIABD, DIABL, HYPLIP, HYPLD, HYPLL, IMTRV, HTTRV, ICTTRV, DIABTRV, HYPLTRV, BOLHR, BOLDK, DUSNOST, VYSKA, VA, SYST, DIAST, SYST, DIAST, TRIC, SUBSC, CHLST, TRIGL, MOC, RARISK, OBEZRISK, KOURRISK, HTRISK, CHOLRISK",
      "output": "('Entry', 'CREATE TABLE `Entry` (\\n  `ICO` int(11) NOT NULL  `KONSKUP` int(11) DEFAULT NULL,\\n  `ROKNAR` int(11) DEFAULT NULL,\\n  `ROKVSTUP` int(11) DEFAULT NULL,\\n  `MESVSTUP` int(11) DEFAULT NULL,\\n  `STAV` int(11) DEFAULT NULL,\\n  `VZDELANI` int(11) DEFAULT NULL,\\n  `ZODPOV` int(11) DEFAULT NULL,\\n  `TELAKTZA` int(11) DEFAULT NULL,\\n  `AKTPOZAM` int(11) DEFAULT NULL,\\n  `DOPRAVA` int(11) DEFAULT NULL,\\n  `DOPRATRV` int(11) DEFAULT NULL,\\n  `KOURENI` int(11) DEFAULT NULL,\\n  `DOBAKOUR` varchar(255) DEFAULT NULL,\\n  `BYVKURAK` varchar(255) DEFAULT NULL,\\n  `ALKOHOL` int(11) DEFAULT NULL,\\n  `PIVO7` varchar(255) DEFAULT NULL,\\n  `PIVO10` int(11) DEFAULT NULL,\\n  `PIVO12` varchar(255) DEFAULT NULL,\\n  `VINO` int(11) DEFAULT NULL,\\n  `LIHOV` int(11) DEFAULT NULL,\\n  `PIVOMN` int(11) DEFAULT NULL,\\n  `VINOMN` int(11) DEFAULT NULL,\\n  `LIHMN` int(11) DEFAULT NULL,\\n  `KAVA` int(11) DEFAULT NULL,\\n  `CAJ` int(11) DEFAULT NULL,\\n  `CUKR` int(11) DEFAULT NULL,\\n  `IM` int(11) DEFAULT NULL,\\n  `IML` varchar(255) DEFAULT NULL,\\n  `HT` int(11) DEFAULT NULL,\\n  `HTD` varchar(255) DEFAULT NULL,\\n  `HTL` varchar(255) DEFAULT NULL,\\n  `ICT` int(11) DEFAULT NULL,\\n  `ICTL` varchar(255) DEFAULT NULL,\\n  `DIABET` int(11) DEFAULT NULL,\\n  `DIABD` int(11) DEFAULT NULL,\\n  `DIABL` int(11) DEFAULT NULL,\\n  `HYPLIP` int(11) DEFAULT NULL,\\n  `HYPLD` varchar(255) DEFAULT NULL,\\n  `HYPLL` varchar(255) DEFAULT NULL,\\n  `IMTRV` varchar(255) DEFAULT NULL,\\n  `HTTRV` varchar(255) DEFAULT NULL,\\n  `ICTTRV` varchar(255) DEFAULT NULL,\\n  `DIABTRV` int(11) DEFAULT NULL,\\n  `HYPLTRV` varchar(255) DEFAULT NULL,\\n  `BOLHR` int(11) DEFAULT NULL,\\n  `BOLDK` int(11) DEFAULT NULL,\\n  `DUSNOST` int(11) DEFAULT NULL,\\n  `VYSKA` int(11) DEFAULT NULL,\\n  `VAHA` int(11) DEFAULT NULL,\\n  `SYST1` int(11) DEFAULT NULL,\\n  `DIAST1` int(11) DEFAULT NULL,\\n  `SYST2` varchar(255) DEFAULT NULL,\\n  `DIAST2` varchar(255) DEFAULT NULL,\\n  `TRIC` int(11) DEFAULT NULL,\\n  `SUBSC` int(11) DEFAULT NULL,\\n  `CHLST` int(11) DEFAULT NULL,\\n  `TRIGL` int(11) DEFAULT NULL,\\n  `MOC` int(11) DEFAULT NULL,\\n  `RARISK` int(11) DEFAULT NULL,\\n  `OBEZRISK` int(11) DEFAULT NULL,\\n  `KOURRISK` int(11) DEFAULT NULL,\\n  `HTRISK` int(11) DEFAULT NULL,\\n  `CHOLRISK` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ICO`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Carta con las columnas de, ICO, MESDOT, ROKDOT, LEKCHOL, LEKTK, NEMOC, ROK, NEMOC, ROK, NEMOC, ROK, NEMOC, ROK, NEMOC, ROK, HYPTK, ROKHYPTK, HYPLP, ​​ROKHYPLP, ​​CUKROVKA, ROKCUKR, CUKSCR, , ODCUINS, DOCUINS, AP, SI, ROKSI, MM, ROKMM, BDK, ROKBDK, DUSNOST, ROKDUS, DUSCHUZE, DUSBEH, DUSROVIN, DUKLID, DUSNOC, KURAK, KURAKBYV, ROKPRKOUR, KOURLENIG, KOURLEN, KOURLEN, PAMIRNA, PAVELKA, PAPRED, DIETA, DIECUOD, DIETUKOD, JINADIE, JINADIEOD, VAHA, VAHAPRED",
      "output": "('Letter', 'CREATE TABLE `Letter` (\\n  `ICO` int(11) NOT NULL  `MESDOT` varchar(255) DEFAULT NULL,\\n  `ROKDOT` int(11) DEFAULT NULL,\\n  `LEKCHOL` int(11) DEFAULT NULL,\\n  `LEKTK` int(11) DEFAULT NULL,\\n  `NEMOC1` int(11) DEFAULT NULL,\\n  `ROK1` int(11) DEFAULT NULL,\\n  `NEMOC2` varchar(255) DEFAULT NULL,\\n  `ROK2` varchar(255) DEFAULT NULL,\\n  `NEMOC3` varchar(255) DEFAULT NULL,\\n  `ROK3` varchar(255) DEFAULT NULL,\\n  `NEMOC4` varchar(255) DEFAULT NULL,\\n  `ROK4` varchar(255) DEFAULT NULL,\\n  `NEMOC5` varchar(255) DEFAULT NULL,\\n  `ROK5` varchar(255) DEFAULT NULL,\\n  `HYPTK` int(11) DEFAULT NULL,\\n  `ROKHYPTK` varchar(255) DEFAULT NULL,\\n  `HYPLP` int(11) DEFAULT NULL,\\n  `ROKHYPLP` varchar(255) DEFAULT NULL,\\n  `CUKROVKA` int(11) DEFAULT NULL,\\n  `ROKCUKR` varchar(255) DEFAULT NULL,\\n  `CUKRTAB` varchar(255) DEFAULT NULL,\\n  `ODCUTAB` varchar(255) DEFAULT NULL,\\n  `DOCUTAB` varchar(255) DEFAULT NULL,\\n  `CUKRINS` varchar(255) DEFAULT NULL,\\n  `ODCUINS` varchar(255) DEFAULT NULL,\\n  `DOCUINS` varchar(255) DEFAULT NULL,\\n  `AP` int(11) DEFAULT NULL,\\n  `SI` int(11) DEFAULT NULL,\\n  `ROKSI` varchar(255) DEFAULT NULL,\\n  `MM` varchar(255) DEFAULT NULL,\\n  `ROKMM` varchar(255) DEFAULT NULL,\\n  `BDK` int(11) DEFAULT NULL,\\n  `ROKBDK1` varchar(255) DEFAULT NULL,\\n  `DUSNOST` varchar(255) DEFAULT NULL,\\n  `ROKDUS` varchar(255) DEFAULT NULL,\\n  `DUSCHUZE` varchar(255) DEFAULT NULL,\\n  `DUSBEH` varchar(255) DEFAULT NULL,\\n  `DUSROVIN` varchar(255) DEFAULT NULL,\\n  `DUKLID` varchar(255) DEFAULT NULL,\\n  `DUSNOC` varchar(255) DEFAULT NULL,\\n  `KURAK` varchar(255) DEFAULT NULL,\\n  `KURAKBYV` varchar(255) DEFAULT NULL,\\n  `ROKPRKOUR` varchar(255) DEFAULT NULL,\\n  `KOURLET` varchar(255) DEFAULT NULL,\\n  `CIGDENMIN` varchar(255) DEFAULT NULL,\\n  `CIGDEN` varchar(255) DEFAULT NULL,\\n  `KOURODLET` varchar(255) DEFAULT NULL,\\n  `DYMKA` varchar(255) DEFAULT NULL,\\n  `PASED` varchar(255) DEFAULT NULL,\\n  `PAMIRNA` varchar(255) DEFAULT NULL,\\n  `PAVELKA` varchar(255) DEFAULT NULL,\\n  `PAPRED10` varchar(255) DEFAULT NULL,\\n  `DIETA` varchar(255) DEFAULT NULL,\\n  `DIECUOD` varchar(255) DEFAULT NULL,\\n  `DIETUKOD` varchar(255) DEFAULT NULL,\\n  `JINADIE` varchar(255) DEFAULT NULL,\\n  `JINADIEOD` varchar(255) DEFAULT NULL,\\n  `VAHA` varchar(255) DEFAULT NULL,\\n  `VAHAPRED10` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`ICO`),\\n  KEY `ICO` (`ICO`),\\n  CONSTRAINT `Letter_ibfk_1` FOREIGN KEY (`ICO`) REFERENCES `Entry` (`ICO`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de estadísticas del partido con las columnas de, mid, pid, tid, loc, KI, MK, HB, DI, GL, BH, HO, TK, RB, IF, CL, CG, FF, FA, BR, CP, UP, CM, MI, P, BO , GA , PP",
      "output": "('match_stats', 'CREATE TABLE `match_stats` (\\n  `mid` varchar(255) COLLATE utf8_bin NOT NULL  `pid` int(11) NOT NULL,\\n  `tid` int(11) DEFAULT NULL,\\n  `loc` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `KI` int(11) DEFAULT NULL,\\n  `MK` int(11) DEFAULT NULL,\\n  `HB` int(11) DEFAULT NULL,\\n  `DI` int(11) DEFAULT NULL,\\n  `GL` int(11) DEFAULT NULL,\\n  `BH` int(11) DEFAULT NULL,\\n  `HO` int(11) DEFAULT NULL,\\n  `TK` int(11) DEFAULT NULL,\\n  `RB` int(11) DEFAULT NULL,\\n  `IF` int(11) DEFAULT NULL,\\n  `CL` int(11) DEFAULT NULL,\\n  `CG` int(11) DEFAULT NULL,\\n  `FF` int(11) DEFAULT NULL,\\n  `FA` int(11) DEFAULT NULL,\\n  `BR` int(11) DEFAULT NULL,\\n  `CP` int(11) DEFAULT NULL,\\n  `UP` int(11) DEFAULT NULL,\\n  `CM` int(11) DEFAULT NULL,\\n  `MI` int(11) DEFAULT NULL,\\n  `1P` float DEFAULT NULL,\\n  `BO` int(11) DEFAULT NULL,\\n  `GA` int(11) DEFAULT NULL,\\n  `PP` float DEFAULT NULL,\\n  PRIMARY KEY (`mid`,`pid`),\\n  KEY `mid` (`mid`),\\n  KEY `pid` (`pid`),\\n  KEY `tid` (`tid`),\\n  CONSTRAINT `match_stats_ibfk_1` FOREIGN KEY (`pid`) REFERENCES `players` (`pid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `match_stats_ibfk_2` FOREIGN KEY (`tid`) REFERENCES `teams` (`tid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `match_stats_ibfk_3` FOREIGN KEY (`mid`) REFERENCES `matches` (`mid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin')"
    },
    {
      "input": "Una tabla de partidos con las columnas de, mid, season, round, tid, tid, tid loc, tid loc, start dt, place, att, margin, win score, win tid, win loc, lost score, lost loc, lost tid, h tid, h score, h qg, h qg, h qg, h qg, h etg, h qb, h qb, h qb, h qb, h etb, un tid, una puntuación, un qg, un qg, un qg, un qg, un etg , un qb, un qb, un qb, un qb, un etb, objetivo",
      "output": "('matches', \"CREATE TABLE `matches` (\\n  `mid` varchar(255) COLLATE utf8_bin NOT NULL DEFAULT ''  `season` int(11) DEFAULT NULL,\\n  `round` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `tid1` int(11) DEFAULT NULL,\\n  `tid2` int(11) DEFAULT NULL,\\n  `tid1_loc` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `tid2_loc` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `start_dt` datetime DEFAULT NULL,\\n  `venue` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `att` int(11) DEFAULT NULL,\\n  `margin` int(11) DEFAULT NULL,\\n  `win_score` int(11) DEFAULT NULL,\\n  `win_tid` int(11) DEFAULT NULL,\\n  `win_loc` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `lose_score` int(11) DEFAULT NULL,\\n  `lose_loc` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `lose_tid` int(11) DEFAULT NULL,\\n  `h_tid` int(11) DEFAULT NULL,\\n  `h_score` int(11) DEFAULT NULL,\\n  `h_q1g` int(11) DEFAULT NULL,\\n  `h_q2g` int(11) DEFAULT NULL,\\n  `h_q3g` int(11) DEFAULT NULL,\\n  `h_q4g` int(11) DEFAULT NULL,\\n  `h_etg` int(11) DEFAULT NULL,\\n  `h_q1b` int(11) DEFAULT NULL,\\n  `h_q2b` int(11) DEFAULT NULL,\\n  `h_q3b` int(11) DEFAULT NULL,\\n  `h_q4b` int(11) DEFAULT NULL,\\n  `h_etb` int(11) DEFAULT NULL,\\n  `a_tid` int(11) DEFAULT NULL,\\n  `a_score` int(11) DEFAULT NULL,\\n  `a_q1g` int(11) DEFAULT NULL,\\n  `a_q2g` int(11) DEFAULT NULL,\\n  `a_q3g` int(11) DEFAULT NULL,\\n  `a_q4g` int(11) DEFAULT NULL,\\n  `a_etg` int(11) DEFAULT NULL,\\n  `a_q1b` int(11) DEFAULT NULL,\\n  `a_q2b` int(11) DEFAULT NULL,\\n  `a_q3b` int(11) DEFAULT NULL,\\n  `a_q4b` int(11) DEFAULT NULL,\\n  `a_etb` int(11) DEFAULT NULL,\\n  `target` int(1) DEFAULT NULL,\\n  PRIMARY KEY (`mid`),\\n  KEY `tid1` (`tid1`),\\n  KEY `tid2` (`tid2`),\\n  CONSTRAINT `matches_ibfk_1` FOREIGN KEY (`tid1`) REFERENCES `teams` (`tid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `matches_ibfk_2` FOREIGN KEY (`tid2`) REFERENCES `teams` (`tid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin\")"
    },
    {
      "input": "Una tabla de jugadores con las columnas de, pid, fecha de nacimiento, nombre, apellido, altura, peso",
      "output": "('players', 'CREATE TABLE `players` (\\n  `pid` int(11) NOT NULL  `dob` datetime DEFAULT NULL,\\n  `first_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `last_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `height` int(11) DEFAULT NULL,\\n  `weight` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`pid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin')"
    },
    {
      "input": "Una tabla de equipos con las columnas de, tiempo, tname",
      "output": "('teams', 'CREATE TABLE `teams` (\\n  `tid` int(11) NOT NULL  `tname` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`tid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin')"
    },
    {
      "input": "Una tabla de premios entrenadores con las columnas de, id, año, id de entrenador, premio, id de lg, nota",
      "output": "('awards_coaches', 'CREATE TABLE `awards_coaches` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `year` int(11) DEFAULT NULL,\\n  `coachID` varchar(255) DEFAULT NULL,\\n  `award` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `coachID` (`coachID`),\\n  KEY `year` (`year`,`coachID`),\\n  KEY `year_2` (`year`,`coachID`),\\n  KEY `year_3` (`year`,`coachID`,`lgID`),\\n  KEY `coachID_2` (`coachID`,`year`),\\n  KEY `coachID_3` (`coachID`,`year`),\\n  CONSTRAINT `awards_coaches_ibfk_1` FOREIGN KEY (`coachID`, `year`) REFERENCES `coaches` (`coachID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=62 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premia a los jugadores con las columnas de, ID de jugador, premio, año, ID de LG, nota, pos",
      "output": "('awards_players', 'CREATE TABLE `awards_players` (\\n  `playerID` varchar(255) NOT NULL  `award` varchar(255) NOT NULL,\\n  `year` int(11) NOT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  `pos` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`year`,`award`),\\n  KEY `playerID` (`playerID`),\\n  CONSTRAINT `awards_players_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de entrenadores con las columnas de, Id. de entrenador, año, Id. de tm, Id. de lg, período, ganado, perdido, victorias posteriores, pérdidas posteriores",
      "output": "('coaches', 'CREATE TABLE `coaches` (\\n  `coachID` varchar(255) NOT NULL  `year` int(11) NOT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `stint` int(11) NOT NULL,\\n  `won` int(11) DEFAULT NULL,\\n  `lost` int(11) DEFAULT NULL,\\n  `post_wins` int(11) DEFAULT NULL,\\n  `post_losses` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`coachID`,`year`,`tmID`,`stint`),\\n  KEY `coachID` (`coachID`),\\n  KEY `year` (`year`,`coachID`),\\n  KEY `year_2` (`year`,`coachID`,`lgID`),\\n  KEY `year_3` (`year`,`tmID`),\\n  KEY `year_4` (`year`,`tmID`),\\n  KEY `tmID` (`tmID`,`year`),\\n  KEY `tmID_2` (`tmID`,`year`),\\n  CONSTRAINT `coaches_ibfk_1` FOREIGN KEY (`tmID`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de reclutar con las columnas de, id, draft Year, draft Round, draft Selection, draft Overall, tm Id, nombre, apellido, sufijo Nombre, player Id, draft From, lg Id",
      "output": "('draft', 'CREATE TABLE `draft` (\\n  `id` int(11) NOT NULL DEFAULT 0  `draftYear` int(11) DEFAULT NULL,\\n  `draftRound` int(11) DEFAULT NULL,\\n  `draftSelection` int(11) DEFAULT NULL,\\n  `draftOverall` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `firstName` varchar(255) DEFAULT NULL,\\n  `lastName` varchar(255) DEFAULT NULL,\\n  `suffixName` varchar(255) DEFAULT NULL,\\n  `playerID` varchar(255) DEFAULT NULL,\\n  `draftFrom` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `tmID` (`tmID`,`draftYear`),\\n  CONSTRAINT `draft_ibfk_1` FOREIGN KEY (`tmID`, `draftYear`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de jugador estrella con las columnas de, identificación del jugador, apellido, nombre, identificación de la temporada, conferencia, identificación de la liga, juegos jugados, minutos, puntos, rebotes, rebotes, rebotes, asistencias, robos, bloqueos, pérdidas de balón, faltas personales, fg intentado, fg hecho, pies intentados, pies hechos, tres intentos, tres hechos",
      "output": "('player_allstar', 'CREATE TABLE `player_allstar` (\\n  `playerID` varchar(255) NOT NULL  `last_name` varchar(255) DEFAULT NULL,\\n  `first_name` varchar(255) DEFAULT NULL,\\n  `season_id` int(11) NOT NULL,\\n  `conference` varchar(255) DEFAULT NULL,\\n  `league_id` varchar(255) DEFAULT NULL,\\n  `games_played` int(11) DEFAULT NULL,\\n  `minutes` int(11) DEFAULT NULL,\\n  `points` int(11) DEFAULT NULL,\\n  `o_rebounds` int(11) DEFAULT NULL,\\n  `d_rebounds` int(11) DEFAULT NULL,\\n  `rebounds` int(11) DEFAULT NULL,\\n  `assists` int(11) DEFAULT NULL,\\n  `steals` int(11) DEFAULT NULL,\\n  `blocks` int(11) DEFAULT NULL,\\n  `turnovers` int(11) DEFAULT NULL,\\n  `personal_fouls` int(11) DEFAULT NULL,\\n  `fg_attempted` int(11) DEFAULT NULL,\\n  `fg_made` int(11) DEFAULT NULL,\\n  `ft_attempted` int(11) DEFAULT NULL,\\n  `ft_made` int(11) DEFAULT NULL,\\n  `three_attempted` int(11) DEFAULT NULL,\\n  `three_made` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`season_id`),\\n  KEY `player_id` (`playerID`),\\n  CONSTRAINT `player_allstar_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de jugadores con las columnas de, ID del jugador, uso Nombre, primer nombre, segundo nombre, apellido, nombre dado, nombre completo, sufijo de nombre, nombre Nick, pos, primera temporada, última temporada, altura, peso, universidad, universidad Otro, fecha de nacimiento, ciudad de nacimiento, Estado de nacimiento, país de nacimiento, escuela secundaria, ciudad de origen, estado de origen, país de origen, fecha de fallecimiento, raza",
      "output": "('players', 'CREATE TABLE `players` (\\n  `playerID` varchar(255) NOT NULL  `useFirst` varchar(255) DEFAULT NULL,\\n  `firstName` varchar(255) DEFAULT NULL,\\n  `middleName` varchar(255) DEFAULT NULL,\\n  `lastName` varchar(255) DEFAULT NULL,\\n  `nameGiven` varchar(255) DEFAULT NULL,\\n  `fullGivenName` varchar(255) DEFAULT NULL,\\n  `nameSuffix` varchar(255) DEFAULT NULL,\\n  `nameNick` varchar(255) DEFAULT NULL,\\n  `pos` varchar(255) DEFAULT NULL,\\n  `firstseason` int(11) DEFAULT NULL,\\n  `lastseason` int(11) DEFAULT NULL,\\n  `height` float DEFAULT NULL,\\n  `weight` int(11) DEFAULT NULL,\\n  `college` varchar(255) DEFAULT NULL,\\n  `collegeOther` varchar(255) DEFAULT NULL,\\n  `birthDate` date DEFAULT NULL,\\n  `birthCity` varchar(255) DEFAULT NULL,\\n  `birthState` varchar(255) DEFAULT NULL,\\n  `birthCountry` varchar(255) DEFAULT NULL,\\n  `highSchool` varchar(255) DEFAULT NULL,\\n  `hsCity` varchar(255) DEFAULT NULL,\\n  `hsState` varchar(255) DEFAULT NULL,\\n  `hsCountry` varchar(255) DEFAULT NULL,\\n  `deathDate` date DEFAULT NULL,\\n  `race` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de equipos de jugadores con las columnas de, id, id del jugador, año, stint, tm Id, lg Id, GP, GS, minutos, puntos, o rebotes, d rebotes, rebotes, asistencias, robos, bloqueos, pérdidas de balón, PF, fg intentado, fg hecho, ft intentado , ft Made, three Attempted, Three Made, Post G P, Post G S, Post Minutes, Post Points, Posto Rebounds, Postd Rebounds, Post Rebounds, Post Assists, Post Robs, Post Blocks, Post Turnovers, Post P F, Postfg Attempted, Postfg Realizado, Intento de postft, Realizado de postft, Intento de posttres, Realizado de posttres, nota",
      "output": "('players_teams', 'CREATE TABLE `players_teams` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `playerID` varchar(255) NOT NULL,\\n  `year` int(11) DEFAULT NULL,\\n  `stint` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `GS` int(11) DEFAULT NULL,\\n  `minutes` int(11) DEFAULT NULL,\\n  `points` int(11) DEFAULT NULL,\\n  `oRebounds` int(11) DEFAULT NULL,\\n  `dRebounds` int(11) DEFAULT NULL,\\n  `rebounds` int(11) DEFAULT NULL,\\n  `assists` int(11) DEFAULT NULL,\\n  `steals` int(11) DEFAULT NULL,\\n  `blocks` int(11) DEFAULT NULL,\\n  `turnovers` int(11) DEFAULT NULL,\\n  `PF` int(11) DEFAULT NULL,\\n  `fgAttempted` int(11) DEFAULT NULL,\\n  `fgMade` int(11) DEFAULT NULL,\\n  `ftAttempted` int(11) DEFAULT NULL,\\n  `ftMade` int(11) DEFAULT NULL,\\n  `threeAttempted` int(11) DEFAULT NULL,\\n  `threeMade` int(11) DEFAULT NULL,\\n  `PostGP` int(11) DEFAULT NULL,\\n  `PostGS` int(11) DEFAULT NULL,\\n  `PostMinutes` int(11) DEFAULT NULL,\\n  `PostPoints` int(11) DEFAULT NULL,\\n  `PostoRebounds` int(11) DEFAULT NULL,\\n  `PostdRebounds` int(11) DEFAULT NULL,\\n  `PostRebounds` int(11) DEFAULT NULL,\\n  `PostAssists` int(11) DEFAULT NULL,\\n  `PostSteals` int(11) DEFAULT NULL,\\n  `PostBlocks` int(11) DEFAULT NULL,\\n  `PostTurnovers` int(11) DEFAULT NULL,\\n  `PostPF` int(11) DEFAULT NULL,\\n  `PostfgAttempted` int(11) DEFAULT NULL,\\n  `PostfgMade` int(11) DEFAULT NULL,\\n  `PostftAttempted` int(11) DEFAULT NULL,\\n  `PostftMade` int(11) DEFAULT NULL,\\n  `PostthreeAttempted` int(11) DEFAULT NULL,\\n  `PostthreeMade` int(11) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `playerID` (`playerID`),\\n  KEY `year` (`year`,`tmID`),\\n  KEY `tmID` (`tmID`,`year`),\\n  KEY `tmID_2` (`tmID`,`year`),\\n  KEY `tmID_3` (`tmID`,`year`),\\n  KEY `fgAttempted` (`fgAttempted`),\\n  KEY `fgAttempted_2` (`fgAttempted`),\\n  CONSTRAINT `players_teams_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `players_teams_ibfk_2` FOREIGN KEY (`tmID`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=23752 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de publicación de la serie con las columnas de, id, año, ronda, serie, tm Id Winner, lg Id Winner, tm Id Loser, lg Id Loser, W, L",
      "output": "('series_post', 'CREATE TABLE `series_post` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `year` int(11) DEFAULT NULL,\\n  `round` varchar(255) DEFAULT NULL,\\n  `series` varchar(255) DEFAULT NULL,\\n  `tmIDWinner` varchar(255) DEFAULT NULL,\\n  `lgIDWinner` varchar(255) DEFAULT NULL,\\n  `tmIDLoser` varchar(255) DEFAULT NULL,\\n  `lgIDLoser` varchar(255) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `tmIDWinner` (`tmIDWinner`,`year`) USING BTREE,\\n  KEY `tmIDLoser` (`tmIDLoser`,`year`) USING BTREE,\\n  CONSTRAINT `series_post_ibfk_1` FOREIGN KEY (`tmIDWinner`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `series_post_ibfk_2` FOREIGN KEY (`tmIDLoser`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=776 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de equipos con las columnas de, año, lg Id, tm Id, franch Id, conf Id, div Id, rango, conf Rank, playoff, nombre, o fgm, o fga, o ftm, o fta, o pm, o pa, o oreb, o dreb , o reb, o asts, o pf, o stl, o to, o blk, o pts, d fgm, d fga, d ftm, d fta, d pm, d pa, d oreb, d dreb, d reb, d ass, d pf, d stl, d to, d blk, d pts, o tm Rebound, d tm Rebound, home Won, home Lost, away Won, away Lost, neut Won, neut Loss, conf Won, conf Loss, div Won, div Loss, ritmo, ganado, perdido, juegos, min, arena, asistencia, bbtm Id",
      "output": "('teams', 'CREATE TABLE `teams` (\\n  `year` int(11) NOT NULL  `lgID` varchar(255) DEFAULT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `franchID` varchar(255) DEFAULT NULL,\\n  `confID` varchar(255) DEFAULT NULL,\\n  `divID` varchar(255) DEFAULT NULL,\\n  `rank` int(11) DEFAULT NULL,\\n  `confRank` int(11) DEFAULT NULL,\\n  `playoff` varchar(255) DEFAULT NULL,\\n  `name` varchar(255) DEFAULT NULL,\\n  `o_fgm` int(11) DEFAULT NULL,\\n  `o_fga` int(11) DEFAULT NULL,\\n  `o_ftm` int(11) DEFAULT NULL,\\n  `o_fta` int(11) DEFAULT NULL,\\n  `o_3pm` int(11) DEFAULT NULL,\\n  `o_3pa` int(11) DEFAULT NULL,\\n  `o_oreb` int(11) DEFAULT NULL,\\n  `o_dreb` int(11) DEFAULT NULL,\\n  `o_reb` int(11) DEFAULT NULL,\\n  `o_asts` int(11) DEFAULT NULL,\\n  `o_pf` int(11) DEFAULT NULL,\\n  `o_stl` int(11) DEFAULT NULL,\\n  `o_to` int(11) DEFAULT NULL,\\n  `o_blk` int(11) DEFAULT NULL,\\n  `o_pts` int(11) DEFAULT NULL,\\n  `d_fgm` int(11) DEFAULT NULL,\\n  `d_fga` int(11) DEFAULT NULL,\\n  `d_ftm` int(11) DEFAULT NULL,\\n  `d_fta` int(11) DEFAULT NULL,\\n  `d_3pm` int(11) DEFAULT NULL,\\n  `d_3pa` int(11) DEFAULT NULL,\\n  `d_oreb` int(11) DEFAULT NULL,\\n  `d_dreb` int(11) DEFAULT NULL,\\n  `d_reb` int(11) DEFAULT NULL,\\n  `d_asts` int(11) DEFAULT NULL,\\n  `d_pf` int(11) DEFAULT NULL,\\n  `d_stl` int(11) DEFAULT NULL,\\n  `d_to` int(11) DEFAULT NULL,\\n  `d_blk` int(11) DEFAULT NULL,\\n  `d_pts` int(11) DEFAULT NULL,\\n  `o_tmRebound` int(11) DEFAULT NULL,\\n  `d_tmRebound` int(11) DEFAULT NULL,\\n  `homeWon` int(11) DEFAULT NULL,\\n  `homeLost` int(11) DEFAULT NULL,\\n  `awayWon` int(11) DEFAULT NULL,\\n  `awayLost` int(11) DEFAULT NULL,\\n  `neutWon` int(11) DEFAULT NULL,\\n  `neutLoss` int(11) DEFAULT NULL,\\n  `confWon` int(11) DEFAULT NULL,\\n  `confLoss` int(11) DEFAULT NULL,\\n  `divWon` int(11) DEFAULT NULL,\\n  `divLoss` int(11) DEFAULT NULL,\\n  `pace` int(11) DEFAULT NULL,\\n  `won` int(11) DEFAULT NULL,\\n  `lost` int(11) DEFAULT NULL,\\n  `games` int(11) DEFAULT NULL,\\n  `min` int(11) DEFAULT NULL,\\n  `arena` varchar(255) DEFAULT NULL,\\n  `attendance` int(11) DEFAULT NULL,\\n  `bbtmID` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`year`,`tmID`),\\n  KEY `tmID` (`tmID`),\\n  KEY `tmID_2` (`tmID`,`year`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premia a los jugadores con las columnas de, ID de jugador, premio, año, ID de LG, nota, pos, nombre",
      "output": "('awards_players', 'CREATE TABLE `awards_players` (\\n  `playerID` varchar(255) DEFAULT NULL  `award` varchar(255) DEFAULT NULL,\\n  `year` int(11) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  `pos` varchar(255) DEFAULT NULL,\\n  `name` varchar(255) DEFAULT NULL,\\n  KEY `awards_players_playerID` (`playerID`) USING BTREE,\\n  CONSTRAINT `awards_players_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`bioID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de entrenadores con las columnas de, Id. de entrenador, Nombre completo, año, Id. de tm, Id. de lg, período, ganado, perdido, victorias posteriores, pérdidas posteriores, jugador Entrenador",
      "output": "('coaches', 'CREATE TABLE `coaches` (\\n  `coachID` varchar(255) NOT NULL  `fullName` varchar(255) DEFAULT NULL,\\n  `year` int(11) NOT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `stint` int(11) NOT NULL,\\n  `won` int(11) DEFAULT NULL,\\n  `lost` int(11) DEFAULT NULL,\\n  `post_wins` int(11) DEFAULT NULL,\\n  `post_losses` int(11) DEFAULT NULL,\\n  `playerCoach` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`coachID`,`year`,`tmID`,`stint`),\\n  KEY `coaches_tmID` (`tmID`,`year`) USING BTREE,\\n  CONSTRAINT `coaches_ibfk_1` FOREIGN KEY (`tmID`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de reclutar con las columnas de, draft Year, draft Round, draft Selection, draft Overall, tm Id, nombre, apellido, nombre completo, sufijo Nombre, player Id, draft From, lg Id, jugado Pro, notas, selección de ruta",
      "output": "('draft', 'CREATE TABLE `draft` (\\n  `draftYear` int(11) DEFAULT NULL  `draftRound` int(11) DEFAULT NULL,\\n  `draftSelection` int(11) DEFAULT NULL,\\n  `draftOverall` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `firstName` varchar(255) DEFAULT NULL,\\n  `lastName` varchar(255) DEFAULT NULL,\\n  `fullName` varchar(255) DEFAULT NULL,\\n  `suffixName` varchar(255) DEFAULT NULL,\\n  `playerID` varchar(255) DEFAULT NULL,\\n  `draftFrom` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `playedPro` varchar(255) DEFAULT NULL,\\n  `notes` varchar(255) DEFAULT NULL,\\n  `pickRoute` varchar(255) DEFAULT NULL,\\n  KEY `draft_tmID` (`tmID`,`draftYear`) USING BTREE,\\n  CONSTRAINT `draft_ibfk_1` FOREIGN KEY (`tmID`, `draftYear`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de jugadores con las columnas de, bio ID, primer nombre, segundo nombre, apellido, nombre dado, nombre completo, casado Nombre, nombre Nick, pos, primera temporada, última temporada, altura, peso, universidad, universidad Otro, fecha de nacimiento, ciudad de nacimiento, estado de nacimiento, país de nacimiento, escuela secundaria, ciudad de origen, estado de origen, país de origen, fecha de fallecimiento",
      "output": "('players', 'CREATE TABLE `players` (\\n  `bioID` varchar(255) NOT NULL  `firstName` varchar(255) DEFAULT NULL,\\n  `middleName` varchar(255) DEFAULT NULL,\\n  `lastName` varchar(255) DEFAULT NULL,\\n  `nameGiven` varchar(255) DEFAULT NULL,\\n  `fullGivenName` varchar(255) DEFAULT NULL,\\n  `marriedName` varchar(255) DEFAULT NULL,\\n  `nameNick` varchar(255) DEFAULT NULL,\\n  `pos` varchar(255) DEFAULT NULL,\\n  `firstseason` int(11) DEFAULT NULL,\\n  `lastseason` int(11) DEFAULT NULL,\\n  `height` float DEFAULT NULL,\\n  `weight` int(11) DEFAULT NULL,\\n  `college` varchar(255) DEFAULT NULL,\\n  `collegeOther` varchar(255) DEFAULT NULL,\\n  `birthDate` varchar(255) DEFAULT NULL,\\n  `birthCity` varchar(255) DEFAULT NULL,\\n  `birthState` varchar(255) DEFAULT NULL,\\n  `birthCountry` varchar(255) DEFAULT NULL,\\n  `highSchool` varchar(255) DEFAULT NULL,\\n  `hsCity` varchar(255) DEFAULT NULL,\\n  `hsState` varchar(255) DEFAULT NULL,\\n  `hsCountry` varchar(255) DEFAULT NULL,\\n  `deathDate` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`bioID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de equipos de jugadores con las columnas de, ID del jugador, nombre del jugador, año, stint, tm Id, lg Id, GP, GS, minutos, puntos, o rebotes, d rebotes, rebotes, asistencias, robos, bloqueos, pérdidas de balón, PF, fg intentado, fg hecho, ft Intentos, pies hechos, tres intentos, tres hechos, dq, Publicar G P, Publicar G S, Publicar minutos, Publicar puntos, Publicar rebotes, Publicar rebotes, Publicar rebotes, Publicar asistencias, Publicar robos, Publicar bloqueos, Publicar pérdidas de balón, Publicar PF, Postfg Intento, Postfg hecho, Postft Intento, Postft hecho, Posttres Intento, Posttres hecho, Post D Q",
      "output": "('players_teams', 'CREATE TABLE `players_teams` (\\n  `playerID` varchar(255) DEFAULT NULL  `playerName` varchar(255) DEFAULT NULL,\\n  `year` int(11) DEFAULT NULL,\\n  `stint` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `GS` int(11) DEFAULT NULL,\\n  `minutes` int(11) DEFAULT NULL,\\n  `points` int(11) DEFAULT NULL,\\n  `oRebounds` int(11) DEFAULT NULL,\\n  `dRebounds` int(11) DEFAULT NULL,\\n  `rebounds` int(11) DEFAULT NULL,\\n  `assists` int(11) DEFAULT NULL,\\n  `steals` int(11) DEFAULT NULL,\\n  `blocks` int(11) DEFAULT NULL,\\n  `turnovers` int(11) DEFAULT NULL,\\n  `PF` int(11) DEFAULT NULL,\\n  `fgAttempted` int(11) DEFAULT NULL,\\n  `fgMade` int(11) DEFAULT NULL,\\n  `ftAttempted` int(11) DEFAULT NULL,\\n  `ftMade` int(11) DEFAULT NULL,\\n  `threeAttempted` int(11) DEFAULT NULL,\\n  `threeMade` int(11) DEFAULT NULL,\\n  `dq` int(11) DEFAULT NULL,\\n  `PostGP` int(11) DEFAULT NULL,\\n  `PostGS` int(11) DEFAULT NULL,\\n  `PostMinutes` int(11) DEFAULT NULL,\\n  `PostPoints` int(11) DEFAULT NULL,\\n  `PostoRebounds` int(11) DEFAULT NULL,\\n  `PostdRebounds` int(11) DEFAULT NULL,\\n  `PostRebounds` int(11) DEFAULT NULL,\\n  `PostAssists` int(11) DEFAULT NULL,\\n  `PostSteals` int(11) DEFAULT NULL,\\n  `PostBlocks` int(11) DEFAULT NULL,\\n  `PostTurnovers` int(11) DEFAULT NULL,\\n  `PostPF` int(11) DEFAULT NULL,\\n  `PostfgAttempted` int(11) DEFAULT NULL,\\n  `PostfgMade` int(11) DEFAULT NULL,\\n  `PostftAttempted` int(11) DEFAULT NULL,\\n  `PostftMade` int(11) DEFAULT NULL,\\n  `PostthreeAttempted` int(11) DEFAULT NULL,\\n  `PostthreeMade` int(11) DEFAULT NULL,\\n  `PostDQ` int(11) DEFAULT NULL,\\n  KEY `players_teams_playerID` (`playerID`) USING BTREE,\\n  KEY `players_teams_tmID` (`tmID`,`year`) USING BTREE,\\n  CONSTRAINT `players_teams_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`bioID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `players_teams_ibfk_2` FOREIGN KEY (`tmID`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de publicación de la serie con las columnas de, año, ronda, serie, tm Id Winner, lg Id Winner, tm Id Loser, lg Id Loser, W, L",
      "output": "('series_post', 'CREATE TABLE `series_post` (\\n  `year` int(11) DEFAULT NULL  `round` varchar(255) DEFAULT NULL,\\n  `series` varchar(255) DEFAULT NULL,\\n  `tmIDWinner` varchar(255) DEFAULT NULL,\\n  `lgIDWinner` varchar(255) DEFAULT NULL,\\n  `tmIDLoser` varchar(255) DEFAULT NULL,\\n  `lgIDLoser` varchar(255) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  KEY `tmIDWinner` (`tmIDWinner`,`year`),\\n  KEY `tmIDLoser` (`tmIDLoser`,`year`),\\n  CONSTRAINT `series_post_ibfk_1` FOREIGN KEY (`tmIDWinner`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `series_post_ibfk_2` FOREIGN KEY (`tmIDLoser`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de equipos con las columnas de, año, lg Id, tm Id, franch Id, conf Id, div Id, rank, playoff, cabezas de serie, primera ronda, semifinales, finales, nombre, o fgm, o fga, o ftm, o fta, o pm, o pa , o oreb, o dreb, o reb, o asts, o pf, o stl, o to, o blk, o pts, d fgm, d fga, d ftm, d fta, d pm, d pa, d oreb, d dreb, d reb, d asts, d pf, d stl, d to, d blk, d pts, tm O R B, tm D R B, tm T R B, opptm O R B, opptm DR B, opptm T R B, ganado, perdido, GP, inicio W, local L, visitante W, visitante L, conf W, conf L, min, asistir, arena",
      "output": "('teams', 'CREATE TABLE `teams` (\\n  `year` int(11) NOT NULL  `lgID` varchar(255) DEFAULT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `franchID` varchar(255) DEFAULT NULL,\\n  `confID` varchar(255) DEFAULT NULL,\\n  `divID` varchar(255) DEFAULT NULL,\\n  `rank` int(11) DEFAULT NULL,\\n  `playoff` varchar(255) DEFAULT NULL,\\n  `seeded` int(11) DEFAULT NULL,\\n  `firstRound` varchar(255) DEFAULT NULL,\\n  `semis` varchar(255) DEFAULT NULL,\\n  `finals` varchar(255) DEFAULT NULL,\\n  `name` varchar(255) DEFAULT NULL,\\n  `o_fgm` int(11) DEFAULT NULL,\\n  `o_fga` int(11) DEFAULT NULL,\\n  `o_ftm` int(11) DEFAULT NULL,\\n  `o_fta` int(11) DEFAULT NULL,\\n  `o_3pm` int(11) DEFAULT NULL,\\n  `o_3pa` int(11) DEFAULT NULL,\\n  `o_oreb` int(11) DEFAULT NULL,\\n  `o_dreb` int(11) DEFAULT NULL,\\n  `o_reb` int(11) DEFAULT NULL,\\n  `o_asts` int(11) DEFAULT NULL,\\n  `o_pf` int(11) DEFAULT NULL,\\n  `o_stl` int(11) DEFAULT NULL,\\n  `o_to` int(11) DEFAULT NULL,\\n  `o_blk` int(11) DEFAULT NULL,\\n  `o_pts` int(11) DEFAULT NULL,\\n  `d_fgm` int(11) DEFAULT NULL,\\n  `d_fga` int(11) DEFAULT NULL,\\n  `d_ftm` int(11) DEFAULT NULL,\\n  `d_fta` int(11) DEFAULT NULL,\\n  `d_3pm` int(11) DEFAULT NULL,\\n  `d_3pa` int(11) DEFAULT NULL,\\n  `d_oreb` int(11) DEFAULT NULL,\\n  `d_dreb` int(11) DEFAULT NULL,\\n  `d_reb` int(11) DEFAULT NULL,\\n  `d_asts` int(11) DEFAULT NULL,\\n  `d_pf` int(11) DEFAULT NULL,\\n  `d_stl` int(11) DEFAULT NULL,\\n  `d_to` int(11) DEFAULT NULL,\\n  `d_blk` int(11) DEFAULT NULL,\\n  `d_pts` int(11) DEFAULT NULL,\\n  `tmORB` int(11) DEFAULT NULL,\\n  `tmDRB` int(11) DEFAULT NULL,\\n  `tmTRB` int(11) DEFAULT NULL,\\n  `opptmORB` int(11) DEFAULT NULL,\\n  `opptmDRB` int(11) DEFAULT NULL,\\n  `opptmTRB` int(11) DEFAULT NULL,\\n  `won` int(11) DEFAULT NULL,\\n  `lost` int(11) DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `homeW` int(11) DEFAULT NULL,\\n  `homeL` int(11) DEFAULT NULL,\\n  `awayW` int(11) DEFAULT NULL,\\n  `awayL` int(11) DEFAULT NULL,\\n  `confW` int(11) DEFAULT NULL,\\n  `confL` int(11) DEFAULT NULL,\\n  `min` int(11) DEFAULT NULL,\\n  `attend` int(11) DEFAULT NULL,\\n  `arena` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`tmID`,`year`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de publicación de equipos con las columnas de, año, tm Id, lg Id, W, L",
      "output": "('teams_post', 'CREATE TABLE `teams_post` (\\n  `year` int(11) DEFAULT NULL  `tmID` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  KEY `teams_post_tmID` (`tmID`,`year`) USING BTREE,\\n  CONSTRAINT `teams_post_ibfk_1` FOREIGN KEY (`tmID`, `year`) REFERENCES `teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de DIRECCIÓN con las columnas de, ID DE DIRECCIÓN, LÍNEA DE DIRECCIÓN, LÍNEA DE DIRECCIÓN, CIUDAD, ID DE PROVINCIA DEL ESTADO, CÓDIGO POSTAL, ASIGNACIÓN ESPACIAL, ID DE FILA, FECHA DE MODIFICACIÓN",
      "output": "('ADDRESS', \"CREATE TABLE `ADDRESS` (\\n  `ADDRESSID` int(11) NOT NULL COMMENT 'Primary key for Address records.'  `ADDRESSLINE1` varchar(60) NOT NULL COMMENT 'First street address line.',\\n  `ADDRESSLINE2` varchar(60) DEFAULT NULL COMMENT 'Second street address line.',\\n  `CITY` varchar(30) NOT NULL COMMENT 'Name of the city.',\\n  `STATEPROVINCEID` int(11) NOT NULL COMMENT 'Unique identification number for the state or province. Foreign key to StateProvince table.',\\n  `POSTALCODE` varchar(15) NOT NULL COMMENT 'Postal code for the street address.',\\n  `SPATIALLOCATION` geometry DEFAULT NULL COMMENT 'Latitude and longitude of this address.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ADDRESSID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Street address information for customers, employees, and vendors.'\")"
    },
    {
      "input": "Una tabla de TIPO DE DIRECCIÓN con las columnas de, ID DE TIPO DE DIRECCIÓN, NOMBRE, ID DE FILA, FECHA DE MODIFICACIÓN",
      "output": "('ADDRESSTYPE', \"CREATE TABLE `ADDRESSTYPE` (\\n  `ADDRESSTYPEID` int(11) NOT NULL COMMENT 'Primary key for AddressType records.'  `NAME` varchar(100) NOT NULL COMMENT 'Address type description. For example, Billing, Home, or Shipping.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ADDRESSTYPEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Types of addresses stored in the Address table. '\")"
    },
    {
      "input": "Una tabla de TODOS LOS COMPLEMENTOS con las columnas de, NOMBRE DEL PLUGIN, VERSIÓN DEL PLUGIN, ESTADO DEL PLUGIN, TIPO DE PLUGIN, VERSIÓN DEL TIPO DE PLUGIN, BIBLIOTECA DE PLUGIN, VERSIÓN DE LA BIBLIOTECA DE PLUGIN, AUTOR DEL PLUGIN, DESCRIPCIÓN DEL PLUGIN, LICENCIA DEL PLUGIN, OPCIÓN DE CARGA, VENCIMIENTO DEL PLUGIN, VERSIÓN DE AUTORIZACIÓN DEL PLUGIN",
      "output": "('ALL_PLUGINS', \"CREATE TABLE `ALL_PLUGINS` (\\n  `PLUGIN_NAME` varchar(64) NOT NULL DEFAULT ''  `PLUGIN_VERSION` varchar(20) NOT NULL DEFAULT '',\\n  `PLUGIN_STATUS` varchar(16) NOT NULL DEFAULT '',\\n  `PLUGIN_TYPE` varchar(80) NOT NULL DEFAULT '',\\n  `PLUGIN_TYPE_VERSION` varchar(20) NOT NULL DEFAULT '',\\n  `PLUGIN_LIBRARY` varchar(64) DEFAULT NULL,\\n  `PLUGIN_LIBRARY_VERSION` varchar(20) DEFAULT NULL,\\n  `PLUGIN_AUTHOR` varchar(64) DEFAULT NULL,\\n  `PLUGIN_DESCRIPTION` longtext DEFAULT NULL,\\n  `PLUGIN_LICENSE` varchar(80) NOT NULL DEFAULT '',\\n  `LOAD_OPTION` varchar(64) NOT NULL DEFAULT '',\\n  `PLUGIN_MATURITY` varchar(12) NOT NULL DEFAULT '',\\n  `PLUGIN_AUTH_VERSION` varchar(80) DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=1208488 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de FUNCIONES APLICABLES con las columnas de, CONCESIONARIO, NOMBRE DEL ROL, ES OTORGABLE",
      "output": "('APPLICABLE_ROLES', \"CREATE TABLE `APPLICABLE_ROLES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `ROLE_NAME` varchar(128) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=2216185 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de VERSIÓN AWBUILD con las columnas de, ID DE INFORMACIÓN DEL SISTEMA, VERSIÓN DE LA BASE DE DATOS, FECHA DE LA VERSIÓN, FECHA DE MODIFICACIÓN",
      "output": "('AWBUILDVERSION', \"CREATE TABLE `AWBUILDVERSION` (\\n  `SYSTEMINFORMATIONID` tinyint(3) unsigned NOT NULL COMMENT 'Primary key for AWBuildVersion records.'  `DATABASE VERSION` varchar(25) NOT NULL COMMENT 'Version number of the database in 9.yy.mm.dd.00 format.',\\n  `VERSIONDATE` datetime NOT NULL COMMENT 'Date and time the record was last updated.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SYSTEMINFORMATIONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Current version number of the AdventureWorks 2014 sample database. '\")"
    },
    {
      "input": "Una tabla de Versión de construcción A W con las columnas de, ID de información del sistema, versión de la base de datos, fecha de la versión, fecha de modificación",
      "output": "('AWBuildVersion', \"CREATE TABLE `AWBuildVersion` (\\n  `SystemInformationID` tinyint(3) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary key for AWBuildVersion records.'  `Database Version` varchar(25) NOT NULL COMMENT 'Version number of the database in 9.yy.mm.dd.00 format.',\\n  `VersionDate` datetime NOT NULL COMMENT 'Date and time the record was last updated.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SystemInformationID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Current version number of the AdventureWorks 2014 sample database. '\")"
    },
    {
      "input": "Una tabla de Dirección con las columnas de, Id. de dirección, Línea de dirección, Línea de dirección, Ciudad, Id. de provincia estatal, Código postal, Ubicación espacial, rowguid, Fecha de modificación",
      "output": "('Address', \"CREATE TABLE `Address` (\\n  `AddressID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Address records.'  `AddressLine1` varchar(60) NOT NULL COMMENT 'First street address line.',\\n  `AddressLine2` varchar(60) DEFAULT NULL COMMENT 'Second street address line.',\\n  `City` varchar(30) NOT NULL COMMENT 'Name of the city.',\\n  `StateProvinceID` int(11) NOT NULL COMMENT 'Unique identification number for the state or province. Foreign key to StateProvince table.',\\n  `PostalCode` varchar(15) NOT NULL COMMENT 'Postal code for the street address.',\\n  `SpatialLocation` geometry DEFAULT NULL COMMENT 'Latitude and longitude of this address.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`AddressID`),\\n  UNIQUE KEY `AK_Address_rowguid` (`rowguid`),\\n  UNIQUE KEY `IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_Post1` (`AddressLine1`,`AddressLine2`,`City`,`StateProvinceID`,`PostalCode`),\\n  KEY `IX_Address_StateProvinceID` (`StateProvinceID`),\\n  KEY `GUID_Address` (`rowguid`),\\n  CONSTRAINT `FK_Address_StateProvince_StateProvinceID` FOREIGN KEY (`StateProvinceID`) REFERENCES `StateProvince` (`StateProvinceID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Street address information for customers, employees, and vendors.'\")"
    },
    {
      "input": "Una tabla de Tipo de dirección con las columnas de, ID de tipo de dirección, nombre, rowguid, fecha de modificación",
      "output": "('AddressType', \"CREATE TABLE `AddressType` (\\n  `AddressTypeID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for AddressType records.'  `Name` varchar(100) NOT NULL COMMENT 'Address type description. For example, Billing, Home, or Shipping.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`AddressTypeID`),\\n  UNIQUE KEY `AK_AddressType_rowguid` (`rowguid`),\\n  UNIQUE KEY `AK_AddressType_Name` (`Name`),\\n  KEY `GUID_AddressType` (`rowguid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Types of addresses stored in the Address table. '\")"
    },
    {
      "input": "Una tabla de Atributos con las columnas de, ID de atributo, nombre de atributo",
      "output": "('Attributes', 'CREATE TABLE `Attributes` (\\n  `attribute_id` int(11) NOT NULL AUTO_INCREMENT  `attribute_name` varchar(280) DEFAULT NULL,\\n  PRIMARY KEY (`attribute_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de BILLOFMATERIALES con las columnas de, ID DE FACTURA DE MATERIAL, ID DE ENSAMBLAJE DEL PRODUCTO, ID DE COMPONENTE, FECHA DE INICIO, FECHA DE FINALIZACIÓN, CÓDIGO DE MEDIDA DE LA UNIDAD, NIVEL DE BOML, CANTIDAD POR ENSAMBLAJE, FECHA DE MODIFICACIÓN",
      "output": "('BILLOFMATERIALS', \"CREATE TABLE `BILLOFMATERIALS` (\\n  `BILLOFMATERIALSID` int(11) NOT NULL COMMENT 'Primary key for BillOfMaterials records.'  `PRODUCTASSEMBLYID` int(11) DEFAULT NULL COMMENT 'Parent product identification number. Foreign key to Product.ProductID.',\\n  `COMPONENTID` int(11) NOT NULL COMMENT 'Component identification number. Foreign key to Product.ProductID.',\\n  `STARTDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date the component started being used in the assembly item.',\\n  `ENDDATE` datetime DEFAULT NULL COMMENT 'Date the component stopped being used in the assembly item.',\\n  `UNITMEASURECODE` char(3) NOT NULL COMMENT 'Standard code identifying the unit of measure for the quantity.',\\n  `BOMLEVEL` smallint(6) NOT NULL COMMENT 'Indicates the depth the component is from its parent (AssemblyID).',\\n  `PERASSEMBLYQTY` decimal(8,2) NOT NULL DEFAULT 1.00 COMMENT 'Quantity of the component needed to create the assembly.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BILLOFMATERIALSID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.'\")"
    },
    {
      "input": "Una tabla de ENTIDAD DE NEGOCIOS con las columnas de, ID DE ENTIDAD DE NEGOCIO, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('BUSINESSENTITY', \"CREATE TABLE `BUSINESSENTITY` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key for all customers, vendors, and employees.'  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Source of the ID that connects vendors, customers, and employees with address and contact information.'\")"
    },
    {
      "input": "Una tabla de DIRECCIÓN DE LA ENTIDAD EMPRESARIAL con las columnas de, ID DE ENTIDAD DE NEGOCIO, ID DE DIRECCIÓN, ID DE TIPO DE DIRECCIÓN, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('BUSINESSENTITYADDRESS', \"CREATE TABLE `BUSINESSENTITYADDRESS` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.'  `ADDRESSID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Address.AddressID.',\\n  `ADDRESSTYPEID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to AddressType.AddressTypeID.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`,`ADDRESSID`,`ADDRESSTYPEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping customers, vendors, and employees to their addresses.'\")"
    },
    {
      "input": "Una tabla de EMPRESAENTIDADCONTACTO con las columnas de, ID DE ENTIDAD DE NEGOCIO, ID DE PERSONA, ID DE TIPO DE CONTACTO, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('BUSINESSENTITYCONTACT', \"CREATE TABLE `BUSINESSENTITYCONTACT` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.'  `PERSONID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Person.BusinessEntityID.',\\n  `CONTACTTYPEID` int(11) NOT NULL COMMENT 'Primary key.  Foreign key to ContactType.ContactTypeID.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`,`PERSONID`,`CONTACTTYPEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping stores, vendors, and employees to people'\")"
    },
    {
      "input": "Una tabla de Lista de materiales con las columnas de, Id. de lista de materiales, Id. de ensamblaje de producto, Id. de componente, Fecha de inicio, Fecha de finalización, Código de medida de unidad, Nivel de lista de materiales, Cantidad por ensamblaje, Fecha de modificación",
      "output": "('BillOfMaterials', \"CREATE TABLE `BillOfMaterials` (\\n  `BillOfMaterialsID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for BillOfMaterials records.'  `ProductAssemblyID` int(11) DEFAULT NULL COMMENT 'Parent product identification number. Foreign key to Product.ProductID.',\\n  `ComponentID` int(11) NOT NULL COMMENT 'Component identification number. Foreign key to Product.ProductID.',\\n  `StartDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date the component started being used in the assembly item.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'Date the component stopped being used in the assembly item.',\\n  `UnitMeasureCode` char(3) NOT NULL COMMENT 'Standard code identifying the unit of measure for the quantity.',\\n  `BOMLevel` smallint(6) NOT NULL COMMENT 'Indicates the depth the component is from its parent (AssemblyID).',\\n  `PerAssemblyQty` decimal(8,2) NOT NULL DEFAULT 1.00 COMMENT 'Quantity of the component needed to create the assembly.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BillOfMaterialsID`),\\n  UNIQUE KEY `AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate` (`ProductAssemblyID`,`ComponentID`,`StartDate`),\\n  KEY `IX_BillOfMaterials_UnitMeasureCode` (`UnitMeasureCode`),\\n  KEY `FK_BillOfMaterials_Product_ComponentID` (`ComponentID`),\\n  CONSTRAINT `FK_BillOfMaterials_Product_ComponentID` FOREIGN KEY (`ComponentID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BillOfMaterials_Product_ProductAssemblyID` FOREIGN KEY (`ProductAssemblyID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BillOfMaterials_UnitMeasure_UnitMeasureCode` FOREIGN KEY (`UnitMeasureCode`) REFERENCES `UnitMeasure` (`UnitMeasureCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.'\")"
    },
    {
      "input": "Una tabla de Negocio con las columnas de, identificación comercial, dirección completa, activo, categorías, ciudad, recuento de reseñas, nombre comercial, vecindarios, latitud, longitud, estado, estrellas",
      "output": "('Business', \"CREATE TABLE `Business` (\\n  `business_id` varchar(30) NOT NULL DEFAULT ''  `full_address` varchar(200) DEFAULT NULL,\\n  `active` varchar(10) DEFAULT NULL,\\n  `categories` varchar(200) DEFAULT NULL,\\n  `city` varchar(30) DEFAULT NULL,\\n  `review_count` int(11) DEFAULT NULL,\\n  `business_name` varchar(100) DEFAULT NULL,\\n  `neighborhoods` varchar(200) DEFAULT NULL,\\n  `latitude` double DEFAULT NULL,\\n  `longitude` double DEFAULT NULL,\\n  `state` varchar(5) DEFAULT NULL,\\n  `stars` double DEFAULT NULL,\\n  PRIMARY KEY (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de Entidad de negocios con las columnas de, Id. de entidad comercial, rowguid, Fecha de modificación",
      "output": "('BusinessEntity', \"CREATE TABLE `BusinessEntity` (\\n  `BusinessEntityID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for all customers, vendors, and employees.'  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_BusinessEntity_rowguid` (`rowguid`),\\n  KEY `GUID_BusinessEntity` (`rowguid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Source of the ID that connects vendors, customers, and employees with address and contact information.'\")"
    },
    {
      "input": "Una tabla de Dirección de la entidad comercial con las columnas de, Id. de entidad comercial, Id. de dirección, Id. de tipo de dirección, rowguid, Fecha de modificación",
      "output": "('BusinessEntityAddress', \"CREATE TABLE `BusinessEntityAddress` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.'  `AddressID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Address.AddressID.',\\n  `AddressTypeID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to AddressType.AddressTypeID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`AddressID`,`AddressTypeID`),\\n  UNIQUE KEY `AK_BusinessEntityAddress_rowguid` (`rowguid`),\\n  KEY `IX_BusinessEntityAddress_AddressID` (`AddressID`),\\n  KEY `IX_BusinessEntityAddress_AddressTypeID` (`AddressTypeID`),\\n  KEY `GUID_BusinessEntityAddress` (`rowguid`),\\n  CONSTRAINT `FK_BusinessEntityAddress_AddressType_AddressTypeID` FOREIGN KEY (`AddressTypeID`) REFERENCES `AddressType` (`AddressTypeID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BusinessEntityAddress_Address_AddressID` FOREIGN KEY (`AddressID`) REFERENCES `Address` (`AddressID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping customers, vendors, and employees to their addresses.'\")"
    },
    {
      "input": "Una tabla de Contacto de la entidad comercial con las columnas de, Id. de entidad comercial, Id. de persona, Id. de tipo de contacto, rowguid, Fecha de modificación",
      "output": "('BusinessEntityContact', \"CREATE TABLE `BusinessEntityContact` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.'  `PersonID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Person.BusinessEntityID.',\\n  `ContactTypeID` int(11) NOT NULL COMMENT 'Primary key.  Foreign key to ContactType.ContactTypeID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`PersonID`,`ContactTypeID`),\\n  UNIQUE KEY `AK_BusinessEntityContact_rowguid` (`rowguid`),\\n  KEY `IX_BusinessEntityContact_PersonID` (`PersonID`),\\n  KEY `IX_BusinessEntityContact_ContactTypeID` (`ContactTypeID`),\\n  KEY `GUID_BusinessEntityContact` (`rowguid`),\\n  CONSTRAINT `FK_BusinessEntityContact_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BusinessEntityContact_ContactType_ContactTypeID` FOREIGN KEY (`ContactTypeID`) REFERENCES `ContactType` (`ContactTypeID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_BusinessEntityContact_Person_PersonID` FOREIGN KEY (`PersonID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping stores, vendors, and employees to people'\")"
    },
    {
      "input": "Una tabla de CONJUNTOS DE PERSONAJES con las columnas de, NOMBRE DEL CONJUNTO DE CARACTERES, NOMBRE DE CLASIFICACIÓN PREDETERMINADA, DESCRIPCIÓN, MAXLEN",
      "output": "('CHARACTER_SETS', \"CREATE TABLE `CHARACTER_SETS` (\\n  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT ''  `DEFAULT_COLLATE_NAME` varchar(32) NOT NULL DEFAULT '',\\n  `DESCRIPTION` varchar(60) NOT NULL DEFAULT '',\\n  `MAXLEN` bigint(3) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=5592405 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DE CLIENTES con las columnas de, CLIENTE, TOTAL DE CONEXIONES, CONEXIONES CONCURRENTES, TIEMPO CONECTADO, TIEMPO OCUPADO, TIEMPO DE CPU, BYTES RECIBIDOS, BYTES ENVIADOS, BINLOG BYTES ESCRITOS, FILAS LEÍDAS, FILAS ENVIADAS, FILAS ELIMINADAS, FILAS INSERTADAS, FILAS ACTUALIZADAS, SELECCIONAR COMANDOS, ACTUALIZAR COMANDOS, OTROS COMANDOS, COMMIT TRANSACCIONES, ROLLBACK TRANSACCIONES, CONEXIONES DENEGADAS, CONEXIONES PERDIDAS, ACCESO DENEGADO, CONSULTAS VACÍAS",
      "output": "('CLIENT_STATISTICS', \"CREATE TABLE `CLIENT_STATISTICS` (\\n  `CLIENT` varchar(64) NOT NULL DEFAULT ''  `TOTAL_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `CONCURRENT_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `CONNECTED_TIME` bigint(21) NOT NULL DEFAULT 0,\\n  `BUSY_TIME` double NOT NULL DEFAULT 0,\\n  `CPU_TIME` double NOT NULL DEFAULT 0,\\n  `BYTES_RECEIVED` bigint(21) NOT NULL DEFAULT 0,\\n  `BYTES_SENT` bigint(21) NOT NULL DEFAULT 0,\\n  `BINLOG_BYTES_WRITTEN` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_READ` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_SENT` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_DELETED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_INSERTED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_UPDATED` bigint(21) NOT NULL DEFAULT 0,\\n  `SELECT_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `UPDATE_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `OTHER_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `COMMIT_TRANSACTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `ROLLBACK_TRANSACTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `DENIED_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `LOST_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `ACCESS_DENIED` bigint(21) NOT NULL DEFAULT 0,\\n  `EMPTY_QUERIES` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=5804009 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de APERITIVOS con las columnas de, NOMBRE DE LA COLACIÓN, NOMBRE DEL CONJUNTO DE CARACTERES, ID, ES PREDETERMINADO, ESTÁ COMPILADO, CLASIFICADO",
      "output": "('COLLATIONS', \"CREATE TABLE `COLLATIONS` (\\n  `COLLATION_NAME` varchar(32) NOT NULL DEFAULT ''  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',\\n  `ID` bigint(11) NOT NULL DEFAULT 0,\\n  `IS_DEFAULT` varchar(3) NOT NULL DEFAULT '',\\n  `IS_COMPILED` varchar(3) NOT NULL DEFAULT '',\\n  `SORTLEN` bigint(3) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=9296466 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de APLICABILIDAD DEL CONJUNTO DE CARACTERES COLLATION con las columnas de, NOMBRE DE LA COLACIÓN, NOMBRE DEL CONJUNTO DE CARACTERES",
      "output": "('COLLATION_CHARACTER_SET_APPLICABILITY', \"CREATE TABLE `COLLATION_CHARACTER_SET_APPLICABILITY` (\\n  `COLLATION_NAME` varchar(32) NOT NULL DEFAULT ''  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=11012736 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de COLUMNAS con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, NOMBRE DE COLUMNA, POSICIÓN ORDINAL, COLUMNA PREDETERMINADA, ES ANULABLE, TIPO DE DATOS, LONGITUD MÁXIMA DE CARÁCTER, LONGITUD DE OCTETO DE CARÁCTER, PRECISIÓN NUMÉRICA, ESCALA NUMÉRICA, PRECISIÓN DE FECHA Y HORA, NOMBRE DEL CONJUNTO DE CARACTERES, NOMBRE DE COLACIÓN, COLUMNA TIPO, CLAVE DE COLUMNA, EXTRA, PRIVILEGIOS, COMENTARIO DE COLUMNA",
      "output": "('COLUMNS', \"CREATE TABLE `COLUMNS` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `ORDINAL_POSITION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `COLUMN_DEFAULT` longtext DEFAULT NULL,\\n  `IS_NULLABLE` varchar(3) NOT NULL DEFAULT '',\\n  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `CHARACTER_MAXIMUM_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `CHARACTER_OCTET_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `NUMERIC_PRECISION` bigint(21) unsigned DEFAULT NULL,\\n  `NUMERIC_SCALE` bigint(21) unsigned DEFAULT NULL,\\n  `DATETIME_PRECISION` bigint(21) unsigned DEFAULT NULL,\\n  `CHARACTER_SET_NAME` varchar(32) DEFAULT NULL,\\n  `COLLATION_NAME` varchar(32) DEFAULT NULL,\\n  `COLUMN_TYPE` longtext NOT NULL,\\n  `COLUMN_KEY` varchar(3) NOT NULL DEFAULT '',\\n  `EXTRA` varchar(27) NOT NULL DEFAULT '',\\n  `PRIVILEGES` varchar(80) NOT NULL DEFAULT '',\\n  `COLUMN_COMMENT` varchar(1024) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=358272 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de PRIVILEGIOS DE COLUMNA con las columnas de, CONCESIONARIO, CATÁLOGO DE MESA, ESQUEMA DE MESA, NOMBRE DE MESA, NOMBRE DE COLUMNA, TIPO DE PRIVILEGIO, ES OTORGABLE",
      "output": "('COLUMN_PRIVILEGES', \"CREATE TABLE `COLUMN_PRIVILEGES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=742303 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de TIPO DE CONTACTO con las columnas de, TIPO DE CONTACTO, NOMBRE, FECHA DE MODIFICACIÓN",
      "output": "('CONTACTTYPE', \"CREATE TABLE `CONTACTTYPE` (\\n  `CONTACTTYPEID` int(11) NOT NULL COMMENT 'Primary key for ContactType records.'  `NAME` varchar(100) NOT NULL COMMENT 'Contact type description.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CONTACTTYPEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the types of business entity contacts.'\")"
    },
    {
      "input": "Una tabla de CONTR con las columnas de, ICO, ROKVYS, MESVYS, ZORCHK, ZMCHARZA, ZMTELAKT, AKTPOZAM, ZMDIET, LEKCHOL, LKTLAK, ZMKOUR, POCCIG, PRACNES, SRDCE, HYPERT, CEVMOZ, DIAB, JINAONE, BOLHR, BODK HODN DOD, AÑO, HODN, AÑO, HODN , YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, HODN, YEAR, MASS, SYST, DIAST, TRIC , SUBSC, HYPERSD, HYPERS, HYPERD , HYPCHL, HYPTGL, CHLST, CHLSTMG, TRIGL, TRIGLMG, HDL, HDLMG, MOC, GLYKEMIE, KYSMOC, LDL",
      "output": "('CONTR', 'CREATE TABLE `CONTR` (\\n  `ICO` int(11) NOT NULL  `ROKVYS` int(11) DEFAULT NULL,\\n  `MESVYS` int(11) DEFAULT NULL,\\n  `PORADK` int(11) NOT NULL,\\n  `ZMCHARZA` int(11) DEFAULT NULL,\\n  `ZMTELAKT` int(11) DEFAULT NULL,\\n  `AKTPOZAM` int(11) DEFAULT NULL,\\n  `ZMDIET` int(11) DEFAULT NULL,\\n  `LEKCHOL` varchar(255) DEFAULT NULL,\\n  `LEKTLAK` int(11) DEFAULT NULL,\\n  `ZMKOUR` int(11) DEFAULT NULL,\\n  `POCCIG` int(11) DEFAULT NULL,\\n  `PRACNES` int(11) DEFAULT NULL,\\n  `SRDCE` varchar(255) DEFAULT NULL,\\n  `HYPERT` varchar(255) DEFAULT NULL,\\n  `CEVMOZ` varchar(255) DEFAULT NULL,\\n  `DIAB` varchar(255) DEFAULT NULL,\\n  `JINAONE` int(11) DEFAULT NULL,\\n  `BOLHR` int(11) DEFAULT NULL,\\n  `BOLDK` int(11) DEFAULT NULL,\\n  `DUSN` int(11) DEFAULT NULL,\\n  `HODNSK` int(11) DEFAULT NULL,\\n  `HODN0` int(11) DEFAULT NULL,\\n  `ROK0` int(11) DEFAULT NULL,\\n  `HODN1` varchar(255) DEFAULT NULL,\\n  `ROK1` varchar(255) DEFAULT NULL,\\n  `HODN2` varchar(255) DEFAULT NULL,\\n  `ROK2` varchar(255) DEFAULT NULL,\\n  `HODN3` varchar(255) DEFAULT NULL,\\n  `ROK3` varchar(255) DEFAULT NULL,\\n  `HODN4` varchar(255) DEFAULT NULL,\\n  `ROK4` varchar(255) DEFAULT NULL,\\n  `HODN11` varchar(255) DEFAULT NULL,\\n  `ROK11` varchar(255) DEFAULT NULL,\\n  `HODN12` varchar(255) DEFAULT NULL,\\n  `ROK12` varchar(255) DEFAULT NULL,\\n  `HODN13` varchar(255) DEFAULT NULL,\\n  `ROK13` varchar(255) DEFAULT NULL,\\n  `HODN14` varchar(255) DEFAULT NULL,\\n  `ROK14` varchar(255) DEFAULT NULL,\\n  `HODN15` varchar(255) DEFAULT NULL,\\n  `ROK15` varchar(255) DEFAULT NULL,\\n  `HODN21` varchar(255) DEFAULT NULL,\\n  `ROK21` varchar(255) DEFAULT NULL,\\n  `HODN23` varchar(255) DEFAULT NULL,\\n  `ROK23` varchar(255) DEFAULT NULL,\\n  `HMOT` int(11) DEFAULT NULL,\\n  `SYST` int(11) DEFAULT NULL,\\n  `DIAST` int(11) DEFAULT NULL,\\n  `TRIC` int(11) DEFAULT NULL,\\n  `SUBSC` int(11) DEFAULT NULL,\\n  `HYPERSD` int(11) DEFAULT NULL,\\n  `HYPERS` int(11) DEFAULT NULL,\\n  `HYPERD` int(11) DEFAULT NULL,\\n  `HYPCHL` int(11) DEFAULT NULL,\\n  `HYPTGL` int(11) DEFAULT NULL,\\n  `CHLST` float DEFAULT NULL,\\n  `CHLSTMG` int(11) DEFAULT NULL,\\n  `TRIGL` float DEFAULT NULL,\\n  `TRIGLMG` int(11) DEFAULT NULL,\\n  `HDL` varchar(255) DEFAULT NULL,\\n  `HDLMG` varchar(255) DEFAULT NULL,\\n  `MOC` int(11) DEFAULT NULL,\\n  `GLYKEMIE` varchar(255) DEFAULT NULL,\\n  `KYSMOC` varchar(255) DEFAULT NULL,\\n  `LDL` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`ICO`,`PORADK`),\\n  KEY `ICO` (`ICO`),\\n  CONSTRAINT `CONTR_IBFK_1` FOREIGN KEY (`ICO`) REFERENCES `ENTRY` (`ICO`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de PAÍSREGIÓN con las columnas de, CÓDIGO DE REGIÓN DE PAÍS, NOMBRE, FECHA DE MODIFICACIÓN",
      "output": "('COUNTRYREGION', \"CREATE TABLE `COUNTRYREGION` (\\n  `COUNTRYREGIONCODE` varchar(3) NOT NULL COMMENT 'ISO standard code for countries and regions.'  `NAME` varchar(100) NOT NULL COMMENT 'Country or region name.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`COUNTRYREGIONCODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the ISO standard codes for countries and regions.'\")"
    },
    {
      "input": "Una tabla de PAÍSREGIÓN MONEDA con las columnas de, CÓDIGO DE REGIÓN DE PAÍS, CÓDIGO DE MONEDA, FECHA DE MODIFICACIÓN",
      "output": "('COUNTRYREGIONCURRENCY', \"CREATE TABLE `COUNTRYREGIONCURRENCY` (\\n  `COUNTRYREGIONCODE` varchar(3) NOT NULL COMMENT 'ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.'  `CURRENCYCODE` char(3) NOT NULL COMMENT 'ISO standard currency code. Foreign key to Currency.CurrencyCode.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`COUNTRYREGIONCODE`,`CURRENCYCODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping ISO currency codes to a country or region.'\")"
    },
    {
      "input": "Una tabla de TARJETA DE CRÉDITO con las columnas de, IDENTIFICACIÓN DE LA TARJETA, TIPO DE TARJETA, NÚMERO DE TARJETA, MES DE GASTO, AÑO DE CAD, FECHA DE MODIFICACIÓN",
      "output": "('CREDITCARD', \"CREATE TABLE `CREDITCARD` (\\n  `CREDITCARDID` int(11) NOT NULL COMMENT 'Primary key for CreditCard records.'  `CARDTYPE` varchar(50) NOT NULL COMMENT 'Credit card name.',\\n  `CARDNUMBER` varchar(25) NOT NULL COMMENT 'Credit card number.',\\n  `EXPMONTH` tinyint(3) unsigned NOT NULL COMMENT 'Credit card expiration month.',\\n  `EXPYEAR` smallint(6) NOT NULL COMMENT 'Credit card expiration year.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CREDITCARDID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customer credit card information.'\")"
    },
    {
      "input": "Una tabla de CULTURA con las columnas de, ID DE CULTURA, NOMBRE, FECHA DE MODIFICACIÓN",
      "output": "('CULTURE', \"CREATE TABLE `CULTURE` (\\n  `CULTUREID` char(6) NOT NULL COMMENT 'Primary key for Culture records.'  `NAME` varchar(100) NOT NULL COMMENT 'Culture description.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CULTUREID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the languages in which some AdventureWorks data is stored.'\")"
    },
    {
      "input": "Una tabla de DIVISA con las columnas de, CÓDIGO DE MONEDA, NOMBRE, FECHA DE MODIFICACIÓN",
      "output": "('CURRENCY', \"CREATE TABLE `CURRENCY` (\\n  `CURRENCYCODE` char(3) NOT NULL COMMENT 'The ISO code for the Currency.'  `NAME` varchar(100) NOT NULL COMMENT 'Currency name.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CURRENCYCODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing standard ISO currencies.'\")"
    },
    {
      "input": "Una tabla de TAZA DE CAMBIO con las columnas de, CURRENCYRATEID, CURRENCYRATEDATE, FROMCURRENCYCODE, TOCURRENCYCODE, PROMEDIO, ENDOFDAYRATE, MODIFIEDDATE",
      "output": "('CURRENCYRATE', \"CREATE TABLE `CURRENCYRATE` (\\n  `CURRENCYRATEID` int(11) NOT NULL COMMENT 'Primary key for CurrencyRate records.'  `CURRENCYRATEDATE` datetime NOT NULL COMMENT 'Date and time the exchange rate was obtained.',\\n  `FROMCURRENCYCODE` char(3) NOT NULL COMMENT 'Exchange rate was converted from this currency code.',\\n  `TOCURRENCYCODE` char(3) NOT NULL COMMENT 'Exchange rate was converted to this currency code.',\\n  `AVERAGERATE` decimal(19,4) NOT NULL COMMENT 'Average exchange rate for the day.',\\n  `ENDOFDAYRATE` decimal(19,4) NOT NULL COMMENT 'Final exchange rate for the day.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CURRENCYRATEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Currency exchange rates.'\")"
    },
    {
      "input": "Una tabla de CLIENTE con las columnas de, ID DE CLIENTE, ID DE PERSONA, ID DE TIENDA, ID DE TERRITORIO, NÚMERO DE CUENTA, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('CUSTOMER', \"CREATE TABLE `CUSTOMER` (\\n  `CUSTOMERID` int(11) NOT NULL COMMENT 'Primary key.'  `PERSONID` int(11) DEFAULT NULL COMMENT 'Foreign key to Person.BusinessEntityID',\\n  `STOREID` int(11) DEFAULT NULL COMMENT 'Foreign key to Store.BusinessEntityID',\\n  `TERRITORYID` int(11) DEFAULT NULL COMMENT 'ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `ACCOUNTNUMBER` varchar(10) NOT NULL COMMENT 'Unique number identifying the customer assigned by the accounting system.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CUSTOMERID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Current customer information. Also see the Person and Store tables.'\")"
    },
    {
      "input": "Una tabla de Cliente C con las columnas de, c id, c d id, c w id, c primero, c medio, c último, c calle, c calle, c ciudad, c estado, c zip, c teléfono, c desde, c crédito, c límite de crédito, c descuento, saldo c, pago c ytd, c pago cnt, c entrega cnt, c datos, c datos",
      "output": "('C_Customer', 'CREATE TABLE `C_Customer` (\\n  `c_id` int(11) NOT NULL  `c_d_id` int(11) NOT NULL,\\n  `c_w_id` int(11) NOT NULL,\\n  `c_first` char(16) DEFAULT NULL,\\n  `c_middle` char(2) DEFAULT NULL,\\n  `c_last` char(16) DEFAULT NULL,\\n  `c_street_1` char(20) DEFAULT NULL,\\n  `c_street_2` char(20) DEFAULT NULL,\\n  `c_city` char(20) DEFAULT NULL,\\n  `c_state` char(2) DEFAULT NULL,\\n  `c_zip` char(9) DEFAULT NULL,\\n  `c_phone` char(16) DEFAULT NULL,\\n  `c_since` datetime DEFAULT NULL,\\n  `c_credit` char(2) DEFAULT NULL,\\n  `c_credit_lim` float DEFAULT NULL,\\n  `c_discount` float DEFAULT NULL,\\n  `c_balance` float DEFAULT NULL,\\n  `c_ytd_payment` float DEFAULT NULL,\\n  `c_payment_cnt` int(11) DEFAULT NULL,\\n  `c_delivery_cnt` int(11) DEFAULT NULL,\\n  `c_data1` char(250) DEFAULT NULL,\\n  `c_data2` char(250) DEFAULT NULL,\\n  PRIMARY KEY (`c_id`,`c_d_id`,`c_w_id`),\\n  UNIQUE KEY `C_Customer_I1` (`c_w_id`,`c_d_id`,`c_id`),\\n  UNIQUE KEY `C_Customer_I2` (`c_w_id`,`c_d_id`,`c_last`,`c_first`,`c_id`),\\n  KEY `c_d_id` (`c_d_id`),\\n  KEY `c_d_id_2` (`c_d_id`,`c_id`,`c_w_id`),\\n  CONSTRAINT `C_Customer_ibfk_1` FOREIGN KEY (`c_d_id`) REFERENCES `C_District` (`d_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Distrito C con las columnas de, d id, d w id, d nombre, d street , d street , d city, d state, d zip, d tax, d ytd, d next o id",
      "output": "('C_District', 'CREATE TABLE `C_District` (\\n  `d_id` int(11) NOT NULL  `d_w_id` int(11) NOT NULL,\\n  `d_name` char(10) DEFAULT NULL,\\n  `d_street_1` char(20) DEFAULT NULL,\\n  `d_street_2` char(20) DEFAULT NULL,\\n  `d_city` char(20) DEFAULT NULL,\\n  `d_state` char(2) DEFAULT NULL,\\n  `d_zip` char(9) DEFAULT NULL,\\n  `d_tax` float DEFAULT NULL,\\n  `d_ytd` float DEFAULT NULL,\\n  `d_next_o_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`d_id`,`d_w_id`),\\n  UNIQUE KEY `C_District_I1` (`d_w_id`,`d_id`),\\n  CONSTRAINT `C_District_ibfk_1` FOREIGN KEY (`d_w_id`) REFERENCES `C_Warehouse` (`w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Historia C con las columnas de, h c id, h c d id, h c w id, h d id, h w id, h fecha, h cantidad, h datos",
      "output": "('C_History', 'CREATE TABLE `C_History` (\\n  `h_c_id` int(11) DEFAULT NULL  `h_c_d_id` int(11) DEFAULT NULL,\\n  `h_c_w_id` int(11) DEFAULT NULL,\\n  `h_d_id` int(11) DEFAULT NULL,\\n  `h_w_id` int(11) DEFAULT NULL,\\n  `h_date` datetime DEFAULT NULL,\\n  `h_amount` float DEFAULT NULL,\\n  `h_data` char(24) DEFAULT NULL,\\n  KEY `h_c_w_id` (`h_c_w_id`),\\n  KEY `h_d_id` (`h_d_id`),\\n  KEY `h_c_id` (`h_c_id`,`h_c_d_id`,`h_c_w_id`),\\n  KEY `h_d_id_2` (`h_d_id`,`h_w_id`),\\n  CONSTRAINT `C_History_ibfk_3` FOREIGN KEY (`h_c_id`, `h_c_d_id`, `h_c_w_id`) REFERENCES `C_Customer` (`c_id`, `c_d_id`, `c_w_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `C_History_ibfk_4` FOREIGN KEY (`h_d_id`, `h_w_id`) REFERENCES `C_District` (`d_id`, `d_w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Artículo C con las columnas de, yo id, yo soy id, yo nombre, yo precio, yo datos",
      "output": "('C_Item', 'CREATE TABLE `C_Item` (\\n  `i_id` int(11) NOT NULL  `i_im_id` int(11) DEFAULT NULL,\\n  `i_name` char(24) DEFAULT NULL,\\n  `i_price` float DEFAULT NULL,\\n  `i_data` char(50) DEFAULT NULL,\\n  PRIMARY KEY (`i_id`),\\n  UNIQUE KEY `C_Item_I1` (`i_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de C Nuevo orden con las columnas de, sin identificación, sin identificación, sin identificación ancha",
      "output": "('C_New_Order', 'CREATE TABLE `C_New_Order` (\\n  `no_o_id` int(11) NOT NULL  `no_d_id` int(11) NOT NULL,\\n  `no_w_id` int(11) NOT NULL,\\n  PRIMARY KEY (`no_o_id`,`no_d_id`,`no_w_id`),\\n  UNIQUE KEY `C_New_Order_I1` (`no_w_id`,`no_d_id`,`no_o_id`),\\n  CONSTRAINT `C_New_Order_ibfk_1` FOREIGN KEY (`no_o_id`, `no_d_id`, `no_w_id`) REFERENCES `C_Order` (`o_id`, `o_d_id`, `o_w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Orden C con las columnas de, o id, o d id, o w id, o c id, o entrada d, o id del operador, o ol cnt, o todo local",
      "output": "('C_Order', 'CREATE TABLE `C_Order` (\\n  `o_id` int(11) NOT NULL  `o_d_id` int(11) NOT NULL,\\n  `o_w_id` int(11) NOT NULL,\\n  `o_c_id` int(11) DEFAULT NULL,\\n  `o_entry_d` datetime DEFAULT NULL,\\n  `o_carrier_id` int(11) DEFAULT NULL,\\n  `o_ol_cnt` int(11) DEFAULT NULL,\\n  `o_all_local` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`o_id`,`o_d_id`,`o_w_id`),\\n  UNIQUE KEY `C_Order_I1` (`o_w_id`,`o_d_id`,`o_id`),\\n  KEY `o_d_id` (`o_d_id`,`o_c_id`,`o_w_id`),\\n  CONSTRAINT `C_Order_ibfk_1` FOREIGN KEY (`o_d_id`, `o_c_id`, `o_w_id`) REFERENCES `C_Customer` (`c_d_id`, `c_id`, `c_w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Línea de pedido C con las columnas de, id de ol, id de ol, id de ol, id de ol, id de ol, id de ol, ancho de suministro de ol, d de entrega de ol, cantidad de ol, cantidad de ol, info de dist.",
      "output": "('C_Order_Line', 'CREATE TABLE `C_Order_Line` (\\n  `ol_o_id` int(11) NOT NULL  `ol_d_id` int(11) NOT NULL,\\n  `ol_w_id` int(11) NOT NULL,\\n  `ol_number` int(11) NOT NULL,\\n  `ol_i_id` int(11) DEFAULT NULL,\\n  `ol_supply_w_id` int(11) DEFAULT NULL,\\n  `ol_delivery_d` datetime DEFAULT NULL,\\n  `ol_quantity` int(11) DEFAULT NULL,\\n  `ol_amount` float DEFAULT NULL,\\n  `ol_dist_info` char(24) DEFAULT NULL,\\n  PRIMARY KEY (`ol_o_id`,`ol_d_id`,`ol_w_id`,`ol_number`),\\n  UNIQUE KEY `C_Order_Line_I1` (`ol_w_id`,`ol_d_id`,`ol_o_id`,`ol_number`),\\n  KEY `ol_o_id` (`ol_o_id`,`ol_d_id`,`ol_w_id`),\\n  KEY `ol_i_id` (`ol_i_id`),\\n  KEY `ol_i_id_2` (`ol_i_id`,`ol_supply_w_id`),\\n  CONSTRAINT `C_Order_Line_ibfk_1` FOREIGN KEY (`ol_o_id`, `ol_d_id`, `ol_w_id`) REFERENCES `C_Order` (`o_id`, `o_d_id`, `o_w_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `C_Order_Line_ibfk_2` FOREIGN KEY (`ol_i_id`, `ol_supply_w_id`) REFERENCES `C_Stock` (`s_i_id`, `s_w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Acciones C con las columnas de, s i id, s w id, s cantidad, s dist , s dist , s dist , s dist , s dist , s dist , s dist , s dist , s dist , s dist , s ytd, s order cnt, s remote cnt , s datos",
      "output": "('C_Stock', 'CREATE TABLE `C_Stock` (\\n  `s_i_id` int(11) NOT NULL  `s_w_id` int(11) NOT NULL,\\n  `s_quantity` int(11) DEFAULT NULL,\\n  `s_dist_01` char(24) DEFAULT NULL,\\n  `s_dist_02` char(24) DEFAULT NULL,\\n  `s_dist_03` char(24) DEFAULT NULL,\\n  `s_dist_04` char(24) DEFAULT NULL,\\n  `s_dist_05` char(24) DEFAULT NULL,\\n  `s_dist_06` char(24) DEFAULT NULL,\\n  `s_dist_07` char(24) DEFAULT NULL,\\n  `s_dist_08` char(24) DEFAULT NULL,\\n  `s_dist_09` char(24) DEFAULT NULL,\\n  `s_dist_10` char(24) DEFAULT NULL,\\n  `s_ytd` int(11) DEFAULT NULL,\\n  `s_order_cnt` int(11) DEFAULT NULL,\\n  `s_remote_cnt` int(11) DEFAULT NULL,\\n  `s_data` char(50) DEFAULT NULL,\\n  PRIMARY KEY (`s_i_id`,`s_w_id`),\\n  UNIQUE KEY `C_Stock_I1` (`s_i_id`,`s_w_id`),\\n  KEY `s_w_id` (`s_w_id`),\\n  CONSTRAINT `C_Stock_ibfk_1` FOREIGN KEY (`s_i_id`) REFERENCES `C_Item` (`i_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `C_Stock_ibfk_2` FOREIGN KEY (`s_w_id`) REFERENCES `C_Warehouse` (`w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Almacén C con las columnas de, w id, w nombre, w street , w street , w ciudad, w estado, w zip, w tax, w ytd",
      "output": "('C_Warehouse', 'CREATE TABLE `C_Warehouse` (\\n  `w_id` int(11) NOT NULL  `w_name` char(10) DEFAULT NULL,\\n  `w_street_1` char(20) DEFAULT NULL,\\n  `w_street_2` char(20) DEFAULT NULL,\\n  `w_city` char(20) DEFAULT NULL,\\n  `w_state` char(2) DEFAULT NULL,\\n  `w_zip` char(9) DEFAULT NULL,\\n  `w_tax` float DEFAULT NULL,\\n  `w_ytd` float DEFAULT NULL,\\n  PRIMARY KEY (`w_id`),\\n  UNIQUE KEY `C_Warehouse_I1` (`w_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de registros con las columnas de, ID de empresa, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, Domingo, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, jueves, jueves, Jue Viernes, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado",
      "output": "('Checkins', \"CREATE TABLE `Checkins` (\\n  `business_id` varchar(30) NOT NULL DEFAULT ''  `Sunday_0` int(11) DEFAULT NULL,\\n  `Sunday_1` int(11) DEFAULT NULL,\\n  `Sunday_2` int(11) DEFAULT NULL,\\n  `Sunday_3` int(11) DEFAULT NULL,\\n  `Sunday_4` int(11) DEFAULT NULL,\\n  `Sunday_5` int(11) DEFAULT NULL,\\n  `Sunday_6` int(11) DEFAULT NULL,\\n  `Sunday_7` int(11) DEFAULT NULL,\\n  `Sunday_8` int(11) DEFAULT NULL,\\n  `Sunday_9` int(11) DEFAULT NULL,\\n  `Sunday_10` int(11) DEFAULT NULL,\\n  `Sunday_11` int(11) DEFAULT NULL,\\n  `Sunday_12` int(11) DEFAULT NULL,\\n  `Sunday_13` int(11) DEFAULT NULL,\\n  `Sunday_14` int(11) DEFAULT NULL,\\n  `Sunday_15` int(11) DEFAULT NULL,\\n  `Sunday_16` int(11) DEFAULT NULL,\\n  `Sunday_17` int(11) DEFAULT NULL,\\n  `Sunday_18` int(11) DEFAULT NULL,\\n  `Sunday_19` int(11) DEFAULT NULL,\\n  `Sunday_20` int(11) DEFAULT NULL,\\n  `Sunday_21` int(11) DEFAULT NULL,\\n  `Sunday_22` int(11) DEFAULT NULL,\\n  `Sunday_23` int(11) DEFAULT NULL,\\n  `Monday_0` int(11) DEFAULT NULL,\\n  `Monday_1` int(11) DEFAULT NULL,\\n  `Monday_2` int(11) DEFAULT NULL,\\n  `Monday_3` int(11) DEFAULT NULL,\\n  `Monday_4` int(11) DEFAULT NULL,\\n  `Monday_5` int(11) DEFAULT NULL,\\n  `Monday_6` int(11) DEFAULT NULL,\\n  `Monday_7` int(11) DEFAULT NULL,\\n  `Monday_8` int(11) DEFAULT NULL,\\n  `Monday_9` int(11) DEFAULT NULL,\\n  `Monday_10` int(11) DEFAULT NULL,\\n  `Monday_11` int(11) DEFAULT NULL,\\n  `Monday_12` int(11) DEFAULT NULL,\\n  `Monday_13` int(11) DEFAULT NULL,\\n  `Monday_14` int(11) DEFAULT NULL,\\n  `Monday_15` int(11) DEFAULT NULL,\\n  `Monday_16` int(11) DEFAULT NULL,\\n  `Monday_17` int(11) DEFAULT NULL,\\n  `Monday_18` int(11) DEFAULT NULL,\\n  `Monday_19` int(11) DEFAULT NULL,\\n  `Monday_20` int(11) DEFAULT NULL,\\n  `Monday_21` int(11) DEFAULT NULL,\\n  `Monday_22` int(11) DEFAULT NULL,\\n  `Monday_23` int(11) DEFAULT NULL,\\n  `Tuesday_0` int(11) DEFAULT NULL,\\n  `Tuesday_1` int(11) DEFAULT NULL,\\n  `Tuesday_2` int(11) DEFAULT NULL,\\n  `Tuesday_3` int(11) DEFAULT NULL,\\n  `Tuesday_4` int(11) DEFAULT NULL,\\n  `Tuesday_5` int(11) DEFAULT NULL,\\n  `Tuesday_6` int(11) DEFAULT NULL,\\n  `Tuesday_7` int(11) DEFAULT NULL,\\n  `Tuesday_8` int(11) DEFAULT NULL,\\n  `Tuesday_9` int(11) DEFAULT NULL,\\n  `Tuesday_10` int(11) DEFAULT NULL,\\n  `Tuesday_11` int(11) DEFAULT NULL,\\n  `Tuesday_12` int(11) DEFAULT NULL,\\n  `Tuesday_13` int(11) DEFAULT NULL,\\n  `Tuesday_14` int(11) DEFAULT NULL,\\n  `Tuesday_15` int(11) DEFAULT NULL,\\n  `Tuesday_16` int(11) DEFAULT NULL,\\n  `Tuesday_17` int(11) DEFAULT NULL,\\n  `Tuesday_18` int(11) DEFAULT NULL,\\n  `Tuesday_19` int(11) DEFAULT NULL,\\n  `Tuesday_20` int(11) DEFAULT NULL,\\n  `Tuesday_21` int(11) DEFAULT NULL,\\n  `Tuesday_22` int(11) DEFAULT NULL,\\n  `Tuesday_23` int(11) DEFAULT NULL,\\n  `Wednesday_0` int(11) DEFAULT NULL,\\n  `Wednesday_1` int(11) DEFAULT NULL,\\n  `Wednesday_2` int(11) DEFAULT NULL,\\n  `Wednesday_3` int(11) DEFAULT NULL,\\n  `Wednesday_4` int(11) DEFAULT NULL,\\n  `Wednesday_5` int(11) DEFAULT NULL,\\n  `Wednesday_6` int(11) DEFAULT NULL,\\n  `Wednesday_7` int(11) DEFAULT NULL,\\n  `Wednesday_8` int(11) DEFAULT NULL,\\n  `Wednesday_9` int(11) DEFAULT NULL,\\n  `Wednesday_10` int(11) DEFAULT NULL,\\n  `Wednesday_11` int(11) DEFAULT NULL,\\n  `Wednesday_12` int(11) DEFAULT NULL,\\n  `Wednesday_13` int(11) DEFAULT NULL,\\n  `Wednesday_14` int(11) DEFAULT NULL,\\n  `Wednesday_15` int(11) DEFAULT NULL,\\n  `Wednesday_16` int(11) DEFAULT NULL,\\n  `Wednesday_17` int(11) DEFAULT NULL,\\n  `Wednesday_18` int(11) DEFAULT NULL,\\n  `Wednesday_19` int(11) DEFAULT NULL,\\n  `Wednesday_20` int(11) DEFAULT NULL,\\n  `Wednesday_21` int(11) DEFAULT NULL,\\n  `Wednesday_22` int(11) DEFAULT NULL,\\n  `Wednesday_23` int(11) DEFAULT NULL,\\n  `Thursday_0` int(11) DEFAULT NULL,\\n  `Thursday_1` int(11) DEFAULT NULL,\\n  `Thursday_2` int(11) DEFAULT NULL,\\n  `Thursday_3` int(11) DEFAULT NULL,\\n  `Thursday_4` int(11) DEFAULT NULL,\\n  `Thursday_5` int(11) DEFAULT NULL,\\n  `Thursday_6` int(11) DEFAULT NULL,\\n  `Thursday_7` int(11) DEFAULT NULL,\\n  `Thursday_8` int(11) DEFAULT NULL,\\n  `Thursday_9` int(11) DEFAULT NULL,\\n  `Thursday_10` int(11) DEFAULT NULL,\\n  `Thursday_11` int(11) DEFAULT NULL,\\n  `Thursday_12` int(11) DEFAULT NULL,\\n  `Thursday_13` int(11) DEFAULT NULL,\\n  `Thursday_14` int(11) DEFAULT NULL,\\n  `Thursday_15` int(11) DEFAULT NULL,\\n  `Thursday_16` int(11) DEFAULT NULL,\\n  `Thursday_17` int(11) DEFAULT NULL,\\n  `Thursday_18` int(11) DEFAULT NULL,\\n  `Thursday_19` int(11) DEFAULT NULL,\\n  `Thursday_20` int(11) DEFAULT NULL,\\n  `Thursday_21` int(11) DEFAULT NULL,\\n  `Thursday_22` int(11) DEFAULT NULL,\\n  `Thursday_23` int(11) DEFAULT NULL,\\n  `Friday_0` int(11) DEFAULT NULL,\\n  `Friday_1` int(11) DEFAULT NULL,\\n  `Friday_2` int(11) DEFAULT NULL,\\n  `Friday_3` int(11) DEFAULT NULL,\\n  `Friday_4` int(11) DEFAULT NULL,\\n  `Friday_5` int(11) DEFAULT NULL,\\n  `Friday_6` int(11) DEFAULT NULL,\\n  `Friday_7` int(11) DEFAULT NULL,\\n  `Friday_8` int(11) DEFAULT NULL,\\n  `Friday_9` int(11) DEFAULT NULL,\\n  `Friday_10` int(11) DEFAULT NULL,\\n  `Friday_11` int(11) DEFAULT NULL,\\n  `Friday_12` int(11) DEFAULT NULL,\\n  `Friday_13` int(11) DEFAULT NULL,\\n  `Friday_14` int(11) DEFAULT NULL,\\n  `Friday_15` int(11) DEFAULT NULL,\\n  `Friday_16` int(11) DEFAULT NULL,\\n  `Friday_17` int(11) DEFAULT NULL,\\n  `Friday_18` int(11) DEFAULT NULL,\\n  `Friday_19` int(11) DEFAULT NULL,\\n  `Friday_20` int(11) DEFAULT NULL,\\n  `Friday_21` int(11) DEFAULT NULL,\\n  `Friday_22` int(11) DEFAULT NULL,\\n  `Friday_23` int(11) DEFAULT NULL,\\n  `Saturday_0` int(11) DEFAULT NULL,\\n  `Saturday_1` int(11) DEFAULT NULL,\\n  `Saturday_2` int(11) DEFAULT NULL,\\n  `Saturday_3` int(11) DEFAULT NULL,\\n  `Saturday_4` int(11) DEFAULT NULL,\\n  `Saturday_5` int(11) DEFAULT NULL,\\n  `Saturday_6` int(11) DEFAULT NULL,\\n  `Saturday_7` int(11) DEFAULT NULL,\\n  `Saturday_8` int(11) DEFAULT NULL,\\n  `Saturday_9` int(11) DEFAULT NULL,\\n  `Saturday_10` int(11) DEFAULT NULL,\\n  `Saturday_11` int(11) DEFAULT NULL,\\n  `Saturday_12` int(11) DEFAULT NULL,\\n  `Saturday_13` int(11) DEFAULT NULL,\\n  `Saturday_14` int(11) DEFAULT NULL,\\n  `Saturday_15` int(11) DEFAULT NULL,\\n  `Saturday_16` int(11) DEFAULT NULL,\\n  `Saturday_17` int(11) DEFAULT NULL,\\n  `Saturday_18` int(11) DEFAULT NULL,\\n  `Saturday_19` int(11) DEFAULT NULL,\\n  `Saturday_20` int(11) DEFAULT NULL,\\n  `Saturday_21` int(11) DEFAULT NULL,\\n  `Saturday_22` int(11) DEFAULT NULL,\\n  `Saturday_23` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`business_id`),\\n  CONSTRAINT `Checkins_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de Ciudad con las columnas de, DNI, Nombre, Código País, Distrito, Población",
      "output": "('City', \"CREATE TABLE `City` (\\n  `ID` int(11) NOT NULL AUTO_INCREMENT  `Name` char(35) NOT NULL DEFAULT '',\\n  `CountryCode` char(3) NOT NULL DEFAULT '',\\n  `District` char(20) NOT NULL DEFAULT '',\\n  `Population` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`ID`),\\n  KEY `City_CountryCode` (`CountryCode`),\\n  CONSTRAINT `city_ibfk_1` FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de Tipo de Contacto con las columnas de, ID de tipo de contacto, nombre, fecha de modificación",
      "output": "('ContactType', \"CREATE TABLE `ContactType` (\\n  `ContactTypeID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ContactType records.'  `Name` varchar(100) NOT NULL COMMENT 'Contact type description.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ContactTypeID`),\\n  UNIQUE KEY `AK_ContactType_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the types of business entity contacts.'\")"
    },
    {
      "input": "Una tabla de País con las columnas de, Código, Nombre, Continente, Región, Superficie, Año Indep, Población, Esperanza de Vida, PNB, PNB Antiguo, Nombre Local, Forma de Gobierno, Jefe de Estado, Capital, Código",
      "output": "('Country', \"CREATE TABLE `Country` (\\n  `Code` char(3) NOT NULL DEFAULT ''  `Name` char(52) NOT NULL DEFAULT '',\\n  `Continent` enum('Asia','Europe','North America','Africa','Oceania','Antarctica','South America') NOT NULL DEFAULT 'Asia',\\n  `Region` char(26) NOT NULL DEFAULT '',\\n  `SurfaceArea` float(10,2) NOT NULL DEFAULT 0.00,\\n  `IndepYear` smallint(6) DEFAULT NULL,\\n  `Population` int(11) NOT NULL DEFAULT 0,\\n  `LifeExpectancy` float(3,1) DEFAULT NULL,\\n  `GNP` float(10,2) DEFAULT NULL,\\n  `GNPOld` float(10,2) DEFAULT NULL,\\n  `LocalName` char(45) NOT NULL DEFAULT '',\\n  `GovernmentForm` char(45) NOT NULL DEFAULT '',\\n  `HeadOfState` char(60) DEFAULT NULL,\\n  `Capital` int(11) DEFAULT NULL,\\n  `Code2` char(2) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de Lenguaje del pais con las columnas de, código de país, idioma, es oficial, porcentaje",
      "output": "('CountryLanguage', \"CREATE TABLE `CountryLanguage` (\\n  `CountryCode` char(3) NOT NULL DEFAULT ''  `Language` char(30) NOT NULL DEFAULT '',\\n  `IsOfficial` enum('T','F') NOT NULL DEFAULT 'F',\\n  `Percentage` float(4,1) NOT NULL DEFAULT 0.0,\\n  PRIMARY KEY (`CountryCode`,`Language`),\\n  KEY `CountryLanguage_CountryCode` (`CountryCode`),\\n  CONSTRAINT `countryLanguage_ibfk_1` FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de País Región con las columnas de, código de región del país, nombre, fecha de modificación",
      "output": "('CountryRegion', \"CREATE TABLE `CountryRegion` (\\n  `CountryRegionCode` varchar(3) NOT NULL COMMENT 'ISO standard code for countries and regions.'  `Name` varchar(100) NOT NULL COMMENT 'Country or region name.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CountryRegionCode`),\\n  UNIQUE KEY `AK_CountryRegion_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the ISO standard codes for countries and regions.'\")"
    },
    {
      "input": "Una tabla de País Región Moneda con las columnas de, código de región del país, código de moneda, fecha de modificación",
      "output": "('CountryRegionCurrency', \"CREATE TABLE `CountryRegionCurrency` (\\n  `CountryRegionCode` varchar(3) NOT NULL COMMENT 'ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.'  `CurrencyCode` char(3) NOT NULL COMMENT 'ISO standard currency code. Foreign key to Currency.CurrencyCode.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CountryRegionCode`,`CurrencyCode`),\\n  KEY `IX_CountryRegionCurrency_CurrencyCode` (`CurrencyCode`),\\n  CONSTRAINT `FK_CountryRegionCurrency_CountryRegion_CountryRegionCode` FOREIGN KEY (`CountryRegionCode`) REFERENCES `CountryRegion` (`CountryRegionCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_CountryRegionCurrency_Currency_CurrencyCode` FOREIGN KEY (`CurrencyCode`) REFERENCES `Currency` (`CurrencyCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping ISO currency codes to a country or region.'\")"
    },
    {
      "input": "Una tabla de Tarjeta de crédito con las columnas de, ID de tarjeta de crédito, tipo de tarjeta, número de tarjeta, mes de vencimiento, año de vencimiento, fecha de modificación",
      "output": "('CreditCard', \"CREATE TABLE `CreditCard` (\\n  `CreditCardID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for CreditCard records.'  `CardType` varchar(50) NOT NULL COMMENT 'Credit card name.',\\n  `CardNumber` varchar(25) NOT NULL COMMENT 'Credit card number.',\\n  `ExpMonth` tinyint(3) unsigned NOT NULL COMMENT 'Credit card expiration month.',\\n  `ExpYear` smallint(6) NOT NULL COMMENT 'Credit card expiration year.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CreditCardID`),\\n  UNIQUE KEY `AK_CreditCard_CardNumber` (`CardNumber`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customer credit card information.'\")"
    },
    {
      "input": "Una tabla de Cultura con las columnas de, ID de cultura, nombre, fecha de modificación",
      "output": "('Culture', \"CREATE TABLE `Culture` (\\n  `CultureID` char(6) NOT NULL COMMENT 'Primary key for Culture records.'  `Name` varchar(100) NOT NULL COMMENT 'Culture description.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CultureID`),\\n  UNIQUE KEY `AK_Culture_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the languages in which some AdventureWorks data is stored.'\")"
    },
    {
      "input": "Una tabla de Divisa con las columnas de, código de moneda, nombre, fecha de modificación",
      "output": "('Currency', \"CREATE TABLE `Currency` (\\n  `CurrencyCode` char(3) NOT NULL COMMENT 'The ISO code for the Currency.'  `Name` varchar(100) NOT NULL COMMENT 'Currency name.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CurrencyCode`),\\n  UNIQUE KEY `AK_Currency_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing standard ISO currencies.'\")"
    },
    {
      "input": "Una tabla de Taza de cambio con las columnas de, Id. de tipo de cambio, Fecha de tipo de cambio, Desde código de moneda, A código de moneda, Tipo de cambio medio, Tipo de cambio al final del día, Fecha de modificación",
      "output": "('CurrencyRate', \"CREATE TABLE `CurrencyRate` (\\n  `CurrencyRateID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for CurrencyRate records.'  `CurrencyRateDate` datetime NOT NULL COMMENT 'Date and time the exchange rate was obtained.',\\n  `FromCurrencyCode` char(3) NOT NULL COMMENT 'Exchange rate was converted from this currency code.',\\n  `ToCurrencyCode` char(3) NOT NULL COMMENT 'Exchange rate was converted to this currency code.',\\n  `AverageRate` decimal(19,4) NOT NULL COMMENT 'Average exchange rate for the day.',\\n  `EndOfDayRate` decimal(19,4) NOT NULL COMMENT 'Final exchange rate for the day.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CurrencyRateID`),\\n  UNIQUE KEY `AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode` (`CurrencyRateDate`,`FromCurrencyCode`,`ToCurrencyCode`),\\n  KEY `FK_CurrencyRate_Currency_FromCurrencyCode` (`FromCurrencyCode`),\\n  KEY `FK_CurrencyRate_Currency_ToCurrencyCode` (`ToCurrencyCode`),\\n  CONSTRAINT `FK_CurrencyRate_Currency_FromCurrencyCode` FOREIGN KEY (`FromCurrencyCode`) REFERENCES `Currency` (`CurrencyCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_CurrencyRate_Currency_ToCurrencyCode` FOREIGN KEY (`ToCurrencyCode`) REFERENCES `Currency` (`CurrencyCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Currency exchange rates.'\")"
    },
    {
      "input": "Una tabla de Cliente con las columnas de, Id. de cliente, Id. de persona, Id. de tienda, Id. de territorio, Número de cuenta, rowguid, Fecha de modificación",
      "output": "('Customer', \"CREATE TABLE `Customer` (\\n  `CustomerID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key.'  `PersonID` int(11) DEFAULT NULL COMMENT 'Foreign key to Person.BusinessEntityID',\\n  `StoreID` int(11) DEFAULT NULL COMMENT 'Foreign key to Store.BusinessEntityID',\\n  `TerritoryID` int(11) DEFAULT NULL COMMENT 'ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `AccountNumber` varchar(10) NOT NULL COMMENT 'Unique number identifying the customer assigned by the accounting system.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`CustomerID`),\\n  UNIQUE KEY `AK_Customer_rowguid` (`rowguid`),\\n  UNIQUE KEY `AK_Customer_AccountNumber` (`AccountNumber`),\\n  KEY `IX_Customer_TerritoryID` (`TerritoryID`),\\n  KEY `FK_Customer_Person_PersonID` (`PersonID`),\\n  KEY `FK_Customer_Store_StoreID` (`StoreID`),\\n  KEY `GUID_Customer` (`rowguid`),\\n  CONSTRAINT `FK_Customer_Person_PersonID` FOREIGN KEY (`PersonID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Customer_SalesTerritory_TerritoryID` FOREIGN KEY (`TerritoryID`) REFERENCES `SalesTerritory` (`TerritoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Customer_Store_StoreID` FOREIGN KEY (`StoreID`) REFERENCES `Store` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Current customer information. Also see the Person and Store tables.'\")"
    },
    {
      "input": "Una tabla de Clientes con las columnas de, DNI, SEXO, ESTADO CIVIL, GEOIDE, NÚMERO DE EDUCACIÓN, OCUPACIÓN, DATOS, DATOS, DATOS, NOM, NOM, NOM, edad",
      "output": "('Customers', 'CREATE TABLE `Customers` (\\n  `ID` int(11) NOT NULL  `SEX` varchar(255) DEFAULT NULL,\\n  `MARITAL_STATUS` varchar(255) DEFAULT NULL,\\n  `GEOID` int(11) DEFAULT NULL,\\n  `EDUCATIONNUM` int(11) DEFAULT NULL,\\n  `OCCUPATION` varchar(255) DEFAULT NULL,\\n  `DATA1` float DEFAULT NULL,\\n  `DATA2` float DEFAULT NULL,\\n  `DATA3` float DEFAULT NULL,\\n  `NOM1` varchar(255) DEFAULT NULL,\\n  `NOM2` varchar(255) DEFAULT NULL,\\n  `NOM3` varchar(255) DEFAULT NULL,\\n  `age` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ID`),\\n  KEY `Customers_GEOID` (`GEOID`),\\n  CONSTRAINT `Customers_ibfk_1` FOREIGN KEY (`GEOID`) REFERENCES `Demog` (`GEOID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de REGISTRO DE BASE DE DATOS con las columnas de, DATABASELOGID, POSTTIME, DATABASEUSER, EVENTO, ESQUEMA, OBJETO, TSQL, XMLEVENT",
      "output": "('DATABASELOG', \"CREATE TABLE `DATABASELOG` (\\n  `DATABASELOGID` int(11) NOT NULL COMMENT 'Primary key for DatabaseLog records.'  `POSTTIME` datetime NOT NULL COMMENT 'The date and time the DDL change occurred.',\\n  `DATABASEUSER` varchar(160) NOT NULL COMMENT 'The user who implemented the DDL change.',\\n  `EVENT` varchar(160) NOT NULL COMMENT 'The type of DDL statement that was executed.',\\n  `SCHEMA` varchar(160) DEFAULT NULL COMMENT 'The schema to which the changed object belongs.',\\n  `OBJECT` varchar(160) DEFAULT NULL COMMENT 'The object that was changed by the DDL statment.',\\n  `TSQL` longtext NOT NULL COMMENT 'The exact Transact-SQL statement that was executed.',\\n  `XMLEVENT` text NOT NULL COMMENT 'The raw XML data generated by database trigger.',\\n  PRIMARY KEY (`DATABASELOGID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.'\")"
    },
    {
      "input": "Una tabla de MUERTE con las columnas de, ICO, DENUMR, MESUMR, ROKUMR, PRICUMR",
      "output": "('DEATH', 'CREATE TABLE `DEATH` (\\n  `ICO` int(11) NOT NULL  `DENUMR` varchar(255) DEFAULT NULL,\\n  `MESUMR` varchar(255) DEFAULT NULL,\\n  `ROKUMR` int(11) DEFAULT NULL,\\n  `PRICUMR` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ICO`),\\n  KEY `ICO` (`ICO`),\\n  CONSTRAINT `DEATH_IBFK_1` FOREIGN KEY (`ICO`) REFERENCES `ENTRY` (`ICO`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de DEPARTAMENTO con las columnas de, ID DEPARTAMENTO, NOMBRE, NOMBRE DEL GRUPO, FECHA DE MODIFICACIÓN",
      "output": "('DEPARTMENT', \"CREATE TABLE `DEPARTMENT` (\\n  `DEPARTMENTID` smallint(6) NOT NULL COMMENT 'Primary key for Department records.'  `NAME` varchar(100) NOT NULL COMMENT 'Name of the department.',\\n  `GROUPNAME` varchar(100) NOT NULL COMMENT 'Name of the group to which the department belongs.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`DEPARTMENTID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the departments within the Adventure Works Cycles company.'\")"
    },
    {
      "input": "Una tabla de DOCUMENTO con las columnas de, NODO DE DOCUMENTO, NIVEL DE DOCUMENTO, TÍTULO, PROPIETARIO, BANDERA DE CARPETA, NOMBRE DE ARCHIVO, EXTENSIÓN DE ARCHIVO, REVISIÓN, NÚMERO DE CAMBIO, ESTADO, RESUMEN DE DOCUMENTO, DOCUMENTO, GUÍA DE FILA, FECHA DE MODIFICACIÓN",
      "output": "('DOCUMENT', \"CREATE TABLE `DOCUMENT` (\\n  `DOCUMENTNODE` varchar(255) NOT NULL COMMENT 'Primary key for Document records.'  `DOCUMENTLEVEL` smallint(6) DEFAULT NULL COMMENT 'Depth in the document hierarchy.',\\n  `TITLE` varchar(50) NOT NULL COMMENT 'Title of the document.',\\n  `OWNER` int(11) NOT NULL COMMENT 'Employee who controls the document.  Foreign key to Employee.BusinessEntityID',\\n  `FOLDERFLAG` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = This is a folder, 1 = This is a document.',\\n  `FILENAME` varchar(400) NOT NULL COMMENT 'File name of the document',\\n  `FILEEXTENSION` varchar(8) NOT NULL COMMENT 'File extension indicating the document type. For example, .doc or .txt.',\\n  `REVISION` char(5) NOT NULL COMMENT 'Revision number of the document. ',\\n  `CHANGENUMBER` int(11) NOT NULL DEFAULT 0 COMMENT 'Engineering change approval number.',\\n  `STATUS` tinyint(3) unsigned NOT NULL COMMENT '1 = Pending approval, 2 = Approved, 3 = Obsolete',\\n  `DOCUMENTSUMMARY` longtext DEFAULT NULL COMMENT 'Document abstract.',\\n  `DOCUMENT` longblob DEFAULT NULL COMMENT 'Complete document.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Required for FileStream.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`DOCUMENTNODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product maintenance documents.'\")"
    },
    {
      "input": "Una tabla de Registro de base de datos con las columnas de, Id. de registro de la base de datos, Hora de publicación, Usuario de la base de datos, Evento, Esquema, Objeto, TSQL, Evento Xml",
      "output": "('DatabaseLog', \"CREATE TABLE `DatabaseLog` (\\n  `DatabaseLogID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for DatabaseLog records.'  `PostTime` datetime NOT NULL COMMENT 'The date and time the DDL change occurred.',\\n  `DatabaseUser` varchar(160) NOT NULL COMMENT 'The user who implemented the DDL change.',\\n  `Event` varchar(160) NOT NULL COMMENT 'The type of DDL statement that was executed.',\\n  `Schema` varchar(160) DEFAULT NULL COMMENT 'The schema to which the changed object belongs.',\\n  `Object` varchar(160) DEFAULT NULL COMMENT 'The object that was changed by the DDL statment.',\\n  `TSQL` longtext NOT NULL COMMENT 'The exact Transact-SQL statement that was executed.',\\n  `XmlEvent` text NOT NULL COMMENT 'The raw XML data generated by database trigger.',\\n  PRIMARY KEY (`DatabaseLogID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.'\")"
    },
    {
      "input": "Una tabla de demográfico con las columnas de, GEOIDE, HABITANTES K, INGRESO K, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ , UN SÍ, UN SÍ, UN SÍ, UN SÍ",
      "output": "('Demog', 'CREATE TABLE `Demog` (\\n  `GEOID` int(11) NOT NULL  `INHABITANTS_K` float DEFAULT NULL,\\n  `INCOME_K` decimal(10,2) DEFAULT NULL,\\n  `A_VAR1` float DEFAULT NULL,\\n  `A_VAR2` float DEFAULT NULL,\\n  `A_VAR3` float DEFAULT NULL,\\n  `A_VAR4` float DEFAULT NULL,\\n  `A_VAR5` float DEFAULT NULL,\\n  `A_VAR6` float DEFAULT NULL,\\n  `A_VAR7` float DEFAULT NULL,\\n  `A_VAR8` float DEFAULT NULL,\\n  `A_VAR9` float DEFAULT NULL,\\n  `A_VAR10` float DEFAULT NULL,\\n  `A_VAR11` float DEFAULT NULL,\\n  `A_VAR12` float DEFAULT NULL,\\n  `A_VAR13` float DEFAULT NULL,\\n  `A_VAR14` float DEFAULT NULL,\\n  `A_VAR15` float DEFAULT NULL,\\n  `A_VAR16` float DEFAULT NULL,\\n  `A_VAR17` float DEFAULT NULL,\\n  `A_VAR18` float DEFAULT NULL,\\n  PRIMARY KEY (`GEOID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Departamento con las columnas de, ID de departamento, nombre, nombre de grupo, fecha de modificación",
      "output": "('Department', \"CREATE TABLE `Department` (\\n  `DepartmentID` smallint(6) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Department records.'  `Name` varchar(100) NOT NULL COMMENT 'Name of the department.',\\n  `GroupName` varchar(100) NOT NULL COMMENT 'Name of the group to which the department belongs.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`DepartmentID`),\\n  UNIQUE KEY `AK_Department_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the departments within the Adventure Works Cycles company.'\")"
    },
    {
      "input": "Una tabla de Documento con las columnas de, Nodo de documento, Nivel de documento, Título, Propietario, Bandera de carpeta, Nombre de archivo, Extensión de archivo, Revisión, Número de cambio, Estado, Resumen de documento, Documento, rowguid, Fecha de modificación",
      "output": "('Document', \"CREATE TABLE `Document` (\\n  `DocumentNode` varchar(255) NOT NULL COMMENT 'Primary key for Document records.'  `DocumentLevel` smallint(6) DEFAULT NULL COMMENT 'Depth in the document hierarchy.',\\n  `Title` varchar(50) NOT NULL COMMENT 'Title of the document.',\\n  `Owner` int(11) NOT NULL COMMENT 'Employee who controls the document.  Foreign key to Employee.BusinessEntityID',\\n  `FolderFlag` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = This is a folder, 1 = This is a document.',\\n  `FileName` varchar(400) NOT NULL COMMENT 'File name of the document',\\n  `FileExtension` varchar(8) NOT NULL COMMENT 'File extension indicating the document type. For example, .doc or .txt.',\\n  `Revision` char(5) NOT NULL COMMENT 'Revision number of the document. ',\\n  `ChangeNumber` int(11) NOT NULL DEFAULT 0 COMMENT 'Engineering change approval number.',\\n  `Status` tinyint(3) unsigned NOT NULL COMMENT '1 = Pending approval, 2 = Approved, 3 = Obsolete',\\n  `DocumentSummary` longtext DEFAULT NULL COMMENT 'Document abstract.',\\n  `Document` longblob DEFAULT NULL COMMENT 'Complete document.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Required for FileStream.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`DocumentNode`),\\n  UNIQUE KEY `UQ__Document__F73921F763026E5E` (`rowguid`),\\n  UNIQUE KEY `AK_Document_rowguid` (`rowguid`),\\n  UNIQUE KEY `AK_Document_DocumentLevel_DocumentNode` (`DocumentLevel`,`DocumentNode`),\\n  KEY `IX_Document_FileName_Revision` (`FileName`(255),`Revision`),\\n  KEY `FK_Document_Employee_Owner` (`Owner`),\\n  KEY `GUID_Document` (`rowguid`),\\n  CONSTRAINT `FK_Document_Employee_Owner` FOREIGN KEY (`Owner`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product maintenance documents.'\")"
    },
    {
      "input": "Una tabla de DIRECCIÓN DE CORREO ELECTRÓNICO con las columnas de, ID DE ENTIDAD DE NEGOCIO, ID DE DIRECCIÓN DE CORREO ELECTRÓNICO, DIRECCIÓN DE CORREO ELECTRÓNICO, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('EMAILADDRESS', \"CREATE TABLE `EMAILADDRESS` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID'  `EMAILADDRESSID` int(11) NOT NULL COMMENT 'Primary key. ID of this email address.',\\n  `EMAILADDRESS` varchar(50) DEFAULT NULL COMMENT 'E-mail address for the person.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`EMAILADDRESSID`,`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Where to send a person email.'\")"
    },
    {
      "input": "Una tabla de EMPLEADO con las columnas de, BUSINESSENTITYID, NATIONALIDNUMBER, LOGINID, ORGANIZATIONNODE, ORGANIZATIONLEVEL, JOBTITLE, BIRTHDATE, CITALSTATUS, GENDER, HIREDATE, SALARIEDFLAG, VACATIONHOURS, SICKLEAVEHOURS, CURRENTBANDER, ROWGUID, MODIFIEDDATE",
      "output": "('EMPLOYEE', \"CREATE TABLE `EMPLOYEE` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.'  `NATIONALIDNUMBER` varchar(15) NOT NULL COMMENT 'Unique national identification number such as a social security number.',\\n  `LOGINID` varchar(256) NOT NULL COMMENT 'Network login.',\\n  `ORGANIZATIONNODE` varchar(255) DEFAULT NULL COMMENT 'Where the employee is located in corporate hierarchy.',\\n  `ORGANIZATIONLEVEL` smallint(6) DEFAULT NULL COMMENT 'The depth of the employee in the corporate hierarchy.',\\n  `JOBTITLE` varchar(50) NOT NULL COMMENT 'Work title such as Buyer or Sales Representative.',\\n  `BIRTHDATE` date NOT NULL COMMENT 'Date of birth.',\\n  `MARITALSTATUS` char(1) NOT NULL COMMENT 'M = Married, S = Single',\\n  `GENDER` char(1) NOT NULL COMMENT 'M = Male, F = Female',\\n  `HIREDATE` date NOT NULL COMMENT 'Employee hired on this date.',\\n  `SALARIEDFLAG` tinyint(1) NOT NULL DEFAULT 1 COMMENT 'Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.',\\n  `VACATIONHOURS` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Number of available vacation hours.',\\n  `SICKLEAVEHOURS` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Number of available sick leave hours.',\\n  `CURRENTFLAG` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Inactive, 1 = Active',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee information such as salary, department, and title.'\")"
    },
    {
      "input": "Una tabla de HISTORIA DEL DEPARTAMENTO DE EMPLEADOS con las columnas de, IDENTIFICACIÓN DE NEGOCIO, IDENTIFICACIÓN DE DEPARTAMENTO, IDENTIFICACIÓN DE TURNO, FECHA DE INICIO, FECHA DE FINALIZACIÓN, FECHA DE MODIFICACIÓN",
      "output": "('EMPLOYEEDEPARTMENTHISTORY', \"CREATE TABLE `EMPLOYEEDEPARTMENTHISTORY` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Employee identification number. Foreign key to Employee.BusinessEntityID.'  `DEPARTMENTID` smallint(6) NOT NULL COMMENT 'Department in which the employee worked including currently. Foreign key to Department.DepartmentID.',\\n  `SHIFTID` tinyint(3) unsigned NOT NULL COMMENT 'Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.',\\n  `STARTDATE` date NOT NULL COMMENT 'Date the employee started work in the department.',\\n  `ENDDATE` date DEFAULT NULL COMMENT 'Date the employee left the department. NULL = Current department.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`,`STARTDATE`,`DEPARTMENTID`,`SHIFTID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee department transfers.'\")"
    },
    {
      "input": "Una tabla de HISTORIAL DE PAGO DE EMPLEADOS con las columnas de, IDENTIFICACIÓN DEL NEGOCIO, FECHA DE CAMBIO DE TASA, TASA, FRECUENCIA DE PAGO, FECHA DE MODIFICACIÓN",
      "output": "('EMPLOYEEPAYHISTORY', \"CREATE TABLE `EMPLOYEEPAYHISTORY` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Employee identification number. Foreign key to Employee.BusinessEntityID.'  `RATECHANGEDATE` datetime NOT NULL COMMENT 'Date the change in pay is effective',\\n  `RATE` decimal(19,4) NOT NULL COMMENT 'Salary hourly rate.',\\n  `PAYFREQUENCY` tinyint(3) unsigned NOT NULL COMMENT '1 = Salary received monthly, 2 = Salary received biweekly',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`,`RATECHANGEDATE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee pay history.'\")"
    },
    {
      "input": "Una tabla de ROLES HABILITADOS con las columnas de, NOMBRE DE ROL",
      "output": "('ENABLED_ROLES', 'CREATE TABLE `ENABLED_ROLES` (\\n  `ROLE_NAME` varchar(128) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=5549053 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de MOTORES con las columnas de, MOTOR, SOPORTE, COMENTARIO, TRANSACCIONES, XA, SAVEPOINTS",
      "output": "('ENGINES', \"CREATE TABLE `ENGINES` (\\n  `ENGINE` varchar(64) NOT NULL DEFAULT ''  `SUPPORT` varchar(8) NOT NULL DEFAULT '',\\n  `COMMENT` varchar(160) NOT NULL DEFAULT '',\\n  `TRANSACTIONS` varchar(3) DEFAULT NULL,\\n  `XA` varchar(3) DEFAULT NULL,\\n  `SAVEPOINTS` varchar(3) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=2937734 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ENTRADA con las columnas deY, CAJ, AZÚCAR, IM, IML, HT, HTD, HTL, ICT, ICTL, DIABET, DIABD, DIABL, HYPLIP, HYPLD, HYPLL, IMTRV, HTTRV, ICTTRV, DIABTRV, HYPLTRV, BOLHR, BOLDK, DUSNOST, VYSKA, VA, SYST, DIAST, SYST, DIAST, TRIC, SUBSC, CHLST, TRIGL, MOC, RARISK, OBEZRISK, KOURRISK, HTRISK, CHOLRISK",
      "output": "('ENTRY', 'CREATE TABLE `ENTRY` (\\n  `ICO` int(11) NOT NULL  `KONSKUP` int(11) DEFAULT NULL,\\n  `ROKNAR` int(11) DEFAULT NULL,\\n  `ROKVSTUP` int(11) DEFAULT NULL,\\n  `MESVSTUP` int(11) DEFAULT NULL,\\n  `STAV` int(11) DEFAULT NULL,\\n  `VZDELANI` int(11) DEFAULT NULL,\\n  `ZODPOV` int(11) DEFAULT NULL,\\n  `TELAKTZA` int(11) DEFAULT NULL,\\n  `AKTPOZAM` int(11) DEFAULT NULL,\\n  `DOPRAVA` int(11) DEFAULT NULL,\\n  `DOPRATRV` int(11) DEFAULT NULL,\\n  `KOURENI` int(11) DEFAULT NULL,\\n  `DOBAKOUR` varchar(255) DEFAULT NULL,\\n  `BYVKURAK` varchar(255) DEFAULT NULL,\\n  `ALKOHOL` int(11) DEFAULT NULL,\\n  `PIVO7` varchar(255) DEFAULT NULL,\\n  `PIVO10` int(11) DEFAULT NULL,\\n  `PIVO12` varchar(255) DEFAULT NULL,\\n  `VINO` int(11) DEFAULT NULL,\\n  `LIHOV` int(11) DEFAULT NULL,\\n  `PIVOMN` int(11) DEFAULT NULL,\\n  `VINOMN` int(11) DEFAULT NULL,\\n  `LIHMN` int(11) DEFAULT NULL,\\n  `KAVA` int(11) DEFAULT NULL,\\n  `CAJ` int(11) DEFAULT NULL,\\n  `CUKR` int(11) DEFAULT NULL,\\n  `IM` int(11) DEFAULT NULL,\\n  `IML` varchar(255) DEFAULT NULL,\\n  `HT` int(11) DEFAULT NULL,\\n  `HTD` varchar(255) DEFAULT NULL,\\n  `HTL` varchar(255) DEFAULT NULL,\\n  `ICT` int(11) DEFAULT NULL,\\n  `ICTL` varchar(255) DEFAULT NULL,\\n  `DIABET` int(11) DEFAULT NULL,\\n  `DIABD` int(11) DEFAULT NULL,\\n  `DIABL` int(11) DEFAULT NULL,\\n  `HYPLIP` int(11) DEFAULT NULL,\\n  `HYPLD` varchar(255) DEFAULT NULL,\\n  `HYPLL` varchar(255) DEFAULT NULL,\\n  `IMTRV` varchar(255) DEFAULT NULL,\\n  `HTTRV` varchar(255) DEFAULT NULL,\\n  `ICTTRV` varchar(255) DEFAULT NULL,\\n  `DIABTRV` int(11) DEFAULT NULL,\\n  `HYPLTRV` varchar(255) DEFAULT NULL,\\n  `BOLHR` int(11) DEFAULT NULL,\\n  `BOLDK` int(11) DEFAULT NULL,\\n  `DUSNOST` int(11) DEFAULT NULL,\\n  `VYSKA` int(11) DEFAULT NULL,\\n  `VAHA` int(11) DEFAULT NULL,\\n  `SYST1` int(11) DEFAULT NULL,\\n  `DIAST1` int(11) DEFAULT NULL,\\n  `SYST2` varchar(255) DEFAULT NULL,\\n  `DIAST2` varchar(255) DEFAULT NULL,\\n  `TRIC` int(11) DEFAULT NULL,\\n  `SUBSC` int(11) DEFAULT NULL,\\n  `CHLST` int(11) DEFAULT NULL,\\n  `TRIGL` int(11) DEFAULT NULL,\\n  `MOC` int(11) DEFAULT NULL,\\n  `RARISK` int(11) DEFAULT NULL,\\n  `OBEZRISK` int(11) DEFAULT NULL,\\n  `KOURRISK` int(11) DEFAULT NULL,\\n  `HTRISK` int(11) DEFAULT NULL,\\n  `CHOLRISK` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ICO`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de REGISTRO DE ERRORES con las columnas de, LOGID DE ERROR, TIEMPO DE ERROR, NOMBRE DE USUARIO, NÚMERO DE ERROR, SEVERIDAD DE ERROR, ESTADO DE ERROR, PROCEDIMIENTO DE ERROR, LÍNEA DE ERROR, MENSAJE DE ERROR",
      "output": "('ERRORLOG', \"CREATE TABLE `ERRORLOG` (\\n  `ERRORLOGID` int(11) NOT NULL COMMENT 'Primary key for ErrorLog records.'  `ERRORTIME` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'The date and time at which the error occurred.',\\n  `USERNAME` varchar(160) NOT NULL COMMENT 'The user who executed the batch in which the error occurred.',\\n  `ERRORNUMBER` int(11) NOT NULL COMMENT 'The error number of the error that occurred.',\\n  `ERRORSEVERITY` int(11) DEFAULT NULL COMMENT 'The severity of the error that occurred.',\\n  `ERRORSTATE` int(11) DEFAULT NULL COMMENT 'The state number of the error that occurred.',\\n  `ERRORPROCEDURE` varchar(126) DEFAULT NULL COMMENT 'The name of the stored procedure or trigger where the error occurred.',\\n  `ERRORLINE` int(11) DEFAULT NULL COMMENT 'The line number at which the error occurred.',\\n  `ERRORMESSAGE` varchar(4000) NOT NULL COMMENT 'The message text of the error that occurred.',\\n  PRIMARY KEY (`ERRORLOGID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.'\")"
    },
    {
      "input": "Una tabla de EVENTOS con las columnas de, CATÁLOGO DE EVENTOS, ESQUEMA DE EVENTOS, NOMBRE DEL EVENTO, DEFINITOR, ZONA HORARIA, CUERPO DEL EVENTO, DEFINICIÓN DEL EVENTO, TIPO DE EVENTO, EJECUTAR EN, VALOR DEL INTERVALO, CAMPO DEL INTERVALO, MODO SQL, COMIENZA, TERMINA, ESTADO, AL FINALIZAR, CREADO, ÚLTIMA ALTERACIÓN, ÚLTIMO EJECUTADO, COMENTARIO DE EVENTO, ORIGINADOR, CLIENTE DE CONJUNTO DE CARACTERES, CONEXIÓN DE COLACIÓN, COLACIÓN DE BASE DE DATOS",
      "output": "('EVENTS', \"CREATE TABLE `EVENTS` (\\n  `EVENT_CATALOG` varchar(64) NOT NULL DEFAULT ''  `EVENT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `EVENT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `DEFINER` varchar(189) NOT NULL DEFAULT '',\\n  `TIME_ZONE` varchar(64) NOT NULL DEFAULT '',\\n  `EVENT_BODY` varchar(8) NOT NULL DEFAULT '',\\n  `EVENT_DEFINITION` longtext NOT NULL,\\n  `EVENT_TYPE` varchar(9) NOT NULL DEFAULT '',\\n  `EXECUTE_AT` datetime DEFAULT NULL,\\n  `INTERVAL_VALUE` varchar(256) DEFAULT NULL,\\n  `INTERVAL_FIELD` varchar(18) DEFAULT NULL,\\n  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',\\n  `STARTS` datetime DEFAULT NULL,\\n  `ENDS` datetime DEFAULT NULL,\\n  `STATUS` varchar(18) NOT NULL DEFAULT '',\\n  `ON_COMPLETION` varchar(12) NOT NULL DEFAULT '',\\n  `CREATED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_ALTERED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_EXECUTED` datetime DEFAULT NULL,\\n  `EVENT_COMMENT` varchar(64) NOT NULL DEFAULT '',\\n  `ORIGINATOR` bigint(10) NOT NULL DEFAULT 0,\\n  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',\\n  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',\\n  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=78255 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de PERMISO DE CUENTA E con las columnas de, AP CA ID, AP ACL, AP TAX ID, AP L NOMBRE, AP F NOMBRE",
      "output": "('E_ACCOUNT_PERMISSION', 'CREATE TABLE `E_ACCOUNT_PERMISSION` (\\n  `AP_CA_ID` decimal(11,0) NOT NULL  `AP_ACL` char(4) NOT NULL,\\n  `AP_TAX_ID` char(20) NOT NULL,\\n  `AP_L_NAME` char(30) NOT NULL,\\n  `AP_F_NAME` char(30) NOT NULL,\\n  PRIMARY KEY (`AP_CA_ID`,`AP_TAX_ID`),\\n  UNIQUE KEY `PK_E_ACCOUNT_PERMISSION` (`AP_CA_ID`,`AP_TAX_ID`),\\n  CONSTRAINT `E_ACCOUNT_PERMISSION_ibfk_1` FOREIGN KEY (`AP_CA_ID`) REFERENCES `E_CUSTOMER_ACCOUNT` (`CA_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de DIRECCIÓN ELECTRÓNICA con las columnas de, ID DE ANUNCIO, LÍNEA DE ANUNCIO, LÍNEA DE ANUNCIO, CÓDIGO ZC DE ANUNCIO, PRUEBA DE ANUNCIO",
      "output": "('E_ADDRESS', 'CREATE TABLE `E_ADDRESS` (\\n  `AD_ID` decimal(11,0) NOT NULL  `AD_LINE1` char(80) DEFAULT NULL,\\n  `AD_LINE2` char(80) DEFAULT NULL,\\n  `AD_ZC_CODE` char(12) NOT NULL,\\n  `AD_CTRY` char(80) DEFAULT NULL,\\n  PRIMARY KEY (`AD_ID`),\\n  UNIQUE KEY `PK_E_ADDRESS` (`AD_ID`),\\n  KEY `AD_ZC_CODE` (`AD_ZC_CODE`),\\n  CONSTRAINT `E_ADDRESS_ibfk_1` FOREIGN KEY (`AD_ZC_CODE`) REFERENCES `E_ZIP_CODE` (`ZC_CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ES UN CORREDOR con las columnas de, B ID, B ST ID, B NOMBRE, B NUM NEGOCIOS, B COMM TOTAL",
      "output": "('E_BROKER', 'CREATE TABLE `E_BROKER` (\\n  `B_ID` decimal(11,0) NOT NULL  `B_ST_ID` char(4) NOT NULL,\\n  `B_NAME` char(100) NOT NULL,\\n  `B_NUM_TRADES` decimal(9,0) NOT NULL,\\n  `B_COMM_TOTAL` decimal(12,2) NOT NULL,\\n  PRIMARY KEY (`B_ID`),\\n  UNIQUE KEY `PK_E_BROKER` (`B_ID`),\\n  UNIQUE KEY `E_BROKER_INDX1` (`B_NAME`,`B_ID`),\\n  UNIQUE KEY `E_BROKER_INDX2` (`B_ID`,`B_NAME`),\\n  KEY `B_ST_ID` (`B_ST_ID`),\\n  CONSTRAINT `E_BROKER_ibfk_1` FOREIGN KEY (`B_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de TRANSACCIÓN EN EFECTIVO con las columnas de, CT T ID, CT DTS, CT AMT, CT NOMBRE",
      "output": "('E_CASH_TRANSACTION', 'CREATE TABLE `E_CASH_TRANSACTION` (\\n  `CT_T_ID` decimal(15,0) NOT NULL  `CT_DTS` date DEFAULT NULL,\\n  `CT_AMT` decimal(10,2) NOT NULL,\\n  `CT_NAME` char(100) DEFAULT NULL,\\n  PRIMARY KEY (`CT_T_ID`),\\n  UNIQUE KEY `PK_E_CASH_TRANSACTION` (`CT_T_ID`),\\n  CONSTRAINT `E_CASH_TRANSACTION_ibfk_1` FOREIGN KEY (`CT_T_ID`) REFERENCES `E_TRADE` (`T_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de CARGO E con las columnas de, F tat Eid, f c tr, f cargo",
      "output": "('E_CHARGE', 'CREATE TABLE `E_CHARGE` (\\n  `CH_TT_ID` char(3) NOT NULL  `CH_C_TIER` decimal(1,0) NOT NULL,\\n  `CH_CHRG` decimal(10,2) NOT NULL,\\n  PRIMARY KEY (`CH_TT_ID`,`CH_C_TIER`),\\n  UNIQUE KEY `PK_E_CHARGE` (`CH_TT_ID`,`CH_C_TIER`),\\n  CONSTRAINT `E_CHARGE_ibfk_1` FOREIGN KEY (`CH_TT_ID`) REFERENCES `E_TRADE_TYPE` (`TT_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de TASA DE COMISIÓN con las columnas de, CR C NIVEL, CR TT ID, CR EX ID, CR DE CANTIDAD, CR A CANTIDAD, CR TASA",
      "output": "('E_COMMISSION_RATE', 'CREATE TABLE `E_COMMISSION_RATE` (\\n  `CR_C_TIER` decimal(1,0) NOT NULL  `CR_TT_ID` char(3) NOT NULL,\\n  `CR_EX_ID` char(6) NOT NULL,\\n  `CR_FROM_QTY` decimal(9,0) NOT NULL,\\n  `CR_TO_QTY` decimal(9,0) NOT NULL,\\n  `CR_RATE` decimal(5,2) NOT NULL,\\n  PRIMARY KEY (`CR_C_TIER`,`CR_TT_ID`,`CR_EX_ID`,`CR_FROM_QTY`),\\n  UNIQUE KEY `PK_E_COMMISSION_RATE` (`CR_C_TIER`,`CR_TT_ID`,`CR_EX_ID`,`CR_FROM_QTY`),\\n  KEY `CR_EX_ID` (`CR_EX_ID`),\\n  KEY `CR_TT_ID` (`CR_TT_ID`),\\n  CONSTRAINT `E_COMMISSION_RATE_ibfk_1` FOREIGN KEY (`CR_EX_ID`) REFERENCES `E_EXCHANGE` (`EX_ID`),\\n  CONSTRAINT `E_COMMISSION_RATE_ibfk_2` FOREIGN KEY (`CR_TT_ID`) REFERENCES `E_TRADE_TYPE` (`TT_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de EMPRESA con las columnas de, CO ID, CO ST ID, CO NOMBRE, CO IN ID, CO SP RATE, CO CEO, CO AD ID, CO DESC, CO ABRIR FECHA",
      "output": "('E_COMPANY', 'CREATE TABLE `E_COMPANY` (\\n  `CO_ID` decimal(11,0) NOT NULL  `CO_ST_ID` char(4) NOT NULL,\\n  `CO_NAME` char(60) NOT NULL,\\n  `CO_IN_ID` char(2) NOT NULL,\\n  `CO_SP_RATE` char(4) NOT NULL,\\n  `CO_CEO` char(100) NOT NULL,\\n  `CO_AD_ID` decimal(11,0) NOT NULL,\\n  `CO_DESC` char(150) NOT NULL,\\n  `CO_OPEN_DATE` date DEFAULT NULL,\\n  PRIMARY KEY (`CO_ID`),\\n  UNIQUE KEY `PK_E_COMPANY` (`CO_ID`),\\n  UNIQUE KEY `E_COMPANY_INDX1` (`CO_NAME`,`CO_ID`),\\n  UNIQUE KEY `E_COMPANY_INDX2` (`CO_IN_ID`,`CO_ID`),\\n  KEY `CO_AD_ID` (`CO_AD_ID`),\\n  KEY `CO_ST_ID` (`CO_ST_ID`),\\n  CONSTRAINT `E_COMPANY_ibfk_1` FOREIGN KEY (`CO_AD_ID`) REFERENCES `E_ADDRESS` (`AD_ID`),\\n  CONSTRAINT `E_COMPANY_ibfk_2` FOREIGN KEY (`CO_IN_ID`) REFERENCES `E_INDUSTRY` (`IN_ID`),\\n  CONSTRAINT `E_COMPANY_ibfk_3` FOREIGN KEY (`CO_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E EMPRESA COMPETIDOR con las columnas de, CP CO ID, CP COMP CO ID, CP IN ID",
      "output": "('E_COMPANY_COMPETITOR', 'CREATE TABLE `E_COMPANY_COMPETITOR` (\\n  `CP_CO_ID` decimal(11,0) NOT NULL  `CP_COMP_CO_ID` decimal(11,0) NOT NULL,\\n  `CP_IN_ID` char(2) NOT NULL,\\n  PRIMARY KEY (`CP_CO_ID`,`CP_COMP_CO_ID`,`CP_IN_ID`),\\n  UNIQUE KEY `PK_E_COMPANY_COMPETITOR` (`CP_CO_ID`,`CP_COMP_CO_ID`,`CP_IN_ID`),\\n  KEY `CP_COMP_CO_ID` (`CP_COMP_CO_ID`),\\n  KEY `CP_IN_ID` (`CP_IN_ID`),\\n  KEY `E_COMPANY_COMPETITOR_INDX1` (`CP_CO_ID`),\\n  CONSTRAINT `E_COMPANY_COMPETITOR_ibfk_1` FOREIGN KEY (`CP_COMP_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`),\\n  CONSTRAINT `E_COMPANY_COMPETITOR_ibfk_2` FOREIGN KEY (`CP_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`),\\n  CONSTRAINT `E_COMPANY_COMPETITOR_ibfk_3` FOREIGN KEY (`CP_IN_ID`) REFERENCES `E_INDUSTRY` (`IN_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de CLIENTE ELECTRÓNICO con las columnas de, C ID, C TAX ID, C ST ID, C L NOMBRE, C F NOMBRE, C M NOMBRE, C GNDR, C TIER, C DOB, C AD ID, C CTRY , CAR AREA , C LOCAL , C EXT , C CTRY , C AREA , C LOCAL , C EXT , C CTRY , AREA DE ATENCION , C LOCAL , C EXT , C EMAIL , C EMAIL",
      "output": "('E_CUSTOMER', 'CREATE TABLE `E_CUSTOMER` (\\n  `C_ID` decimal(11,0) NOT NULL  `C_TAX_ID` char(20) NOT NULL,\\n  `C_ST_ID` char(4) NOT NULL,\\n  `C_L_NAME` char(30) NOT NULL,\\n  `C_F_NAME` char(30) NOT NULL,\\n  `C_M_NAME` char(1) DEFAULT NULL,\\n  `C_GNDR` char(1) DEFAULT NULL,\\n  `C_TIER` decimal(1,0) NOT NULL,\\n  `C_DOB` date DEFAULT NULL,\\n  `C_AD_ID` decimal(11,0) NOT NULL,\\n  `C_CTRY_1` char(3) DEFAULT NULL,\\n  `C_AREA_1` char(3) DEFAULT NULL,\\n  `C_LOCAL_1` char(10) DEFAULT NULL,\\n  `C_EXT_1` char(5) DEFAULT NULL,\\n  `C_CTRY_2` char(3) DEFAULT NULL,\\n  `C_AREA_2` char(3) DEFAULT NULL,\\n  `C_LOCAL_2` char(10) DEFAULT NULL,\\n  `C_EXT_2` char(5) DEFAULT NULL,\\n  `C_CTRY_3` char(3) DEFAULT NULL,\\n  `C_AREA_3` char(3) DEFAULT NULL,\\n  `C_LOCAL_3` char(10) DEFAULT NULL,\\n  `C_EXT_3` char(5) DEFAULT NULL,\\n  `C_EMAIL_1` char(50) DEFAULT NULL,\\n  `C_EMAIL_2` char(50) DEFAULT NULL,\\n  PRIMARY KEY (`C_ID`),\\n  UNIQUE KEY `PK_E_CUSTOMER` (`C_ID`),\\n  UNIQUE KEY `E_CUSTOMER_INDX1` (`C_TAX_ID`,`C_ID`),\\n  UNIQUE KEY `E_CUSTOMER_INDX2` (`C_ID`,`C_TIER`),\\n  KEY `C_ST_ID` (`C_ST_ID`),\\n  KEY `C_AD_ID` (`C_AD_ID`),\\n  CONSTRAINT `E_CUSTOMER_ibfk_1` FOREIGN KEY (`C_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`),\\n  CONSTRAINT `E_CUSTOMER_ibfk_2` FOREIGN KEY (`C_AD_ID`) REFERENCES `E_ADDRESS` (`AD_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de CUENTA DE CLIENTE con las columnas de, CA ID, CA B ID, CA C ID, CA NAME, CA TAX ST, CA BAL",
      "output": "('E_CUSTOMER_ACCOUNT', 'CREATE TABLE `E_CUSTOMER_ACCOUNT` (\\n  `CA_ID` decimal(11,0) NOT NULL  `CA_B_ID` decimal(11,0) NOT NULL,\\n  `CA_C_ID` decimal(11,0) NOT NULL,\\n  `CA_NAME` char(50) NOT NULL,\\n  `CA_TAX_ST` decimal(1,0) NOT NULL,\\n  `CA_BAL` decimal(12,2) NOT NULL,\\n  PRIMARY KEY (`CA_ID`),\\n  UNIQUE KEY `PK_E_CUSTOMER_ACCOUNT` (`CA_ID`),\\n  UNIQUE KEY `E_CUSTOMER_ACCOUNT_INDX1` (`CA_C_ID`,`CA_ID`),\\n  UNIQUE KEY `E_CUSTOMER_ACCOUNT_INDX2` (`CA_B_ID`,`CA_ID`,`CA_C_ID`),\\n  UNIQUE KEY `E_CUSTOMER_ACCOUNT_INDX3` (`CA_ID`,`CA_B_ID`,`CA_C_ID`,`CA_TAX_ST`,`CA_NAME`),\\n  CONSTRAINT `E_CUSTOMER_ACCOUNT_ibfk_1` FOREIGN KEY (`CA_B_ID`) REFERENCES `E_BROKER` (`B_ID`),\\n  CONSTRAINT `E_CUSTOMER_ACCOUNT_ibfk_2` FOREIGN KEY (`CA_C_ID`) REFERENCES `E_CUSTOMER` (`C_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de TASA DE IMPUESTO AL CLIENTE con las columnas de, ID de CX TX, ID de CX C",
      "output": "('E_CUSTOMER_TAXRATE', 'CREATE TABLE `E_CUSTOMER_TAXRATE` (\\n  `CX_TX_ID` char(4) NOT NULL  `CX_C_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`CX_TX_ID`,`CX_C_ID`),\\n  UNIQUE KEY `PK_E_CUSTOMER_TAXRATE` (`CX_C_ID`,`CX_TX_ID`),\\n  CONSTRAINT `E_CUSTOMER_TAXRATE_ibfk_1` FOREIGN KEY (`CX_C_ID`) REFERENCES `E_CUSTOMER` (`C_ID`),\\n  CONSTRAINT `E_CUSTOMER_TAXRATE_ibfk_2` FOREIGN KEY (`CX_TX_ID`) REFERENCES `E_TAXRATE` (`TX_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E MERCADO DIARIO con las columnas de, FECHA DM, SÍMB DM, CIERRE DM, ALTO DM, BAJO DM, VOLUMEN DM",
      "output": "('E_DAILY_MARKET', 'CREATE TABLE `E_DAILY_MARKET` (\\n  `DM_DATE` date NOT NULL  `DM_S_SYMB` char(15) NOT NULL,\\n  `DM_CLOSE` decimal(8,2) NOT NULL,\\n  `DM_HIGH` decimal(8,2) NOT NULL,\\n  `DM_LOW` decimal(8,2) NOT NULL,\\n  `DM_VOL` decimal(12,0) NOT NULL,\\n  PRIMARY KEY (`DM_DATE`,`DM_S_SYMB`),\\n  UNIQUE KEY `PK_E_DAILY_MARKET` (`DM_S_SYMB`,`DM_DATE`),\\n  UNIQUE KEY `E_DAILY_MARKET_INDX1` (`DM_DATE`,`DM_S_SYMB`),\\n  CONSTRAINT `E_DAILY_MARKET_ibfk_1` FOREIGN KEY (`DM_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de INTERCAMBIO E con las columnas de, EX ID, EX NOMBRE, EX NUM SYMB, EX ABRIR, EX CLOSE, EX DESC, EX AD ID",
      "output": "('E_EXCHANGE', 'CREATE TABLE `E_EXCHANGE` (\\n  `EX_ID` char(6) NOT NULL  `EX_NAME` char(100) NOT NULL,\\n  `EX_NUM_SYMB` decimal(6,0) NOT NULL,\\n  `EX_OPEN` decimal(4,0) NOT NULL,\\n  `EX_CLOSE` decimal(4,0) NOT NULL,\\n  `EX_DESC` char(150) DEFAULT NULL,\\n  `EX_AD_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`EX_ID`),\\n  UNIQUE KEY `PK_E_EXCHANGE` (`EX_ID`),\\n  KEY `EX_AD_ID` (`EX_AD_ID`),\\n  CONSTRAINT `E_EXCHANGE_ibfk_1` FOREIGN KEY (`EX_AD_ID`) REFERENCES `E_ADDRESS` (`AD_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E FINANCIERO con las columnas de, ID CO FI, AÑO FI, TRIM FI, FECHA DE INICIO DEL TRIM FI, INGRESOS FI, GANANCIA NETA FI, UPA BÁSICA FI, UPA DILUCIÓN FI, MARGEN FI, INVENTARIO FI, ACTIVO FI, PASIVO FI, SALIDA FI BÁSICA, SALIDA FI DILUIDA",
      "output": "('E_FINANCIAL', 'CREATE TABLE `E_FINANCIAL` (\\n  `FI_CO_ID` decimal(11,0) NOT NULL  `FI_YEAR` decimal(4,0) NOT NULL,\\n  `FI_QTR` decimal(1,0) NOT NULL,\\n  `FI_QTR_START_DATE` date DEFAULT NULL,\\n  `FI_REVENUE` decimal(15,2) NOT NULL,\\n  `FI_NET_EARN` decimal(15,2) NOT NULL,\\n  `FI_BASIC_EPS` decimal(10,2) NOT NULL,\\n  `FI_DILUT_EPS` decimal(10,2) NOT NULL,\\n  `FI_MARGIN` decimal(10,2) NOT NULL,\\n  `FI_INVENTORY` decimal(15,2) NOT NULL,\\n  `FI_ASSETS` decimal(15,2) NOT NULL,\\n  `FI_LIABILITY` decimal(15,2) NOT NULL,\\n  `FI_OUT_BASIC` decimal(12,0) NOT NULL,\\n  `FI_OUT_DILUT` decimal(12,0) NOT NULL,\\n  PRIMARY KEY (`FI_CO_ID`,`FI_YEAR`,`FI_QTR`),\\n  UNIQUE KEY `PK_E_FINANCIAL` (`FI_CO_ID`,`FI_YEAR`,`FI_QTR`),\\n  CONSTRAINT `E_FINANCIAL_ibfk_1` FOREIGN KEY (`FI_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E HOLDING con las columnas de, H T ID, H CA ID, H S SYMB, H DTS, H PRECIO, H CANTIDAD",
      "output": "('E_HOLDING', 'CREATE TABLE `E_HOLDING` (\\n  `H_T_ID` decimal(15,0) NOT NULL  `H_CA_ID` decimal(11,0) NOT NULL,\\n  `H_S_SYMB` char(15) NOT NULL,\\n  `H_DTS` date DEFAULT NULL,\\n  `H_PRICE` decimal(8,2) NOT NULL,\\n  `H_QTY` decimal(9,0) NOT NULL,\\n  PRIMARY KEY (`H_T_ID`),\\n  UNIQUE KEY `PK_E_HOLDING` (`H_T_ID`),\\n  UNIQUE KEY `E_HOLDING_INDX1` (`H_CA_ID`,`H_S_SYMB`,`H_DTS`,`H_T_ID`),\\n  CONSTRAINT `E_HOLDING_ibfk_1` FOREIGN KEY (`H_CA_ID`, `H_S_SYMB`) REFERENCES `E_HOLDING_SUMMARY` (`HS_CA_ID`, `HS_S_SYMB`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_HOLDING_ibfk_2` FOREIGN KEY (`H_T_ID`) REFERENCES `E_TRADE` (`T_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E HISTORIAL DE TENENCIA con las columnas de, HH H T ID, HH T ID, HH ANTES DE LA CANTIDAD, HH DESPUÉS DE LA CANTIDAD",
      "output": "('E_HOLDING_HISTORY', 'CREATE TABLE `E_HOLDING_HISTORY` (\\n  `HH_H_T_ID` decimal(15,0) NOT NULL  `HH_T_ID` decimal(15,0) NOT NULL,\\n  `HH_BEFORE_QTY` decimal(9,0) NOT NULL,\\n  `HH_AFTER_QTY` decimal(9,0) NOT NULL,\\n  PRIMARY KEY (`HH_H_T_ID`,`HH_T_ID`),\\n  UNIQUE KEY `PK_E_HOLDING_HISTORY` (`HH_H_T_ID`,`HH_T_ID`),\\n  UNIQUE KEY `E_HOLDING_HISTORY_INDX1` (`HH_T_ID`,`HH_H_T_ID`),\\n  CONSTRAINT `E_HOLDING_HISTORY_ibfk_1` FOREIGN KEY (`HH_T_ID`) REFERENCES `E_TRADE` (`T_ID`),\\n  CONSTRAINT `E_HOLDING_HISTORY_ibfk_2` FOREIGN KEY (`HH_H_T_ID`) REFERENCES `E_HOLDING` (`H_T_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E RESUMEN DE EXPLOTACIÓN con las columnas de, HS CA ID, HS S SYMB, HS CANT",
      "output": "('E_HOLDING_SUMMARY', 'CREATE TABLE `E_HOLDING_SUMMARY` (\\n  `HS_CA_ID` decimal(11,0) NOT NULL  `HS_S_SYMB` char(15) NOT NULL,\\n  `HS_QTY` decimal(9,0) NOT NULL,\\n  PRIMARY KEY (`HS_CA_ID`,`HS_S_SYMB`),\\n  UNIQUE KEY `PK_E_HOLDING_SUMMARY` (`HS_CA_ID`,`HS_S_SYMB`),\\n  KEY `HS_S_SYMB` (`HS_S_SYMB`),\\n  CONSTRAINT `E_HOLDING_SUMMARY_ibfk_1` FOREIGN KEY (`HS_CA_ID`) REFERENCES `E_CUSTOMER_ACCOUNT` (`CA_ID`),\\n  CONSTRAINT `E_HOLDING_SUMMARY_ibfk_2` FOREIGN KEY (`HS_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de INDUSTRIA ELECTRÓNICA con las columnas de, EN ID, EN NOMBRE, EN SC ID",
      "output": "('E_INDUSTRY', 'CREATE TABLE `E_INDUSTRY` (\\n  `IN_ID` char(2) NOT NULL  `IN_NAME` char(50) NOT NULL,\\n  `IN_SC_ID` char(2) NOT NULL,\\n  PRIMARY KEY (`IN_ID`),\\n  UNIQUE KEY `PK_E_INDUSTRY` (`IN_ID`),\\n  UNIQUE KEY `E_INDUSTRY_INDX1` (`IN_NAME`,`IN_ID`),\\n  UNIQUE KEY `E_INDUSTRY_INDX2` (`IN_SC_ID`,`IN_ID`),\\n  CONSTRAINT `E_INDUSTRY_ibfk_1` FOREIGN KEY (`IN_SC_ID`) REFERENCES `E_SECTOR` (`SC_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E ÚLTIMA OPERACIÓN con las columnas de, LT S SYMB, LT DTS, LT PRECIO, LT OPEN PRECIO, LT VOL",
      "output": "('E_LAST_TRADE', 'CREATE TABLE `E_LAST_TRADE` (\\n  `LT_S_SYMB` char(15) NOT NULL  `LT_DTS` date DEFAULT NULL,\\n  `LT_PRICE` decimal(8,2) NOT NULL,\\n  `LT_OPEN_PRICE` decimal(8,2) NOT NULL,\\n  `LT_VOL` decimal(12,0) NOT NULL,\\n  PRIMARY KEY (`LT_S_SYMB`),\\n  UNIQUE KEY `PK_E_LAST_TRADE` (`LT_S_SYMB`),\\n  CONSTRAINT `E_LAST_TRADE_ibfk_1` FOREIGN KEY (`LT_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E NOTICIA con las columnas de, SIN ID, SIN TÍTULO, SIN RESUMEN, SIN ELEMENTO, SIN DTS, SIN FUENTE, SIN AUTOR",
      "output": "('E_NEWS_ITEM', 'CREATE TABLE `E_NEWS_ITEM` (\\n  `NI_ID` decimal(11,0) NOT NULL  `NI_HEADLINE` char(80) NOT NULL,\\n  `NI_SUMMARY` char(255) NOT NULL,\\n  `NI_ITEM` longtext NOT NULL,\\n  `NI_DTS` date DEFAULT NULL,\\n  `NI_SOURCE` char(30) NOT NULL,\\n  `NI_AUTHOR` char(30) DEFAULT NULL,\\n  PRIMARY KEY (`NI_ID`),\\n  UNIQUE KEY `PK_E_NEWS_ITEM` (`NI_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E NOTICIAS REFX con las columnas de, ID NI NX, ID CO NX",
      "output": "('E_NEWS_XREF', 'CREATE TABLE `E_NEWS_XREF` (\\n  `NX_NI_ID` decimal(11,0) NOT NULL  `NX_CO_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`NX_NI_ID`,`NX_CO_ID`),\\n  UNIQUE KEY `PK_E_NEWS_XREF` (`NX_CO_ID`,`NX_NI_ID`),\\n  KEY `NX_NI_ID` (`NX_NI_ID`),\\n  CONSTRAINT `E_NEWS_XREF_ibfk_1` FOREIGN KEY (`NX_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_NEWS_XREF_ibfk_2` FOREIGN KEY (`NX_NI_ID`) REFERENCES `E_NEWS_ITEM` (`NI_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de SECTOR E con las columnas de, ID SC, NOMBRE SC",
      "output": "('E_SECTOR', 'CREATE TABLE `E_SECTOR` (\\n  `SC_ID` char(2) NOT NULL  `SC_NAME` char(30) NOT NULL,\\n  PRIMARY KEY (`SC_ID`),\\n  UNIQUE KEY `PK_E_SECTOR` (`SC_ID`),\\n  UNIQUE KEY `E_SECTOR_INDX1` (`SC_NAME`,`SC_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de SEGURIDAD con las columnas de, S SYMB, S ISSUE, S ST ID, S NAME, S EX ID, S CO ID, S NUM OUT, S START DATE, S EXCH DATE, S PE, S WK HIGH, S WK HIGH DATE, S WK LOW, S WK FECHA BAJA, S DIVIDENDO, S RENDIMIENTO",
      "output": "('E_SECURITY', 'CREATE TABLE `E_SECURITY` (\\n  `S_SYMB` char(15) NOT NULL  `S_ISSUE` char(6) NOT NULL,\\n  `S_ST_ID` char(4) NOT NULL,\\n  `S_NAME` char(70) NOT NULL,\\n  `S_EX_ID` char(6) NOT NULL,\\n  `S_CO_ID` decimal(11,0) NOT NULL,\\n  `S_NUM_OUT` decimal(12,0) NOT NULL,\\n  `S_START_DATE` date DEFAULT NULL,\\n  `S_EXCH_DATE` date DEFAULT NULL,\\n  `S_PE` decimal(10,2) NOT NULL,\\n  `S_52WK_HIGH` decimal(8,2) NOT NULL,\\n  `S_52WK_HIGH_DATE` date DEFAULT NULL,\\n  `S_52WK_LOW` decimal(8,2) NOT NULL,\\n  `S_52WK_LOW_DATE` date DEFAULT NULL,\\n  `S_DIVIDEND` decimal(10,2) NOT NULL,\\n  `S_YIELD` decimal(5,2) NOT NULL,\\n  PRIMARY KEY (`S_SYMB`),\\n  UNIQUE KEY `PK_E_SECURITY` (`S_SYMB`),\\n  UNIQUE KEY `E_SECURITY_INDX1` (`S_CO_ID`,`S_ISSUE`,`S_EX_ID`,`S_SYMB`),\\n  UNIQUE KEY `E_SECURITY_INDX2` (`S_CO_ID`,`S_NUM_OUT`,`S_SYMB`),\\n  KEY `S_EX_ID` (`S_EX_ID`),\\n  KEY `S_ST_ID` (`S_ST_ID`),\\n  CONSTRAINT `E_SECURITY_ibfk_1` FOREIGN KEY (`S_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`),\\n  CONSTRAINT `E_SECURITY_ibfk_2` FOREIGN KEY (`S_EX_ID`) REFERENCES `E_EXCHANGE` (`EX_ID`),\\n  CONSTRAINT `E_SECURITY_ibfk_3` FOREIGN KEY (`S_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E LIQUIDACIÓN con las columnas de, SE T ID, SE TIPO DE EFECTIVO, SE FECHA DE VENCIMIENTO DE EFECTIVO, SE AMT",
      "output": "('E_SETTLEMENT', 'CREATE TABLE `E_SETTLEMENT` (\\n  `SE_T_ID` decimal(15,0) NOT NULL  `SE_CASH_TYPE` char(40) NOT NULL,\\n  `SE_CASH_DUE_DATE` date DEFAULT NULL,\\n  `SE_AMT` decimal(10,2) NOT NULL,\\n  PRIMARY KEY (`SE_T_ID`),\\n  UNIQUE KEY `PK_E_SETTLEMENT` (`SE_T_ID`),\\n  CONSTRAINT `E_SETTLEMENT_ibfk_1` FOREIGN KEY (`SE_T_ID`) REFERENCES `E_TRADE` (`T_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E ESTADO TIPO con las columnas de, ID ST, NOMBRE ST",
      "output": "('E_STATUS_TYPE', 'CREATE TABLE `E_STATUS_TYPE` (\\n  `ST_ID` char(4) NOT NULL  `ST_NAME` char(10) NOT NULL,\\n  PRIMARY KEY (`ST_ID`),\\n  UNIQUE KEY `PK_E_STATUS_TYPE` (`ST_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de O date prisa con las columnas de, ID TX, NOMBRE TX, TASA TX",
      "output": "('E_TAXRATE', 'CREATE TABLE `E_TAXRATE` (\\n  `TX_ID` char(4) NOT NULL  `TX_NAME` char(50) NOT NULL,\\n  `TX_RATE` decimal(6,5) NOT NULL,\\n  PRIMARY KEY (`TX_ID`),\\n  UNIQUE KEY `PK_E_TAXRATE` (`TX_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Y COMERCIO con las columnas de, T ID, T DTS, T ST ID, T TT ID, T IS CASH, R S SYMBOL, T QTY, T BID PRICE, T CA ID, T EXEC NAME, T TRADE PRICE, T CHRG, T COMM, T TAX, T-LIFO",
      "output": "('E_TRADE', 'CREATE TABLE `E_TRADE` (\\n  `T_ID` decimal(15,0) NOT NULL  `T_DTS` date DEFAULT NULL,\\n  `T_ST_ID` char(4) NOT NULL,\\n  `T_TT_ID` char(3) NOT NULL,\\n  `T_IS_CASH` char(1) NOT NULL,\\n  `T_S_SYMB` char(15) NOT NULL,\\n  `T_QTY` decimal(9,0) NOT NULL,\\n  `T_BID_PRICE` decimal(8,2) NOT NULL,\\n  `T_CA_ID` decimal(11,0) NOT NULL,\\n  `T_EXEC_NAME` char(64) NOT NULL,\\n  `T_TRADE_PRICE` decimal(8,2) DEFAULT NULL,\\n  `T_CHRG` decimal(10,2) NOT NULL,\\n  `T_COMM` decimal(10,2) NOT NULL,\\n  `T_TAX` decimal(10,2) NOT NULL,\\n  `T_LIFO` char(1) NOT NULL,\\n  PRIMARY KEY (`T_ID`),\\n  UNIQUE KEY `PK_E_TRADE` (`T_ID`),\\n  UNIQUE KEY `E_TRADE_INDX1` (`T_CA_ID`,`T_DTS`,`T_ID`),\\n  UNIQUE KEY `E_TRADE_INDX2` (`T_S_SYMB`,`T_DTS`,`T_ID`),\\n  KEY `T_ST_ID` (`T_ST_ID`),\\n  KEY `E_TRADE_INDX3` (`T_CA_ID`),\\n  KEY `T_TT_ID` (`T_TT_ID`),\\n  CONSTRAINT `E_TRADE_ibfk_1` FOREIGN KEY (`T_CA_ID`) REFERENCES `E_CUSTOMER_ACCOUNT` (`CA_ID`),\\n  CONSTRAINT `E_TRADE_ibfk_2` FOREIGN KEY (`T_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`),\\n  CONSTRAINT `E_TRADE_ibfk_3` FOREIGN KEY (`T_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_TRADE_ibfk_4` FOREIGN KEY (`T_TT_ID`) REFERENCES `E_TRADE_TYPE` (`TT_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de HISTORIA DEL COMERCIO ELECTRÓNICO con las columnas de, TH T ID, TH DTS, TH ST ID",
      "output": "('E_TRADE_HISTORY', 'CREATE TABLE `E_TRADE_HISTORY` (\\n  `TH_T_ID` decimal(15,0) NOT NULL  `TH_DTS` date DEFAULT NULL,\\n  `TH_ST_ID` char(4) NOT NULL,\\n  PRIMARY KEY (`TH_T_ID`,`TH_ST_ID`),\\n  UNIQUE KEY `PK_E_TRADE_HISTORY` (`TH_T_ID`,`TH_ST_ID`),\\n  KEY `TH_ST_ID` (`TH_ST_ID`),\\n  CONSTRAINT `E_TRADE_HISTORY_ibfk_1` FOREIGN KEY (`TH_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`),\\n  CONSTRAINT `E_TRADE_HISTORY_ibfk_2` FOREIGN KEY (`TH_T_ID`) REFERENCES `E_TRADE` (`T_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de SOLICITUD DE COMERCIO ELECTRÓNICO con las columnas de, TR T ID, TR TT ID, TR S SYMB, TR QTY, TR BID PRECIO, TR CA ID",
      "output": "('E_TRADE_REQUEST', 'CREATE TABLE `E_TRADE_REQUEST` (\\n  `TR_T_ID` decimal(15,0) NOT NULL  `TR_TT_ID` char(3) NOT NULL,\\n  `TR_S_SYMB` char(15) NOT NULL,\\n  `TR_QTY` decimal(9,0) NOT NULL,\\n  `TR_BID_PRICE` decimal(8,2) NOT NULL,\\n  `TR_CA_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`TR_T_ID`,`TR_TT_ID`,`TR_CA_ID`),\\n  UNIQUE KEY `PK_E_TRADE_REQUEST` (`TR_T_ID`),\\n  UNIQUE KEY `E_TRADE_REQUEST_INDX1` (`TR_CA_ID`,`TR_S_SYMB`,`TR_T_ID`),\\n  UNIQUE KEY `E_TRADE_REQUEST_INDX2` (`TR_S_SYMB`,`TR_T_ID`,`TR_TT_ID`,`TR_BID_PRICE`,`TR_QTY`),\\n  KEY `TR_TT_ID` (`TR_TT_ID`),\\n  CONSTRAINT `E_TRADE_REQUEST_ibfk_1` FOREIGN KEY (`TR_T_ID`) REFERENCES `E_TRADE` (`T_ID`),\\n  CONSTRAINT `E_TRADE_REQUEST_ibfk_4` FOREIGN KEY (`TR_TT_ID`) REFERENCES `E_TRADE_TYPE` (`TT_ID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_TRADE_REQUEST_ibfk_5` FOREIGN KEY (`TR_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_TRADE_REQUEST_ibfk_6` FOREIGN KEY (`TR_CA_ID`) REFERENCES `E_CUSTOMER_ACCOUNT` (`CA_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E TIPO DE COMERCIO con las columnas de, TT ID, TT NOMBRE, TT ES VENDER, TT ES MRKT",
      "output": "('E_TRADE_TYPE', 'CREATE TABLE `E_TRADE_TYPE` (\\n  `TT_ID` char(3) NOT NULL  `TT_NAME` char(12) NOT NULL,\\n  `TT_IS_SELL` char(1) NOT NULL,\\n  `TT_IS_MRKT` char(1) NOT NULL,\\n  PRIMARY KEY (`TT_ID`),\\n  UNIQUE KEY `PK_E_TRADE_TYPE` (`TT_ID`),\\n  UNIQUE KEY `E_TRADE_TYPE_INDX` (`TT_ID`,`TT_IS_MRKT`,`TT_IS_SELL`,`TT_NAME`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E VER ARTÍCULO con las columnas de, WI WI IN, SÍMBOLO WI S",
      "output": "('E_WATCH_ITEM', 'CREATE TABLE `E_WATCH_ITEM` (\\n  `WI_WL_ID` decimal(11,0) NOT NULL  `WI_S_SYMB` char(15) NOT NULL,\\n  PRIMARY KEY (`WI_WL_ID`,`WI_S_SYMB`),\\n  UNIQUE KEY `PK_E_WATCH_ITEM` (`WI_WL_ID`,`WI_S_SYMB`),\\n  KEY `WI_S_SYMB` (`WI_S_SYMB`),\\n  CONSTRAINT `E_WATCH_ITEM_ibfk_1` FOREIGN KEY (`WI_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`),\\n  CONSTRAINT `E_WATCH_ITEM_ibfk_2` FOREIGN KEY (`WI_WL_ID`) REFERENCES `E_WATCH_LIST` (`WL_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de E LISTA DE VIGILANCIA con las columnas de, ID de WL, ID de WL C",
      "output": "('E_WATCH_LIST', 'CREATE TABLE `E_WATCH_LIST` (\\n  `WL_ID` decimal(11,0) NOT NULL  `WL_C_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`WL_ID`),\\n  UNIQUE KEY `PK_E_WATCH_LIST` (`WL_ID`),\\n  UNIQUE KEY `E_WATCH_LIST_INDX1` (`WL_C_ID`,`WL_ID`),\\n  CONSTRAINT `E_WATCH_LIST_ibfk_1` FOREIGN KEY (`WL_C_ID`) REFERENCES `E_CUSTOMER` (`C_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de CÓDIGO POSTAL con las columnas de, CÓDIGO ZC, CIUDAD ZC, DIV ZC",
      "output": "('E_ZIP_CODE', 'CREATE TABLE `E_ZIP_CODE` (\\n  `ZC_CODE` char(12) NOT NULL  `ZC_TOWN` char(80) NOT NULL,\\n  `ZC_DIV` char(80) NOT NULL,\\n  PRIMARY KEY (`ZC_CODE`),\\n  UNIQUE KEY `PK_E_ZIP_CODE` (`ZC_CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Dirección de correo electrónico con las columnas de, Id. de entidad comercial, Id. de dirección de correo electrónico, Dirección de correo electrónico, rowguid, Fecha de modificación",
      "output": "('EmailAddress', \"CREATE TABLE `EmailAddress` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID'  `EmailAddressID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key. ID of this email address.',\\n  `EmailAddress` varchar(50) DEFAULT NULL COMMENT 'E-mail address for the person.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`EmailAddressID`,`BusinessEntityID`),\\n  KEY `IX_EmailAddress_EmailAddress` (`EmailAddress`),\\n  KEY `FK_EmailAddress_Person_BusinessEntityID` (`BusinessEntityID`),\\n  KEY `GUID_EmailAddress` (`rowguid`),\\n  CONSTRAINT `FK_EmailAddress_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Where to send a person email.'\")"
    },
    {
      "input": "Una tabla de Empleado con las columnas de, Id. de entidad comercial, Número de identificación nacional, Id. de inicio de sesión, Nodo de organización, Nivel de organización, Título del trabajo, Fecha de nacimiento, Estado civil, Sexo, Fecha de contratación, Indicador asalariado, Horas de vacaciones, Horas de licencia por enfermedad, Indicador actual, rowguid, Fecha de modificación",
      "output": "('Employee', \"CREATE TABLE `Employee` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.'  `NationalIDNumber` varchar(15) NOT NULL COMMENT 'Unique national identification number such as a social security number.',\\n  `LoginID` varchar(256) NOT NULL COMMENT 'Network login.',\\n  `OrganizationNode` varchar(255) DEFAULT NULL COMMENT 'Where the employee is located in corporate hierarchy.',\\n  `OrganizationLevel` smallint(6) DEFAULT NULL COMMENT 'The depth of the employee in the corporate hierarchy.',\\n  `JobTitle` varchar(50) NOT NULL COMMENT 'Work title such as Buyer or Sales Representative.',\\n  `BirthDate` date NOT NULL COMMENT 'Date of birth.',\\n  `MaritalStatus` char(1) NOT NULL COMMENT 'M = Married, S = Single',\\n  `Gender` char(1) NOT NULL COMMENT 'M = Male, F = Female',\\n  `HireDate` date NOT NULL COMMENT 'Employee hired on this date.',\\n  `SalariedFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT 'Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.',\\n  `VacationHours` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Number of available vacation hours.',\\n  `SickLeaveHours` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Number of available sick leave hours.',\\n  `CurrentFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Inactive, 1 = Active',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_Employee_NationalIDNumber` (`NationalIDNumber`),\\n  UNIQUE KEY `AK_Employee_rowguid` (`rowguid`),\\n  UNIQUE KEY `AK_Employee_LoginID` (`LoginID`(255)),\\n  KEY `IX_Employee_OrganizationNode` (`OrganizationNode`),\\n  KEY `IX_Employee_OrganizationLevel_OrganizationNode` (`OrganizationLevel`,`OrganizationNode`),\\n  KEY `GUID_Employee` (`rowguid`),\\n  CONSTRAINT `FK_Employee_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee information such as salary, department, and title.'\")"
    },
    {
      "input": "Una tabla de Historial del departamento de empleados con las columnas de, Id. de entidad comercial, Id. de departamento, Id. de turno, Fecha de inicio, Fecha de finalización, Fecha de modificación",
      "output": "('EmployeeDepartmentHistory', \"CREATE TABLE `EmployeeDepartmentHistory` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Employee identification number. Foreign key to Employee.BusinessEntityID.'  `DepartmentID` smallint(6) NOT NULL COMMENT 'Department in which the employee worked including currently. Foreign key to Department.DepartmentID.',\\n  `ShiftID` tinyint(3) unsigned NOT NULL COMMENT 'Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.',\\n  `StartDate` date NOT NULL COMMENT 'Date the employee started work in the department.',\\n  `EndDate` date DEFAULT NULL COMMENT 'Date the employee left the department. NULL = Current department.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`StartDate`,`DepartmentID`,`ShiftID`),\\n  KEY `IX_EmployeeDepartmentHistory_DepartmentID` (`DepartmentID`),\\n  KEY `IX_EmployeeDepartmentHistory_ShiftID` (`ShiftID`),\\n  CONSTRAINT `FK_EmployeeDepartmentHistory_Department_DepartmentID` FOREIGN KEY (`DepartmentID`) REFERENCES `Department` (`DepartmentID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_EmployeeDepartmentHistory_Employee_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_EmployeeDepartmentHistory_Shift_ShiftID` FOREIGN KEY (`ShiftID`) REFERENCES `Shift` (`ShiftID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee department transfers.'\")"
    },
    {
      "input": "Una tabla de Historial de pago de empleados con las columnas de, ID de entidad comercial, fecha de cambio de tarifa, tarifa, frecuencia de pago, fecha de modificación",
      "output": "('EmployeePayHistory', \"CREATE TABLE `EmployeePayHistory` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Employee identification number. Foreign key to Employee.BusinessEntityID.'  `RateChangeDate` datetime NOT NULL COMMENT 'Date the change in pay is effective',\\n  `Rate` decimal(19,4) NOT NULL COMMENT 'Salary hourly rate.',\\n  `PayFrequency` tinyint(3) unsigned NOT NULL COMMENT '1 = Salary received monthly, 2 = Salary received biweekly',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`RateChangeDate`),\\n  CONSTRAINT `FK_EmployeePayHistory_Employee_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee pay history.'\")"
    },
    {
      "input": "Una tabla de Registro de errores con las columnas de, Id. de registro de error, Hora de error, Nombre de usuario, Número de error, Gravedad de error, Estado de error, Procedimiento de error, Línea de error, Mensaje de error",
      "output": "('ErrorLog', \"CREATE TABLE `ErrorLog` (\\n  `ErrorLogID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ErrorLog records.'  `ErrorTime` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'The date and time at which the error occurred.',\\n  `UserName` varchar(160) NOT NULL COMMENT 'The user who executed the batch in which the error occurred.',\\n  `ErrorNumber` int(11) NOT NULL COMMENT 'The error number of the error that occurred.',\\n  `ErrorSeverity` int(11) DEFAULT NULL COMMENT 'The severity of the error that occurred.',\\n  `ErrorState` int(11) DEFAULT NULL COMMENT 'The state number of the error that occurred.',\\n  `ErrorProcedure` varchar(126) DEFAULT NULL COMMENT 'The name of the stored procedure or trigger where the error occurred.',\\n  `ErrorLine` int(11) DEFAULT NULL COMMENT 'The line number at which the error occurred.',\\n  `ErrorMessage` varchar(4000) NOT NULL COMMENT 'The message text of the error that occurred.',\\n  PRIMARY KEY (`ErrorLogID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.'\")"
    },
    {
      "input": "Una tabla de ARCHIVOS con las columnas de, ID DE ARCHIVO, NOMBRE DE ARCHIVO, TIPO DE ARCHIVO, NOMBRE DEL ESPACIO DE LA MESA, CATÁLOGO DE LA MESA, ESQUEMA DE LA MESA, NOMBRE DE LA MESA, NOMBRE DEL GRUPO DEL ARCHIVO DE REGISTRO, NÚMERO DEL GRUPO DEL ARCHIVO DE REGISTRO, MOTOR, TECLAS DE TEXTO COMPLETO, FILAS ELIMINADAS, CONTADOR DE ACTUALIZACIONES, EXTENSIÓN LIBRE, EXTENSIÓN TOTAL, TAMAÑO DE LA EXTENSIÓN, TAMAÑO INICIAL, TAMAÑO MÁXIMO, TAMAÑO DE EXTENSIÓN AUTOMÁTICA, TIEMPO DE CREACIÓN, TIEMPO DE ÚLTIMA ACTUALIZACIÓN, TIEMPO DE ÚLTIMO ACCESO, TIEMPO DE RECUPERACIÓN, CONTADOR DE TRANSACCIONES, VERSIÓN, FORMATO DE FILA, FILAS DE LA MESA, LONGITUD PROMEDIO DE FILA, LONGITUD DE DATOS, LONGITUD MÁXIMA DE DATOS, LONGITUD DE ÍNDICE, LIBRE DE DATOS , CREAR HORA, ACTUALIZAR HORA, VERIFICAR HORA, CHECKSUM, ESTADO, EXTRA",
      "output": "('FILES', \"CREATE TABLE `FILES` (\\n  `FILE_ID` bigint(4) NOT NULL DEFAULT 0  `FILE_NAME` varchar(64) DEFAULT NULL,\\n  `FILE_TYPE` varchar(20) NOT NULL DEFAULT '',\\n  `TABLESPACE_NAME` varchar(64) DEFAULT NULL,\\n  `TABLE_CATALOG` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) DEFAULT NULL,\\n  `TABLE_NAME` varchar(64) DEFAULT NULL,\\n  `LOGFILE_GROUP_NAME` varchar(64) DEFAULT NULL,\\n  `LOGFILE_GROUP_NUMBER` bigint(4) DEFAULT NULL,\\n  `ENGINE` varchar(64) NOT NULL DEFAULT '',\\n  `FULLTEXT_KEYS` varchar(64) DEFAULT NULL,\\n  `DELETED_ROWS` bigint(4) DEFAULT NULL,\\n  `UPDATE_COUNT` bigint(4) DEFAULT NULL,\\n  `FREE_EXTENTS` bigint(4) DEFAULT NULL,\\n  `TOTAL_EXTENTS` bigint(4) DEFAULT NULL,\\n  `EXTENT_SIZE` bigint(4) NOT NULL DEFAULT 0,\\n  `INITIAL_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `MAXIMUM_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `AUTOEXTEND_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `CREATION_TIME` datetime DEFAULT NULL,\\n  `LAST_UPDATE_TIME` datetime DEFAULT NULL,\\n  `LAST_ACCESS_TIME` datetime DEFAULT NULL,\\n  `RECOVER_TIME` bigint(4) DEFAULT NULL,\\n  `TRANSACTION_COUNTER` bigint(4) DEFAULT NULL,\\n  `VERSION` bigint(21) unsigned DEFAULT NULL,\\n  `ROW_FORMAT` varchar(10) DEFAULT NULL,\\n  `TABLE_ROWS` bigint(21) unsigned DEFAULT NULL,\\n  `AVG_ROW_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `DATA_FREE` bigint(21) unsigned DEFAULT NULL,\\n  `CREATE_TIME` datetime DEFAULT NULL,\\n  `UPDATE_TIME` datetime DEFAULT NULL,\\n  `CHECK_TIME` datetime DEFAULT NULL,\\n  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,\\n  `STATUS` varchar(20) NOT NULL DEFAULT '',\\n  `EXTRA` varchar(255) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=802197 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ESTADO GLOBAL con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE",
      "output": "('GLOBAL_STATUS', \"CREATE TABLE `GLOBAL_STATUS` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=657124 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de VARIABLES GLOBALES con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE",
      "output": "('GLOBAL_VARIABLES', \"CREATE TABLE `GLOBAL_VARIABLES` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=657124 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ILUSTRACIÓN con las columnas de, ID DE ILUSTRACIÓN, DIAGRAMA, FECHA DE MODIFICACIÓN",
      "output": "('ILLUSTRATION', \"CREATE TABLE `ILLUSTRATION` (\\n  `ILLUSTRATIONID` int(11) NOT NULL COMMENT 'Primary key for Illustration records.'  `DIAGRAM` text DEFAULT NULL COMMENT 'Illustrations used in manufacturing instructions. Stored as XML.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ILLUSTRATIONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Bicycle assembly diagrams.'\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DEL ÍNDICE con las columnas de, ESQUEMA DE TABLA, NOMBRE DE TABLA, NOMBRE DE ÍNDICE, LECTURA DE FILAS",
      "output": "('INDEX_STATISTICS', \"CREATE TABLE `INDEX_STATISTICS` (\\n  `TABLE_SCHEMA` varchar(192) NOT NULL DEFAULT ''  `TABLE_NAME` varchar(192) NOT NULL DEFAULT '',\\n  `INDEX_NAME` varchar(192) NOT NULL DEFAULT '',\\n  `ROWS_READ` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1232061 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de PÁGINA DE BÚFER DE INNODB con las columnas de, ID DE GRUPO, ID DE BLOQUE, ESPACIO, NÚMERO DE PÁGINA, TIPO DE PÁGINA, TIPO DE DESCARGA, CONTEO DE ARREGLOS, TIENE HASH, MODIFICACIÓN MÁS NUEVA, MODIFICACIÓN MÁS ANTIGUA, TIEMPO DE ACCESO, NOMBRE DE LA TABLA, NOMBRE DEL ÍNDICE, NÚMERO DE REGISTROS, TAMAÑO DE DATOS, TAMAÑO COMPRIMIDO, ESTADO DE LA PÁGINA , IO FIX, ES ANTIGUO, RELOJ DE PÁGINA LIBRE",
      "output": "('INNODB_BUFFER_PAGE', 'CREATE TABLE `INNODB_BUFFER_PAGE` (\\n  `POOL_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `BLOCK_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `SPACE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_NUMBER` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_TYPE` varchar(64) DEFAULT NULL,\\n  `FLUSH_TYPE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `FIX_COUNT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `IS_HASHED` varchar(3) DEFAULT NULL,\\n  `NEWEST_MODIFICATION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `OLDEST_MODIFICATION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `ACCESS_TIME` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `TABLE_NAME` varchar(1024) DEFAULT NULL,\\n  `INDEX_NAME` varchar(1024) DEFAULT NULL,\\n  `NUMBER_RECORDS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATA_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `COMPRESSED_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_STATE` varchar(64) DEFAULT NULL,\\n  `IO_FIX` varchar(64) DEFAULT NULL,\\n  `IS_OLD` varchar(3) DEFAULT NULL,\\n  `FREE_PAGE_CLOCK` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=313409 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de PÁGINA DE BÚFER INNODB LRU con las columnas de, ID DE GRUPO, POSICIÓN DE LRU, ESPACIO, NÚMERO DE PÁGINA, TIPO DE PÁGINA, TIPO DE LIMPIEZA, CONTEO DE ARREGLOS, TIENE HASH, MODIFICACIÓN MÁS NUEVA, MODIFICACIÓN MÁS ANTIGUA, TIEMPO DE ACCESO, NOMBRE DE LA TABLA, NOMBRE DEL ÍNDICE, NÚMERO DE REGISTROS, TAMAÑO DE DATOS, TAMAÑO COMPRIMIDO, COMPRIMIDO, IO FIX, ES ANTIGUO, RELOJ DE PÁGINA LIBRE",
      "output": "('INNODB_BUFFER_PAGE_LRU', 'CREATE TABLE `INNODB_BUFFER_PAGE_LRU` (\\n  `POOL_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `LRU_POSITION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `SPACE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_NUMBER` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_TYPE` varchar(64) DEFAULT NULL,\\n  `FLUSH_TYPE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `FIX_COUNT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `IS_HASHED` varchar(3) DEFAULT NULL,\\n  `NEWEST_MODIFICATION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `OLDEST_MODIFICATION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `ACCESS_TIME` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `TABLE_NAME` varchar(1024) DEFAULT NULL,\\n  `INDEX_NAME` varchar(1024) DEFAULT NULL,\\n  `NUMBER_RECORDS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATA_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `COMPRESSED_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `COMPRESSED` varchar(3) DEFAULT NULL,\\n  `IO_FIX` varchar(64) DEFAULT NULL,\\n  `IS_OLD` varchar(3) DEFAULT NULL,\\n  `FREE_PAGE_CLOCK` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=322009 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DEL GRUPO DE BÚFER INNODB con las columnas de, ID DE LA PISCINA, TAMAÑO DE LA PISCINA, BÚFERES LIBRES, PÁGINAS DE LA BASE DE DATOS, PÁGINAS DE LA BASE DE DATOS ANTIGUAS, PÁGINAS DE LA BASE DE DATOS MODIFICADAS, DESCOMPRESIÓN PENDIENTES, LECTURAS PENDIENTES, LRU DE LIMPIEZA PENDIENTE, LISTA DE LIMPIEZA PENDIENTE, PÁGINAS REALIZADAS JOVEN, PÁGINAS NO FORMADAS JOVEN, PÁGINAS REALIZADAS TARIFA JOVEN, PÁGINAS TARIFA NO HECHA JOVEN, NÚMERO DE PÁGINAS LEÍDAS, NÚMERO DE PÁGINAS CREADAS, NÚMERO DE PÁGINAS ESCRITAS, TARIFA DE LECTURA DE PÁGINAS, TARIFA DE CREACIÓN DE PÁGINAS, TARIFA DE PÁGINAS ESCRITAS, NÚMERO DE PÁGINAS OBTENER, TASA DE ACCESOS, JOVEN HACER POR MIL RECIBOS, NO JOVEN HACER POR MIL RECIBOS, NÚMERO PÁGINAS DE LECTURA ADELANTE, NÚMERO DE LECTURAS PREVIAS DESALOJADAS, TASA DE LECTURAS ADELANTE, TASA DE LECTURAS DESALOJADAS ADELANTE, TOTAL DE E/S DE LRU, CORRIENTE DE E/S DE LRU, TOTAL DESCOMPRIMIDO, CORRIENTE DESCOMPRIMIDA",
      "output": "('INNODB_BUFFER_POOL_STATS', 'CREATE TABLE `INNODB_BUFFER_POOL_STATS` (\\n  `POOL_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `POOL_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `FREE_BUFFERS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATABASE_PAGES` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `OLD_DATABASE_PAGES` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MODIFIED_DATABASE_PAGES` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PENDING_DECOMPRESS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PENDING_READS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PENDING_FLUSH_LRU` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PENDING_FLUSH_LIST` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGES_MADE_YOUNG` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGES_NOT_MADE_YOUNG` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGES_MADE_YOUNG_RATE` double NOT NULL DEFAULT 0,\\n  `PAGES_MADE_NOT_YOUNG_RATE` double NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_READ` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_CREATED` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_WRITTEN` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGES_READ_RATE` double NOT NULL DEFAULT 0,\\n  `PAGES_CREATE_RATE` double NOT NULL DEFAULT 0,\\n  `PAGES_WRITTEN_RATE` double NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_GET` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `HIT_RATE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `YOUNG_MAKE_PER_THOUSAND_GETS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NOT_YOUNG_MAKE_PER_THOUSAND_GETS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_READ_AHEAD` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NUMBER_READ_AHEAD_EVICTED` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `READ_AHEAD_RATE` double NOT NULL DEFAULT 0,\\n  `READ_AHEAD_EVICTED_RATE` double NOT NULL DEFAULT 0,\\n  `LRU_IO_TOTAL` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `LRU_IO_CURRENT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `UNCOMPRESS_TOTAL` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `UNCOMPRESS_CURRENT` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=8355967 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de PÁGINAS CAMBIADAS DE INNODB con las columnas de, id de espacio, id de página, inicio lsn, final lsn",
      "output": "('INNODB_CHANGED_PAGES', 'CREATE TABLE `INNODB_CHANGED_PAGES` (\\n  `space_id` int(11) unsigned NOT NULL DEFAULT 0  `page_id` int(11) unsigned NOT NULL DEFAULT 0,\\n  `start_lsn` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `end_lsn` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=85899345 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de INNODB CMP con las columnas de, tamaño de página, comprimir operaciones, comprimir operaciones ok, comprimir tiempo, descomprimir operaciones, descomprimir tiempo",
      "output": "('INNODB_CMP', 'CREATE TABLE `INNODB_CMP` (\\n  `page_size` int(5) NOT NULL DEFAULT 0  `compress_ops` int(11) NOT NULL DEFAULT 0,\\n  `compress_ops_ok` int(11) NOT NULL DEFAULT 0,\\n  `compress_time` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_ops` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=85899345 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de INNODB CMPMEM con las columnas de, tamaño de página, instancia de grupo de búfer, páginas utilizadas, páginas libres, operaciones de reubicación, tiempo de reubicación",
      "output": "('INNODB_CMPMEM', 'CREATE TABLE `INNODB_CMPMEM` (\\n  `page_size` int(5) NOT NULL DEFAULT 0  `buffer_pool_instance` int(11) NOT NULL DEFAULT 0,\\n  `pages_used` int(11) NOT NULL DEFAULT 0,\\n  `pages_free` int(11) NOT NULL DEFAULT 0,\\n  `relocation_ops` bigint(21) NOT NULL DEFAULT 0,\\n  `relocation_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=74051160 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de RESTABLECIMIENTO DE INNODB CMPMEM con las columnas de, tamaño de página, instancia de grupo de búfer, páginas utilizadas, páginas libres, operaciones de reubicación, tiempo de reubicación",
      "output": "('INNODB_CMPMEM_RESET', 'CREATE TABLE `INNODB_CMPMEM_RESET` (\\n  `page_size` int(5) NOT NULL DEFAULT 0  `buffer_pool_instance` int(11) NOT NULL DEFAULT 0,\\n  `pages_used` int(11) NOT NULL DEFAULT 0,\\n  `pages_free` int(11) NOT NULL DEFAULT 0,\\n  `relocation_ops` bigint(21) NOT NULL DEFAULT 0,\\n  `relocation_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=74051160 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de INNODB CMP POR ÍNDICE con las columnas de, nombre de base de datos, nombre de tabla, nombre de índice, comprimir operaciones, comprimir operaciones ok, comprimir tiempo, descomprimir operaciones, descomprimir tiempo",
      "output": "('INNODB_CMP_PER_INDEX', \"CREATE TABLE `INNODB_CMP_PER_INDEX` (\\n  `database_name` varchar(192) NOT NULL DEFAULT ''  `table_name` varchar(192) NOT NULL DEFAULT '',\\n  `index_name` varchar(192) NOT NULL DEFAULT '',\\n  `compress_ops` int(11) NOT NULL DEFAULT 0,\\n  `compress_ops_ok` int(11) NOT NULL DEFAULT 0,\\n  `compress_time` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_ops` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1223637 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de INNODB CMP POR REINICIO DEL ÍNDICE con las columnas de, nombre de base de datos, nombre de tabla, nombre de índice, comprimir operaciones, comprimir operaciones ok, comprimir tiempo, descomprimir operaciones, descomprimir tiempo",
      "output": "('INNODB_CMP_PER_INDEX_RESET', \"CREATE TABLE `INNODB_CMP_PER_INDEX_RESET` (\\n  `database_name` varchar(192) NOT NULL DEFAULT ''  `table_name` varchar(192) NOT NULL DEFAULT '',\\n  `index_name` varchar(192) NOT NULL DEFAULT '',\\n  `compress_ops` int(11) NOT NULL DEFAULT 0,\\n  `compress_ops_ok` int(11) NOT NULL DEFAULT 0,\\n  `compress_time` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_ops` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1223637 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de RESTABLECIMIENTO DE INNODB CMP con las columnas de, tamaño de página, comprimir operaciones, comprimir operaciones ok, comprimir tiempo, descomprimir operaciones, descomprimir tiempo",
      "output": "('INNODB_CMP_RESET', 'CREATE TABLE `INNODB_CMP_RESET` (\\n  `page_size` int(5) NOT NULL DEFAULT 0  `compress_ops` int(11) NOT NULL DEFAULT 0,\\n  `compress_ops_ok` int(11) NOT NULL DEFAULT 0,\\n  `compress_time` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_ops` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=85899345 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de INNODB FT SIENDO ELIMINADO con las columnas de, ID DOC",
      "output": "('INNODB_FT_BEING_DELETED', 'CREATE TABLE `INNODB_FT_BEING_DELETED` (\\n  `DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=238609294 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de CONFIGURACIÓN INNODB FT con las columnas de, VALOR CLAVE",
      "output": "('INNODB_FT_CONFIG', \"CREATE TABLE `INNODB_FT_CONFIG` (\\n  `KEY` varchar(193) NOT NULL DEFAULT ''  `VALUE` varchar(193) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1846503 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de PALABRA DE PARO PREDETERMINADA DE INNODB FT con las columnas de, valor",
      "output": "('INNODB_FT_DEFAULT_STOPWORD', \"CREATE TABLE `INNODB_FT_DEFAULT_STOPWORD` (\\n  `value` varchar(18) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=38347922 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de INNODB FT BORRADO con las columnas de, ID DOC",
      "output": "('INNODB_FT_DELETED', 'CREATE TABLE `INNODB_FT_DELETED` (\\n  `DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=238609294 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de CACHE DEL ÍNDICE INNODB FT con las columnas de, PALABRA, PRIMER ID DE DOC, ÚLTIMO ID DE DOC, NÚMERO DE DOC, ID DE DOC, POSICIÓN",
      "output": "('INNODB_FT_INDEX_CACHE', \"CREATE TABLE `INNODB_FT_INDEX_CACHE` (\\n  `WORD` varchar(255) NOT NULL DEFAULT ''  `FIRST_DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `LAST_DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DOC_COUNT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `POSITION` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=2657776 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de TABLA DE ÍNDICE INNODB FT con las columnas de, PALABRA, PRIMER ID DE DOC, ÚLTIMO ID DE DOC, NÚMERO DE DOC, ID DE DOC, POSICIÓN",
      "output": "('INNODB_FT_INDEX_TABLE', \"CREATE TABLE `INNODB_FT_INDEX_TABLE` (\\n  `WORD` varchar(255) NOT NULL DEFAULT ''  `FIRST_DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `LAST_DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DOC_COUNT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `POSITION` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=2657776 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de CERRADURAS INNODB con las columnas de, bloquear id, bloquear trx id, modo de bloqueo, tipo de bloqueo, tabla de bloqueo, índice de bloqueo, espacio de bloqueo, página de bloqueo, registro de bloqueo, datos de bloqueo",
      "output": "('INNODB_LOCKS', \"CREATE TABLE `INNODB_LOCKS` (\\n  `lock_id` varchar(81) NOT NULL DEFAULT ''  `lock_trx_id` varchar(18) NOT NULL DEFAULT '',\\n  `lock_mode` varchar(32) NOT NULL DEFAULT '',\\n  `lock_type` varchar(32) NOT NULL DEFAULT '',\\n  `lock_table` varchar(1024) NOT NULL DEFAULT '',\\n  `lock_index` varchar(1024) DEFAULT NULL,\\n  `lock_space` bigint(21) unsigned DEFAULT NULL,\\n  `lock_page` bigint(21) unsigned DEFAULT NULL,\\n  `lock_rec` bigint(21) unsigned DEFAULT NULL,\\n  `lock_data` varchar(8192) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=68732 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de EL BLOQUEO INNODB ESPERA con las columnas de, solicitando trx id, id de bloqueo solicitado, bloqueando trx id, bloqueando id de bloqueo",
      "output": "('INNODB_LOCK_WAITS', \"CREATE TABLE `INNODB_LOCK_WAITS` (\\n  `requesting_trx_id` varchar(18) NOT NULL DEFAULT ''  `requested_lock_id` varchar(81) NOT NULL DEFAULT '',\\n  `blocking_trx_id` varchar(18) NOT NULL DEFAULT '',\\n  `blocking_lock_id` varchar(81) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=3585114 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de MÉTRICAS DE INNODB con las columnas de, NOMBRE, SUBSISTEMA, CUENTA, CUENTA MÁXIMA, CUENTA MÍNIMA, CUENTA PROMEDIO, REINICIO DE CUENTA, REINICIO DE CUENTA MÁXIMA, REINICIO DE CUENTA MÍNIMA, REINICIO DE CUENTA PROMEDIO, TIEMPO HABILITADO, TIEMPO DESHABILITADO, TIEMPO TRANSCURRIDO, REINICIO DE TIEMPO, ESTADO, TIPO, COMENTARIO",
      "output": "('INNODB_METRICS', \"CREATE TABLE `INNODB_METRICS` (\\n  `NAME` varchar(193) NOT NULL DEFAULT ''  `SUBSYSTEM` varchar(193) NOT NULL DEFAULT '',\\n  `COUNT` bigint(21) NOT NULL DEFAULT 0,\\n  `MAX_COUNT` bigint(21) DEFAULT NULL,\\n  `MIN_COUNT` bigint(21) DEFAULT NULL,\\n  `AVG_COUNT` double DEFAULT NULL,\\n  `COUNT_RESET` bigint(21) NOT NULL DEFAULT 0,\\n  `MAX_COUNT_RESET` bigint(21) DEFAULT NULL,\\n  `MIN_COUNT_RESET` bigint(21) DEFAULT NULL,\\n  `AVG_COUNT_RESET` double DEFAULT NULL,\\n  `TIME_ENABLED` datetime DEFAULT NULL,\\n  `TIME_DISABLED` datetime DEFAULT NULL,\\n  `TIME_ELAPSED` bigint(21) DEFAULT NULL,\\n  `TIME_RESET` datetime DEFAULT NULL,\\n  `STATUS` varchar(193) NOT NULL DEFAULT '',\\n  `TYPE` varchar(193) NOT NULL DEFAULT '',\\n  `COMMENT` varchar(193) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=715112 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de COLUMNAS INNODB SYS con las columnas de, ID DE LA MESA, NOMBRE, POS, MTYPE, PRTYPE, LEN",
      "output": "('INNODB_SYS_COLUMNS', \"CREATE TABLE `INNODB_SYS_COLUMNS` (\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(193) NOT NULL DEFAULT '',\\n  `POS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MTYPE` int(11) NOT NULL DEFAULT 0,\\n  `PRTYPE` int(11) NOT NULL DEFAULT 0,\\n  `LEN` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=3520464 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ARCHIVOS DE DATOS DEL SISTEMA INNODB con las columnas de, ESPACIO, CAMINO",
      "output": "('INNODB_SYS_DATAFILES', \"CREATE TABLE `INNODB_SYS_DATAFILES` (\\n  `SPACE` int(11) unsigned NOT NULL DEFAULT 0  `PATH` varchar(4000) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=178852 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de CAMPOS DEL SISTEMA INNODB con las columnas de, ID DE ÍNDICE, NOMBRE, POS",
      "output": "('INNODB_SYS_FIELDS', \"CREATE TABLE `INNODB_SYS_FIELDS` (\\n  `INDEX_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(193) NOT NULL DEFAULT '',\\n  `POS` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=3615292 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de INNODB SYS EXTRANJERO con las columnas de, ID, PARA NOMBRE, REF NOMBRE, N COLS, TIPO",
      "output": "('INNODB_SYS_FOREIGN', \"CREATE TABLE `INNODB_SYS_FOREIGN` (\\n  `ID` varchar(193) NOT NULL DEFAULT ''  `FOR_NAME` varchar(193) NOT NULL DEFAULT '',\\n  `REF_NAME` varchar(193) NOT NULL DEFAULT '',\\n  `N_COLS` int(11) unsigned NOT NULL DEFAULT 0,\\n  `TYPE` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1225732 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de COLEGIOS EXTRANJEROS INNODB SYS con las columnas de, ID, PARA NOMBRE DE COLUMNA, REF NOMBRE DE COLUMNA, POS",
      "output": "('INNODB_SYS_FOREIGN_COLS', \"CREATE TABLE `INNODB_SYS_FOREIGN_COLS` (\\n  `ID` varchar(193) NOT NULL DEFAULT ''  `FOR_COL_NAME` varchar(193) NOT NULL DEFAULT '',\\n  `REF_COL_NAME` varchar(193) NOT NULL DEFAULT '',\\n  `POS` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1228537 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ÍNDICES DEL SISTEMA INNODB con las columnas de, ID DE ÍNDICE, NOMBRE, ID DE TABLA, TIPO, N CAMPOS, NÚMERO DE PÁGINA, ESPACIO",
      "output": "('INNODB_SYS_INDEXES', \"CREATE TABLE `INNODB_SYS_INDEXES` (\\n  `INDEX_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(193) NOT NULL DEFAULT '',\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `TYPE` int(11) NOT NULL DEFAULT 0,\\n  `N_FIELDS` int(11) NOT NULL DEFAULT 0,\\n  `PAGE_NO` int(11) NOT NULL DEFAULT 0,\\n  `SPACE` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=3497530 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de TABLAS DEL SISTEMA INNODB con las columnas de, ID DE LA TABLA, NOMBRE, BANDERA, COLUMNAS N, ESPACIO, FORMATO DE ARCHIVO, FORMATO DE FILA, TAMAÑO DE PÁGINA ZIP",
      "output": "('INNODB_SYS_TABLES', \"CREATE TABLE `INNODB_SYS_TABLES` (\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(655) NOT NULL DEFAULT '',\\n  `FLAG` int(11) NOT NULL DEFAULT 0,\\n  `N_COLS` int(11) NOT NULL DEFAULT 0,\\n  `SPACE` int(11) NOT NULL DEFAULT 0,\\n  `FILE_FORMAT` varchar(10) DEFAULT NULL,\\n  `ROW_FORMAT` varchar(12) DEFAULT NULL,\\n  `ZIP_PAGE_SIZE` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1042467 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ESPACIOS DE TABLAS DEL SISTEMA INNODB con las columnas de, ESPACIO, NOMBRE, BANDERA, FORMATO DE ARCHIVO, FORMATO DE FILA, TAMAÑO DE PÁGINA, TAMAÑO DE PÁGINA ZIP",
      "output": "('INNODB_SYS_TABLESPACES', \"CREATE TABLE `INNODB_SYS_TABLESPACES` (\\n  `SPACE` int(11) unsigned NOT NULL DEFAULT 0  `NAME` varchar(655) NOT NULL DEFAULT '',\\n  `FLAG` int(11) unsigned NOT NULL DEFAULT 0,\\n  `FILE_FORMAT` varchar(10) DEFAULT NULL,\\n  `ROW_FORMAT` varchar(22) DEFAULT NULL,\\n  `PAGE_SIZE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `ZIP_PAGE_SIZE` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1031452 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de INNODB SYS TABLESTATS con las columnas de, ID DE LA TABLA, NOMBRE, ESTADÍSTICAS INICIALIZADAS, NÚMERO DE FILAS, TAMAÑO DEL ÍNDICE DE CLUST, OTRO TAMAÑO DEL ÍNDICE, CONTADOR MODIFICADO, AUTOINC, REF COUNT",
      "output": "('INNODB_SYS_TABLESTATS', \"CREATE TABLE `INNODB_SYS_TABLESTATS` (\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(193) NOT NULL DEFAULT '',\\n  `STATS_INITIALIZED` varchar(193) NOT NULL DEFAULT '',\\n  `NUM_ROWS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `CLUST_INDEX_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `OTHER_INDEX_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MODIFIED_COUNTER` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `AUTOINC` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `REF_COUNT` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1767476 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de INNODB TRX con las columnas de, trx id, trx state, trx comenzó, trx solicitó id de bloqueo, trx espera comenzó, trx peso, trx mysql thread id, consulta trx, estado de operación trx, tablas trx en uso, tablas trx bloqueadas, estructuras de bloqueo trx, memoria de bloqueo trx bytes, filas de trx bloqueadas, filas de trx modificadas, tickets de concurrencia de trx, nivel de aislamiento de trx, verificaciones únicas de trx, verificaciones de clave externa de trx, último error de clave externa de trx, hash adaptable de trx bloqueado, tiempo de espera de hash adaptable de trx, trx es de solo lectura, confirmación automática de trx sin bloqueo",
      "output": "('INNODB_TRX', \"CREATE TABLE `INNODB_TRX` (\\n  `trx_id` varchar(18) NOT NULL DEFAULT ''  `trx_state` varchar(13) NOT NULL DEFAULT '',\\n  `trx_started` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `trx_requested_lock_id` varchar(81) DEFAULT NULL,\\n  `trx_wait_started` datetime DEFAULT NULL,\\n  `trx_weight` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_mysql_thread_id` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_query` varchar(1024) DEFAULT NULL,\\n  `trx_operation_state` varchar(64) DEFAULT NULL,\\n  `trx_tables_in_use` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_tables_locked` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_lock_structs` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_lock_memory_bytes` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_rows_locked` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_rows_modified` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_concurrency_tickets` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_isolation_level` varchar(16) NOT NULL DEFAULT '',\\n  `trx_unique_checks` int(1) NOT NULL DEFAULT 0,\\n  `trx_foreign_key_checks` int(1) NOT NULL DEFAULT 0,\\n  `trx_last_foreign_key_error` varchar(256) DEFAULT NULL,\\n  `trx_adaptive_hash_latched` int(1) NOT NULL DEFAULT 0,\\n  `trx_adaptive_hash_timeout` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_is_read_only` int(1) NOT NULL DEFAULT 0,\\n  `trx_autocommit_non_locking` int(1) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=472805 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de Ilustración con las columnas de, ID de ilustración, Diagrama, Fecha de modificación",
      "output": "('Illustration', \"CREATE TABLE `Illustration` (\\n  `IllustrationID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Illustration records.'  `Diagram` text DEFAULT NULL COMMENT 'Illustrations used in manufacturing instructions. Stored as XML.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`IllustrationID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Bicycle assembly diagrams.'\")"
    },
    {
      "input": "Una tabla de CANDIDATO DE TRABAJO con las columnas de, JOBCANDIDATEID, BUSINESSENTITYID, RESUMEN, MODIFIEDDATE",
      "output": "('JOBCANDIDATE', \"CREATE TABLE `JOBCANDIDATE` (\\n  `JOBCANDIDATEID` int(11) NOT NULL COMMENT 'Primary key for JobCandidate records.'  `BUSINESSENTITYID` int(11) DEFAULT NULL COMMENT 'Employee identification number if applicant was hired. Foreign key to Employee.BusinessEntityID.',\\n  `RESUME` text DEFAULT NULL COMMENT 'Résumé in XML format.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`JOBCANDIDATEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Résumés submitted to Human Resources by job applicants.'\")"
    },
    {
      "input": "Una tabla de Candidato de trabajo con las columnas de, ID de candidato de trabajo, ID de entidad comercial, currículum, fecha de modificación",
      "output": "('JobCandidate', \"CREATE TABLE `JobCandidate` (\\n  `JobCandidateID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for JobCandidate records.'  `BusinessEntityID` int(11) DEFAULT NULL COMMENT 'Employee identification number if applicant was hired. Foreign key to Employee.BusinessEntityID.',\\n  `Resume` text DEFAULT NULL COMMENT 'Résumé in XML format.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`JobCandidateID`),\\n  KEY `IX_JobCandidate_BusinessEntityID` (`BusinessEntityID`),\\n  CONSTRAINT `FK_JobCandidate_Employee_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Résumés submitted to Human Resources by job applicants.'\")"
    },
    {
      "input": "Una tabla de CACHÉS CLAVE con las columnas de, NOMBRE DE LA CACHE DE CLAVE, SEGMENTOS, NÚMERO DE SEGMENTO, TAMAÑO COMPLETO, TAMAÑO DE BLOQUE, BLOQUES USADOS, BLOQUES NO USADOS, BLOQUES SUCIOS, SOLICITUDES DE LECTURA, LECTURAS, SOLICITUDES DE ESCRITURA, ESCRITURAS",
      "output": "('KEY_CACHES', \"CREATE TABLE `KEY_CACHES` (\\n  `KEY_CACHE_NAME` varchar(192) NOT NULL DEFAULT ''  `SEGMENTS` int(3) unsigned DEFAULT NULL,\\n  `SEGMENT_NUMBER` int(3) unsigned DEFAULT NULL,\\n  `FULL_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `BLOCK_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `USED_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `UNUSED_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DIRTY_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `READ_REQUESTS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `READS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `WRITE_REQUESTS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `WRITES` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=3258700 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de USO DE LA COLUMNA CLAVE con las columnas de, CATÁLOGO DE RESTRICCIÓN, ESQUEMA DE RESTRICCIÓN, NOMBRE DE RESTRICCIÓN, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, NOMBRE DE COLUMNA, POSICIÓN ORDINAL, POSICIÓN EN RESTRICCIÓN ÚNICA, ESQUEMA DE TABLA REFERENCIADA, NOMBRE DE TABLA REFERIDA, NOMBRE DE COLUMNA REFERIDA",
      "output": "('KEY_COLUMN_USAGE', \"CREATE TABLE `KEY_COLUMN_USAGE` (\\n  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT ''  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `ORDINAL_POSITION` bigint(10) NOT NULL DEFAULT 0,\\n  `POSITION_IN_UNIQUE_CONSTRAINT` bigint(10) DEFAULT NULL,\\n  `REFERENCED_TABLE_SCHEMA` varchar(64) DEFAULT NULL,\\n  `REFERENCED_TABLE_NAME` varchar(64) DEFAULT NULL,\\n  `REFERENCED_COLUMN_NAME` varchar(64) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=463119 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de CARTA con las columnas de, ICO, MESDOT, ROKDOT, LEKCHOL, LEKTK, NEMOC, ROK, NEMOC, ROK, NEMOC, ROK, NEMOC, ROK, NEMOC, ROK, HYPTK, ROKHYPTK, HYPLP, ​​ROKHYPLP, ​​CUKROVKA, ROKCUKR, CUKSCR, , ODCUINS, DOCUINS, AP, SI, ROKSI, MM, ROKMM, BDK, ROKBDK, DUSNOST, ROKDUS, DUSCHUZE, DUSBEH, DUSROVIN, DUKLID, DUSNOC, KURAK, KURAKBYV, ROKPRKOUR, KOURLENIG, KOURLEN, KOURLEN, PAMIRNA, PAVELKA, PAPRED, DIETA, DIECUOD, DIETUKOD, JINADIE, JINADIEOD, VAHA, VAHAPRED",
      "output": "('LETTER', 'CREATE TABLE `LETTER` (\\n  `ICO` int(11) NOT NULL  `MESDOT` varchar(255) DEFAULT NULL,\\n  `ROKDOT` int(11) DEFAULT NULL,\\n  `LEKCHOL` int(11) DEFAULT NULL,\\n  `LEKTK` int(11) DEFAULT NULL,\\n  `NEMOC1` int(11) DEFAULT NULL,\\n  `ROK1` int(11) DEFAULT NULL,\\n  `NEMOC2` varchar(255) DEFAULT NULL,\\n  `ROK2` varchar(255) DEFAULT NULL,\\n  `NEMOC3` varchar(255) DEFAULT NULL,\\n  `ROK3` varchar(255) DEFAULT NULL,\\n  `NEMOC4` varchar(255) DEFAULT NULL,\\n  `ROK4` varchar(255) DEFAULT NULL,\\n  `NEMOC5` varchar(255) DEFAULT NULL,\\n  `ROK5` varchar(255) DEFAULT NULL,\\n  `HYPTK` int(11) DEFAULT NULL,\\n  `ROKHYPTK` varchar(255) DEFAULT NULL,\\n  `HYPLP` int(11) DEFAULT NULL,\\n  `ROKHYPLP` varchar(255) DEFAULT NULL,\\n  `CUKROVKA` int(11) DEFAULT NULL,\\n  `ROKCUKR` varchar(255) DEFAULT NULL,\\n  `CUKRTAB` varchar(255) DEFAULT NULL,\\n  `ODCUTAB` varchar(255) DEFAULT NULL,\\n  `DOCUTAB` varchar(255) DEFAULT NULL,\\n  `CUKRINS` varchar(255) DEFAULT NULL,\\n  `ODCUINS` varchar(255) DEFAULT NULL,\\n  `DOCUINS` varchar(255) DEFAULT NULL,\\n  `AP` int(11) DEFAULT NULL,\\n  `SI` int(11) DEFAULT NULL,\\n  `ROKSI` varchar(255) DEFAULT NULL,\\n  `MM` varchar(255) DEFAULT NULL,\\n  `ROKMM` varchar(255) DEFAULT NULL,\\n  `BDK` int(11) DEFAULT NULL,\\n  `ROKBDK1` varchar(255) DEFAULT NULL,\\n  `DUSNOST` varchar(255) DEFAULT NULL,\\n  `ROKDUS` varchar(255) DEFAULT NULL,\\n  `DUSCHUZE` varchar(255) DEFAULT NULL,\\n  `DUSBEH` varchar(255) DEFAULT NULL,\\n  `DUSROVIN` varchar(255) DEFAULT NULL,\\n  `DUKLID` varchar(255) DEFAULT NULL,\\n  `DUSNOC` varchar(255) DEFAULT NULL,\\n  `KURAK` varchar(255) DEFAULT NULL,\\n  `KURAKBYV` varchar(255) DEFAULT NULL,\\n  `ROKPRKOUR` varchar(255) DEFAULT NULL,\\n  `KOURLET` varchar(255) DEFAULT NULL,\\n  `CIGDENMIN` varchar(255) DEFAULT NULL,\\n  `CIGDEN` varchar(255) DEFAULT NULL,\\n  `KOURODLET` varchar(255) DEFAULT NULL,\\n  `DYMKA` varchar(255) DEFAULT NULL,\\n  `PASED` varchar(255) DEFAULT NULL,\\n  `PAMIRNA` varchar(255) DEFAULT NULL,\\n  `PAVELKA` varchar(255) DEFAULT NULL,\\n  `PAPRED10` varchar(255) DEFAULT NULL,\\n  `DIETA` varchar(255) DEFAULT NULL,\\n  `DIECUOD` varchar(255) DEFAULT NULL,\\n  `DIETUKOD` varchar(255) DEFAULT NULL,\\n  `JINADIE` varchar(255) DEFAULT NULL,\\n  `JINADIEOD` varchar(255) DEFAULT NULL,\\n  `VAHA` varchar(255) DEFAULT NULL,\\n  `VAHAPRED10` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`ICO`),\\n  KEY `ICO` (`ICO`),\\n  CONSTRAINT `LETTER_IBFK_1` FOREIGN KEY (`ICO`) REFERENCES `ENTRY` (`ICO`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de UBICACIÓN con las columnas de, ID DE UBICACIÓN, NOMBRE, COSTRA, DISPONIBILIDAD, FECHA DE MODIFICACIÓN",
      "output": "('LOCATION', \"CREATE TABLE `LOCATION` (\\n  `LOCATIONID` smallint(6) NOT NULL COMMENT 'Primary key for Location records.'  `NAME` varchar(100) NOT NULL COMMENT 'Location description.',\\n  `COSTRATE` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Standard hourly cost of the manufacturing location.',\\n  `AVAILABILITY` decimal(8,2) NOT NULL DEFAULT 0.00 COMMENT 'Work capacity (in hours) of the manufacturing location.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`LOCATIONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product inventory and manufacturing locations.'\")"
    },
    {
      "input": "Una tabla de ID DE LÍNEA AÉREA con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_AIRLINE_ID', 'CREATE TABLE `L_AIRLINE_ID` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_AIRLINE_ID_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de AEROPUERTO L con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_AIRPORT', 'CREATE TABLE `L_AIRPORT` (\\n  `CODE` varchar(255) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_AIRPORT_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de IDENTIFICACIÓN DEL AEROPUERTO con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_AIRPORT_ID', 'CREATE TABLE `L_AIRPORT_ID` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_AIRPORT_ID_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L AEROPUERTO SEQ ID con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_AIRPORT_SEQ_ID', 'CREATE TABLE `L_AIRPORT_SEQ_ID` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_AIRPORT_SEQ_ID_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L CANCELACIÓN con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_CANCELLATION', 'CREATE TABLE `L_CANCELLATION` (\\n  `CODE` varchar(255) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_CANCELLATION_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ID DE MERCADO DE LA CIUDAD L con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_CITY_MARKET_ID', 'CREATE TABLE `L_CITY_MARKET_ID` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_CITY_MARKET_ID_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L DEPARRBLK con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_DEPARRBLK', 'CREATE TABLE `L_DEPARRBLK` (\\n  `CODE` varchar(255) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_DEPARRBLK_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de GRUPO DE DISTANCIA L con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_DISTANCE_GROUP_250', 'CREATE TABLE `L_DISTANCE_GROUP_250` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_DISTANCE_GROUP_250_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L DESVÍOS con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_DIVERSIONS', 'CREATE TABLE `L_DIVERSIONS` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_DIVERSIONS_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L MESES con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_MONTHS', 'CREATE TABLE `L_MONTHS` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_MONTHS_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de GRUPOS DE DEMORA A TIEMPO L con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_ONTIME_DELAY_GROUPS', 'CREATE TABLE `L_ONTIME_DELAY_GROUPS` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_ONTIME_DELAY_GROUPS_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L CUARTOS con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_QUARTERS', 'CREATE TABLE `L_QUARTERS` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_QUARTERS_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L ESTADO ABR AVIACIÓN con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_STATE_ABR_AVIATION', 'CREATE TABLE `L_STATE_ABR_AVIATION` (\\n  `CODE` varchar(255) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_STATE_ABR_AVIATION_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L ESTADO FIPS con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_STATE_FIPS', 'CREATE TABLE `L_STATE_FIPS` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_STATE_FIPS_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L PORTADORES ÚNICOS con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_UNIQUE_CARRIERS', 'CREATE TABLE `L_UNIQUE_CARRIERS` (\\n  `CODE` varchar(255) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_UNIQUE_CARRIERS_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L DÍAS DE LA SEMANA con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_WEEKDAYS', 'CREATE TABLE `L_WEEKDAYS` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_WEEKDAYS_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L CÓDIGOS DE ÁREA DEL MUNDO con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_WORLD_AREA_CODES', 'CREATE TABLE `L_WORLD_AREA_CODES` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_WORLD_AREA_CODES_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de L SÍ NO RESP. con las columnas de, CÓDIGO, DESCRIPCIÓN",
      "output": "('L_YESNO_RESP', 'CREATE TABLE `L_YESNO_RESP` (\\n  `CODE` int(11) NOT NULL  `DESCRIPTION` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CODE`),\\n  UNIQUE KEY `L_YESNO_RESP_CODE_KEY` (`CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Ubicación con las columnas de, ID de ubicación, nombre, tasa de costo, disponibilidad, fecha de modificación",
      "output": "('Location', \"CREATE TABLE `Location` (\\n  `LocationID` smallint(6) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Location records.'  `Name` varchar(100) NOT NULL COMMENT 'Location description.',\\n  `CostRate` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Standard hourly cost of the manufacturing location.',\\n  `Availability` decimal(8,2) NOT NULL DEFAULT 0.00 COMMENT 'Work capacity (in hours) of the manufacturing location.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`LocationID`),\\n  UNIQUE KEY `AK_Location_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product inventory and manufacturing locations.'\")"
    },
    {
      "input": "Una tabla de MUESTRA PRINCIPAL con las columnas de, ID propagado, fecha propagada, objetivo propagado, estado del préstamo Campo directo Columna nominal , Duración del préstamo Campo directo Columna numérica , ID de cuenta de pedido agregado stddev samp , monto trans agregado min , saldo trans agregado min , cliente ID de cliente agregado stddev samp , distrito del cliente id. promedio agregado, fecha de préstamo directo Campo hora Columna, tarjeta id de tarjeta directo Campo numérico Columna, orden de cuenta para agregar promedio, trans cuenta agregado promedio, distrito A directo Campo nominal Columna, trans cuenta agregado stddev samp, fecha de cuenta directo Campo tiempo Columna, id de cuenta de préstamo directa Campo numérico Columna, cliente id de cliente suma agregada, monto de transacción agregado stddev samp, monto de pedido suma agregada, monto de orden agregado promedio, monto de orden agregado mínimo, monto de préstamo directo Campo numérico Columna, monto de orden agregado máximo, monto de transacción agregado max , distrito A directo Campo numérico Columna , distrito A directo Campo numérico Columna , distrito A directo Campo d Columna numérica, distrito A directo Campo numérico Columna, cliente cliente id agregado stddev samp, distrito A directo Campo numérico Columna, tipo de tarjeta directo Campo nominal Columna, pagos de préstamo directo Campo numérico Columna, cliente distrito id suma agregada, pedido pedido id agregado stddev muestra, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, cuenta trans agregado min, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, orden de cuenta para agregar stddev samp, distrito A directo Campo numérico Columna, cuenta frecuencia directa Campo nominal Columna, cliente distrito id agregado stddev samp",
      "output": "('MAINSAMPLE', \"CREATE TABLE `MAINSAMPLE` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directField_nominalColumn_100085` varchar(1) DEFAULT NULL,\\n  `loan_duration_directField_numericalColumn_100106` int(11) DEFAULT NULL,\\n  `order_account_id_aggregate_stddev_samp_100008` double(26,4) DEFAULT NULL,\\n  `trans_amount_aggregate_min_100046` int(11) DEFAULT NULL,\\n  `trans_balance_aggregate_min_100047` int(11) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  `client_district_id_aggregate_avg_100020` decimal(14,4) DEFAULT NULL,\\n  `loan_date_directField_timeColumn_100111` date DEFAULT NULL,\\n  `card_card_id_directField_numericalColumn_100088` int(11) DEFAULT 0,\\n  `order_account_to_aggregate_avg_100025` decimal(14,4) DEFAULT NULL,\\n  `trans_account_aggregate_avg_100028` decimal(15,4) DEFAULT NULL,\\n  `district_A3_directField_nominalColumn_100084` varchar(15) DEFAULT NULL,\\n  `trans_account_aggregate_stddev_samp_100012` double(28,4) DEFAULT NULL,\\n  `account_date_directField_timeColumn_100109` date DEFAULT NULL,\\n  `loan_account_id_directField_numericalColumn_100104` int(11) DEFAULT NULL,\\n  `client_client_id_aggregate_sum_100067` decimal(32,0) DEFAULT NULL,\\n  `trans_amount_aggregate_stddev_samp_100014` double(26,4) DEFAULT NULL,\\n  `order_amount_aggregate_sum_100074` decimal(28,1) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100026` decimal(10,5) DEFAULT NULL,\\n  `order_amount_aggregate_min_100042` decimal(6,1) DEFAULT NULL,\\n  `loan_amount_directField_numericalColumn_100105` int(11) DEFAULT NULL,\\n  `order_amount_aggregate_max_100058` decimal(6,1) DEFAULT NULL,\\n  `trans_amount_aggregate_max_100062` int(11) DEFAULT NULL,\\n  `district_A15_directField_numericalColumn_100095` int(5) DEFAULT NULL,\\n  `district_A6_directField_numericalColumn_100099` int(11) DEFAULT NULL,\\n  `district_A12_directField_numericalColumn_100092` decimal(4,1) DEFAULT NULL,\\n  `district_A10_directField_numericalColumn_100090` decimal(4,1) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `district_A13_directField_numericalColumn_100093` decimal(3,2) DEFAULT NULL,\\n  `card_type_directField_nominalColumn_100082` varchar(7) DEFAULT NULL,\\n  `loan_payments_directField_numericalColumn_100108` decimal(6,2) DEFAULT NULL,\\n  `client_district_id_aggregate_sum_100068` decimal(32,0) DEFAULT NULL,\\n  `order_order_id_aggregate_stddev_samp_100011` double(26,4) DEFAULT NULL,\\n  `district_A14_directField_numericalColumn_100094` int(11) DEFAULT NULL,\\n  `district_A5_directField_numericalColumn_100098` int(11) DEFAULT NULL,\\n  `trans_account_aggregate_min_100044` int(11) unsigned DEFAULT NULL,\\n  `district_A7_directField_numericalColumn_100100` int(11) DEFAULT NULL,\\n  `district_A9_directField_numericalColumn_100102` int(11) DEFAULT NULL,\\n  `order_account_to_aggregate_stddev_samp_100009` double(26,4) DEFAULT NULL,\\n  `district_A8_directField_numericalColumn_100101` int(6) DEFAULT NULL,\\n  `account_frequency_directField_nominalColumn_100081` varchar(18) DEFAULT '',\\n  `client_district_id_aggregate_stddev_samp_100002` double(26,4) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de PRINCIPAL MUESTRA temp. con las columnas de, ID propagado, fecha propagada, objetivo propagado, estado del préstamo Campo directo Columna nominal , Duración del préstamo Campo directo Columna numérica , ID de cuenta de pedido agregado stddev samp , monto trans agregado min , saldo trans agregado min , cliente ID de cliente agregado stddev samp , distrito del cliente id. promedio agregado, fecha de préstamo directo Campo hora Columna, tarjeta id de tarjeta directo Campo numérico Columna, orden de cuenta para agregar promedio, trans cuenta agregado promedio, distrito A directo Campo nominal Columna, trans cuenta agregado stddev samp, fecha de cuenta directo Campo tiempo Columna, id de cuenta de préstamo directa Campo numérico Columna, cliente id de cliente suma agregada, monto de transacción agregado stddev samp, monto de pedido suma agregada, monto de orden agregado promedio, monto de orden agregado mínimo, monto de préstamo directo Campo numérico Columna, monto de orden agregado máximo, monto de transacción agregado max , distrito A directo Campo numérico Columna , distrito A directo Campo numérico Columna , distrito A directo Campo d Columna numérica, distrito A directo Campo numérico Columna, cliente cliente id agregado stddev samp, distrito A directo Campo numérico Columna, tipo de tarjeta directo Campo nominal Columna, pagos de préstamo directo Campo numérico Columna, cliente distrito id suma agregada, pedido pedido id agregado stddev muestra, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, cuenta trans agregado min, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, orden de cuenta para agregar stddev samp, distrito A directo Campo numérico Columna, cuenta frecuencia directa Campo nominal Columna, cliente distrito id agregado stddev samp",
      "output": "('MAINSAMPLE_temp100', \"CREATE TABLE `MAINSAMPLE_temp100` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directField_nominalColumn_100085` varchar(1) DEFAULT NULL,\\n  `loan_duration_directField_numericalColumn_100106` int(11) DEFAULT NULL,\\n  `order_account_id_aggregate_stddev_samp_100008` double(26,4) DEFAULT NULL,\\n  `trans_amount_aggregate_min_100046` int(11) DEFAULT NULL,\\n  `trans_balance_aggregate_min_100047` int(11) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  `client_district_id_aggregate_avg_100020` decimal(14,4) DEFAULT NULL,\\n  `loan_date_directField_timeColumn_100111` date DEFAULT NULL,\\n  `card_card_id_directField_numericalColumn_100088` int(11) DEFAULT 0,\\n  `order_account_to_aggregate_avg_100025` decimal(14,4) DEFAULT NULL,\\n  `trans_account_aggregate_avg_100028` decimal(15,4) DEFAULT NULL,\\n  `district_A3_directField_nominalColumn_100084` varchar(15) DEFAULT NULL,\\n  `trans_account_aggregate_stddev_samp_100012` double(28,4) DEFAULT NULL,\\n  `account_date_directField_timeColumn_100109` date DEFAULT NULL,\\n  `loan_account_id_directField_numericalColumn_100104` int(11) DEFAULT NULL,\\n  `client_client_id_aggregate_sum_100067` decimal(32,0) DEFAULT NULL,\\n  `trans_amount_aggregate_stddev_samp_100014` double(26,4) DEFAULT NULL,\\n  `order_amount_aggregate_sum_100074` decimal(28,1) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100026` decimal(10,5) DEFAULT NULL,\\n  `order_amount_aggregate_min_100042` decimal(6,1) DEFAULT NULL,\\n  `loan_amount_directField_numericalColumn_100105` int(11) DEFAULT NULL,\\n  `order_amount_aggregate_max_100058` decimal(6,1) DEFAULT NULL,\\n  `trans_amount_aggregate_max_100062` int(11) DEFAULT NULL,\\n  `district_A15_directField_numericalColumn_100095` int(5) DEFAULT NULL,\\n  `district_A6_directField_numericalColumn_100099` int(11) DEFAULT NULL,\\n  `district_A12_directField_numericalColumn_100092` decimal(4,1) DEFAULT NULL,\\n  `district_A10_directField_numericalColumn_100090` decimal(4,1) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `district_A13_directField_numericalColumn_100093` decimal(3,2) DEFAULT NULL,\\n  `card_type_directField_nominalColumn_100082` varchar(7) DEFAULT NULL,\\n  `loan_payments_directField_numericalColumn_100108` decimal(6,2) DEFAULT NULL,\\n  `client_district_id_aggregate_sum_100068` decimal(32,0) DEFAULT NULL,\\n  `order_order_id_aggregate_stddev_samp_100011` double(26,4) DEFAULT NULL,\\n  `district_A14_directField_numericalColumn_100094` int(11) DEFAULT NULL,\\n  `district_A5_directField_numericalColumn_100098` int(11) DEFAULT NULL,\\n  `trans_account_aggregate_min_100044` int(11) unsigned DEFAULT NULL,\\n  `district_A7_directField_numericalColumn_100100` int(11) DEFAULT NULL,\\n  `district_A9_directField_numericalColumn_100102` int(11) DEFAULT NULL,\\n  `order_account_to_aggregate_stddev_samp_100009` double(26,4) DEFAULT NULL,\\n  `district_A8_directField_numericalColumn_100101` int(6) DEFAULT NULL,\\n  `account_frequency_directField_nominalColumn_100081` varchar(18) DEFAULT '',\\n  `client_district_id_aggregate_stddev_samp_100002` double(26,4) DEFAULT NULL,\\n  KEY `ix_temp100` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de PARTIDOS con las columnas de, MEDIA, TEMPORADA, RONDA, TID, TID, TID LOC, TID LOC, DT DE INICIO, LUGAR, ATT, MARGEN, PUNTUACIÓN DE GANANCIA, TID DE GANANCIA, LOC DE GANANCIA, PUNTUACIÓN DE PERDIDA, LOC DE PERDIDA, PUNTUACIÓN DE PERDIDA, TID H, PUNTUACIÓN H, H QG, H QG, H QG, H QG, H ETG, H QB, H QB, H QB, H QB, H ETB, A TID, UNA PUNTUACIÓN, A QG, A QG, A QG, A QG, A ETG , UN QB, UN QB, UN QB, UN QB, UN ETB, OBJETIVO",
      "output": "('MATCHES', \"CREATE TABLE `MATCHES` (\\n  `MID` varchar(255) COLLATE utf8_bin NOT NULL DEFAULT ''  `SEASON` int(11) DEFAULT NULL,\\n  `ROUND` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `TID1` int(11) DEFAULT NULL,\\n  `TID2` int(11) DEFAULT NULL,\\n  `TID1_LOC` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `TID2_LOC` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `START_DT` datetime DEFAULT NULL,\\n  `VENUE` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `ATT` int(11) DEFAULT NULL,\\n  `MARGIN` int(11) DEFAULT NULL,\\n  `WIN_SCORE` int(11) DEFAULT NULL,\\n  `WIN_TID` int(11) DEFAULT NULL,\\n  `WIN_LOC` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `LOSE_SCORE` int(11) DEFAULT NULL,\\n  `LOSE_LOC` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `LOSE_TID` int(11) DEFAULT NULL,\\n  `H_TID` int(11) DEFAULT NULL,\\n  `H_SCORE` int(11) DEFAULT NULL,\\n  `H_Q1G` int(11) DEFAULT NULL,\\n  `H_Q2G` int(11) DEFAULT NULL,\\n  `H_Q3G` int(11) DEFAULT NULL,\\n  `H_Q4G` int(11) DEFAULT NULL,\\n  `H_ETG` int(11) DEFAULT NULL,\\n  `H_Q1B` int(11) DEFAULT NULL,\\n  `H_Q2B` int(11) DEFAULT NULL,\\n  `H_Q3B` int(11) DEFAULT NULL,\\n  `H_Q4B` int(11) DEFAULT NULL,\\n  `H_ETB` int(11) DEFAULT NULL,\\n  `A_TID` int(11) DEFAULT NULL,\\n  `A_SCORE` int(11) DEFAULT NULL,\\n  `A_Q1G` int(11) DEFAULT NULL,\\n  `A_Q2G` int(11) DEFAULT NULL,\\n  `A_Q3G` int(11) DEFAULT NULL,\\n  `A_Q4G` int(11) DEFAULT NULL,\\n  `A_ETG` int(11) DEFAULT NULL,\\n  `A_Q1B` int(11) DEFAULT NULL,\\n  `A_Q2B` int(11) DEFAULT NULL,\\n  `A_Q3B` int(11) DEFAULT NULL,\\n  `A_Q4B` int(11) DEFAULT NULL,\\n  `A_ETB` int(11) DEFAULT NULL,\\n  `TARGET` int(1) DEFAULT NULL,\\n  PRIMARY KEY (`MID`),\\n  KEY `TID1` (`TID1`),\\n  KEY `TID2` (`TID2`),\\n  CONSTRAINT `MATCHES_IBFK_1` FOREIGN KEY (`TID1`) REFERENCES `TEAMS` (`TID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `MATCHES_IBFK_2` FOREIGN KEY (`TID2`) REFERENCES `TEAMS` (`TID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DEL PARTIDO con las columnas de, MID, PID, TID, LOC, KI, MK, HB, DI, GL, BH, HO, TK, RB, IF, CL, CG, FF, FA, BR, CP, UP, CM, MI, P, BO , GA , PP",
      "output": "('MATCH_STATS', 'CREATE TABLE `MATCH_STATS` (\\n  `MID` varchar(255) COLLATE utf8_bin NOT NULL  `PID` int(11) NOT NULL,\\n  `TID` int(11) DEFAULT NULL,\\n  `LOC` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `KI` int(11) DEFAULT NULL,\\n  `MK` int(11) DEFAULT NULL,\\n  `HB` int(11) DEFAULT NULL,\\n  `DI` int(11) DEFAULT NULL,\\n  `GL` int(11) DEFAULT NULL,\\n  `BH` int(11) DEFAULT NULL,\\n  `HO` int(11) DEFAULT NULL,\\n  `TK` int(11) DEFAULT NULL,\\n  `RB` int(11) DEFAULT NULL,\\n  `IF` int(11) DEFAULT NULL,\\n  `CL` int(11) DEFAULT NULL,\\n  `CG` int(11) DEFAULT NULL,\\n  `FF` int(11) DEFAULT NULL,\\n  `FA` int(11) DEFAULT NULL,\\n  `BR` int(11) DEFAULT NULL,\\n  `CP` int(11) DEFAULT NULL,\\n  `UP` int(11) DEFAULT NULL,\\n  `CM` int(11) DEFAULT NULL,\\n  `MI` int(11) DEFAULT NULL,\\n  `1P` float DEFAULT NULL,\\n  `BO` int(11) DEFAULT NULL,\\n  `GA` int(11) DEFAULT NULL,\\n  `PP` float DEFAULT NULL,\\n  PRIMARY KEY (`MID`,`PID`),\\n  KEY `MID` (`MID`),\\n  KEY `PID` (`PID`),\\n  KEY `TID` (`TID`),\\n  CONSTRAINT `MATCH_STATS_IBFK_1` FOREIGN KEY (`PID`) REFERENCES `PLAYERS` (`PID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `MATCH_STATS_IBFK_2` FOREIGN KEY (`TID`) REFERENCES `TEAMS` (`TID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `MATCH_STATS_IBFK_3` FOREIGN KEY (`MID`) REFERENCES `MATCHES` (`MID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Correos con las columnas de, REFID, Índice Kx, FECHA REF, RESPUESTA",
      "output": "('Mailings1_2', 'CREATE TABLE `Mailings1_2` (\\n  `REFID` int(11) NOT NULL  `KxIndex` int(11) DEFAULT NULL,\\n  `REF_DATE` datetime DEFAULT NULL,\\n  `RESPONSE` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`REFID`),\\n  KEY `Mailings1_2_REFID` (`REFID`),\\n  CONSTRAINT `Mailings1_2_ibfk_1` FOREIGN KEY (`REFID`) REFERENCES `Customers` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ACCIDENTE con las columnas de, IDENTIFICACIÓN ACCIDENTE, CLASE ACCIDENTE, UNIDAD ADMINISTRATIVA, HORA ACCIDENTE, ASENTAMIENTO O FUERA, CATEGORÍA VÍA, MARCAJE VÍA O ASENTAMIENTO, TEXTO VÍA O ASENTAMIENTO, MARCAJE TRAMO O CALLE, TEXTO TRAMO O SEGÚN CALLE O CALLE, TIPO DE ACCIDENTE, HORA DE ACCIDENTE, ESTADO DEL TRÁFICO, CONDICIÓN DEL CONDUCTOR, CONDICIÓN DEL ÁREA DE CONDUCCIÓN, X, Y, X WGS, Y WGS",
      "output": "('NESRECA', 'CREATE TABLE `NESRECA` (\\n  `ID_NESRECA` char(6) NOT NULL  `KLAS_NESRECA` char(1) NOT NULL,\\n  `UPRAVNA_ENOTA` char(4) NOT NULL,\\n  `CAS_NESRECA` datetime NOT NULL,\\n  `NASELJE_ALI_IZVEN` char(1) NOT NULL,\\n  `KATEGORIJA_CESTA` char(1) DEFAULT NULL,\\n  `OZNAKA_CESTA_ALI_NASELJE` char(5) NOT NULL,\\n  `TEKST_CESTA_ALI_NASELJE` varchar(25) NOT NULL,\\n  `OZNAKA_ODSEK_ALI_ULICA` char(5) NOT NULL,\\n  `TEKST_ODSEK_ALI_ULICA` varchar(25) NOT NULL,\\n  `STACIONAZNA_ALI_HISNA_ST` varchar(9) DEFAULT NULL,\\n  `OPIS_PRIZORISCE` char(1) NOT NULL,\\n  `VZROK_NESRECA` char(2) NOT NULL,\\n  `TIP_NESRECA` char(2) NOT NULL,\\n  `VREME_NESRECA` char(1) NOT NULL,\\n  `STANJE_PROMET` char(1) NOT NULL,\\n  `STANJE_VOZISCE` char(2) NOT NULL,\\n  `STANJE_POVRSINA_VOZISCE` char(2) NOT NULL,\\n  `X` int(11) DEFAULT NULL,\\n  `Y` int(11) DEFAULT NULL,\\n  `X_WGS84` double DEFAULT NULL,\\n  `Y_WGS84` double DEFAULT NULL,\\n  PRIMARY KEY (`ID_NESRECA`),\\n  KEY `NESRECA_CAS_NESRECA_IDX` (`CAS_NESRECA`),\\n  KEY `NESRECA_POS_IDX` (`X`,`Y`),\\n  KEY `NESRECA_POS_WGS_84` (`X_WGS84`,`Y_WGS84`),\\n  KEY `UPRAVNA_ENOTA` (`UPRAVNA_ENOTA`),\\n  CONSTRAINT `NESRECA_IBFK_1` FOREIGN KEY (`UPRAVNA_ENOTA`) REFERENCES `UPRAVNA_ENOTA` (`ID_UPRAVNA_ENOTA`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de A TIEMPO A TIEMPO RENDIMIENTO con las columnas de, AÑO, TRIMESTRE, MES, DÍA DEL MES, DÍA DE LA SEMANA, FECHA DE VUELO, TRANSPORTADOR ÚNICO, ID DE LÍNEA AÉREA, TRANSPORTADOR, NÚMERO DE COLA, NÚMERO DE VUELO, ID DE AEROPUERTO DE ORIGEN, SEQID DE AEROPUERTO DE ORIGEN, ID DE MERCADO DE ORIGEN, ORIGEN, NOMBRE DE ORIGINCIDAD, ESTADO DE ORIGEN, FIPS DEL ESTADO DE ORIGEN, NOMBRE DEL ESTADO DE ORIGEN, WAC DE SALIDA, ID DE PUERTO DE SALIDA Q, DESTID DESTAIR, NOMBRE DE DESTA , DESTSTATE, DESTSTATEFIPS, DESTSTATENAME, DESTWAC, CRSDEPTIME, DEPTIME, DEPDELAY, DEPDELAYMINUTES, DEPDEL, DEPARTUREDELAYGROUPS, DEPTIMEBLK, TAXIOUT, WHEELSOFF, WHEELSON, TAXIIN, CRSARRTIME, ARRTIME, ARRDELAY, ARRDELAYCODEMINUTES, ARRDEL, ARRIVALDELAYGROUPS, ARRTIMEBLK, CANCELADO , CRSELAPSEDTIME, ACTUALELAPSEDTIME, AIRTIME, FLIGHTS, DISTANCE, DISTANCEGROUP, CARRIERDELAY, WEATHERDELAY, NASDELAY, SECURITYDELAY, LATEAIRCRAFTDELAY, FIRSTDEPTIME, TOTALADDGTIME, LONGESTADDGTIME, DIVAIRPORTLANDINGS, DIVREACHEDDEST, DIVACTUALELAPSEDTIME, DIVARRDELAY, DIVDISTANCE, DIVAIRPORT, DIVAIRPORTID, DIVAIRPORTSEQID, DIVWHEELSON, DIVTOTALGTIME, DIVLONGESTGTIME , DIV WHEELSOFF, DIVTAILNUM, DIVAIRPORT, DIVAIRPORTID, DIVAIRPORTSEQID, DIVWHEELSON, DIVTOTALGTIME, DIVLONGESTGTIME",
      "output": "('ON_TIME_ON_TIME_PERFORMANCE_2016_1', 'CREATE TABLE `ON_TIME_ON_TIME_PERFORMANCE_2016_1` (\\n  `YEAR` int(11) DEFAULT NULL  `QUARTER` int(11) DEFAULT NULL,\\n  `MONTH` int(11) DEFAULT NULL,\\n  `DAYOFMONTH` int(11) DEFAULT NULL,\\n  `DAYOFWEEK` int(11) DEFAULT NULL,\\n  `FLIGHTDATE` date DEFAULT NULL,\\n  `UNIQUECARRIER` char(2) DEFAULT NULL,\\n  `AIRLINEID` int(11) NOT NULL,\\n  `CARRIER` char(2) DEFAULT NULL,\\n  `TAILNUM` varchar(6) DEFAULT NULL,\\n  `FLIGHTNUM` int(11) DEFAULT NULL,\\n  `ORIGINAIRPORTID` int(11) DEFAULT NULL,\\n  `ORIGINAIRPORTSEQID` int(11) DEFAULT NULL,\\n  `ORIGINCITYMARKETID` int(11) DEFAULT NULL,\\n  `ORIGIN` char(3) DEFAULT NULL,\\n  `ORIGINCITYNAME` varchar(34) DEFAULT NULL,\\n  `ORIGINSTATE` char(2) DEFAULT NULL,\\n  `ORIGINSTATEFIPS` int(11) DEFAULT NULL,\\n  `ORIGINSTATENAME` varchar(46) DEFAULT NULL,\\n  `ORIGINWAC` int(11) DEFAULT NULL,\\n  `DESTAIRPORTID` int(11) DEFAULT NULL,\\n  `DESTAIRPORTSEQID` int(11) DEFAULT NULL,\\n  `DESTCITYMARKETID` int(11) DEFAULT NULL,\\n  `DEST` char(3) DEFAULT NULL,\\n  `DESTCITYNAME` varchar(34) DEFAULT NULL,\\n  `DESTSTATE` char(2) DEFAULT NULL,\\n  `DESTSTATEFIPS` int(11) DEFAULT NULL,\\n  `DESTSTATENAME` varchar(46) DEFAULT NULL,\\n  `DESTWAC` int(11) DEFAULT NULL,\\n  `CRSDEPTIME` int(11) DEFAULT NULL,\\n  `DEPTIME` int(11) DEFAULT NULL,\\n  `DEPDELAY` decimal(65,2) DEFAULT NULL,\\n  `DEPDELAYMINUTES` float DEFAULT NULL,\\n  `DEPDEL15` int(11) DEFAULT NULL,\\n  `DEPARTUREDELAYGROUPS` int(11) DEFAULT NULL,\\n  `DEPTIMEBLK` char(9) DEFAULT NULL,\\n  `TAXIOUT` float DEFAULT NULL,\\n  `WHEELSOFF` int(11) DEFAULT NULL,\\n  `WHEELSON` int(11) DEFAULT NULL,\\n  `TAXIIN` float DEFAULT NULL,\\n  `CRSARRTIME` int(11) DEFAULT NULL,\\n  `ARRTIME` int(11) DEFAULT NULL,\\n  `ARRDELAY` decimal(65,2) DEFAULT NULL,\\n  `ARRDELAYMINUTES` float DEFAULT NULL,\\n  `ARRDEL15` int(11) DEFAULT NULL,\\n  `ARRIVALDELAYGROUPS` int(11) DEFAULT NULL,\\n  `ARRTIMEBLK` char(9) DEFAULT NULL,\\n  `CANCELLED` int(11) DEFAULT NULL,\\n  `CANCELLATIONCODE` char(1) DEFAULT NULL,\\n  `DIVERTED` int(11) DEFAULT NULL,\\n  `CRSELAPSEDTIME` float DEFAULT NULL,\\n  `ACTUALELAPSEDTIME` float DEFAULT NULL,\\n  `AIRTIME` float DEFAULT NULL,\\n  `FLIGHTS` float DEFAULT NULL,\\n  `DISTANCE` float DEFAULT NULL,\\n  `DISTANCEGROUP` int(11) DEFAULT NULL,\\n  `CARRIERDELAY` decimal(65,2) DEFAULT NULL,\\n  `WEATHERDELAY` decimal(65,2) DEFAULT NULL,\\n  `NASDELAY` decimal(65,2) DEFAULT NULL,\\n  `SECURITYDELAY` decimal(65,2) DEFAULT NULL,\\n  `LATEAIRCRAFTDELAY` decimal(65,2) DEFAULT NULL,\\n  `FIRSTDEPTIME` decimal(65,2) DEFAULT NULL,\\n  `TOTALADDGTIME` decimal(65,2) DEFAULT NULL,\\n  `LONGESTADDGTIME` decimal(65,2) DEFAULT NULL,\\n  `DIVAIRPORTLANDINGS` int(11) DEFAULT NULL,\\n  `DIVREACHEDDEST` decimal(65,2) DEFAULT NULL,\\n  `DIVACTUALELAPSEDTIME` decimal(65,2) DEFAULT NULL,\\n  `DIVARRDELAY` decimal(65,2) DEFAULT NULL,\\n  `DIVDISTANCE` decimal(65,2) DEFAULT NULL,\\n  `DIV1AIRPORT` char(3) DEFAULT NULL,\\n  `DIV1AIRPORTID` int(11) DEFAULT NULL,\\n  `DIV1AIRPORTSEQID` int(11) DEFAULT NULL,\\n  `DIV1WHEELSON` decimal(65,2) DEFAULT NULL,\\n  `DIV1TOTALGTIME` decimal(65,2) DEFAULT NULL,\\n  `DIV1LONGESTGTIME` decimal(65,2) DEFAULT NULL,\\n  `DIV1WHEELSOFF` decimal(65,2) DEFAULT NULL,\\n  `DIV1TAILNUM` varchar(6) DEFAULT NULL,\\n  `DIV2AIRPORT` char(3) DEFAULT NULL,\\n  `DIV2AIRPORTID` int(11) DEFAULT NULL,\\n  `DIV2AIRPORTSEQID` int(11) DEFAULT NULL,\\n  `DIV2WHEELSON` decimal(65,2) DEFAULT NULL,\\n  `DIV2TOTALGTIME` decimal(65,2) DEFAULT NULL,\\n  `DIV2LONGESTGTIME` decimal(65,2) DEFAULT NULL,\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIVAIRPORTLANDINGS_FKEY` (`DIVAIRPORTLANDINGS`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DEPARTUREDELAYGROUPS_FKEY` (`DEPARTUREDELAYGROUPS`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ARRIVALDELAYGROUPS_FKEY` (`ARRIVALDELAYGROUPS`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIV1AIRPORTSEQID_FKEY` (`DIV1AIRPORTSEQID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIV2AIRPORTSEQID_FKEY` (`DIV2AIRPORTSEQID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIV1AIRPORTID_FKEY` (`DIV1AIRPORTID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIV2AIRPORTID_FKEY` (`DIV2AIRPORTID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIVERTED_FKEY` (`DIVERTED`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_CANCELLED_FKEY` (`CANCELLED`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ARRDEL15_FKEY` (`ARRDEL15`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DEPDEL15_FKEY` (`DEPDEL15`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_CANCELLATIONCODE_FKEY` (`CANCELLATIONCODE`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DEPTIMEBLK_FKEY` (`DEPTIMEBLK`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTSTATE_FKEY` (`DESTSTATE`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DEST_FKEY` (`DEST`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINSTATE_FKEY` (`ORIGINSTATE`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGIN_FKEY` (`ORIGIN`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_UNIQUECARRIER_FKEY` (`UNIQUECARRIER`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTSTATEFIPS_FKEY` (`DESTSTATEFIPS`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINSTATEFIPS_FKEY` (`ORIGINSTATEFIPS`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINWAC_FKEY` (`ORIGINWAC`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTWAC_FKEY` (`DESTWAC`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DAYOFWEEK_FKEY` (`DAYOFWEEK`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DISTANCEGROUP_FKEY` (`DISTANCEGROUP`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_QUARTER_FKEY` (`QUARTER`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_MONTH_FKEY` (`MONTH`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTCITYMARKETID_FKEY` (`DESTCITYMARKETID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINCITYMARKETID_FKEY` (`ORIGINCITYMARKETID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTAIRPORTSEQID_FKEY` (`DESTAIRPORTSEQID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINAIRPORTSEQID_FKEY` (`ORIGINAIRPORTSEQID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTAIRPORTID_FKEY` (`DESTAIRPORTID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINAIRPORTID_FKEY` (`ORIGINAIRPORTID`),\\n  KEY `ON_TIME_ON_TIME_PERFORMANCE_2016_1_AIRLINEID_FKEY` (`AIRLINEID`),\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_AIRLINEID_FKEY` FOREIGN KEY (`AIRLINEID`) REFERENCES `L_AIRLINE_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ARRDEL15_FKEY` FOREIGN KEY (`ARRDEL15`) REFERENCES `L_YESNO_RESP` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ARRIVALDELAYGROUPS_FKEY` FOREIGN KEY (`ARRIVALDELAYGROUPS`) REFERENCES `L_ONTIME_DELAY_GROUPS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_CANCELLATIONCODE_FKEY` FOREIGN KEY (`CANCELLATIONCODE`) REFERENCES `L_CANCELLATION` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_CANCELLED_FKEY` FOREIGN KEY (`CANCELLED`) REFERENCES `L_YESNO_RESP` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DAYOFWEEK_FKEY` FOREIGN KEY (`DAYOFWEEK`) REFERENCES `L_WEEKDAYS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DEPARTUREDELAYGROUPS_FKEY` FOREIGN KEY (`DEPARTUREDELAYGROUPS`) REFERENCES `L_ONTIME_DELAY_GROUPS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DEPDEL15_FKEY` FOREIGN KEY (`DEPDEL15`) REFERENCES `L_YESNO_RESP` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DEPTIMEBLK_FKEY` FOREIGN KEY (`DEPTIMEBLK`) REFERENCES `L_DEPARRBLK` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTAIRPORTID_FKEY` FOREIGN KEY (`DESTAIRPORTID`) REFERENCES `L_AIRPORT_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTAIRPORTSEQID_FKEY` FOREIGN KEY (`DESTAIRPORTSEQID`) REFERENCES `L_AIRPORT_SEQ_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTCITYMARKETID_FKEY` FOREIGN KEY (`DESTCITYMARKETID`) REFERENCES `L_CITY_MARKET_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTSTATEFIPS_FKEY` FOREIGN KEY (`DESTSTATEFIPS`) REFERENCES `L_STATE_FIPS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTSTATE_FKEY` FOREIGN KEY (`DESTSTATE`) REFERENCES `L_STATE_ABR_AVIATION` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DESTWAC_FKEY` FOREIGN KEY (`DESTWAC`) REFERENCES `L_WORLD_AREA_CODES` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DEST_FKEY` FOREIGN KEY (`DEST`) REFERENCES `L_AIRPORT` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DISTANCEGROUP_FKEY` FOREIGN KEY (`DISTANCEGROUP`) REFERENCES `L_DISTANCE_GROUP_250` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIV1AIRPORTID_FKEY` FOREIGN KEY (`DIV1AIRPORTID`) REFERENCES `L_AIRPORT_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIV1AIRPORTSEQID_FKEY` FOREIGN KEY (`DIV1AIRPORTSEQID`) REFERENCES `L_AIRPORT_SEQ_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIV2AIRPORTID_FKEY` FOREIGN KEY (`DIV2AIRPORTID`) REFERENCES `L_AIRPORT_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIV2AIRPORTSEQID_FKEY` FOREIGN KEY (`DIV2AIRPORTSEQID`) REFERENCES `L_AIRPORT_SEQ_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIVAIRPORTLANDINGS_FKEY` FOREIGN KEY (`DIVAIRPORTLANDINGS`) REFERENCES `L_DIVERSIONS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_DIVERTED_FKEY` FOREIGN KEY (`DIVERTED`) REFERENCES `L_YESNO_RESP` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_MONTH_FKEY` FOREIGN KEY (`MONTH`) REFERENCES `L_MONTHS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINAIRPORTID_FKEY` FOREIGN KEY (`ORIGINAIRPORTID`) REFERENCES `L_AIRPORT_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINAIRPORTSEQID_FKEY` FOREIGN KEY (`ORIGINAIRPORTSEQID`) REFERENCES `L_AIRPORT_SEQ_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINCITYMARKETID_FKEY` FOREIGN KEY (`ORIGINCITYMARKETID`) REFERENCES `L_CITY_MARKET_ID` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINSTATEFIPS_FKEY` FOREIGN KEY (`ORIGINSTATEFIPS`) REFERENCES `L_STATE_FIPS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINSTATE_FKEY` FOREIGN KEY (`ORIGINSTATE`) REFERENCES `L_STATE_ABR_AVIATION` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGINWAC_FKEY` FOREIGN KEY (`ORIGINWAC`) REFERENCES `L_WORLD_AREA_CODES` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_ORIGIN_FKEY` FOREIGN KEY (`ORIGIN`) REFERENCES `L_AIRPORT` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_QUARTER_FKEY` FOREIGN KEY (`QUARTER`) REFERENCES `L_QUARTERS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ON_TIME_ON_TIME_PERFORMANCE_2016_1_UNIQUECARRIER_FKEY` FOREIGN KEY (`UNIQUECARRIER`) REFERENCES `L_UNIQUE_CARRIERS` (`CODE`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de PERSONA con las columnas de, ID ACCIDENTE, CAUSANTE O PARTICIPANTE, EDAD, SEXO, UNIDAD ADMINISTRATIVA, CIUDADANÍA, LESIONES, TIPO DE PARTICIPANTE, CINTURONES DE SEGURIDAD O CASCO, PISTA DE CONDUCCIÓN, REVISIÓN DE EXPERTOS DE DISTRIBUCIÓN DE VIDA D",
      "output": "('OSEBA', 'CREATE TABLE `OSEBA` (\\n  `ID_NESRECA` char(6) NOT NULL  `POVZROCITELJ_ALI_UDELEZENEC` char(1) DEFAULT NULL,\\n  `STAROST` tinyint(3) unsigned DEFAULT NULL,\\n  `SPOL` char(1) NOT NULL,\\n  `UPRAVNA_ENOTA` char(4) NOT NULL,\\n  `DRZAVLJANSTVO` char(3) NOT NULL,\\n  `POSKODBA` char(1) DEFAULT NULL,\\n  `VRSTA_UDELEZENCA` char(2) DEFAULT NULL,\\n  `VARNOSTNI_PAS_ALI_CELADA` char(1) DEFAULT NULL,\\n  `VOZNISKI_STAZ_LL` tinyint(3) unsigned DEFAULT NULL,\\n  `VOZNISKI_STAZ_MM` tinyint(3) unsigned DEFAULT NULL,\\n  `ALKOTEST` decimal(3,2) DEFAULT NULL,\\n  `STROKOVNI_PREGLED` decimal(3,2) DEFAULT NULL,\\n  `STAROST_D` char(1) DEFAULT NULL,\\n  `VOZNISKI_STAZ_D` char(1) NOT NULL,\\n  `ALKOTEST_D` char(1) NOT NULL,\\n  `STROKOVNI_PREGLED_D` char(1) NOT NULL,\\n  KEY `OSEBA_ID_NESRECA` (`ID_NESRECA`),\\n  KEY `UPRAVNA_ENOTA` (`UPRAVNA_ENOTA`),\\n  CONSTRAINT `OSEBA_IBFK_1` FOREIGN KEY (`ID_NESRECA`) REFERENCES `NESRECA` (`ID_NESRECA`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `OSEBA_IBFK_2` FOREIGN KEY (`UPRAVNA_ENOTA`) REFERENCES `UPRAVNA_ENOTA` (`ID_UPRAVNA_ENOTA`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de PARÁMETROS con las columnas de, CATÁLOGO ESPECÍFICO, ESQUEMA ESPECÍFICO, NOMBRE ESPECÍFICO, POSICIÓN ORDINAL, MODO DE PARÁMETRO, NOMBRE DE PARÁMETRO, TIPO DE DATOS, LONGITUD MÁXIMA DE CARÁCTER, LONGITUD DE OCTETTO DE CARÁCTER, PRECISIÓN NUMÉRICA, ESCALA NUMÉRICA, PRECISIÓN DE FECHA Y HORA, NOMBRE DE CONJUNTO DE CARACTERES, NOMBRE DE COLACIÓN, IDENTIFICADOR DTD, RUTINA ESCRIBE",
      "output": "('PARAMETERS', \"CREATE TABLE `PARAMETERS` (\\n  `SPECIFIC_CATALOG` varchar(512) NOT NULL DEFAULT ''  `SPECIFIC_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `SPECIFIC_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `ORDINAL_POSITION` int(21) NOT NULL DEFAULT 0,\\n  `PARAMETER_MODE` varchar(5) DEFAULT NULL,\\n  `PARAMETER_NAME` varchar(64) DEFAULT NULL,\\n  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `CHARACTER_MAXIMUM_LENGTH` int(21) DEFAULT NULL,\\n  `CHARACTER_OCTET_LENGTH` int(21) DEFAULT NULL,\\n  `NUMERIC_PRECISION` int(21) DEFAULT NULL,\\n  `NUMERIC_SCALE` int(21) DEFAULT NULL,\\n  `DATETIME_PRECISION` bigint(21) unsigned DEFAULT NULL,\\n  `CHARACTER_SET_NAME` varchar(64) DEFAULT NULL,\\n  `COLLATION_NAME` varchar(64) DEFAULT NULL,\\n  `DTD_IDENTIFIER` longtext NOT NULL,\\n  `ROUTINE_TYPE` varchar(9) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=771920 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de PARTICIONES con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, NOMBRE DE PARTICIÓN, NOMBRE DE SUBPARTICIÓN, POSICIÓN ORDINAL DE PARTICIÓN, POSICIÓN ORDINAL DE SUBPARTICIÓN, MÉTODO DE PARTICIÓN, MÉTODO DE SUBPARTICIÓN, EXPRESIÓN DE PARTICIÓN, EXPRESIÓN DE SUBPARTICIÓN, DESCRIPCIÓN DE PARTICIÓN, FILAS DE LA TABLA, LONGITUD DE FILA PROMEDIO, LONGITUD DE DATOS, MÁX. LONGITUD DE DATOS, LONGITUD DE ÍNDICE, LIBRE DE DATOS, TIEMPO DE CREACIÓN, TIEMPO DE ACTUALIZACIÓN, TIEMPO DE COMPROBACIÓN, SUMA DE VERIFICACIÓN, COMENTARIO DE PARTICIÓN, GRUPO DE NODOS, NOMBRE DE ESPACIO DE MESA",
      "output": "('PARTITIONS', \"CREATE TABLE `PARTITIONS` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `PARTITION_NAME` varchar(64) DEFAULT NULL,\\n  `SUBPARTITION_NAME` varchar(64) DEFAULT NULL,\\n  `PARTITION_ORDINAL_POSITION` bigint(21) unsigned DEFAULT NULL,\\n  `SUBPARTITION_ORDINAL_POSITION` bigint(21) unsigned DEFAULT NULL,\\n  `PARTITION_METHOD` varchar(18) DEFAULT NULL,\\n  `SUBPARTITION_METHOD` varchar(12) DEFAULT NULL,\\n  `PARTITION_EXPRESSION` longtext DEFAULT NULL,\\n  `SUBPARTITION_EXPRESSION` longtext DEFAULT NULL,\\n  `PARTITION_DESCRIPTION` longtext DEFAULT NULL,\\n  `TABLE_ROWS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `AVG_ROW_LENGTH` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATA_LENGTH` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `INDEX_LENGTH` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATA_FREE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `CREATE_TIME` datetime DEFAULT NULL,\\n  `UPDATE_TIME` datetime DEFAULT NULL,\\n  `CHECK_TIME` datetime DEFAULT NULL,\\n  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,\\n  `PARTITION_COMMENT` varchar(80) NOT NULL DEFAULT '',\\n  `NODEGROUP` varchar(12) NOT NULL DEFAULT '',\\n  `TABLESPACE_NAME` varchar(64) DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=714161 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de CLAVE con las columnas de, ID DE ENTIDAD DE NEGOCIO, PASSWORDHASH, PASSWORDSALT, ROWGUID, MODIFIEDDATE",
      "output": "('PASSWORD', \"CREATE TABLE `PASSWORD` (\\n  `BUSINESSENTITYID` int(11) NOT NULL  `PASSWORDHASH` varchar(128) NOT NULL COMMENT 'Password for the e-mail account.',\\n  `PASSWORDSALT` varchar(10) NOT NULL COMMENT 'Random value concatenated with the password string before the password is hashed.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='One way hashed authentication information'\")"
    },
    {
      "input": "Una tabla de PERSONA con las columnas de, ID DE ENTIDAD DE NEGOCIO, TIPO DE PERSONA, ESTILO DE NOMBRE, TÍTULO, NOMBRE, SEGUNDO NOMBRE, APELLIDO, SUFIJO, PROMOCIÓN DE CORREO ELECTRÓNICO, INFORMACIÓN DE CONTACTO ADICIONAL, DEMOGRAFÍA, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('PERSON', \"CREATE TABLE `PERSON` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key for Person records.'  `PERSONTYPE` char(2) NOT NULL COMMENT 'Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact',\\n  `NAMESTYLE` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.',\\n  `TITLE` varchar(8) DEFAULT NULL COMMENT 'A courtesy title. For example, Mr. or Ms.',\\n  `FIRSTNAME` varchar(100) NOT NULL COMMENT 'First name of the person.',\\n  `MIDDLENAME` varchar(100) DEFAULT NULL COMMENT 'Middle name or middle initial of the person.',\\n  `LASTNAME` varchar(100) NOT NULL COMMENT 'Last name of the person.',\\n  `SUFFIX` varchar(10) DEFAULT NULL COMMENT 'Surname suffix. For example, Sr. or Jr.',\\n  `EMAILPROMOTION` int(11) NOT NULL DEFAULT 0 COMMENT '0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. ',\\n  `ADDITIONALCONTACTINFO` text DEFAULT NULL COMMENT 'Additional contact information about the person stored in xml format. ',\\n  `DEMOGRAPHICS` text DEFAULT NULL COMMENT 'Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.'\")"
    },
    {
      "input": "Una tabla de PERSONATARJETACRÉDITO con las columnas de, IDENTIFICACIÓN DEL NEGOCIO, IDENTIFICACIÓN DE LA TARJETA DE CRÉDITO, FECHA DE MODIFICACIÓN",
      "output": "('PERSONCREDITCARD', \"CREATE TABLE `PERSONCREDITCARD` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Business entity identification number. Foreign key to Person.BusinessEntityID.'  `CREDITCARDID` int(11) NOT NULL COMMENT 'Credit card identification number. Foreign key to CreditCard.CreditCardID.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`,`CREDITCARDID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping people to their credit card information in the CreditCard table. '\")"
    },
    {
      "input": "Una tabla de PERSÉFONO con las columnas de, ID DE ENTIDAD DE NEGOCIO, NÚMERO DE TELÉFONO, ID DE TIPO DE NÚMERO DE TELÉFONO, FECHA DE MODIFICACIÓN",
      "output": "('PERSONPHONE', \"CREATE TABLE `PERSONPHONE` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Business entity identification number. Foreign key to Person.BusinessEntityID.'  `PHONENUMBER` varchar(50) NOT NULL COMMENT 'Telephone number identification number.',\\n  `PHONENUMBERTYPEID` int(11) NOT NULL COMMENT 'Kind of phone number. Foreign key to PhoneNumberType.PhoneNumberTypeID.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`,`PHONENUMBER`,`PHONENUMBERTYPEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Telephone number and type of a person.'\")"
    },
    {
      "input": "Una tabla de TIPO DE NÚMERO DE TELÉFONO con las columnas de, ID DE TIPO DE NÚMERO DE TELÉFONO, NOMBRE, FECHA DE MODIFICACIÓN",
      "output": "('PHONENUMBERTYPE', \"CREATE TABLE `PHONENUMBERTYPE` (\\n  `PHONENUMBERTYPEID` int(11) NOT NULL COMMENT 'Primary key for telephone number type records.'  `NAME` varchar(100) NOT NULL COMMENT 'Name of the telephone number type',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PHONENUMBERTYPEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Type of phone number of a person.'\")"
    },
    {
      "input": "Una tabla de JUGADORES con las columnas de, PID, FECHA DE NACIMIENTO, NOMBRE, APELLIDO, ALTURA, PESO",
      "output": "('PLAYERS', 'CREATE TABLE `PLAYERS` (\\n  `PID` int(11) NOT NULL  `DOB` datetime DEFAULT NULL,\\n  `FIRST_NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `LAST_NAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `HEIGHT` int(11) DEFAULT NULL,\\n  `WEIGHT` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`PID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de COMPLEMENTOS con las columnas de, NOMBRE DEL PLUGIN, VERSIÓN DEL PLUGIN, ESTADO DEL PLUGIN, TIPO DE PLUGIN, VERSIÓN DEL TIPO DE PLUGIN, BIBLIOTECA DE PLUGIN, VERSIÓN DE LA BIBLIOTECA DE PLUGIN, AUTOR DEL PLUGIN, DESCRIPCIÓN DEL PLUGIN, LICENCIA DEL PLUGIN, OPCIÓN DE CARGA, VENCIMIENTO DEL PLUGIN, VERSIÓN DE AUTORIZACIÓN DEL PLUGIN",
      "output": "('PLUGINS', \"CREATE TABLE `PLUGINS` (\\n  `PLUGIN_NAME` varchar(64) NOT NULL DEFAULT ''  `PLUGIN_VERSION` varchar(20) NOT NULL DEFAULT '',\\n  `PLUGIN_STATUS` varchar(16) NOT NULL DEFAULT '',\\n  `PLUGIN_TYPE` varchar(80) NOT NULL DEFAULT '',\\n  `PLUGIN_TYPE_VERSION` varchar(20) NOT NULL DEFAULT '',\\n  `PLUGIN_LIBRARY` varchar(64) DEFAULT NULL,\\n  `PLUGIN_LIBRARY_VERSION` varchar(20) DEFAULT NULL,\\n  `PLUGIN_AUTHOR` varchar(64) DEFAULT NULL,\\n  `PLUGIN_DESCRIPTION` longtext DEFAULT NULL,\\n  `PLUGIN_LICENSE` varchar(80) NOT NULL DEFAULT '',\\n  `LOAD_OPTION` varchar(64) NOT NULL DEFAULT '',\\n  `PLUGIN_MATURITY` varchar(12) NOT NULL DEFAULT '',\\n  `PLUGIN_AUTH_VERSION` varchar(80) DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=1208488 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, objetivo propagado, cliente id de cliente agregado stddev samp",
      "output": "('PREDICTOR100001', \"CREATE TABLE `PREDICTOR100001` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, objetivo propagado, id del distrito del cliente agregado stddev samp",
      "output": "('PREDICTOR100002', \"CREATE TABLE `PREDICTOR100002` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `client_district_id_aggregate_stddev_samp_100002` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, objetivo propagado, cliente id de cliente agregado stddev samp",
      "output": "('PREDICTOR100003', \"CREATE TABLE `PREDICTOR100003` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, destino propagado, muestra de stddev agregada de id de cuenta de pedido",
      "output": "('PREDICTOR100008', \"CREATE TABLE `PREDICTOR100008` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_account_id_aggregate_stddev_samp_100008` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, destino propagado, cuenta de pedido para agregar stddev samp",
      "output": "('PREDICTOR100009', \"CREATE TABLE `PREDICTOR100009` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_account_to_aggregate_stddev_samp_100009` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, objetivo propagado, ID de orden de pedido agregado stddev samp",
      "output": "('PREDICTOR100011', \"CREATE TABLE `PREDICTOR100011` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_order_id_aggregate_stddev_samp_100011` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, destino propagado, muestra de stddev agregada de cuenta trans",
      "output": "('PREDICTOR100012', \"CREATE TABLE `PREDICTOR100012` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_account_aggregate_stddev_samp_100012` double(28,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, destino propagado, cantidad trans agregada stddev samp",
      "output": "('PREDICTOR100014', \"CREATE TABLE `PREDICTOR100014` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_amount_aggregate_stddev_samp_100014` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, objetivo propagado, promedio agregado de ID del distrito del cliente",
      "output": "('PREDICTOR100020', \"CREATE TABLE `PREDICTOR100020` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `client_district_id_aggregate_avg_100020` decimal(14,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, destino propagado, cuenta de pedido para agregar promedio",
      "output": "('PREDICTOR100025', \"CREATE TABLE `PREDICTOR100025` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100025` decimal(14,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, fecha propagada, objetivo propagado, cantidad de pedido agregado promedio",
      "output": "('PREDICTOR100026', \"CREATE TABLE `PREDICTOR100026` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100026` decimal(10,5) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, objetivo propagado, promedio agregado de cuenta trans",
      "output": "('PREDICTOR100028', \"CREATE TABLE `PREDICTOR100028` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_account_aggregate_avg_100028` decimal(15,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, destino propagado, monto mínimo agregado del pedido",
      "output": "('PREDICTOR100042', \"CREATE TABLE `PREDICTOR100042` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_amount_aggregate_min_100042` decimal(6,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, destino propagado, mínimo agregado de cuenta trans",
      "output": "('PREDICTOR100044', \"CREATE TABLE `PREDICTOR100044` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_account_aggregate_min_100044` int(11) unsigned DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, fecha propagada, objetivo propagado, cantidad trans agregada mínima",
      "output": "('PREDICTOR100046', \"CREATE TABLE `PREDICTOR100046` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_amount_aggregate_min_100046` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, objetivo propagado, balance agregado mínimo trans",
      "output": "('PREDICTOR100047', \"CREATE TABLE `PREDICTOR100047` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_balance_aggregate_min_100047` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, fecha propagada, destino propagado, cantidad máxima agregada del pedido",
      "output": "('PREDICTOR100058', \"CREATE TABLE `PREDICTOR100058` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_amount_aggregate_max_100058` decimal(6,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, objetivo propagado, cantidad máxima agregada trans",
      "output": "('PREDICTOR100062', \"CREATE TABLE `PREDICTOR100062` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_amount_aggregate_max_100062` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, objetivo propagado, suma agregada del ID del cliente del cliente",
      "output": "('PREDICTOR100067', \"CREATE TABLE `PREDICTOR100067` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `client_client_id_aggregate_sum_100067` decimal(32,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, destino propagado, suma agregada del ID del distrito del cliente",
      "output": "('PREDICTOR100068', \"CREATE TABLE `PREDICTOR100068` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `client_district_id_aggregate_sum_100068` decimal(32,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, fecha propagada, destino propagado, suma agregada del monto del pedido",
      "output": "('PREDICTOR100074', \"CREATE TABLE `PREDICTOR100074` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_amount_aggregate_sum_100074` decimal(28,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagado, objetivo propagado, frecuencia de cuenta directo Campo nominal Columna",
      "output": "('PREDICTOR100081', \"CREATE TABLE `PREDICTOR100081` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `account_frequency_directField_nominalColumn_100081` varchar(18) DEFAULT '',\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificación propagada, fecha propagada, objetivo propagado, tipo de tarjeta directa Campo nominal Columna",
      "output": "('PREDICTOR100082', \"CREATE TABLE `PREDICTOR100082` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `card_type_directField_nominalColumn_100082` varchar(7) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID de propagación, fecha de propagación, objetivo de propagación, distrito A directo Campo nominal Columna",
      "output": "('PREDICTOR100084', \"CREATE TABLE `PREDICTOR100084` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A3_directField_nominalColumn_100084` varchar(15) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificación propagada, fecha propagada, objetivo propagado, estado del préstamo directo Campo nominal Columna",
      "output": "('PREDICTOR100085', \"CREATE TABLE `PREDICTOR100085` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directField_nominalColumn_100085` varchar(1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, objetivo propagado, tarjeta id de tarjeta directa Campo numérico Columna",
      "output": "('PREDICTOR100088', \"CREATE TABLE `PREDICTOR100088` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `card_card_id_directField_numericalColumn_100088` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100090', \"CREATE TABLE `PREDICTOR100090` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A10_directField_numericalColumn_100090` decimal(4,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100092', \"CREATE TABLE `PREDICTOR100092` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A12_directField_numericalColumn_100092` decimal(4,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100093', \"CREATE TABLE `PREDICTOR100093` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A13_directField_numericalColumn_100093` decimal(3,2) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100094', \"CREATE TABLE `PREDICTOR100094` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A14_directField_numericalColumn_100094` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100095', \"CREATE TABLE `PREDICTOR100095` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A15_directField_numericalColumn_100095` int(5) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100098', \"CREATE TABLE `PREDICTOR100098` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A5_directField_numericalColumn_100098` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100099', \"CREATE TABLE `PREDICTOR100099` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A6_directField_numericalColumn_100099` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100100', \"CREATE TABLE `PREDICTOR100100` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A7_directField_numericalColumn_100100` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100101', \"CREATE TABLE `PREDICTOR100101` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A8_directField_numericalColumn_100101` int(6) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id de propagación, fecha de propagación, objetivo de propagación, distrito Un campo directo Columna numérica",
      "output": "('PREDICTOR100102', \"CREATE TABLE `PREDICTOR100102` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_A9_directField_numericalColumn_100102` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, objetivo propagado, ID de cuenta de préstamo directo Campo numérico Columna",
      "output": "('PREDICTOR100104', \"CREATE TABLE `PREDICTOR100104` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_account_id_directField_numericalColumn_100104` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificación propagada, fecha propagada, objetivo propagado, monto del préstamo directo Campo numérico Columna",
      "output": "('PREDICTOR100105', \"CREATE TABLE `PREDICTOR100105` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_amount_directField_numericalColumn_100105` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificación propagada, fecha propagada, objetivo propagado, duración del préstamo directo Campo numérico Columna",
      "output": "('PREDICTOR100106', \"CREATE TABLE `PREDICTOR100106` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_duration_directField_numericalColumn_100106` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificación propagada, fecha propagada, objetivo propagado, pagos de préstamos directos Campo numérico Columna",
      "output": "('PREDICTOR100108', \"CREATE TABLE `PREDICTOR100108` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_payments_directField_numericalColumn_100108` decimal(6,2) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, ID propagado, fecha propagada, objetivo propagado, fecha de cuenta directa Columna de tiempo de campo",
      "output": "('PREDICTOR100109', \"CREATE TABLE `PREDICTOR100109` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `account_date_directField_timeColumn_100109` date DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, fecha propagada, objetivo propagado, fecha de préstamo directo Columna de tiempo de campo",
      "output": "('PREDICTOR100111', \"CREATE TABLE `PREDICTOR100111` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_date_directField_timeColumn_100111` date DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de LISTA DE PROCESOS con las columnas de, ID, USUARIO, HOST, DB, COMANDO, HORA, ESTADO, INFO, TIEMPO MS, ETAPA, ETAPA MÁX., PROGRESO, MEMORIA UTILIZADA, FILAS EXAMINADAS, ID DE CONSULTA",
      "output": "('PROCESSLIST', \"CREATE TABLE `PROCESSLIST` (\\n  `ID` bigint(4) NOT NULL DEFAULT 0  `USER` varchar(128) NOT NULL DEFAULT '',\\n  `HOST` varchar(64) NOT NULL DEFAULT '',\\n  `DB` varchar(64) DEFAULT NULL,\\n  `COMMAND` varchar(16) NOT NULL DEFAULT '',\\n  `TIME` int(7) NOT NULL DEFAULT 0,\\n  `STATE` varchar(64) DEFAULT NULL,\\n  `INFO` longtext DEFAULT NULL,\\n  `TIME_MS` decimal(22,3) NOT NULL DEFAULT 0.000,\\n  `STAGE` tinyint(2) NOT NULL DEFAULT 0,\\n  `MAX_STAGE` tinyint(2) NOT NULL DEFAULT 0,\\n  `PROGRESS` decimal(7,3) NOT NULL DEFAULT 0.000,\\n  `MEMORY_USED` int(7) NOT NULL DEFAULT 0,\\n  `EXAMINED_ROWS` int(7) NOT NULL DEFAULT 0,\\n  `QUERY_ID` bigint(4) NOT NULL DEFAULT 0\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=2003249 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de PRODUCTO con las columnas de, ID DE PRODUCTO, NOMBRE, NÚMERO DE PRODUCTO, BANDERA DE FABRICACIÓN, BANDERA DE BIENES TERMINADOS, COLOR, NIVEL DE EXISTENCIA DE SEGURIDAD, REORDENAR PUNTO, COSTO ESTÁNDAR, PRECIO DE LISTA, TAMAÑO, CÓDIGO DE MEDIDA DE UNIDAD DE TAMAÑO, CÓDIGO DE MEDIDA DE UNIDAD DE PESO, PESO, DÍAS DE FABRICACIÓN, LÍNEA DE PRODUCTO, CLASE, ESTILO, ID DE SUBCATEGORÍA DE PRODUCTO, ID DE MODELO DE PRODUCTO, FECHA DE INICIO DE VENTA, FECHA DE FINAL DE VENTA, FECHA DE FINALIZACIÓN DE VENTAS, DESCONTINUACIÓN",
      "output": "('PRODUCT', \"CREATE TABLE `PRODUCT` (\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Primary key for Product records.'  `NAME` varchar(100) NOT NULL COMMENT 'Name of the product.',\\n  `PRODUCTNUMBER` varchar(25) NOT NULL COMMENT 'Unique product identification number.',\\n  `MAKEFLAG` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Product is purchased, 1 = Product is manufactured in-house.',\\n  `FINISHEDGOODSFLAG` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Product is not a salable item. 1 = Product is salable.',\\n  `COLOR` varchar(15) DEFAULT NULL COMMENT 'Product color.',\\n  `SAFETYSTOCKLEVEL` smallint(6) NOT NULL COMMENT 'Minimum inventory quantity. ',\\n  `REORDERPOINT` smallint(6) NOT NULL COMMENT 'Inventory level that triggers a purchase order or work order. ',\\n  `STANDARDCOST` decimal(19,4) NOT NULL COMMENT 'Standard cost of the product.',\\n  `LISTPRICE` decimal(19,4) NOT NULL COMMENT 'Selling price.',\\n  `SIZE` varchar(5) DEFAULT NULL COMMENT 'Product size.',\\n  `SIZEUNITMEASURECODE` char(3) DEFAULT NULL COMMENT 'Unit of measure for Size column.',\\n  `WEIGHTUNITMEASURECODE` char(3) DEFAULT NULL COMMENT 'Unit of measure for Weight column.',\\n  `WEIGHT` decimal(8,2) DEFAULT NULL COMMENT 'Product weight.',\\n  `DAYSTOMANUFACTURE` int(11) NOT NULL COMMENT 'Number of days required to manufacture the product.',\\n  `PRODUCTLINE` char(2) DEFAULT NULL COMMENT 'R = Road, M = Mountain, T = Touring, S = Standard',\\n  `CLASS` char(2) DEFAULT NULL COMMENT 'H = High, M = Medium, L = Low',\\n  `STYLE` char(2) DEFAULT NULL COMMENT 'W = Womens, M = Mens, U = Universal',\\n  `PRODUCTSUBCATEGORYID` int(11) DEFAULT NULL COMMENT 'Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. ',\\n  `PRODUCTMODELID` int(11) DEFAULT NULL COMMENT 'Product is a member of this product model. Foreign key to ProductModel.ProductModelID.',\\n  `SELLSTARTDATE` datetime NOT NULL COMMENT 'Date the product was available for sale.',\\n  `SELLENDDATE` datetime DEFAULT NULL COMMENT 'Date the product was no longer available for sale.',\\n  `DISCONTINUEDDATE` datetime DEFAULT NULL COMMENT 'Date the product was discontinued.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Products sold or used in the manfacturing of sold products.'\")"
    },
    {
      "input": "Una tabla de CATEGORIA DE PRODUCTO con las columnas de, ID DE CATEGORÍA DE PRODUCTO, NOMBRE, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTCATEGORY', \"CREATE TABLE `PRODUCTCATEGORY` (\\n  `PRODUCTCATEGORYID` int(11) NOT NULL COMMENT 'Primary key for ProductCategory records.'  `NAME` varchar(100) NOT NULL COMMENT 'Category description.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTCATEGORYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='High-level product categorization.'\")"
    },
    {
      "input": "Una tabla de PRODUCTOCOSTOHISTORIAL con las columnas de, PRODUCTO, FECHA DE INICIO, FECHA DE FINALIZACIÓN, COSTO ESTÁNDAR, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTCOSTHISTORY', \"CREATE TABLE `PRODUCTCOSTHISTORY` (\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID'  `STARTDATE` datetime NOT NULL COMMENT 'Product cost start date.',\\n  `ENDDATE` datetime DEFAULT NULL COMMENT 'Product cost end date.',\\n  `STANDARDCOST` decimal(19,4) NOT NULL COMMENT 'Standard cost of the product.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTID`,`STARTDATE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Changes in the cost of a product over time.'\")"
    },
    {
      "input": "Una tabla de DESCRIPCIÓN DEL PRODUCTO con las columnas de, DESCRIPCIÓN DEL PRODUCTO, DESCRIPCIÓN, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTDESCRIPTION', \"CREATE TABLE `PRODUCTDESCRIPTION` (\\n  `PRODUCTDESCRIPTIONID` int(11) NOT NULL COMMENT 'Primary key for ProductDescription records.'  `DESCRIPTION` varchar(400) NOT NULL COMMENT 'Description of the product.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTDESCRIPTIONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product descriptions in several languages.'\")"
    },
    {
      "input": "Una tabla de PRODUCTODOCUMENTO con las columnas de, ID DE PRODUCTO, NODO DE DOCUMENTO, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTDOCUMENT', \"CREATE TABLE `PRODUCTDOCUMENT` (\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `DOCUMENTNODE` varchar(255) NOT NULL COMMENT 'Document identification number. Foreign key to Document.DocumentNode.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTID`,`DOCUMENTNODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products to related product documents.'\")"
    },
    {
      "input": "Una tabla de INVENTARIO DE PRODUCTOS con las columnas de, PRODUCTID, LOCATIONID, SHELF, BIN, QUANTITY, ROWGUID, MODIFIEDDATE",
      "output": "('PRODUCTINVENTORY', \"CREATE TABLE `PRODUCTINVENTORY` (\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `LOCATIONID` smallint(6) NOT NULL COMMENT 'Inventory location identification number. Foreign key to Location.LocationID. ',\\n  `SHELF` varchar(10) NOT NULL COMMENT 'Storage compartment within an inventory location.',\\n  `BIN` tinyint(3) unsigned NOT NULL COMMENT 'Storage container on a shelf in an inventory location.',\\n  `QUANTITY` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Quantity of products in the inventory location.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTID`,`LOCATIONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product inventory information.'\")"
    },
    {
      "input": "Una tabla de LISTA DE PRODUCTOS HISTORIAL DE PRECIOS con las columnas de, PRODUCTO, FECHA DE INICIO, FECHA DE FINALIZACIÓN, PRECIO DE LISTA, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTLISTPRICEHISTORY', \"CREATE TABLE `PRODUCTLISTPRICEHISTORY` (\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID'  `STARTDATE` datetime NOT NULL COMMENT 'List price start date.',\\n  `ENDDATE` datetime DEFAULT NULL COMMENT 'List price end date',\\n  `LISTPRICE` decimal(19,4) NOT NULL COMMENT 'Product list price.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTID`,`STARTDATE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Changes in the list price of a product over time.'\")"
    },
    {
      "input": "Una tabla de MODELO DEL PRODUCTO con las columnas de, ID DE MODELO DE PRODUCTO, NOMBRE, DESCRIPCIÓN DE CATÁLOGO, INSTRUCCIONES, ID DE FILA, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTMODEL', \"CREATE TABLE `PRODUCTMODEL` (\\n  `PRODUCTMODELID` int(11) NOT NULL COMMENT 'Primary key for ProductModel records.'  `NAME` varchar(100) NOT NULL COMMENT 'Product model description.',\\n  `CATALOGDESCRIPTION` text DEFAULT NULL COMMENT 'Detailed product catalog information in xml format.',\\n  `INSTRUCTIONS` text DEFAULT NULL COMMENT 'Manufacturing instructions in xml format.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTMODELID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product model classification.'\")"
    },
    {
      "input": "Una tabla de PRODUCTOMODELOILUSTRACION con las columnas de, ID DE MODELO DE PRODUCTO, ID DE ILUSTRACIÓN, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTMODELILLUSTRATION', \"CREATE TABLE `PRODUCTMODELILLUSTRATION` (\\n  `PRODUCTMODELID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductModel.ProductModelID.'  `ILLUSTRATIONID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Illustration.IllustrationID.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTMODELID`,`ILLUSTRATIONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping product models and illustrations.'\")"
    },
    {
      "input": "Una tabla de MODELO DE PRODUCTO DESCRIPCIÓN DEL PRODUCTO CULTURA con las columnas de, ID DE MODELO DE PRODUCTO, ID DE DESCRIPCIÓN DE PRODUCTO, ID DE CULTURA, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTMODELPRODUCTDESCRIPTIONCULTURE', \"CREATE TABLE `PRODUCTMODELPRODUCTDESCRIPTIONCULTURE` (\\n  `PRODUCTMODELID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductModel.ProductModelID.'  `PRODUCTDESCRIPTIONID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductDescription.ProductDescriptionID.',\\n  `CULTUREID` char(6) NOT NULL COMMENT 'Culture identification number. Foreign key to Culture.CultureID.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTMODELID`,`PRODUCTDESCRIPTIONID`,`CULTUREID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping product descriptions and the language the description is written in.'\")"
    },
    {
      "input": "Una tabla de FOTO DEL PRODUCTO con las columnas de, ID DE PRODUCTO, FOTO EN MINIATURA, NOMBRE DE ARCHIVO DE FOTO EN MINIATURA, FOTO GRANDE, NOMBRE DE ARCHIVO DE FOTO GRANDE, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTPHOTO', \"CREATE TABLE `PRODUCTPHOTO` (\\n  `PRODUCTPHOTOID` int(11) NOT NULL COMMENT 'Primary key for ProductPhoto records.'  `THUMBNAILPHOTO` longblob DEFAULT NULL COMMENT 'Small image of the product.',\\n  `THUMBNAILPHOTOFILENAME` varchar(50) DEFAULT NULL COMMENT 'Small image file name.',\\n  `LARGEPHOTO` longblob DEFAULT NULL COMMENT 'Large image of the product.',\\n  `LARGEPHOTOFILENAME` varchar(50) DEFAULT NULL COMMENT 'Large image file name.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTPHOTOID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product images.'\")"
    },
    {
      "input": "Una tabla de PRODUCTOFOTO DEL PRODUCTO con las columnas de, PRODUCTID, PRODUCTPHOTOID, PRIMARIO, MODIFICADO FECHA",
      "output": "('PRODUCTPRODUCTPHOTO', \"CREATE TABLE `PRODUCTPRODUCTPHOTO` (\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `PRODUCTPHOTOID` int(11) NOT NULL COMMENT 'Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.',\\n  `PRIMARY` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = Photo is not the principal image. 1 = Photo is the principal image.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTID`,`PRODUCTPHOTOID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products and product photos.'\")"
    },
    {
      "input": "Una tabla de REVISION DE PRODUCTO con las columnas de, ID DE REVISIÓN DE PRODUCTO, ID DE PRODUCTO, NOMBRE DEL REVISOR, FECHA DE REVISIÓN, DIRECCIÓN DE CORREO ELECTRÓNICO, CALIFICACIÓN, COMENTARIOS, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTREVIEW', \"CREATE TABLE `PRODUCTREVIEW` (\\n  `PRODUCTREVIEWID` int(11) NOT NULL COMMENT 'Primary key for ProductReview records.'  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `REVIEWERNAME` varchar(100) NOT NULL COMMENT 'Name of the reviewer.',\\n  `REVIEWDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date review was submitted.',\\n  `EMAILADDRESS` varchar(50) NOT NULL COMMENT 'Reviewer''s e-mail address.',\\n  `RATING` int(11) NOT NULL COMMENT 'Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.',\\n  `COMMENTS` varchar(3850) DEFAULT NULL COMMENT 'Reviewer''s comments',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTREVIEWID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customer reviews of products they have purchased.'\")"
    },
    {
      "input": "Una tabla de SUBCATEGORÍA DE PRODUCTOS con las columnas de, ID DE SUBCATEGORÍA DE PRODUCTOS, ID DE CATEGORÍA DE PRODUCTOS, NOMBRE, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('PRODUCTSUBCATEGORY', \"CREATE TABLE `PRODUCTSUBCATEGORY` (\\n  `PRODUCTSUBCATEGORYID` int(11) NOT NULL COMMENT 'Primary key for ProductSubcategory records.'  `PRODUCTCATEGORYID` int(11) NOT NULL COMMENT 'Product category identification number. Foreign key to ProductCategory.ProductCategoryID.',\\n  `NAME` varchar(100) NOT NULL COMMENT 'Subcategory description.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTSUBCATEGORYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product subcategories. See ProductCategory table.'\")"
    },
    {
      "input": "Una tabla de PROVEEDOR DE PRODUCTO con las columnas de, ID DE PRODUCTO, ID DE ENTIDAD DE NEGOCIO, TIEMPO PROMEDIO, PRECIO ESTÁNDAR, COSTO DE LAS ÚLTIMAS RECEPCIONES, FECHA DE LAS ÚLTIMAS RECEPCIONES, CANT.",
      "output": "('PRODUCTVENDOR', \"CREATE TABLE `PRODUCTVENDOR` (\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Product.ProductID.'  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Vendor.BusinessEntityID.',\\n  `AVERAGELEADTIME` int(11) NOT NULL COMMENT 'The average span of time (in days) between placing an order with the vendor and receiving the purchased product.',\\n  `STANDARDPRICE` decimal(19,4) NOT NULL COMMENT 'The vendor''s usual selling price.',\\n  `LASTRECEIPTCOST` decimal(19,4) DEFAULT NULL COMMENT 'The selling price when last purchased.',\\n  `LASTRECEIPTDATE` datetime DEFAULT NULL COMMENT 'Date the product was last received by the vendor.',\\n  `MINORDERQTY` int(11) NOT NULL COMMENT 'The maximum quantity that should be ordered.',\\n  `MAXORDERQTY` int(11) NOT NULL COMMENT 'The minimum quantity that should be ordered.',\\n  `ONORDERQTY` int(11) DEFAULT NULL COMMENT 'The quantity currently on order.',\\n  `UNITMEASURECODE` char(3) NOT NULL COMMENT 'The product''s unit of measure.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PRODUCTID`,`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping vendors with the products they supply.'\")"
    },
    {
      "input": "Una tabla de PERFILADO con las columnas de, ID DE CONSULTA, SEQ, ESTADO, DURACIÓN, USUARIO DE CPU, SISTEMA DE CPU, CONTEXTO VOLUNTARIO, CONTEXTO INVOLUNTARIO, ENTRADA DE BLOQUEO, SALIDA DE BLOQUEO, MENSAJES ENVIADOS, MENSAJES RECIBIDOS, FALLAS DE PÁGINA MAYORES, FALLAS DE PÁGINA MENORES, INTERCAMBIOS, FUNCIÓN DE ORIGEN, ORIGEN ARCHIVO, LÍNEA DE FUENTE",
      "output": "('PROFILING', \"CREATE TABLE `PROFILING` (\\n  `QUERY_ID` int(20) NOT NULL DEFAULT 0  `SEQ` int(20) NOT NULL DEFAULT 0,\\n  `STATE` varchar(30) NOT NULL DEFAULT '',\\n  `DURATION` decimal(9,6) NOT NULL DEFAULT 0.000000,\\n  `CPU_USER` decimal(9,6) DEFAULT NULL,\\n  `CPU_SYSTEM` decimal(9,6) DEFAULT NULL,\\n  `CONTEXT_VOLUNTARY` int(20) DEFAULT NULL,\\n  `CONTEXT_INVOLUNTARY` int(20) DEFAULT NULL,\\n  `BLOCK_OPS_IN` int(20) DEFAULT NULL,\\n  `BLOCK_OPS_OUT` int(20) DEFAULT NULL,\\n  `MESSAGES_SENT` int(20) DEFAULT NULL,\\n  `MESSAGES_RECEIVED` int(20) DEFAULT NULL,\\n  `PAGE_FAULTS_MAJOR` int(20) DEFAULT NULL,\\n  `PAGE_FAULTS_MINOR` int(20) DEFAULT NULL,\\n  `SWAPS` int(20) DEFAULT NULL,\\n  `SOURCE_FUNCTION` varchar(30) DEFAULT NULL,\\n  `SOURCE_FILE` varchar(20) DEFAULT NULL,\\n  `SOURCE_LINE` int(20) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=6972349 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de DETALLE DE ORDEN DE COMPRA con las columnas de, ID DE PEDIDO DE COMPRA, ID DE DETALLE DE PEDIDO DE COMPRA, FECHA DE VENCIMIENTO, CANTIDAD DE PEDIDO, ID DE PRODUCTO, PRECIO UNITARIO, TOTAL DE LÍNEA, CANTIDAD RECIBIDA, CANTIDAD RECHAZADA, CANTIDAD EN EXISTENCIA, FECHA DE MODIFICACIÓN",
      "output": "('PURCHASEORDERDETAIL', \"CREATE TABLE `PURCHASEORDERDETAIL` (\\n  `PURCHASEORDERID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.'  `PURCHASEORDERDETAILID` int(11) NOT NULL COMMENT 'Primary key. One line number per purchased product.',\\n  `DUEDATE` datetime NOT NULL COMMENT 'Date the product is expected to be received.',\\n  `ORDERQTY` smallint(6) NOT NULL COMMENT 'Quantity ordered.',\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `UNITPRICE` decimal(19,4) NOT NULL COMMENT 'Vendor''s selling price of a single product.',\\n  `LINETOTAL` decimal(19,4) NOT NULL COMMENT 'Per product subtotal. Computed as OrderQty * UnitPrice.',\\n  `RECEIVEDQTY` decimal(8,2) NOT NULL COMMENT 'Quantity actually received from the vendor.',\\n  `REJECTEDQTY` decimal(8,2) NOT NULL COMMENT 'Quantity rejected during inspection.',\\n  `STOCKEDQTY` decimal(9,2) NOT NULL COMMENT 'Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PURCHASEORDERDETAILID`,`PURCHASEORDERID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Individual products associated with a specific purchase order. See PurchaseOrderHeader.'\")"
    },
    {
      "input": "Una tabla de CABECERA DE PEDIDO DE COMPRA con las columnas de, ID DE PEDIDO DE COMPRA, NÚMERO DE REVISIÓN, ESTADO, ID DE EMPLEADO, ID DE VENDEDOR, ID DE MÉTODO DE ENVÍO, FECHA DE PEDIDO, FECHA DE ENVÍO, SUBTOTAL, IMPUESTO, FLETE, TOTAL DEBIDO, FECHA DE MODIFICACIÓN",
      "output": "('PURCHASEORDERHEADER', \"CREATE TABLE `PURCHASEORDERHEADER` (\\n  `PURCHASEORDERID` int(11) NOT NULL COMMENT 'Primary key.'  `REVISIONNUMBER` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT 'Incremental number to track changes to the purchase order over time.',\\n  `STATUS` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT 'Order current status. 1 = Pending"
    },
    {
      "input": "Una tabla de Clave con las columnas de, Id. de entidad comercial, Hash de contraseña, Salt de contraseña, rowguid, Fecha de modificación",
      "output": "('Password', \"CREATE TABLE `Password` (\\n  `BusinessEntityID` int(11) NOT NULL  `PasswordHash` varchar(128) NOT NULL COMMENT 'Password for the e-mail account.',\\n  `PasswordSalt` varchar(10) NOT NULL COMMENT 'Random value concatenated with the password string before the password is hashed.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  KEY `GUID_Password` (`rowguid`),\\n  CONSTRAINT `FK_Password_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='One way hashed authentication information'\")"
    },
    {
      "input": "Una tabla de Persona con las columnas de, Id. de entidad comercial, Tipo de persona, Estilo de nombre, Título, Nombre, Segundo nombre, Apellido, Sufijo, Promoción de correo electrónico, Información de contacto adicional, Datos demográficos, rowguid, Fecha de modificación",
      "output": "('Person', \"CREATE TABLE `Person` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key for Person records.'  `PersonType` char(2) NOT NULL COMMENT 'Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact',\\n  `NameStyle` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.',\\n  `Title` varchar(8) DEFAULT NULL COMMENT 'A courtesy title. For example, Mr. or Ms.',\\n  `FirstName` varchar(100) NOT NULL COMMENT 'First name of the person.',\\n  `MiddleName` varchar(100) DEFAULT NULL COMMENT 'Middle name or middle initial of the person.',\\n  `LastName` varchar(100) NOT NULL COMMENT 'Last name of the person.',\\n  `Suffix` varchar(10) DEFAULT NULL COMMENT 'Surname suffix. For example, Sr. or Jr.',\\n  `EmailPromotion` int(11) NOT NULL DEFAULT 0 COMMENT '0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. ',\\n  `AdditionalContactInfo` text DEFAULT NULL COMMENT 'Additional contact information about the person stored in xml format. ',\\n  `Demographics` text DEFAULT NULL COMMENT 'Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_Person_rowguid` (`rowguid`),\\n  KEY `IX_Person_LastName_FirstName_MiddleName` (`LastName`,`FirstName`,`MiddleName`),\\n  KEY `PXML_Person_AddContact` (`AdditionalContactInfo`(255)),\\n  KEY `PXML_Person_Demographics` (`Demographics`(255)),\\n  KEY `XMLPATH_Person_Demographics` (`Demographics`(255)),\\n  KEY `XMLPROPERTY_Person_Demographics` (`Demographics`(255)),\\n  KEY `XMLVALUE_Person_Demographics` (`Demographics`(255)),\\n  KEY `GUID_Person` (`rowguid`),\\n  CONSTRAINT `FK_Person_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.'\")"
    },
    {
      "input": "Una tabla de Tarjeta de crédito personal con las columnas de, Id. de entidad comercial, Id. de tarjeta de crédito, Fecha de modificación",
      "output": "('PersonCreditCard', \"CREATE TABLE `PersonCreditCard` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Business entity identification number. Foreign key to Person.BusinessEntityID.'  `CreditCardID` int(11) NOT NULL COMMENT 'Credit card identification number. Foreign key to CreditCard.CreditCardID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`CreditCardID`),\\n  KEY `FK_PersonCreditCard_CreditCard_CreditCardID` (`CreditCardID`),\\n  CONSTRAINT `FK_PersonCreditCard_CreditCard_CreditCardID` FOREIGN KEY (`CreditCardID`) REFERENCES `CreditCard` (`CreditCardID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_PersonCreditCard_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping people to their credit card information in the CreditCard table. '\")"
    },
    {
      "input": "Una tabla de Persona Teléfono con las columnas de, Id. de entidad comercial, Número de teléfono, Id. de tipo de número de teléfono, Fecha de modificación",
      "output": "('PersonPhone', \"CREATE TABLE `PersonPhone` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Business entity identification number. Foreign key to Person.BusinessEntityID.'  `PhoneNumber` varchar(50) NOT NULL COMMENT 'Telephone number identification number.',\\n  `PhoneNumberTypeID` int(11) NOT NULL COMMENT 'Kind of phone number. Foreign key to PhoneNumberType.PhoneNumberTypeID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`PhoneNumber`,`PhoneNumberTypeID`),\\n  KEY `IX_PersonPhone_PhoneNumber` (`PhoneNumber`),\\n  KEY `FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID` (`PhoneNumberTypeID`),\\n  CONSTRAINT `FK_PersonPhone_Person_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Person` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID` FOREIGN KEY (`PhoneNumberTypeID`) REFERENCES `PhoneNumberType` (`PhoneNumberTypeID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Telephone number and type of a person.'\")"
    },
    {
      "input": "Una tabla de Tipo de número de teléfono con las columnas de, ID de tipo de número de teléfono, nombre, fecha de modificación",
      "output": "('PhoneNumberType', \"CREATE TABLE `PhoneNumberType` (\\n  `PhoneNumberTypeID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for telephone number type records.'  `Name` varchar(100) NOT NULL COMMENT 'Name of the telephone number type',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PhoneNumberTypeID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Type of phone number of a person.'\")"
    },
    {
      "input": "Una tabla de Producto con las columnas de, Id. de producto, Nombre, Número de producto, Indicador de marca, Indicador de productos terminados, Color, Nivel de inventario de seguridad, Punto de reorden, Costo estándar, Precio de lista, Tamaño, Código de medida de unidad de tamaño, Código de medida de unidad de peso, Peso, Días de fabricación, Producto Línea, Clase, Estilo, Id. de subcategoría de producto, Id. de modelo de producto, Fecha de inicio de venta, Fecha de finalización de venta, Fecha de discontinuación, rowguid, Fecha de modificación",
      "output": "('Product', \"CREATE TABLE `Product` (\\n  `ProductID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Product records.'  `Name` varchar(100) NOT NULL COMMENT 'Name of the product.',\\n  `ProductNumber` varchar(25) NOT NULL COMMENT 'Unique product identification number.',\\n  `MakeFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Product is purchased, 1 = Product is manufactured in-house.',\\n  `FinishedGoodsFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Product is not a salable item. 1 = Product is salable.',\\n  `Color` varchar(15) DEFAULT NULL COMMENT 'Product color.',\\n  `SafetyStockLevel` smallint(6) NOT NULL COMMENT 'Minimum inventory quantity. ',\\n  `ReorderPoint` smallint(6) NOT NULL COMMENT 'Inventory level that triggers a purchase order or work order. ',\\n  `StandardCost` decimal(19,4) NOT NULL COMMENT 'Standard cost of the product.',\\n  `ListPrice` decimal(19,4) NOT NULL COMMENT 'Selling price.',\\n  `Size` varchar(5) DEFAULT NULL COMMENT 'Product size.',\\n  `SizeUnitMeasureCode` char(3) DEFAULT NULL COMMENT 'Unit of measure for Size column.',\\n  `WeightUnitMeasureCode` char(3) DEFAULT NULL COMMENT 'Unit of measure for Weight column.',\\n  `Weight` decimal(8,2) DEFAULT NULL COMMENT 'Product weight.',\\n  `DaysToManufacture` int(11) NOT NULL COMMENT 'Number of days required to manufacture the product.',\\n  `ProductLine` char(2) DEFAULT NULL COMMENT 'R = Road, M = Mountain, T = Touring, S = Standard',\\n  `Class` char(2) DEFAULT NULL COMMENT 'H = High, M = Medium, L = Low',\\n  `Style` char(2) DEFAULT NULL COMMENT 'W = Womens, M = Mens, U = Universal',\\n  `ProductSubcategoryID` int(11) DEFAULT NULL COMMENT 'Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. ',\\n  `ProductModelID` int(11) DEFAULT NULL COMMENT 'Product is a member of this product model. Foreign key to ProductModel.ProductModelID.',\\n  `SellStartDate` datetime NOT NULL COMMENT 'Date the product was available for sale.',\\n  `SellEndDate` datetime DEFAULT NULL COMMENT 'Date the product was no longer available for sale.',\\n  `DiscontinuedDate` datetime DEFAULT NULL COMMENT 'Date the product was discontinued.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`),\\n  UNIQUE KEY `AK_Product_ProductNumber` (`ProductNumber`),\\n  UNIQUE KEY `AK_Product_Name` (`Name`),\\n  UNIQUE KEY `AK_Product_rowguid` (`rowguid`),\\n  KEY `FK_Product_UnitMeasure_SizeUnitMeasureCode` (`SizeUnitMeasureCode`),\\n  KEY `FK_Product_UnitMeasure_WeightUnitMeasureCode` (`WeightUnitMeasureCode`),\\n  KEY `FK_Product_ProductModel_ProductModelID` (`ProductModelID`),\\n  KEY `FK_Product_ProductSubcategory_ProductSubcategoryID` (`ProductSubcategoryID`),\\n  KEY `GUID_Product` (`rowguid`),\\n  CONSTRAINT `FK_Product_ProductModel_ProductModelID` FOREIGN KEY (`ProductModelID`) REFERENCES `ProductModel` (`ProductModelID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Product_ProductSubcategory_ProductSubcategoryID` FOREIGN KEY (`ProductSubcategoryID`) REFERENCES `ProductSubcategory` (`ProductSubcategoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Product_UnitMeasure_SizeUnitMeasureCode` FOREIGN KEY (`SizeUnitMeasureCode`) REFERENCES `UnitMeasure` (`UnitMeasureCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Product_UnitMeasure_WeightUnitMeasureCode` FOREIGN KEY (`WeightUnitMeasureCode`) REFERENCES `UnitMeasure` (`UnitMeasureCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Products sold or used in the manfacturing of sold products.'\")"
    },
    {
      "input": "Una tabla de categoria de producto con las columnas de, ID de categoría de producto, nombre, rowguid, fecha de modificación",
      "output": "('ProductCategory', \"CREATE TABLE `ProductCategory` (\\n  `ProductCategoryID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductCategory records.'  `Name` varchar(100) NOT NULL COMMENT 'Category description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductCategoryID`),\\n  UNIQUE KEY `AK_ProductCategory_Name` (`Name`),\\n  UNIQUE KEY `AK_ProductCategory_rowguid` (`rowguid`),\\n  KEY `GUID_ProductCategory` (`rowguid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='High-level product categorization.'\")"
    },
    {
      "input": "Una tabla de Historial de costos del producto con las columnas de, Id. de producto, Fecha de inicio, Fecha de finalización, Costo estándar, Fecha de modificación",
      "output": "('ProductCostHistory', \"CREATE TABLE `ProductCostHistory` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID'  `StartDate` datetime NOT NULL COMMENT 'Product cost start date.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'Product cost end date.',\\n  `StandardCost` decimal(19,4) NOT NULL COMMENT 'Standard cost of the product.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`StartDate`),\\n  CONSTRAINT `FK_ProductCostHistory_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Changes in the cost of a product over time.'\")"
    },
    {
      "input": "Una tabla de Descripción del producto con las columnas de, Id. de descripción del producto, Descripción, rowguid, Fecha de modificación",
      "output": "('ProductDescription', \"CREATE TABLE `ProductDescription` (\\n  `ProductDescriptionID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductDescription records.'  `Description` varchar(400) NOT NULL COMMENT 'Description of the product.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductDescriptionID`),\\n  UNIQUE KEY `AK_ProductDescription_rowguid` (`rowguid`),\\n  KEY `GUID_ProductDescription` (`rowguid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product descriptions in several languages.'\")"
    },
    {
      "input": "Una tabla de Documento del producto con las columnas de, Id. de producto, Nodo de documento, Fecha de modificación",
      "output": "('ProductDocument', \"CREATE TABLE `ProductDocument` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `DocumentNode` varchar(255) NOT NULL COMMENT 'Document identification number. Foreign key to Document.DocumentNode.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`DocumentNode`),\\n  KEY `FK_ProductDocument_Document_DocumentNode` (`DocumentNode`),\\n  CONSTRAINT `FK_ProductDocument_Document_DocumentNode` FOREIGN KEY (`DocumentNode`) REFERENCES `Document` (`DocumentNode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductDocument_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products to related product documents.'\")"
    },
    {
      "input": "Una tabla de Inventario de productos con las columnas de, Id. de producto, Id. de ubicación, Estante, Contenedor, Cantidad, rowguid, Fecha de modificación",
      "output": "('ProductInventory', \"CREATE TABLE `ProductInventory` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `LocationID` smallint(6) NOT NULL COMMENT 'Inventory location identification number. Foreign key to Location.LocationID. ',\\n  `Shelf` varchar(10) NOT NULL COMMENT 'Storage compartment within an inventory location.',\\n  `Bin` tinyint(3) unsigned NOT NULL COMMENT 'Storage container on a shelf in an inventory location.',\\n  `Quantity` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Quantity of products in the inventory location.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`LocationID`),\\n  KEY `FK_ProductInventory_Location_LocationID` (`LocationID`),\\n  KEY `GUID_ProductInventory` (`rowguid`),\\n  CONSTRAINT `FK_ProductInventory_Location_LocationID` FOREIGN KEY (`LocationID`) REFERENCES `Location` (`LocationID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductInventory_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product inventory information.'\")"
    },
    {
      "input": "Una tabla de Lista de productos Historial de precios con las columnas de, ID de producto, fecha de inicio, fecha de finalización, precio de catálogo, fecha de modificación",
      "output": "('ProductListPriceHistory', \"CREATE TABLE `ProductListPriceHistory` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID'  `StartDate` datetime NOT NULL COMMENT 'List price start date.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'List price end date',\\n  `ListPrice` decimal(19,4) NOT NULL COMMENT 'Product list price.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`StartDate`),\\n  CONSTRAINT `FK_ProductListPriceHistory_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Changes in the list price of a product over time.'\")"
    },
    {
      "input": "Una tabla de Modelo del Producto con las columnas de, ID de modelo de producto, nombre, descripción del catálogo, instrucciones, rowguid, fecha de modificación",
      "output": "('ProductModel', \"CREATE TABLE `ProductModel` (\\n  `ProductModelID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductModel records.'  `Name` varchar(100) NOT NULL COMMENT 'Product model description.',\\n  `CatalogDescription` text DEFAULT NULL COMMENT 'Detailed product catalog information in xml format.',\\n  `Instructions` text DEFAULT NULL COMMENT 'Manufacturing instructions in xml format.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductModelID`),\\n  UNIQUE KEY `AK_ProductModel_Name` (`Name`),\\n  UNIQUE KEY `AK_ProductModel_rowguid` (`rowguid`),\\n  KEY `PXML_ProductModel_CatalogDescription` (`CatalogDescription`(255)),\\n  KEY `PXML_ProductModel_Instructions` (`Instructions`(255)),\\n  KEY `GUID_ProductModel` (`rowguid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product model classification.'\")"
    },
    {
      "input": "Una tabla de Ilustración del modelo del producto con las columnas de, Id. de modelo de producto, Id. de ilustración, Fecha de modificación",
      "output": "('ProductModelIllustration', \"CREATE TABLE `ProductModelIllustration` (\\n  `ProductModelID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductModel.ProductModelID.'  `IllustrationID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Illustration.IllustrationID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductModelID`,`IllustrationID`),\\n  KEY `FK_ProductModelIllustration_Illustration_IllustrationID` (`IllustrationID`),\\n  CONSTRAINT `FK_ProductModelIllustration_Illustration_IllustrationID` FOREIGN KEY (`IllustrationID`) REFERENCES `Illustration` (`IllustrationID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductModelIllustration_ProductModel_ProductModelID` FOREIGN KEY (`ProductModelID`) REFERENCES `ProductModel` (`ProductModelID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping product models and illustrations.'\")"
    },
    {
      "input": "Una tabla de Producto Modelo Producto Descripción Cultura con las columnas de, Id. de modelo de producto, Id. de descripción de producto, Id. de cultura, Fecha de modificación",
      "output": "('ProductModelProductDescriptionCulture', \"CREATE TABLE `ProductModelProductDescriptionCulture` (\\n  `ProductModelID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductModel.ProductModelID.'  `ProductDescriptionID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductDescription.ProductDescriptionID.',\\n  `CultureID` char(6) NOT NULL COMMENT 'Culture identification number. Foreign key to Culture.CultureID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductModelID`,`ProductDescriptionID`,`CultureID`),\\n  KEY `FK_ProductModelProductDescriptionCulture_ProductDescription_Pr3` (`ProductDescriptionID`),\\n  KEY `FK_ProductModelProductDescriptionCulture_Culture_CultureID` (`CultureID`),\\n  CONSTRAINT `FK_ProductModelProductDescriptionCulture_Culture_CultureID` FOREIGN KEY (`CultureID`) REFERENCES `Culture` (`CultureID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductModelProductDescriptionCulture_ProductDescription_Pr3` FOREIGN KEY (`ProductDescriptionID`) REFERENCES `ProductDescription` (`ProductDescriptionID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductModelProductDescriptionCulture_ProductModel_ProductM4` FOREIGN KEY (`ProductModelID`) REFERENCES `ProductModel` (`ProductModelID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping product descriptions and the language the description is written in.'\")"
    },
    {
      "input": "Una tabla de Foto del producto con las columnas de, ID de foto de producto, Foto de miniatura, Nombre de archivo de foto en miniatura, Foto grande, Nombre de archivo de foto grande, Fecha de modificación",
      "output": "('ProductPhoto', \"CREATE TABLE `ProductPhoto` (\\n  `ProductPhotoID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductPhoto records.'  `ThumbNailPhoto` longblob DEFAULT NULL COMMENT 'Small image of the product.',\\n  `ThumbnailPhotoFileName` varchar(50) DEFAULT NULL COMMENT 'Small image file name.',\\n  `LargePhoto` longblob DEFAULT NULL COMMENT 'Large image of the product.',\\n  `LargePhotoFileName` varchar(50) DEFAULT NULL COMMENT 'Large image file name.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductPhotoID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product images.'\")"
    },
    {
      "input": "Una tabla de Producto Foto del producto con las columnas de, Id. de producto, Id. de foto de producto, Principal, Fecha de modificación",
      "output": "('ProductProductPhoto', \"CREATE TABLE `ProductProductPhoto` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `ProductPhotoID` int(11) NOT NULL COMMENT 'Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.',\\n  `Primary` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = Photo is not the principal image. 1 = Photo is the principal image.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`ProductPhotoID`),\\n  KEY `FK_ProductProductPhoto_ProductPhoto_ProductPhotoID` (`ProductPhotoID`),\\n  CONSTRAINT `FK_ProductProductPhoto_ProductPhoto_ProductPhotoID` FOREIGN KEY (`ProductPhotoID`) REFERENCES `ProductPhoto` (`ProductPhotoID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductProductPhoto_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products and product photos.'\")"
    },
    {
      "input": "Una tabla de Revision de producto con las columnas de, Id. de revisión del producto, Id. del producto, Nombre del revisor, Fecha de revisión, Dirección de correo electrónico, Calificación, Comentarios, Fecha de modificación",
      "output": "('ProductReview', \"CREATE TABLE `ProductReview` (\\n  `ProductReviewID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductReview records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `ReviewerName` varchar(100) NOT NULL COMMENT 'Name of the reviewer.',\\n  `ReviewDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date review was submitted.',\\n  `EmailAddress` varchar(50) NOT NULL COMMENT 'Reviewer''s e-mail address.',\\n  `Rating` int(11) NOT NULL COMMENT 'Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.',\\n  `Comments` varchar(3850) DEFAULT NULL COMMENT 'Reviewer''s comments',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductReviewID`),\\n  KEY `IX_ProductReview_ProductID_Name` (`ProductID`,`ReviewerName`,`Comments`(255)),\\n  CONSTRAINT `FK_ProductReview_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customer reviews of products they have purchased.'\")"
    },
    {
      "input": "Una tabla de Subcategoría de producto con las columnas de, Id. de subcategoría de producto, Id. de categoría de producto, Nombre, rowguid, Fecha de modificación",
      "output": "('ProductSubcategory', \"CREATE TABLE `ProductSubcategory` (\\n  `ProductSubcategoryID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ProductSubcategory records.'  `ProductCategoryID` int(11) NOT NULL COMMENT 'Product category identification number. Foreign key to ProductCategory.ProductCategoryID.',\\n  `Name` varchar(100) NOT NULL COMMENT 'Subcategory description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductSubcategoryID`),\\n  UNIQUE KEY `AK_ProductSubcategory_Name` (`Name`),\\n  UNIQUE KEY `AK_ProductSubcategory_rowguid` (`rowguid`),\\n  KEY `FK_ProductSubcategory_ProductCategory_ProductCategoryID` (`ProductCategoryID`),\\n  KEY `GUID_ProductSubcategory` (`rowguid`),\\n  CONSTRAINT `FK_ProductSubcategory_ProductCategory_ProductCategoryID` FOREIGN KEY (`ProductCategoryID`) REFERENCES `ProductCategory` (`ProductCategoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product subcategories. See ProductCategory table.'\")"
    },
    {
      "input": "Una tabla de Proveedor de productos con las columnas de, Id. de producto, Id. de entidad comercial, Plazo medio de entrega, Precio estándar, Costo de última recepción, Fecha de última recepción, Cantidad mínima de pedido, Cantidad máxima de pedido, Cantidad en pedido, Código de unidad de medida, Fecha de modificación",
      "output": "('ProductVendor', \"CREATE TABLE `ProductVendor` (\\n  `ProductID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Product.ProductID.'  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Vendor.BusinessEntityID.',\\n  `AverageLeadTime` int(11) NOT NULL COMMENT 'The average span of time (in days) between placing an order with the vendor and receiving the purchased product.',\\n  `StandardPrice` decimal(19,4) NOT NULL COMMENT 'The vendor''s usual selling price.',\\n  `LastReceiptCost` decimal(19,4) DEFAULT NULL COMMENT 'The selling price when last purchased.',\\n  `LastReceiptDate` datetime DEFAULT NULL COMMENT 'Date the product was last received by the vendor.',\\n  `MinOrderQty` int(11) NOT NULL COMMENT 'The maximum quantity that should be ordered.',\\n  `MaxOrderQty` int(11) NOT NULL COMMENT 'The minimum quantity that should be ordered.',\\n  `OnOrderQty` int(11) DEFAULT NULL COMMENT 'The quantity currently on order.',\\n  `UnitMeasureCode` char(3) NOT NULL COMMENT 'The product''s unit of measure.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ProductID`,`BusinessEntityID`),\\n  KEY `IX_ProductVendor_UnitMeasureCode` (`UnitMeasureCode`),\\n  KEY `IX_ProductVendor_BusinessEntityID` (`BusinessEntityID`),\\n  CONSTRAINT `FK_ProductVendor_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductVendor_UnitMeasure_UnitMeasureCode` FOREIGN KEY (`UnitMeasureCode`) REFERENCES `UnitMeasure` (`UnitMeasureCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_ProductVendor_Vendor_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Vendor` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping vendors with the products they supply.'\")"
    },
    {
      "input": "Una tabla de Detalle de orden de compra con las columnas de, ID de pedido de compra, ID de detalle de pedido de compra, Fecha de vencimiento, Cantidad de pedido, ID de producto, Precio unitario, Total de línea, Cantidad recibida, Cantidad rechazada, Cantidad almacenada, Fecha de modificación",
      "output": "('PurchaseOrderDetail', \"CREATE TABLE `PurchaseOrderDetail` (\\n  `PurchaseOrderID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.'  `PurchaseOrderDetailID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key. One line number per purchased product.',\\n  `DueDate` datetime NOT NULL COMMENT 'Date the product is expected to be received.',\\n  `OrderQty` smallint(6) NOT NULL COMMENT 'Quantity ordered.',\\n  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `UnitPrice` decimal(19,4) NOT NULL COMMENT 'Vendor''s selling price of a single product.',\\n  `LineTotal` decimal(19,4) NOT NULL COMMENT 'Per product subtotal. Computed as OrderQty * UnitPrice.',\\n  `ReceivedQty` decimal(8,2) NOT NULL COMMENT 'Quantity actually received from the vendor.',\\n  `RejectedQty` decimal(8,2) NOT NULL COMMENT 'Quantity rejected during inspection.',\\n  `StockedQty` decimal(9,2) NOT NULL COMMENT 'Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`PurchaseOrderDetailID`,`PurchaseOrderID`),\\n  KEY `IX_PurchaseOrderDetail_ProductID` (`ProductID`),\\n  KEY `FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID` (`PurchaseOrderID`),\\n  CONSTRAINT `FK_PurchaseOrderDetail_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID` FOREIGN KEY (`PurchaseOrderID`) REFERENCES `PurchaseOrderHeader` (`PurchaseOrderID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Individual products associated with a specific purchase order. See PurchaseOrderHeader.'\")"
    },
    {
      "input": "Una tabla de Encabezado de orden de compra con las columnas de, Id. de orden de compra, Número de revisión, Estado, Id. de empleado, Id. de proveedor, Id. de método de envío, Fecha de pedido, Fecha de envío, Subtotal, Importe de impuestos, Flete, Total adeudado, Fecha de modificación",
      "output": "('PurchaseOrderHeader', \"CREATE TABLE `PurchaseOrderHeader` (\\n  `PurchaseOrderID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key.'  `RevisionNumber` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT 'Incremental number to track changes to the purchase order over time.',\\n  `Status` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT 'Order current status. 1 = Pending"
    },
    {
      "input": "Una tabla de REAL ACADEMIA DE BELLAS ARTES con las columnas de, capacidad, id de beneficio, id de estudiante, salario",
      "output": "('RA', 'CREATE TABLE `RA` (\\n  `capability` varchar(45) DEFAULT NULL  `prof_id` int(11) NOT NULL DEFAULT 0,\\n  `student_id` int(11) NOT NULL DEFAULT 0,\\n  `salary` varchar(45) DEFAULT NULL,\\n  PRIMARY KEY (`prof_id`,`student_id`),\\n  KEY `RA_capability` (`capability`),\\n  KEY `RA_salary` (`salary`),\\n  KEY `RA_student_id` (`student_id`),\\n  KEY `RA_prof_id` (`prof_id`),\\n  CONSTRAINT `FK_RA_1` FOREIGN KEY (`student_id`) REFERENCES `student` (`student_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_RA_2` FOREIGN KEY (`prof_id`) REFERENCES `prof` (`prof_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de RESTRICCIONES DE REFERENCIA con las columnas de, CATÁLOGO DE RESTRICCIÓN, ESQUEMA DE RESTRICCIÓN, NOMBRE DE RESTRICCIÓN, CATÁLOGO DE RESTRICCIÓN ÚNICA, ESQUEMA DE RESTRICCIÓN ÚNICA, NOMBRE DE RESTRICCIÓN ÚNICA, OPCIÓN DE COINCIDENCIA, REGLA DE ACTUALIZACIÓN, REGLA DE ELIMINACIÓN, NOMBRE DE LA TABLA, NOMBRE DE LA TABLA REFERENCIADA",
      "output": "('REFERENTIAL_CONSTRAINTS', \"CREATE TABLE `REFERENTIAL_CONSTRAINTS` (\\n  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT ''  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `UNIQUE_CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `UNIQUE_CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `UNIQUE_CONSTRAINT_NAME` varchar(64) DEFAULT NULL,\\n  `MATCH_OPTION` varchar(64) NOT NULL DEFAULT '',\\n  `UPDATE_RULE` varchar(64) NOT NULL DEFAULT '',\\n  `DELETE_RULE` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `REFERENCED_TABLE_NAME` varchar(64) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=446091 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de RUTINAS con las columnas de, NOMBRE ESPECÍFICO, CATÁLOGO DE RUTINA, ESQUEMA DE RUTINA, NOMBRE DE RUTINA, TIPO DE RUTINA, TIPO DE DATOS, LONGITUD MÁXIMA DE CARÁCTER, LONGITUD DE OCTETTO DE CARÁCTER, PRECISIÓN NUMÉRICA, ESCALA NUMÉRICA, PRECISIÓN DE FECHA Y HORA, NOMBRE DEL CONJUNTO DE CARACTERES, NOMBRE DE COLLACIÓN, IDENTIFICADOR DTD, CUERPO DE RUTINA, RUTINA DEFINICIÓN, NOMBRE EXTERNO, IDIOMA EXTERNO, ESTILO DE PARÁMETRO, ES DETERMINISTA, ACCESO A DATOS SQL, RUTA SQL, TIPO DE SEGURIDAD, CREADO, ÚLTIMA ALTERACIÓN, MODO SQL, COMENTARIO DE RUTINA, DEFINITOR, CLIENTE DE CONJUNTO DE CARACTERES, CONEXIÓN DE COLACIÓN, COLACIÓN DE BASE DE DATOS",
      "output": "('ROUTINES', \"CREATE TABLE `ROUTINES` (\\n  `SPECIFIC_NAME` varchar(64) NOT NULL DEFAULT ''  `ROUTINE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `ROUTINE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `ROUTINE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `ROUTINE_TYPE` varchar(9) NOT NULL DEFAULT '',\\n  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `CHARACTER_MAXIMUM_LENGTH` int(21) DEFAULT NULL,\\n  `CHARACTER_OCTET_LENGTH` int(21) DEFAULT NULL,\\n  `NUMERIC_PRECISION` int(21) DEFAULT NULL,\\n  `NUMERIC_SCALE` int(21) DEFAULT NULL,\\n  `DATETIME_PRECISION` bigint(21) unsigned DEFAULT NULL,\\n  `CHARACTER_SET_NAME` varchar(64) DEFAULT NULL,\\n  `COLLATION_NAME` varchar(64) DEFAULT NULL,\\n  `DTD_IDENTIFIER` longtext DEFAULT NULL,\\n  `ROUTINE_BODY` varchar(8) NOT NULL DEFAULT '',\\n  `ROUTINE_DEFINITION` longtext DEFAULT NULL,\\n  `EXTERNAL_NAME` varchar(64) DEFAULT NULL,\\n  `EXTERNAL_LANGUAGE` varchar(64) DEFAULT NULL,\\n  `PARAMETER_STYLE` varchar(8) NOT NULL DEFAULT '',\\n  `IS_DETERMINISTIC` varchar(3) NOT NULL DEFAULT '',\\n  `SQL_DATA_ACCESS` varchar(64) NOT NULL DEFAULT '',\\n  `SQL_PATH` varchar(64) DEFAULT NULL,\\n  `SECURITY_TYPE` varchar(7) NOT NULL DEFAULT '',\\n  `CREATED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_ALTERED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',\\n  `ROUTINE_COMMENT` longtext NOT NULL,\\n  `DEFINER` varchar(189) NOT NULL DEFAULT '',\\n  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',\\n  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',\\n  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=73811 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de Reseñas con las columnas de, ID de revisión, ID de empresa, ID de usuario, estrellas, fecha de revisión, votos divertidos, votos útiles, votos geniales, texto de revisión",
      "output": "('Reviews', \"CREATE TABLE `Reviews` (\\n  `review_id` varchar(30) NOT NULL DEFAULT ''  `business_id` varchar(30) DEFAULT NULL,\\n  `user_id` varchar(30) DEFAULT NULL,\\n  `stars` double DEFAULT NULL,\\n  `review_date` date DEFAULT NULL,\\n  `votes_funny` int(11) DEFAULT NULL,\\n  `votes_useful` int(11) DEFAULT NULL,\\n  `votes_cool` int(11) DEFAULT NULL,\\n  `review_text` text DEFAULT NULL,\\n  PRIMARY KEY (`review_id`),\\n  KEY `business_id` (`business_id`),\\n  KEY `user_id` (`user_id`),\\n  CONSTRAINT `Reviews_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Reviews_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `Users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de DETALLE DEL PEDIDO DE VENTA con las columnas de, ID DE PEDIDO DE VENTAS, ID DE DETALLE DE PEDIDO DE VENTAS, NÚMERO DE SEGUIMIENTO DEL TRANSPORTISTA, CANTIDAD DE PEDIDO, ID DE PRODUCTO, ID DE OFERTA ESPECIAL, PRECIO UNITARIO, DESCUENTO DE PRECIO UNITARIO, TOTAL DE LÍNEA, ID DE FILA, FECHA DE MODIFICACIÓN",
      "output": "('SALESORDERDETAIL', \"CREATE TABLE `SALESORDERDETAIL` (\\n  `SALESORDERID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.'  `SALESORDERDETAILID` int(11) NOT NULL COMMENT 'Primary key. One incremental unique number per product sold.',\\n  `CARRIERTRACKINGNUMBER` varchar(25) DEFAULT NULL COMMENT 'Shipment tracking number supplied by the shipper.',\\n  `ORDERQTY` smallint(6) NOT NULL COMMENT 'Quantity ordered per product.',\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Product sold to customer. Foreign key to Product.ProductID.',\\n  `SPECIALOFFERID` int(11) NOT NULL COMMENT 'Promotional code. Foreign key to SpecialOffer.SpecialOfferID.',\\n  `UNITPRICE` decimal(19,4) NOT NULL COMMENT 'Selling price of a single product.',\\n  `UNITPRICEDISCOUNT` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Discount amount.',\\n  `LINETOTAL` decimal(38,6) NOT NULL COMMENT 'Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SALESORDERDETAILID`,`SALESORDERID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Individual products associated with a specific sales order. See SalesOrderHeader.'\")"
    },
    {
      "input": "Una tabla de CABECERA DE PEDIDO DE VENTA con las columnas de, ID DE PEDIDO DE VENTAS, NÚMERO DE REVISIÓN, FECHA DE PEDIDO, FECHA DE VENCIMIENTO, FECHA DE ENVÍO, ESTADO, BANDERA DE PEDIDO EN LÍNEA, NÚMERO DE PEDIDO DE VENTAS, NÚMERO DE PEDIDO DE COMPRA, NÚMERO DE CUENTA, ID DE CLIENTE, ID DE VENDEDOR, ID DE TERRITORIO, ID DE DIRECCIÓN DE FACTURA, ID DE DIRECCIÓN DE ENVÍO, ID DE MÉTODO DE ENVÍO, ID DE MÉTODO DE ENVÍO, ID DE TARJETA DE CRÉDITO, CÓDIGO DE APROBACIÓN DE LA TARJETA DE CRÉDITO, MONEDA, TASA DE COMERCIO, SUBTOTAL DE PAGO , FECHA DE MODIFICACIÓN",
      "output": "('SALESORDERHEADER', \"CREATE TABLE `SALESORDERHEADER` (\\n  `SALESORDERID` int(11) NOT NULL COMMENT 'Primary key.'  `REVISIONNUMBER` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT 'Incremental number to track changes to the sales order over time.',\\n  `ORDERDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Dates the sales order was created.',\\n  `DUEDATE` datetime NOT NULL COMMENT 'Date the order is due to the customer.',\\n  `SHIPDATE` datetime DEFAULT NULL COMMENT 'Date the order was shipped to the customer.',\\n  `STATUS` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT 'Order current status. 1 = In process"
    },
    {
      "input": "Una tabla de CABECERA DE PEDIDO DE VENTAS RAZÓN DE VENTAS con las columnas de, ID DE PEDIDO DE VENTAS, ID DE RAZÓN DE VENTAS, FECHA DE MODIFICACIÓN",
      "output": "('SALESORDERHEADERSALESREASON', \"CREATE TABLE `SALESORDERHEADERSALESREASON` (\\n  `SALESORDERID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.'  `SALESREASONID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesReason.SalesReasonID.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SALESORDERID`,`SALESREASONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping sales orders to sales reason codes.'\")"
    },
    {
      "input": "Una tabla de VENDEDOR con las columnas de, BUSINESSENTITYID, TERRITORYID, SALESQUOTA, BONUS, COMMISSIONPCT, SALESYTD, SALESLASTYEAR, ROWGUID, MODIFIEDDATE",
      "output": "('SALESPERSON', \"CREATE TABLE `SALESPERSON` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID'  `TERRITORYID` int(11) DEFAULT NULL COMMENT 'Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `SALESQUOTA` decimal(19,4) DEFAULT NULL COMMENT 'Projected yearly sales.',\\n  `BONUS` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Bonus due if quota is met.',\\n  `COMMISSIONPCT` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Commision percent received per sale.',\\n  `SALESYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales total year to date.',\\n  `SALESLASTYEAR` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales total of previous year.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales representative current information.'\")"
    },
    {
      "input": "Una tabla de HISTORIAL DE CUOTA DE VENDEDOR con las columnas de, ID DE ENTIDAD DE NEGOCIO, COTIZACIÓN, CUOTA DE VENTAS, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('SALESPERSONQUOTAHISTORY', \"CREATE TABLE `SALESPERSONQUOTAHISTORY` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.'  `QUOTADATE` datetime NOT NULL COMMENT 'Sales quota date.',\\n  `SALESQUOTA` decimal(19,4) NOT NULL COMMENT 'Sales quota amount.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`,`QUOTADATE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales performance tracking.'\")"
    },
    {
      "input": "Una tabla de RAZÓN DE VENTAS con las columnas de, ID DE RAZÓN DE VENTAS, NOMBRE, TIPO DE RAZÓN, FECHA DE MODIFICACIÓN",
      "output": "('SALESREASON', \"CREATE TABLE `SALESREASON` (\\n  `SALESREASONID` int(11) NOT NULL COMMENT 'Primary key for SalesReason records.'  `NAME` varchar(100) NOT NULL COMMENT 'Sales reason description.',\\n  `REASONTYPE` varchar(100) NOT NULL COMMENT 'Category the sales reason belongs to.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SALESREASONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table of customer purchase reasons.'\")"
    },
    {
      "input": "Una tabla de TASA IMPOSITIVA DE VENTAS con las columnas de, SALESTAXRATEID, STATEPROVINCEID, TAXTYPE, TAXRATE, NOMBRE, ROWGUID, MODIFIEDDATE",
      "output": "('SALESTAXRATE', \"CREATE TABLE `SALESTAXRATE` (\\n  `SALESTAXRATEID` int(11) NOT NULL COMMENT 'Primary key for SalesTaxRate records.'  `STATEPROVINCEID` int(11) NOT NULL COMMENT 'State, province, or country/region the sales tax applies to.',\\n  `TAXTYPE` tinyint(3) unsigned NOT NULL COMMENT '1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.',\\n  `TAXRATE` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Tax rate amount.',\\n  `NAME` varchar(100) NOT NULL COMMENT 'Tax rate description.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SALESTAXRATEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Tax rate lookup table.'\")"
    },
    {
      "input": "Una tabla de TERRITORIO DE VENTAS con las columnas de, TERRITORYID, NOMBRE, COUNTRYREGIONCODE, GROUP, SALESYTD, SALESLASTYEAR, COSTYTD, COSTLASTYEAR, ROWGUID, MODIFIEDDATE",
      "output": "('SALESTERRITORY', \"CREATE TABLE `SALESTERRITORY` (\\n  `TERRITORYID` int(11) NOT NULL COMMENT 'Primary key for SalesTerritory records.'  `NAME` varchar(100) NOT NULL COMMENT 'Sales territory description',\\n  `COUNTRYREGIONCODE` varchar(3) NOT NULL COMMENT 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ',\\n  `GROUP` varchar(50) NOT NULL COMMENT 'Geographic area to which the sales territory belong.',\\n  `SALESYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales in the territory year to date.',\\n  `SALESLASTYEAR` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales in the territory the previous year.',\\n  `COSTYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Business costs in the territory year to date.',\\n  `COSTLASTYEAR` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Business costs in the territory the previous year.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TERRITORYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales territory lookup table.'\")"
    },
    {
      "input": "Una tabla de VENTASTERRITORIOHISTORIA con las columnas de, ID DE ENTIDAD DE NEGOCIO, ID DE TERRITORIO, FECHA DE INICIO, FECHA DE FINALIZACIÓN, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('SALESTERRITORYHISTORY', \"CREATE TABLE `SALESTERRITORYHISTORY` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key. The sales rep.  Foreign key to SalesPerson.BusinessEntityID.'  `TERRITORYID` int(11) NOT NULL COMMENT 'Primary key. Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `STARTDATE` datetime NOT NULL COMMENT 'Primary key. Date the sales representive started work in the territory.',\\n  `ENDDATE` datetime DEFAULT NULL COMMENT 'Date the sales representative left work in the territory.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`,`STARTDATE`,`TERRITORYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales representative transfers to other sales territories.'\")"
    },
    {
      "input": "Una tabla de ESQUEMA con las columnas de, NOMBRE DE CATÁLOGO, NOMBRE DE ESQUEMA, NOMBRE DE CONJUNTO DE CARACTERES POR DEFECTO, NOMBRE DE COLACIÓN POR DEFECTO, RUTA SQL",
      "output": "('SCHEMATA', \"CREATE TABLE `SCHEMATA` (\\n  `CATALOG_NAME` varchar(512) NOT NULL DEFAULT ''  `SCHEMA_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `DEFAULT_CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',\\n  `DEFAULT_COLLATION_NAME` varchar(32) NOT NULL DEFAULT '',\\n  `SQL_PATH` varchar(512) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=619943 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de PRIVILEGIOS DE ESQUEMA con las columnas de, CONCESIONARIO, CATÁLOGO DE MESA, ESQUEMA DE MESA, TIPO DE PRIVILEGIO, ES OTORGABLE",
      "output": "('SCHEMA_PRIVILEGES', \"CREATE TABLE `SCHEMA_PRIVILEGES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=856594 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de DESCARTE con las columnas de, SCRAPREASONID, NOMBRE, MODIFICADO FECHA",
      "output": "('SCRAPREASON', \"CREATE TABLE `SCRAPREASON` (\\n  `SCRAPREASONID` smallint(6) NOT NULL COMMENT 'Primary key for ScrapReason records.'  `NAME` varchar(100) NOT NULL COMMENT 'Failure description.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SCRAPREASONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Manufacturing failure reasons lookup table.'\")"
    },
    {
      "input": "Una tabla de ESTADO DE LA SESIÓN con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE",
      "output": "('SESSION_STATUS', \"CREATE TABLE `SESSION_STATUS` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=657124 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de VARIABLES DE SESIÓN con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE",
      "output": "('SESSION_VARIABLES', \"CREATE TABLE `SESSION_VARIABLES` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=657124 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de CAMBIO con las columnas de, SHIFTID, NOMBRE, HORA DE INICIO, HORA DE FINALIZACIÓN, FECHA DE MODIFICACIÓN",
      "output": "('SHIFT', \"CREATE TABLE `SHIFT` (\\n  `SHIFTID` tinyint(3) unsigned NOT NULL COMMENT 'Primary key for Shift records.'  `NAME` varchar(100) NOT NULL COMMENT 'Shift description.',\\n  `STARTTIME` time NOT NULL COMMENT 'Shift start time.',\\n  `ENDTIME` time NOT NULL COMMENT 'Shift end time.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SHIFTID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Work shift lookup table.'\")"
    },
    {
      "input": "Una tabla de MÉTODO DE ENVÍO con las columnas de, SHIPMETHODID, NAME, SHIPBASE, SHIPRATE, ROWGUID, MODIFIEDDATE",
      "output": "('SHIPMETHOD', \"CREATE TABLE `SHIPMETHOD` (\\n  `SHIPMETHODID` int(11) NOT NULL COMMENT 'Primary key for ShipMethod records.'  `NAME` varchar(100) NOT NULL COMMENT 'Shipping company name.',\\n  `SHIPBASE` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Minimum shipping charge.',\\n  `SHIPRATE` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Shipping charge per pound.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SHIPMETHODID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Shipping company lookup table.'\")"
    },
    {
      "input": "Una tabla de CARRITO DE COMPRAS con las columnas de, ID DE CARRO DE COMPRA, ID DE CARRO DE COMPRA, CANTIDAD, ID DE PRODUCTO, FECHA DE CREACIÓN, FECHA DE MODIFICACIÓN",
      "output": "('SHOPPINGCARTITEM', \"CREATE TABLE `SHOPPINGCARTITEM` (\\n  `SHOPPINGCARTITEMID` int(11) NOT NULL COMMENT 'Primary key for ShoppingCartItem records.'  `SHOPPINGCARTID` varchar(50) NOT NULL COMMENT 'Shopping cart identification number.',\\n  `QUANTITY` int(11) NOT NULL DEFAULT 1 COMMENT 'Product quantity ordered.',\\n  `PRODUCTID` int(11) NOT NULL COMMENT 'Product ordered. Foreign key to Product.ProductID.',\\n  `DATECREATED` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date the time the record was created.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SHOPPINGCARTITEMID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Contains online customer orders until the order is submitted or cancelled.'\")"
    },
    {
      "input": "Una tabla de OFERTA ESPECIAL con las columnas de, ID DE OFERTA ESPECIAL, DESCRIPCIÓN, DESCUENTO, TIPO, CATEGORÍA, FECHA DE INICIO, FECHA DE FINALIZACIÓN, MINQTY, MAXQTY, ROWGUID, MODIFIEDDATE",
      "output": "('SPECIALOFFER', \"CREATE TABLE `SPECIALOFFER` (\\n  `SPECIALOFFERID` int(11) NOT NULL COMMENT 'Primary key for SpecialOffer records.'  `DESCRIPTION` varchar(255) NOT NULL COMMENT 'Discount description.',\\n  `DISCOUNTPCT` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Discount precentage.',\\n  `TYPE` varchar(50) NOT NULL COMMENT 'Discount type category.',\\n  `CATEGORY` varchar(50) NOT NULL COMMENT 'Group the discount applies to such as Reseller or Customer.',\\n  `STARTDATE` datetime NOT NULL COMMENT 'Discount start date.',\\n  `ENDDATE` datetime NOT NULL COMMENT 'Discount end date.',\\n  `MINQTY` int(11) NOT NULL DEFAULT 0 COMMENT 'Minimum discount percent allowed.',\\n  `MAXQTY` int(11) DEFAULT NULL COMMENT 'Maximum discount percent allowed.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SPECIALOFFERID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sale discounts lookup table.'\")"
    },
    {
      "input": "Una tabla de OFERTAESPECIALPRODUCTO con las columnas de, ID DE OFERTA ESPECIAL, ID DE PRODUCTO, ROWGUID, FECHA DE MODIFICACIÓN",
      "output": "('SPECIALOFFERPRODUCT', \"CREATE TABLE `SPECIALOFFERPRODUCT` (\\n  `SPECIALOFFERID` int(11) NOT NULL COMMENT 'Primary key for SpecialOfferProduct records.'  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SPECIALOFFERID`,`PRODUCTID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products to special offer discounts.'\")"
    },
    {
      "input": "Una tabla de PROVINCIA DEL ESTADO con las columnas de, STATEPROVINCEID, STATEPROVINCECODE, COUNTRYREGIONCODE, ESSONLYSTATEPROVINCEFLAG, NAME, TERRITORYID, ROWGUID, MODIFIEDDATE",
      "output": "('STATEPROVINCE', \"CREATE TABLE `STATEPROVINCE` (\\n  `STATEPROVINCEID` int(11) NOT NULL COMMENT 'Primary key for StateProvince records.'  `STATEPROVINCECODE` char(3) NOT NULL COMMENT 'ISO standard state or province code.',\\n  `COUNTRYREGIONCODE` varchar(3) NOT NULL COMMENT 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ',\\n  `ISONLYSTATEPROVINCEFLAG` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.',\\n  `NAME` varchar(100) NOT NULL COMMENT 'State or province description.',\\n  `TERRITORYID` int(11) NOT NULL COMMENT 'ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`STATEPROVINCEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='State and province lookup table.'\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, NO ÚNICO, ESQUEMA DE ÍNDICE, NOMBRE DE ÍNDICE, SEQ EN ÍNDICE, NOMBRE DE COLUMNA, COLLACIÓN, CARDINALIDAD, SUBPARTE, EMPAQUETADO, ANULABLE, TIPO DE ÍNDICE, COMENTARIO, COMENTARIO DE ÍNDICE",
      "output": "('STATISTICS', \"CREATE TABLE `STATISTICS` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `NON_UNIQUE` bigint(1) NOT NULL DEFAULT 0,\\n  `INDEX_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `INDEX_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `SEQ_IN_INDEX` bigint(2) NOT NULL DEFAULT 0,\\n  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `COLLATION` varchar(1) DEFAULT NULL,\\n  `CARDINALITY` bigint(21) DEFAULT NULL,\\n  `SUB_PART` bigint(3) DEFAULT NULL,\\n  `PACKED` varchar(10) DEFAULT NULL,\\n  `NULLABLE` varchar(3) NOT NULL DEFAULT '',\\n  `INDEX_TYPE` varchar(16) NOT NULL DEFAULT '',\\n  `COMMENT` varchar(16) DEFAULT NULL,\\n  `INDEX_COMMENT` varchar(1024) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=373280 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de TIENDA con las columnas de, BUSINESSENTITYID, NOMBRE, SALESPERSONID, DEMOGRAPHICS, ROWGUID, MODIFIEDDATE",
      "output": "('STORE', \"CREATE TABLE `STORE` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Customer.BusinessEntityID.'  `NAME` varchar(100) NOT NULL COMMENT 'Name of the store.',\\n  `SALESPERSONID` int(11) DEFAULT NULL COMMENT 'ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.',\\n  `DEMOGRAPHICS` text DEFAULT NULL COMMENT 'Demographic informationg about the store such as the number of employees, annual sales and store type.',\\n  `ROWGUID` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customers (resellers) of Adventure Works products.'\")"
    },
    {
      "input": "Una tabla de Ventas con las columnas de, EVENTO, REFID, FECHA DEL EVENTO, IMPORTE",
      "output": "('Sales', 'CREATE TABLE `Sales` (\\n  `EVENTID` int(11) NOT NULL  `REFID` int(11) DEFAULT NULL,\\n  `EVENT_DATE` datetime DEFAULT NULL,\\n  `AMOUNT` float DEFAULT NULL,\\n  PRIMARY KEY (`EVENTID`),\\n  KEY `Sales_REFID` (`REFID`),\\n  CONSTRAINT `Sales_ibfk_1` FOREIGN KEY (`REFID`) REFERENCES `Customers` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Detalle de orden de venta con las columnas de, Id. de pedido de venta, Id. de detalle de pedido de venta, Número de seguimiento del transportista, Cantidad de pedido, Id. de producto, Id. de oferta especial, Precio unitario, Descuento de precio unitario, Total de línea, ID de fila, Fecha de modificación",
      "output": "('SalesOrderDetail', \"CREATE TABLE `SalesOrderDetail` (\\n  `SalesOrderID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.'  `SalesOrderDetailID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key. One incremental unique number per product sold.',\\n  `CarrierTrackingNumber` varchar(25) DEFAULT NULL COMMENT 'Shipment tracking number supplied by the shipper.',\\n  `OrderQty` smallint(6) NOT NULL COMMENT 'Quantity ordered per product.',\\n  `ProductID` int(11) NOT NULL COMMENT 'Product sold to customer. Foreign key to Product.ProductID.',\\n  `SpecialOfferID` int(11) NOT NULL COMMENT 'Promotional code. Foreign key to SpecialOffer.SpecialOfferID.',\\n  `UnitPrice` decimal(19,4) NOT NULL COMMENT 'Selling price of a single product.',\\n  `UnitPriceDiscount` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Discount amount.',\\n  `LineTotal` decimal(38,6) NOT NULL COMMENT 'Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SalesOrderDetailID`,`SalesOrderID`),\\n  UNIQUE KEY `AK_SalesOrderDetail_rowguid` (`rowguid`),\\n  KEY `IX_SalesOrderDetail_ProductID` (`ProductID`),\\n  KEY `FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID` (`SalesOrderID`),\\n  KEY `FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID` (`SpecialOfferID`,`ProductID`),\\n  KEY `GUID_SalesOrderDetail` (`rowguid`),\\n  CONSTRAINT `FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID` FOREIGN KEY (`SalesOrderID`) REFERENCES `SalesOrderHeader` (`SalesOrderID`) ON DELETE CASCADE ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID` FOREIGN KEY (`SpecialOfferID`, `ProductID`) REFERENCES `SpecialOfferProduct` (`SpecialOfferID`, `ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Individual products associated with a specific sales order. See SalesOrderHeader.'\")"
    },
    {
      "input": "Una tabla de Encabezado de orden de venta con las columnas de, Id. de orden de venta, Número de revisión, Fecha de orden, Fecha de vencimiento, Fecha de envío, Estado, Bandera de orden en línea, Número de orden de venta, Número de orden de compra, Número de cuenta, Id. de cliente, Id. de persona de ventas, Id. de territorio, Id. de factura a dirección, Enviar Id. de dirección de destino, Id. de método de envío, Id. de tarjeta de crédito, Código de aprobación de tarjeta de crédito, Id. de tipo de cambio, Subtotal, Importe de impuestos, Flete, Total adeudado, Comentario, rowguid, Fecha de modificación",
      "output": "('SalesOrderHeader', \"CREATE TABLE `SalesOrderHeader` (\\n  `SalesOrderID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key.'  `RevisionNumber` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT 'Incremental number to track changes to the sales order over time.',\\n  `OrderDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Dates the sales order was created.',\\n  `DueDate` datetime NOT NULL COMMENT 'Date the order is due to the customer.',\\n  `ShipDate` datetime DEFAULT NULL COMMENT 'Date the order was shipped to the customer.',\\n  `Status` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT 'Order current status. 1 = In process"
    },
    {
      "input": "Una tabla de Encabezado de orden de venta Razón de venta con las columnas de, Id. de orden de venta, Id. de motivo de venta, Fecha de modificación",
      "output": "('SalesOrderHeaderSalesReason', \"CREATE TABLE `SalesOrderHeaderSalesReason` (\\n  `SalesOrderID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.'  `SalesReasonID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesReason.SalesReasonID.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SalesOrderID`,`SalesReasonID`),\\n  KEY `FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID` (`SalesReasonID`),\\n  CONSTRAINT `FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID` FOREIGN KEY (`SalesOrderID`) REFERENCES `SalesOrderHeader` (`SalesOrderID`) ON DELETE CASCADE ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID` FOREIGN KEY (`SalesReasonID`) REFERENCES `SalesReason` (`SalesReasonID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping sales orders to sales reason codes.'\")"
    },
    {
      "input": "Una tabla de Vendedor con las columnas de, Id. de entidad comercial, Id. de territorio, Cuota de ventas, Bonificación, Porcentaje de comisión, Ventas Y T D, Ventas del último año, rowguid, Fecha de modificación",
      "output": "('SalesPerson', \"CREATE TABLE `SalesPerson` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID'  `TerritoryID` int(11) DEFAULT NULL COMMENT 'Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `SalesQuota` decimal(19,4) DEFAULT NULL COMMENT 'Projected yearly sales.',\\n  `Bonus` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Bonus due if quota is met.',\\n  `CommissionPct` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Commision percent received per sale.',\\n  `SalesYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales total year to date.',\\n  `SalesLastYear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales total of previous year.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_SalesPerson_rowguid` (`rowguid`),\\n  KEY `FK_SalesPerson_SalesTerritory_TerritoryID` (`TerritoryID`),\\n  KEY `GUID_SalesPerson` (`rowguid`),\\n  CONSTRAINT `FK_SalesPerson_Employee_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `Employee` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SalesPerson_SalesTerritory_TerritoryID` FOREIGN KEY (`TerritoryID`) REFERENCES `SalesTerritory` (`TerritoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales representative current information.'\")"
    },
    {
      "input": "Una tabla de Historial de cuotas de vendedores con las columnas de, Id. de entidad comercial, Fecha de cuota, Cuota de ventas, rowguid, Fecha de modificación",
      "output": "('SalesPersonQuotaHistory', \"CREATE TABLE `SalesPersonQuotaHistory` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.'  `QuotaDate` datetime NOT NULL COMMENT 'Sales quota date.',\\n  `SalesQuota` decimal(19,4) NOT NULL COMMENT 'Sales quota amount.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`QuotaDate`),\\n  UNIQUE KEY `AK_SalesPersonQuotaHistory_rowguid` (`rowguid`),\\n  KEY `GUID_SalesPersonQuotaHistory` (`rowguid`),\\n  CONSTRAINT `FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `SalesPerson` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales performance tracking.'\")"
    },
    {
      "input": "Una tabla de Motivo de venta con las columnas de, Id. de motivo de venta, Nombre, Tipo de motivo, Fecha de modificación",
      "output": "('SalesReason', \"CREATE TABLE `SalesReason` (\\n  `SalesReasonID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for SalesReason records.'  `Name` varchar(100) NOT NULL COMMENT 'Sales reason description.',\\n  `ReasonType` varchar(100) NOT NULL COMMENT 'Category the sales reason belongs to.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SalesReasonID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table of customer purchase reasons.'\")"
    },
    {
      "input": "Una tabla de Tasa de impuesto sobre las ventas con las columnas de, Id. de tasa de impuesto sobre las ventas, Id. de provincia estatal, Tipo de impuesto, Tasa de impuesto, Nombre, rowguid, Fecha de modificación",
      "output": "('SalesTaxRate', \"CREATE TABLE `SalesTaxRate` (\\n  `SalesTaxRateID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for SalesTaxRate records.'  `StateProvinceID` int(11) NOT NULL COMMENT 'State, province, or country/region the sales tax applies to.',\\n  `TaxType` tinyint(3) unsigned NOT NULL COMMENT '1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.',\\n  `TaxRate` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Tax rate amount.',\\n  `Name` varchar(100) NOT NULL COMMENT 'Tax rate description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SalesTaxRateID`),\\n  UNIQUE KEY `AK_SalesTaxRate_StateProvinceID_TaxType` (`StateProvinceID`,`TaxType`),\\n  UNIQUE KEY `AK_SalesTaxRate_rowguid` (`rowguid`),\\n  KEY `GUID_SalesTaxRate` (`rowguid`),\\n  CONSTRAINT `FK_SalesTaxRate_StateProvince_StateProvinceID` FOREIGN KEY (`StateProvinceID`) REFERENCES `StateProvince` (`StateProvinceID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Tax rate lookup table.'\")"
    },
    {
      "input": "Una tabla de Territorio de ventas con las columnas de, Id. de territorio, Nombre, Código de región de país, Grupo, Ventas Y T D, Ventas del año pasado, Costo Y T D, Costo del año pasado, rowguid, Fecha de modificación",
      "output": "('SalesTerritory', \"CREATE TABLE `SalesTerritory` (\\n  `TerritoryID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for SalesTerritory records.'  `Name` varchar(100) NOT NULL COMMENT 'Sales territory description',\\n  `CountryRegionCode` varchar(3) NOT NULL COMMENT 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ',\\n  `Group` varchar(50) NOT NULL COMMENT 'Geographic area to which the sales territory belong.',\\n  `SalesYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales in the territory year to date.',\\n  `SalesLastYear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales in the territory the previous year.',\\n  `CostYTD` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Business costs in the territory year to date.',\\n  `CostLastYear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Business costs in the territory the previous year.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TerritoryID`),\\n  UNIQUE KEY `AK_SalesTerritory_Name` (`Name`),\\n  UNIQUE KEY `AK_SalesTerritory_rowguid` (`rowguid`),\\n  KEY `FK_SalesTerritory_CountryRegion_CountryRegionCode` (`CountryRegionCode`),\\n  KEY `GUID_SalesTerritory` (`rowguid`),\\n  CONSTRAINT `FK_SalesTerritory_CountryRegion_CountryRegionCode` FOREIGN KEY (`CountryRegionCode`) REFERENCES `CountryRegion` (`CountryRegionCode`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales territory lookup table.'\")"
    },
    {
      "input": "Una tabla de Historial del territorio de ventas con las columnas de, Id. de entidad comercial, Id. de territorio, Fecha de inicio, Fecha de finalización, rowguid, Fecha de modificación",
      "output": "('SalesTerritoryHistory', \"CREATE TABLE `SalesTerritoryHistory` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. The sales rep.  Foreign key to SalesPerson.BusinessEntityID.'  `TerritoryID` int(11) NOT NULL COMMENT 'Primary key. Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `StartDate` datetime NOT NULL COMMENT 'Primary key. Date the sales representive started work in the territory.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'Date the sales representative left work in the territory.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`,`StartDate`,`TerritoryID`),\\n  UNIQUE KEY `AK_SalesTerritoryHistory_rowguid` (`rowguid`),\\n  KEY `FK_SalesTerritoryHistory_SalesTerritory_TerritoryID` (`TerritoryID`),\\n  KEY `GUID_SalesTerritoryHistory` (`rowguid`),\\n  CONSTRAINT `FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `SalesPerson` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SalesTerritoryHistory_SalesTerritory_TerritoryID` FOREIGN KEY (`TerritoryID`) REFERENCES `SalesTerritory` (`TerritoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales representative transfers to other sales territories.'\")"
    },
    {
      "input": "Una tabla de Motivo de desecho con las columnas de, Id. de motivo de desecho, Nombre, Fecha de modificación",
      "output": "('ScrapReason', \"CREATE TABLE `ScrapReason` (\\n  `ScrapReasonID` smallint(6) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ScrapReason records.'  `Name` varchar(100) NOT NULL COMMENT 'Failure description.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ScrapReasonID`),\\n  UNIQUE KEY `AK_ScrapReason_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Manufacturing failure reasons lookup table.'\")"
    },
    {
      "input": "Una tabla de Cambio con las columnas de, ID de turno, nombre, hora de inicio, hora de finalización, fecha de modificación",
      "output": "('Shift', \"CREATE TABLE `Shift` (\\n  `ShiftID` tinyint(3) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary key for Shift records.'  `Name` varchar(100) NOT NULL COMMENT 'Shift description.',\\n  `StartTime` time NOT NULL COMMENT 'Shift start time.',\\n  `EndTime` time NOT NULL COMMENT 'Shift end time.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ShiftID`),\\n  UNIQUE KEY `AK_Shift_Name` (`Name`),\\n  UNIQUE KEY `AK_Shift_StartTime_EndTime` (`StartTime`,`EndTime`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Work shift lookup table.'\")"
    },
    {
      "input": "Una tabla de Método de envío con las columnas de, Id. de método de envío, Nombre, Base de envío, Tarifa de envío, rowguid, Fecha de modificación",
      "output": "('ShipMethod', \"CREATE TABLE `ShipMethod` (\\n  `ShipMethodID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ShipMethod records.'  `Name` varchar(100) NOT NULL COMMENT 'Shipping company name.',\\n  `ShipBase` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Minimum shipping charge.',\\n  `ShipRate` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Shipping charge per pound.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ShipMethodID`),\\n  UNIQUE KEY `AK_ShipMethod_Name` (`Name`),\\n  UNIQUE KEY `AK_ShipMethod_rowguid` (`rowguid`),\\n  KEY `GUID_ShipMethod` (`rowguid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Shipping company lookup table.'\")"
    },
    {
      "input": "Una tabla de Artículo del carrito de compras con las columnas de, Id. del artículo del carrito de compras, Id. del carrito de compras, Cantidad, Id. del producto, Fecha de creación, Fecha de modificación",
      "output": "('ShoppingCartItem', \"CREATE TABLE `ShoppingCartItem` (\\n  `ShoppingCartItemID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for ShoppingCartItem records.'  `ShoppingCartID` varchar(50) NOT NULL COMMENT 'Shopping cart identification number.',\\n  `Quantity` int(11) NOT NULL DEFAULT 1 COMMENT 'Product quantity ordered.',\\n  `ProductID` int(11) NOT NULL COMMENT 'Product ordered. Foreign key to Product.ProductID.',\\n  `DateCreated` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date the time the record was created.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`ShoppingCartItemID`),\\n  KEY `IX_ShoppingCartItem_ShoppingCartID_ProductID` (`ShoppingCartID`,`ProductID`),\\n  KEY `FK_ShoppingCartItem_Product_ProductID` (`ProductID`),\\n  CONSTRAINT `FK_ShoppingCartItem_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Contains online customer orders until the order is submitted or cancelled.'\")"
    },
    {
      "input": "Una tabla de Oferta especial con las columnas de, ID de oferta especial, descripción, porcentaje de descuento, tipo, categoría, fecha de inicio, fecha de finalización, cantidad mínima, cantidad máxima, ID de fila, fecha de modificación",
      "output": "('SpecialOffer', \"CREATE TABLE `SpecialOffer` (\\n  `SpecialOfferID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for SpecialOffer records.'  `Description` varchar(255) NOT NULL COMMENT 'Discount description.',\\n  `DiscountPct` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Discount precentage.',\\n  `Type` varchar(50) NOT NULL COMMENT 'Discount type category.',\\n  `Category` varchar(50) NOT NULL COMMENT 'Group the discount applies to such as Reseller or Customer.',\\n  `StartDate` datetime NOT NULL COMMENT 'Discount start date.',\\n  `EndDate` datetime NOT NULL COMMENT 'Discount end date.',\\n  `MinQty` int(11) NOT NULL DEFAULT 0 COMMENT 'Minimum discount percent allowed.',\\n  `MaxQty` int(11) DEFAULT NULL COMMENT 'Maximum discount percent allowed.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SpecialOfferID`),\\n  UNIQUE KEY `AK_SpecialOffer_rowguid` (`rowguid`),\\n  KEY `GUID_SpecialOffer` (`rowguid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sale discounts lookup table.'\")"
    },
    {
      "input": "Una tabla de Producto de oferta especial con las columnas de, Id. de oferta especial, Id. de producto, rowguid, Fecha de modificación",
      "output": "('SpecialOfferProduct', \"CREATE TABLE `SpecialOfferProduct` (\\n  `SpecialOfferID` int(11) NOT NULL COMMENT 'Primary key for SpecialOfferProduct records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`SpecialOfferID`,`ProductID`),\\n  UNIQUE KEY `AK_SpecialOfferProduct_rowguid` (`rowguid`),\\n  KEY `IX_SpecialOfferProduct_ProductID` (`ProductID`),\\n  KEY `GUID_SpecialOfferProduct` (`rowguid`),\\n  CONSTRAINT `FK_SpecialOfferProduct_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID` FOREIGN KEY (`SpecialOfferID`) REFERENCES `SpecialOffer` (`SpecialOfferID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products to special offer discounts.'\")"
    },
    {
      "input": "Una tabla de Provincia del estado con las columnas de, Id. de provincia estatal, Código de provincia estatal, Código de región de país, Es solo bandera de provincia estatal, Nombre, Id. de territorio, rowguid, Fecha de modificación",
      "output": "('StateProvince', \"CREATE TABLE `StateProvince` (\\n  `StateProvinceID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for StateProvince records.'  `StateProvinceCode` char(3) NOT NULL COMMENT 'ISO standard state or province code.',\\n  `CountryRegionCode` varchar(3) NOT NULL COMMENT 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ',\\n  `IsOnlyStateProvinceFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.',\\n  `Name` varchar(100) NOT NULL COMMENT 'State or province description.',\\n  `TerritoryID` int(11) NOT NULL COMMENT 'ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`StateProvinceID`),\\n  UNIQUE KEY `AK_StateProvince_Name` (`Name`),\\n  UNIQUE KEY `AK_StateProvince_StateProvinceCode_CountryRegionCode` (`StateProvinceCode`,`CountryRegionCode`),\\n  UNIQUE KEY `AK_StateProvince_rowguid` (`rowguid`),\\n  KEY `FK_StateProvince_CountryRegion_CountryRegionCode` (`CountryRegionCode`),\\n  KEY `FK_StateProvince_SalesTerritory_TerritoryID` (`TerritoryID`),\\n  KEY `GUID_StateProvince` (`rowguid`),\\n  CONSTRAINT `FK_StateProvince_CountryRegion_CountryRegionCode` FOREIGN KEY (`CountryRegionCode`) REFERENCES `CountryRegion` (`CountryRegionCode`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_StateProvince_SalesTerritory_TerritoryID` FOREIGN KEY (`TerritoryID`) REFERENCES `SalesTerritory` (`TerritoryID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='State and province lookup table.'\")"
    },
    {
      "input": "Una tabla de Tienda con las columnas de, Id. de entidad comercial, Nombre, Id. de vendedor, Datos demográficos, rowguid, Fecha de modificación",
      "output": "('Store', \"CREATE TABLE `Store` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Customer.BusinessEntityID.'  `Name` varchar(100) NOT NULL COMMENT 'Name of the store.',\\n  `SalesPersonID` int(11) DEFAULT NULL COMMENT 'ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.',\\n  `Demographics` text DEFAULT NULL COMMENT 'Demographic informationg about the store such as the number of employees, annual sales and store type.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_Store_rowguid` (`rowguid`),\\n  KEY `IX_Store_SalesPersonID` (`SalesPersonID`),\\n  KEY `PXML_Store_Demographics` (`Demographics`(255)),\\n  KEY `GUID_Store` (`rowguid`),\\n  CONSTRAINT `FK_Store_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_Store_SalesPerson_SalesPersonID` FOREIGN KEY (`SalesPersonID`) REFERENCES `SalesPerson` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customers (resellers) of Adventure Works products.'\")"
    },
    {
      "input": "Una tabla de MESAS con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, TIPO DE TABLA, MOTOR, VERSIÓN, FORMATO DE FILA, FILAS DE TABLA, LONGITUD PROMEDIO DE FILA, LONGITUD DE DATOS, LONGITUD MÁXIMA DE DATOS, LONGITUD DE ÍNDICE, DATOS LIBRES, INCREMENTO AUTOMÁTICO, TIEMPO DE CREACIÓN, TIEMPO DE ACTUALIZACIÓN, COMPROBAR TIEMPO, COLACIÓN DE TABLA, SUMA DE COMPROBACIÓN, CREAR OPCIONES, COMENTARIO DE TABLA",
      "output": "('TABLES', \"CREATE TABLE `TABLES` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `ENGINE` varchar(64) DEFAULT NULL,\\n  `VERSION` bigint(21) unsigned DEFAULT NULL,\\n  `ROW_FORMAT` varchar(10) DEFAULT NULL,\\n  `TABLE_ROWS` bigint(21) unsigned DEFAULT NULL,\\n  `AVG_ROW_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `DATA_FREE` bigint(21) unsigned DEFAULT NULL,\\n  `AUTO_INCREMENT` bigint(21) unsigned DEFAULT NULL,\\n  `CREATE_TIME` datetime DEFAULT NULL,\\n  `UPDATE_TIME` datetime DEFAULT NULL,\\n  `CHECK_TIME` datetime DEFAULT NULL,\\n  `TABLE_COLLATION` varchar(32) DEFAULT NULL,\\n  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,\\n  `CREATE_OPTIONS` varchar(255) DEFAULT NULL,\\n  `TABLE_COMMENT` varchar(2048) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=227246 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ESPACIOS DE MESA con las columnas de, NOMBRE DE ESPACIO DE MESA, MOTOR, TIPO DE ESPACIO DE MESA, NOMBRE DE GRUPO DE ARCHIVO DE REGISTRO, TAMAÑO DE EXTENSIÓN, TAMAÑO DE EXTENSIÓN AUTOMÁTICA, TAMAÑO MÁXIMO, ID DE GRUPO DE NODO, COMENTARIO DE ESPACIO DE MESA",
      "output": "('TABLESPACES', \"CREATE TABLE `TABLESPACES` (\\n  `TABLESPACE_NAME` varchar(64) NOT NULL DEFAULT ''  `ENGINE` varchar(64) NOT NULL DEFAULT '',\\n  `TABLESPACE_TYPE` varchar(64) DEFAULT NULL,\\n  `LOGFILE_GROUP_NAME` varchar(64) DEFAULT NULL,\\n  `EXTENT_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `AUTOEXTEND_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `MAXIMUM_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `NODEGROUP_ID` bigint(21) unsigned DEFAULT NULL,\\n  `TABLESPACE_COMMENT` varchar(2048) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=308946 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de RESTRICCIONES DE LA TABLA con las columnas de, CATÁLOGO DE RESTRICCIONES, ESQUEMA DE RESTRICCIONES, NOMBRE DE RESTRICCIONES, ESQUEMA DE TABLA, NOMBRE DE TABLA, TIPO DE RESTRICCIÓN",
      "output": "('TABLE_CONSTRAINTS', \"CREATE TABLE `TABLE_CONSTRAINTS` (\\n  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT ''  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_TYPE` varchar(64) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=857621 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de PRIVILEGIOS DE LA MESA con las columnas de, CONCESIONARIO, CATÁLOGO DE MESA, ESQUEMA DE MESA, NOMBRE DE MESA, TIPO DE PRIVILEGIO, ES OTORGABLE",
      "output": "('TABLE_PRIVILEGES', \"CREATE TABLE `TABLE_PRIVILEGES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=795364 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de TABLA DE ESTADÍSTICAS con las columnas de, ESQUEMA DE LA TABLA, NOMBRE DE LA TABLA, FILAS LEÍDAS, FILAS CAMBIADAS, FILAS CAMBIADAS X ÍNDICES",
      "output": "('TABLE_STATISTICS', \"CREATE TABLE `TABLE_STATISTICS` (\\n  `TABLE_SCHEMA` varchar(192) NOT NULL DEFAULT ''  `TABLE_NAME` varchar(192) NOT NULL DEFAULT '',\\n  `ROWS_READ` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_CHANGED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_CHANGED_X_INDEXES` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=1818360 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de EQUIPOS con las columnas de, HORA, NOMBRE",
      "output": "('TEAMS', 'CREATE TABLE `TEAMS` (\\n  `TID` int(11) NOT NULL  `TNAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`TID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de HISTORIAL DE TRANSACCIONES con las columnas de, ID DE TRANSACCIÓN, ID DE PRODUCTO, ID DE PEDIDO DE REFERENCIA, ID DE LÍNEA DE PEDIDO DE REFERENCIA, FECHA DE TRANSACCIÓN, TIPO DE TRANSACCIÓN, CANTIDAD, COSTO REAL, FECHA DE MODIFICACIÓN",
      "output": "('TRANSACTIONHISTORY', \"CREATE TABLE `TRANSACTIONHISTORY` (\\n  `TRANSACTIONID` int(11) NOT NULL COMMENT 'Primary key for TransactionHistory records.'  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `REFERENCEORDERID` int(11) NOT NULL COMMENT 'Purchase order, sales order, or work order identification number.',\\n  `REFERENCEORDERLINEID` int(11) NOT NULL DEFAULT 0 COMMENT 'Line number associated with the purchase order, sales order, or work order.',\\n  `TRANSACTIONDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time of the transaction.',\\n  `TRANSACTIONTYPE` char(1) NOT NULL COMMENT 'W = WorkOrder, S = SalesOrder, P = PurchaseOrder',\\n  `QUANTITY` int(11) NOT NULL COMMENT 'Product quantity.',\\n  `ACTUALCOST` decimal(19,4) NOT NULL COMMENT 'Product cost.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TRANSACTIONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Record of each purchase order, sales order, or work order transaction year to date.'\")"
    },
    {
      "input": "Una tabla de ARCHIVO DE HISTORIAL DE TRANSACCIONES con las columnas de, ID DE TRANSACCIÓN, ID DE PRODUCTO, ID DE PEDIDO DE REFERENCIA, ID DE LÍNEA DE PEDIDO DE REFERENCIA, FECHA DE TRANSACCIÓN, TIPO DE TRANSACCIÓN, CANTIDAD, COSTO REAL, FECHA DE MODIFICACIÓN",
      "output": "('TRANSACTIONHISTORYARCHIVE', \"CREATE TABLE `TRANSACTIONHISTORYARCHIVE` (\\n  `TRANSACTIONID` int(11) NOT NULL COMMENT 'Primary key for TransactionHistoryArchive records.'  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `REFERENCEORDERID` int(11) NOT NULL COMMENT 'Purchase order, sales order, or work order identification number.',\\n  `REFERENCEORDERLINEID` int(11) NOT NULL DEFAULT 0 COMMENT 'Line number associated with the purchase order, sales order, or work order.',\\n  `TRANSACTIONDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time of the transaction.',\\n  `TRANSACTIONTYPE` char(1) NOT NULL COMMENT 'W = Work Order, S = Sales Order, P = Purchase Order',\\n  `QUANTITY` int(11) NOT NULL COMMENT 'Product quantity.',\\n  `ACTUALCOST` decimal(19,4) NOT NULL COMMENT 'Product cost.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TRANSACTIONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Transactions for previous years.'\")"
    },
    {
      "input": "Una tabla de DISPARADORES con las columnas de, CATÁLOGO DE ACTIVACIÓN, ESQUEMA DE ACTIVACIÓN, NOMBRE DE ACTIVACIÓN, MANIPULACIÓN DE EVENTOS, CATÁLOGO DE OBJETOS DE EVENTOS, ESQUEMA DE OBJETOS DE EVENTOS, TABLA DE OBJETOS DE EVENTOS, ORDEN DE ACCIÓN, CONDICIÓN DE ACCIÓN, DECLARACIÓN DE ACCIÓN, ORIENTACIÓN DE ACCIÓN, TIEMPO DE ACCIÓN, TABLA ANTIGUA DE REFERENCIA DE ACCIÓN, TABLA NUEVA DE REFERENCIA DE ACCIÓN, REFERENCIA DE ACCIÓN FILA ANTIGUA, REFERENCIA DE ACCIÓN FILA NUEVA, CREADA, MODO SQL, DEFINITOR, CLIENTE DE CONJUNTO DE CARACTERES, CONEXIÓN DE COLACIÓN, COLACIÓN DE BASE DE DATOS",
      "output": "('TRIGGERS', \"CREATE TABLE `TRIGGERS` (\\n  `TRIGGER_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TRIGGER_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TRIGGER_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `EVENT_MANIPULATION` varchar(6) NOT NULL DEFAULT '',\\n  `EVENT_OBJECT_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `EVENT_OBJECT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `EVENT_OBJECT_TABLE` varchar(64) NOT NULL DEFAULT '',\\n  `ACTION_ORDER` bigint(4) NOT NULL DEFAULT 0,\\n  `ACTION_CONDITION` longtext DEFAULT NULL,\\n  `ACTION_STATEMENT` longtext NOT NULL,\\n  `ACTION_ORIENTATION` varchar(9) NOT NULL DEFAULT '',\\n  `ACTION_TIMING` varchar(6) NOT NULL DEFAULT '',\\n  `ACTION_REFERENCE_OLD_TABLE` varchar(64) DEFAULT NULL,\\n  `ACTION_REFERENCE_NEW_TABLE` varchar(64) DEFAULT NULL,\\n  `ACTION_REFERENCE_OLD_ROW` varchar(3) NOT NULL DEFAULT '',\\n  `ACTION_REFERENCE_NEW_ROW` varchar(3) NOT NULL DEFAULT '',\\n  `CREATED` datetime DEFAULT NULL,\\n  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',\\n  `DEFINER` varchar(189) NOT NULL DEFAULT '',\\n  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',\\n  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',\\n  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=72065 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de Historial de transacciones con las columnas de, ID de transacción, ID de producto, ID de pedido de referencia, ID de línea de pedido de referencia, Fecha de transacción, Tipo de transacción, Cantidad, Costo real, Fecha de modificación",
      "output": "('TransactionHistory', \"CREATE TABLE `TransactionHistory` (\\n  `TransactionID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for TransactionHistory records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `ReferenceOrderID` int(11) NOT NULL COMMENT 'Purchase order, sales order, or work order identification number.',\\n  `ReferenceOrderLineID` int(11) NOT NULL DEFAULT 0 COMMENT 'Line number associated with the purchase order, sales order, or work order.',\\n  `TransactionDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time of the transaction.',\\n  `TransactionType` char(1) NOT NULL COMMENT 'W = WorkOrder, S = SalesOrder, P = PurchaseOrder',\\n  `Quantity` int(11) NOT NULL COMMENT 'Product quantity.',\\n  `ActualCost` decimal(19,4) NOT NULL COMMENT 'Product cost.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TransactionID`),\\n  KEY `IX_TransactionHistory_ProductID` (`ProductID`),\\n  KEY `IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID` (`ReferenceOrderID`,`ReferenceOrderLineID`),\\n  CONSTRAINT `FK_TransactionHistory_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Record of each purchase order, sales order, or work order transaction year to date.'\")"
    },
    {
      "input": "Una tabla de Archivo de historial de transacciones con las columnas de, ID de transacción, ID de producto, ID de pedido de referencia, ID de línea de pedido de referencia, Fecha de transacción, Tipo de transacción, Cantidad, Costo real, Fecha de modificación",
      "output": "('TransactionHistoryArchive', \"CREATE TABLE `TransactionHistoryArchive` (\\n  `TransactionID` int(11) NOT NULL COMMENT 'Primary key for TransactionHistoryArchive records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `ReferenceOrderID` int(11) NOT NULL COMMENT 'Purchase order, sales order, or work order identification number.',\\n  `ReferenceOrderLineID` int(11) NOT NULL DEFAULT 0 COMMENT 'Line number associated with the purchase order, sales order, or work order.',\\n  `TransactionDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time of the transaction.',\\n  `TransactionType` char(1) NOT NULL COMMENT 'W = Work Order, S = Sales Order, P = Purchase Order',\\n  `Quantity` int(11) NOT NULL COMMENT 'Product quantity.',\\n  `ActualCost` decimal(19,4) NOT NULL COMMENT 'Product cost.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`TransactionID`),\\n  KEY `IX_TransactionHistoryArchive_ProductID` (`ProductID`),\\n  KEY `IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLi2` (`ReferenceOrderID`,`ReferenceOrderLineID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Transactions for previous years.'\")"
    },
    {
      "input": "Una tabla de UNIDAD DE MEDIDA con las columnas de, CÓDIGO DE MEDIDA DE LA UNIDAD, NOMBRE, FECHA DE MODIFICACIÓN",
      "output": "('UNITMEASURE', \"CREATE TABLE `UNITMEASURE` (\\n  `UNITMEASURECODE` char(3) NOT NULL COMMENT 'Primary key.'  `NAME` varchar(100) NOT NULL COMMENT 'Unit of measure description.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`UNITMEASURECODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Unit of measure lookup table.'\")"
    },
    {
      "input": "Una tabla de UNIDAD ADMINISTRATIVA con las columnas de, ID UNIDAD ADMINISTRATIVA, NOMBRE UNIDAD ADMINISTRATIVA, ST POBLACIÓN, ÁREA",
      "output": "('UPRAVNA_ENOTA', 'CREATE TABLE `UPRAVNA_ENOTA` (\\n  `ID_UPRAVNA_ENOTA` char(4) NOT NULL  `IME_UPRAVNA_ENOTA` varchar(255) NOT NULL,\\n  `ST_PREBIVALCEV` int(10) unsigned DEFAULT NULL,\\n  `POVRSINA` smallint(5) unsigned DEFAULT NULL,\\n  PRIMARY KEY (`ID_UPRAVNA_ENOTA`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de PRIVILEGIOS DE USUARIO con las columnas de, CONCESIONARIO, CATÁLOGO DE MESA, TIPO DE PRIVILEGIO, ES OTORGABLE",
      "output": "('USER_PRIVILEGES', \"CREATE TABLE `USER_PRIVILEGES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=928039 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DE USUARIO con las columnas de, USUARIO, TOTAL DE CONEXIONES, CONEXIONES CONCURRENTES, TIEMPO CONECTADO, TIEMPO OCUPADO, TIEMPO DE CPU, BYTES RECIBIDOS, BYTES ENVIADOS, BINLOG BYTES ESCRITOS, FILAS LEÍDAS, FILAS ENVIADAS, FILAS ELIMINADAS, FILAS INSERTADAS, FILAS ACTUALIZADAS, SELECCIONAR COMANDOS, ACTUALIZAR COMANDOS, OTROS COMANDOS, COMMIT TRANSACCIONES, ROLLBACK TRANSACCIONES, CONEXIONES DENEGADAS, CONEXIONES PERDIDAS, ACCESO DENEGADO, CONSULTAS VACÍAS",
      "output": "('USER_STATISTICS', \"CREATE TABLE `USER_STATISTICS` (\\n  `USER` varchar(128) NOT NULL DEFAULT ''  `TOTAL_CONNECTIONS` int(11) NOT NULL DEFAULT 0,\\n  `CONCURRENT_CONNECTIONS` int(11) NOT NULL DEFAULT 0,\\n  `CONNECTED_TIME` int(11) NOT NULL DEFAULT 0,\\n  `BUSY_TIME` double NOT NULL DEFAULT 0,\\n  `CPU_TIME` double NOT NULL DEFAULT 0,\\n  `BYTES_RECEIVED` bigint(21) NOT NULL DEFAULT 0,\\n  `BYTES_SENT` bigint(21) NOT NULL DEFAULT 0,\\n  `BINLOG_BYTES_WRITTEN` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_READ` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_SENT` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_DELETED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_INSERTED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_UPDATED` bigint(21) NOT NULL DEFAULT 0,\\n  `SELECT_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `UPDATE_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `OTHER_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `COMMIT_TRANSACTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `ROLLBACK_TRANSACTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `DENIED_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `LOST_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `ACCESS_DENIED` bigint(21) NOT NULL DEFAULT 0,\\n  `EMPTY_QUERIES` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=3897429 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de Unidad de medida con las columnas de, Código de unidad de medida, Nombre, Fecha de modificación",
      "output": "('UnitMeasure', \"CREATE TABLE `UnitMeasure` (\\n  `UnitMeasureCode` char(3) NOT NULL COMMENT 'Primary key.'  `Name` varchar(100) NOT NULL COMMENT 'Unit of measure description.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`UnitMeasureCode`),\\n  UNIQUE KEY `AK_UnitMeasure_Name` (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Unit of measure lookup table.'\")"
    },
    {
      "input": "Una tabla de Usuarios con las columnas de, identificación de usuario, votos divertidos, votos útiles, votos geniales, nombre, promedio de estrellas, recuento de reseñas",
      "output": "('Users', \"CREATE TABLE `Users` (\\n  `user_id` varchar(30) NOT NULL DEFAULT ''  `votes_funny` int(11) DEFAULT NULL,\\n  `votes_useful` int(11) DEFAULT NULL,\\n  `votes_cool` int(11) DEFAULT NULL,\\n  `name` varchar(30) DEFAULT NULL,\\n  `average_stars` double DEFAULT NULL,\\n  `review_count` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de VENDEDOR con las columnas de, ID DE ENTIDAD DE NEGOCIO, NÚMERO DE CUENTA, NOMBRE, ACREDITACIÓN, ESTADO DE VENDEDOR PREFERIDO, INDICADOR ACTIVO, URL DE SERVICIO WEB DE COMPRA, FECHA DE MODIFICACIÓN",
      "output": "('VENDOR', \"CREATE TABLE `VENDOR` (\\n  `BUSINESSENTITYID` int(11) NOT NULL COMMENT 'Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID'  `ACCOUNTNUMBER` varchar(30) NOT NULL COMMENT 'Vendor account (identification) number.',\\n  `NAME` varchar(100) NOT NULL COMMENT 'Company name.',\\n  `CREDITRATING` tinyint(3) unsigned NOT NULL COMMENT '1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average',\\n  `PREFERREDVENDORSTATUS` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.',\\n  `ACTIVEFLAG` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Vendor no longer used. 1 = Vendor is actively used.',\\n  `PURCHASINGWEBSERVICEURL` varchar(1024) DEFAULT NULL COMMENT 'Vendor URL.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BUSINESSENTITYID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Companies from whom Adventure Works Cycles purchases parts or other goods.'\")"
    },
    {
      "input": "Una tabla de PUNTOS DE VISTA con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, VER DEFINICIÓN, VER OPCIÓN, ES ACTUALIZABLE, DEFINITOR, TIPO DE SEGURIDAD, CLIENTE DE CONJUNTO DE CARACTERES, CONEXIÓN DE COLACIÓN",
      "output": "('VIEWS', \"CREATE TABLE `VIEWS` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `VIEW_DEFINITION` longtext NOT NULL,\\n  `CHECK_OPTION` varchar(8) NOT NULL DEFAULT '',\\n  `IS_UPDATABLE` varchar(3) NOT NULL DEFAULT '',\\n  `DEFINER` varchar(189) NOT NULL DEFAULT '',\\n  `SECURITY_TYPE` varchar(7) NOT NULL DEFAULT '',\\n  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',\\n  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=779203 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de Vendedor con las columnas de, ID de entidad comercial, número de cuenta, nombre, calificación crediticia, estado de proveedor preferido, indicador activo, U R L del servicio web de compras, fecha de modificación",
      "output": "('Vendor', \"CREATE TABLE `Vendor` (\\n  `BusinessEntityID` int(11) NOT NULL COMMENT 'Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID'  `AccountNumber` varchar(30) NOT NULL COMMENT 'Vendor account (identification) number.',\\n  `Name` varchar(100) NOT NULL COMMENT 'Company name.',\\n  `CreditRating` tinyint(3) unsigned NOT NULL COMMENT '1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average',\\n  `PreferredVendorStatus` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.',\\n  `ActiveFlag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Vendor no longer used. 1 = Vendor is actively used.',\\n  `PurchasingWebServiceURL` varchar(1024) DEFAULT NULL COMMENT 'Vendor URL.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`BusinessEntityID`),\\n  UNIQUE KEY `AK_Vendor_AccountNumber` (`AccountNumber`),\\n  CONSTRAINT `FK_Vendor_BusinessEntity_BusinessEntityID` FOREIGN KEY (`BusinessEntityID`) REFERENCES `BusinessEntity` (`BusinessEntityID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Companies from whom Adventure Works Cycles purchases parts or other goods.'\")"
    },
    {
      "input": "Una tabla de ORDEN DE TRABAJO con las columnas de, ID DE PEDIDO DE TRABAJO, ID DE PRODUCTO, CANTIDAD DE PEDIDO, CANTIDAD EN EXISTENCIA, CANTIDAD DE DESECHO, FECHA DE INICIO, FECHA DE FINALIZACIÓN, FECHA DE VENCIMIENTO, ID DE RAZÓN DE DESECHO, FECHA DE MODIFICACIÓN",
      "output": "('WORKORDER', \"CREATE TABLE `WORKORDER` (\\n  `WORKORDERID` int(11) NOT NULL COMMENT 'Primary key for WorkOrder records.'  `PRODUCTID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `ORDERQTY` int(11) NOT NULL COMMENT 'Product quantity to build.',\\n  `STOCKEDQTY` int(11) NOT NULL COMMENT 'Quantity built and put in inventory.',\\n  `SCRAPPEDQTY` smallint(6) NOT NULL COMMENT 'Quantity that failed inspection.',\\n  `STARTDATE` datetime NOT NULL COMMENT 'Work order start date.',\\n  `ENDDATE` datetime DEFAULT NULL COMMENT 'Work order end date.',\\n  `DUEDATE` datetime NOT NULL COMMENT 'Work order due date.',\\n  `SCRAPREASONID` smallint(6) DEFAULT NULL COMMENT 'Reason for inspection failure.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`WORKORDERID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Manufacturing work orders.'\")"
    },
    {
      "input": "Una tabla de ENRUTAMIENTO DE ORDEN DE TRABAJO con las columnas de, ID DE ORDEN DE TRABAJO, ID DE PRODUCTO, SECUENCIA DE OPERACIONES, ID DE UBICACIÓN, FECHA DE INICIO PROGRAMADA, FECHA DE FINALIZACIÓN PROGRAMADA, FECHA DE INICIO REAL, FECHA DE FINALIZACIÓN REAL, RECURSOS REALES, COSTE PLANIFICADO, COSTE REAL, FECHA DE MODIFICACIÓN",
      "output": "('WORKORDERROUTING', \"CREATE TABLE `WORKORDERROUTING` (\\n  `WORKORDERID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to WorkOrder.WorkOrderID.'  `PRODUCTID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Product.ProductID.',\\n  `OPERATIONSEQUENCE` smallint(6) NOT NULL COMMENT 'Primary key. Indicates the manufacturing process sequence.',\\n  `LOCATIONID` smallint(6) NOT NULL COMMENT 'Manufacturing location where the part is processed. Foreign key to Location.LocationID.',\\n  `SCHEDULEDSTARTDATE` datetime NOT NULL COMMENT 'Planned manufacturing start date.',\\n  `SCHEDULEDENDDATE` datetime NOT NULL COMMENT 'Planned manufacturing end date.',\\n  `ACTUALSTARTDATE` datetime DEFAULT NULL COMMENT 'Actual start date.',\\n  `ACTUALENDDATE` datetime DEFAULT NULL COMMENT 'Actual end date.',\\n  `ACTUALRESOURCEHRS` decimal(9,4) DEFAULT NULL COMMENT 'Number of manufacturing hours used.',\\n  `PLANNEDCOST` decimal(19,4) NOT NULL COMMENT 'Estimated manufacturing cost.',\\n  `ACTUALCOST` decimal(19,4) DEFAULT NULL COMMENT 'Actual manufacturing cost.',\\n  `MODIFIEDDATE` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`WORKORDERID`,`PRODUCTID`,`OPERATIONSEQUENCE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Work order details.'\")"
    },
    {
      "input": "Una tabla de Orden de trabajo con las columnas de, Id. de orden de trabajo, Id. de producto, Cantidad de pedido, Cantidad almacenada, Cantidad desechada, Fecha de inicio, Fecha de finalización, Fecha de vencimiento, Id. de motivo de desecho, Fecha de modificación",
      "output": "('WorkOrder', \"CREATE TABLE `WorkOrder` (\\n  `WorkOrderID` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Primary key for WorkOrder records.'  `ProductID` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `OrderQty` int(11) NOT NULL COMMENT 'Product quantity to build.',\\n  `StockedQty` int(11) NOT NULL COMMENT 'Quantity built and put in inventory.',\\n  `ScrappedQty` smallint(6) NOT NULL COMMENT 'Quantity that failed inspection.',\\n  `StartDate` datetime NOT NULL COMMENT 'Work order start date.',\\n  `EndDate` datetime DEFAULT NULL COMMENT 'Work order end date.',\\n  `DueDate` datetime NOT NULL COMMENT 'Work order due date.',\\n  `ScrapReasonID` smallint(6) DEFAULT NULL COMMENT 'Reason for inspection failure.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`WorkOrderID`),\\n  KEY `IX_WorkOrder_ScrapReasonID` (`ScrapReasonID`),\\n  KEY `IX_WorkOrder_ProductID` (`ProductID`),\\n  CONSTRAINT `FK_WorkOrder_Product_ProductID` FOREIGN KEY (`ProductID`) REFERENCES `Product` (`ProductID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_WorkOrder_ScrapReason_ScrapReasonID` FOREIGN KEY (`ScrapReasonID`) REFERENCES `ScrapReason` (`ScrapReasonID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Manufacturing work orders.'\")"
    },
    {
      "input": "Una tabla de Enrutamiento de órdenes de trabajo con las columnas de, Id. de orden de trabajo, Id. de producto, Secuencia de operación, Id. de ubicación, Fecha de inicio programada, Fecha de finalización programada, Fecha de inicio real, Fecha de finalización real, Horas de recursos reales, Costo planificado, Costo real, Fecha de modificación",
      "output": "('WorkOrderRouting', \"CREATE TABLE `WorkOrderRouting` (\\n  `WorkOrderID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to WorkOrder.WorkOrderID.'  `ProductID` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Product.ProductID.',\\n  `OperationSequence` smallint(6) NOT NULL COMMENT 'Primary key. Indicates the manufacturing process sequence.',\\n  `LocationID` smallint(6) NOT NULL COMMENT 'Manufacturing location where the part is processed. Foreign key to Location.LocationID.',\\n  `ScheduledStartDate` datetime NOT NULL COMMENT 'Planned manufacturing start date.',\\n  `ScheduledEndDate` datetime NOT NULL COMMENT 'Planned manufacturing end date.',\\n  `ActualStartDate` datetime DEFAULT NULL COMMENT 'Actual start date.',\\n  `ActualEndDate` datetime DEFAULT NULL COMMENT 'Actual end date.',\\n  `ActualResourceHrs` decimal(9,4) DEFAULT NULL COMMENT 'Number of manufacturing hours used.',\\n  `PlannedCost` decimal(19,4) NOT NULL COMMENT 'Estimated manufacturing cost.',\\n  `ActualCost` decimal(19,4) DEFAULT NULL COMMENT 'Actual manufacturing cost.',\\n  `ModifiedDate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`WorkOrderID`,`ProductID`,`OperationSequence`),\\n  KEY `IX_WorkOrderRouting_ProductID` (`ProductID`),\\n  KEY `FK_WorkOrderRouting_Location_LocationID` (`LocationID`),\\n  CONSTRAINT `FK_WorkOrderRouting_Location_LocationID` FOREIGN KEY (`LocationID`) REFERENCES `Location` (`LocationID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_WorkOrderRouting_WorkOrder_WorkOrderID` FOREIGN KEY (`WorkOrderID`) REFERENCES `WorkOrder` (`WorkOrderID`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Work order details.'\")"
    },
    {
      "input": "Una tabla de TABLAS HASH INTERNAS XTRADB con las columnas de, NOMBRE DE LA TABLA HASH INTERNA, MEMORIA TOTAL, MEMORIA CONSTANTE, MEMORIA VARIABLE",
      "output": "('XTRADB_INTERNAL_HASH_TABLES', \"CREATE TABLE `XTRADB_INTERNAL_HASH_TABLES` (\\n  `INTERNAL_HASH_TABLE_NAME` varchar(100) NOT NULL DEFAULT ''  `TOTAL_MEMORY` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `CONSTANT_MEMORY` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `VARIABLE_MEMORY` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=6567228 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de VISTA DE LECTURA DE XTRADB con las columnas de, LEER VER NÚMERO DESHACER, LEER VER LÍMITE BAJO TRX NÚMERO, LEER VER LÍMITE SUPERIOR TRX ID, LEER VER LÍMITE BAJO TRX ID",
      "output": "('XTRADB_READ_VIEW', \"CREATE TABLE `XTRADB_READ_VIEW` (\\n  `READ_VIEW_UNDO_NUMBER` bigint(21) unsigned NOT NULL DEFAULT 0  `READ_VIEW_LOW_LIMIT_TRX_NUMBER` varchar(18) NOT NULL DEFAULT '',\\n  `READ_VIEW_UPPER_LIMIT_TRX_ID` varchar(18) NOT NULL DEFAULT '',\\n  `READ_VIEW_LOW_LIMIT_TRX_ID` varchar(18) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=12341860 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de RSEG XTRADB con las columnas de, ID de rseg, ID de espacio, tamaño de zip, número de página, tamaño máximo, tamaño actual",
      "output": "('XTRADB_RSEG', 'CREATE TABLE `XTRADB_RSEG` (\\n  `rseg_id` bigint(21) unsigned NOT NULL DEFAULT 0  `space_id` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `zip_size` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `page_no` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `max_size` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `curr_size` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=43826196 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de seguidor activo real con las columnas de, ID de usuario, ID de seguidor",
      "output": "('active_follower_real', 'CREATE TABLE `active_follower_real` (\\n  `user_id` int(11) NOT NULL  `follower_id` int(11) NOT NULL,\\n  PRIMARY KEY (`user_id`,`follower_id`),\\n  KEY `NewIndex1` (`user_id`),\\n  KEY `NewIndex2` (`follower_id`),\\n  CONSTRAINT `active_follower_real_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `distinct_users_from_search_table_real_map` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `active_follower_real_ibfk_2` FOREIGN KEY (`follower_id`) REFERENCES `distinct_users_from_search_table_real_map` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Dirección con las columnas de, addressid, addressline, addressline, ciudad, stateprovinceid, postalcode, ubicación espacial, rowguid, modifieddate",
      "output": "('address', \"CREATE TABLE `address` (\\n  `addressid` int(11) NOT NULL COMMENT 'Primary key for Address records.'  `addressline1` varchar(60) NOT NULL COMMENT 'First street address line.',\\n  `addressline2` varchar(60) DEFAULT NULL COMMENT 'Second street address line.',\\n  `city` varchar(30) NOT NULL COMMENT 'Name of the city.',\\n  `stateprovinceid` int(11) NOT NULL COMMENT 'Unique identification number for the state or province. Foreign key to StateProvince table.',\\n  `postalcode` varchar(15) NOT NULL COMMENT 'Postal code for the street address.',\\n  `spatiallocation` geometry DEFAULT NULL COMMENT 'Latitude and longitude of this address.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`addressid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Street address information for customers, employees, and vendors.'\")"
    },
    {
      "input": "Una tabla de Tipo de dirección con las columnas de, ID de tipo de dirección, nombre, ID de fila, fecha de modificación",
      "output": "('addresstype', \"CREATE TABLE `addresstype` (\\n  `addresstypeid` int(11) NOT NULL COMMENT 'Primary key for AddressType records.'  `name` varchar(100) NOT NULL COMMENT 'Address type description. For example, Billing, Home, or Shipping.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`addresstypeid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Types of addresses stored in the Address table. '\")"
    },
    {
      "input": "Una tabla de algoritmo con las columnas de, nombre, función, descripción, clase de algoritmo",
      "output": "('algorithm', \"CREATE TABLE `algorithm` (\\n  `name` varchar(128) NOT NULL DEFAULT ''  `function` text DEFAULT NULL,\\n  `description` mediumtext DEFAULT NULL,\\n  `algorithm_class` varchar(32) DEFAULT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de calidad del algoritmo con las columnas de, ID de implementación, calidad, calidad Implementación, etiqueta, valor",
      "output": "('algorithm_quality', \"CREATE TABLE `algorithm_quality` (\\n  `implementation_id` int(16) NOT NULL  `quality` varchar(128) NOT NULL DEFAULT '',\\n  `qualityImplementation` varchar(64) DEFAULT NULL,\\n  `label` varchar(128) NOT NULL,\\n  `value` varchar(128) DEFAULT NULL,\\n  PRIMARY KEY (`implementation_id`,`quality`,`label`),\\n  KEY `algorithm_quality_quality` (`quality`),\\n  CONSTRAINT `algorithm_quality_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `algorithm_quality_ibfk_2` FOREIGN KEY (`quality`) REFERENCES `quality` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de configuración del algoritmo con las columnas de, sid, padre, ID de implementación, algoritmo, rol, es predeterminado, estructura del algoritmo, cadena de configuración",
      "output": "('algorithm_setup', \"CREATE TABLE `algorithm_setup` (\\n  `sid` int(10) unsigned NOT NULL AUTO_INCREMENT  `parent` int(10) unsigned NOT NULL,\\n  `implementation_id` int(16) NOT NULL,\\n  `algorithm` varchar(128) DEFAULT NULL,\\n  `role` varchar(64) NOT NULL DEFAULT 'Learner',\\n  `isDefault` enum('true','false') DEFAULT 'false',\\n  `algorithm_structure` varchar(64) DEFAULT NULL,\\n  `setup_string` text DEFAULT NULL,\\n  PRIMARY KEY (`sid`),\\n  KEY `algorithm_setup_algorithm_isDefault_sid` (`algorithm`,`isDefault`,`sid`),\\n  KEY `algorithm_setup_algorithm` (`algorithm`),\\n  KEY `algorithm_setup_implementation_id` (`implementation_id`),\\n  KEY `algorithm_setup_isDefault` (`isDefault`),\\n  KEY `algorithm_setup_parent` (`parent`),\\n  KEY `algorithm_setup_role` (`role`),\\n  KEY `algorithm_setup_role_parent` (`role`,`parent`),\\n  KEY `algorithm_setup_role_sid` (`role`,`sid`),\\n  CONSTRAINT `algorithm_setup_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `algorithm_setup_ibfk_2` FOREIGN KEY (`algorithm`) REFERENCES `algorithm` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de todos los complementos con las columnas de, nombre del complemento, versión del complemento, estado del complemento, tipo de complemento, versión del tipo de complemento, biblioteca de complementos, versión de la biblioteca de complementos, autor del complemento, descripción del complemento, licencia del complemento, opción de carga, madurez del complemento, versión de autenticación del complemento",
      "output": "('all_plugins', \"CREATE TABLE `all_plugins` (\\n  `plugin_name` varchar(64) NOT NULL DEFAULT ''  `plugin_version` varchar(20) NOT NULL DEFAULT '',\\n  `plugin_status` varchar(16) NOT NULL DEFAULT '',\\n  `plugin_type` varchar(80) NOT NULL DEFAULT '',\\n  `plugin_type_version` varchar(20) NOT NULL DEFAULT '',\\n  `plugin_library` varchar(64) DEFAULT NULL,\\n  `plugin_library_version` varchar(20) DEFAULT NULL,\\n  `plugin_author` varchar(64) DEFAULT NULL,\\n  `plugin_description` longtext DEFAULT NULL,\\n  `plugin_license` varchar(80) NOT NULL DEFAULT '',\\n  `load_option` varchar(64) NOT NULL DEFAULT '',\\n  `plugin_maturity` varchar(12) NOT NULL DEFAULT '',\\n  `plugin_auth_version` varchar(80) DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=1208488 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de aplicación todo con las columnas de, identificación de la aplicación",
      "output": "('app_all', 'CREATE TABLE `app_all` (\\n  `app_id` bigint(20) NOT NULL  PRIMARY KEY (`app_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de eventos de la aplicación con las columnas de, ID de evento, ID de aplicación, está instalado, está activo",
      "output": "('app_events', 'CREATE TABLE `app_events` (\\n  `event_id` int(11) DEFAULT NULL  `app_id` bigint(20) DEFAULT NULL,\\n  `is_installed` tinyint(4) DEFAULT NULL,\\n  `is_active` tinyint(4) DEFAULT NULL,\\n  KEY `event_id` (`event_id`),\\n  CONSTRAINT `app_events_ibfk_1` FOREIGN KEY (`event_id`) REFERENCES `events` (`event_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de eventos de la aplicación relevantes con las columnas de, ID de evento, ID de aplicación, está instalado, está activo",
      "output": "('app_events_relevant', 'CREATE TABLE `app_events_relevant` (\\n  `event_id` int(11) NOT NULL  `app_id` bigint(20) NOT NULL,\\n  `is_installed` tinyint(4) DEFAULT NULL,\\n  `is_active` tinyint(4) DEFAULT NULL,\\n  PRIMARY KEY (`event_id`,`app_id`),\\n  KEY `event_id` (`event_id`),\\n  KEY `app_id` (`app_id`),\\n  CONSTRAINT `app_events_relevant_ibfk_1` FOREIGN KEY (`event_id`) REFERENCES `events_relevant` (`event_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `app_events_relevant_ibfk_2` FOREIGN KEY (`app_id`) REFERENCES `app_all` (`app_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de etiquetas de aplicaciones con las columnas de, ID de aplicación, ID de etiqueta",
      "output": "('app_labels', 'CREATE TABLE `app_labels` (\\n  `app_id` bigint(20) DEFAULT NULL  `label_id` int(11) DEFAULT NULL,\\n  KEY `label_id` (`label_id`),\\n  KEY `app_id` (`app_id`),\\n  CONSTRAINT `app_labels_ibfk_1` FOREIGN KEY (`label_id`) REFERENCES `label_categories` (`label_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `app_labels_ibfk_2` FOREIGN KEY (`app_id`) REFERENCES `app_all` (`app_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de roles aplicables con las columnas de, beneficiario, nombre de la función, es otorgable",
      "output": "('applicable_roles', \"CREATE TABLE `applicable_roles` (\\n  `grantee` varchar(190) NOT NULL DEFAULT ''  `role_name` varchar(128) NOT NULL DEFAULT '',\\n  `is_grantable` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=2216185 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de átomo con las columnas de, átomo y, molécula de, elemento",
      "output": "('atom', 'CREATE TABLE `atom` (\\n  `atom_id` varchar(255) NOT NULL  `molecule_id` varchar(255) DEFAULT NULL,\\n  `element` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`atom_id`),\\n  KEY `molecule_id` (`molecule_id`),\\n  KEY `atom_id` (`atom_id`),\\n  CONSTRAINT `atom_ibfk_1` FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de awbuildversion con las columnas de, ID de información del sistema, versión de la base de datos, fecha de la versión, fecha de modificación",
      "output": "('awbuildversion', \"CREATE TABLE `awbuildversion` (\\n  `systeminformationid` tinyint(3) unsigned NOT NULL COMMENT 'Primary key for AWBuildVersion records.'  `database version` varchar(25) NOT NULL COMMENT 'Version number of the database in 9.yy.mm.dd.00 format.',\\n  `versiondate` datetime NOT NULL COMMENT 'Date and time the record was last updated.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`systeminformationid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Current version number of the AdventureWorks 2014 sample database. '\")"
    },
    {
      "input": "Una tabla de insignias con las columnas de, ID, ID de usuario, nombre, fecha",
      "output": "('badges', 'CREATE TABLE `badges` (\\n  `Id` int(11) NOT NULL  `UserId` int(11) DEFAULT NULL,\\n  `Name` varchar(255) DEFAULT NULL,\\n  `Date` datetime DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `badges_UserId_fkey` (`UserId`),\\n  CONSTRAINT `badges_UserId_fkey` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de base con las columnas de, ID propagado, fecha propagada, objetivo propagado, pliegue propagado",
      "output": "('base', 'CREATE TABLE `base` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de base muestreada con las columnas de, ID propagado, fecha propagada, objetivo propagado, pliegue propagado",
      "output": "('base_sampled', 'CREATE TABLE `base_sampled` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  KEY `ix_base_sampled` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de referencia bibliografica con las columnas de, id, id de implementación, cita, url",
      "output": "('bibliographical_reference', 'CREATE TABLE `bibliographical_reference` (\\n  `id` int(10) NOT NULL AUTO_INCREMENT  `implementation_id` int(16) NOT NULL,\\n  `citation` mediumtext NOT NULL,\\n  `url` varchar(128) NOT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `bibliographical_reference_implementation_id` (`implementation_id`),\\n  CONSTRAINT `bibliographical_reference_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de lista de materiales con las columnas de, billofmaterialid, productassemblyid, componenteid, startdate, enddate, unitmeasurecode, bomlevel, perassemblyqty, modifieddate",
      "output": "('billofmaterials', \"CREATE TABLE `billofmaterials` (\\n  `billofmaterialsid` int(11) NOT NULL COMMENT 'Primary key for BillOfMaterials records.'  `productassemblyid` int(11) DEFAULT NULL COMMENT 'Parent product identification number. Foreign key to Product.ProductID.',\\n  `componentid` int(11) NOT NULL COMMENT 'Component identification number. Foreign key to Product.ProductID.',\\n  `startdate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date the component started being used in the assembly item.',\\n  `enddate` datetime DEFAULT NULL COMMENT 'Date the component stopped being used in the assembly item.',\\n  `unitmeasurecode` char(3) NOT NULL COMMENT 'Standard code identifying the unit of measure for the quantity.',\\n  `bomlevel` smallint(6) NOT NULL COMMENT 'Indicates the depth the component is from its parent (AssemblyID).',\\n  `perassemblyqty` decimal(8,2) NOT NULL DEFAULT 1.00 COMMENT 'Quantity of the component needed to create the assembly.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`billofmaterialsid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.'\")"
    },
    {
      "input": "Una tabla de Walmart M S con las columnas de, ID propagado, fecha propagada, objetivo propagado, fecha de cuenta fecha hora Diff",
      "output": "('bkp_Walmart_MS', 'CREATE TABLE `bkp_Walmart_MS` (\\n  `propagated_id1` int(11) DEFAULT NULL  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `account_date_date_timeDiff_100001` int(7) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bkp patrón de Walmart j con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('bkp_Walmart_j_pattern', 'CREATE TABLE `bkp_Walmart_j_pattern` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bkp Walmart j predictor con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('bkp_Walmart_j_predictor', 'CREATE TABLE `bkp_Walmart_j_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de mesa bkp walmart j con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('bkp_Walmart_j_table', 'CREATE TABLE `bkp_Walmart_j_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bkp financial M E M R A Z A PRINCIPAL con las columnas de, ID propagado, fecha propagada, objetivo propagado, estado del préstamo directo Campo nominal Columna , duración del préstamo directo Campo numérico Columna , pedido cuenta id agregado stddev samp , pedido pedido id agregado stddev samp , fecha de préstamo directo Campo hora Columna , cuenta de pedido para agregar promedio , suma total del monto del pedido , promedio agregado del monto del pedido , mínimo agregado del monto del pedido , monto directo del préstamo Campo numérico Columna",
      "output": "('bkp__financial_MAINSAMPLE', 'CREATE TABLE `bkp__financial_MAINSAMPLE` (\\n  `propagated_id1` int(11) DEFAULT NULL  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directField_nominalColumn_100022` varchar(1) DEFAULT NULL,\\n  `loan_duration_directField_numericalColumn_100027` int(11) DEFAULT NULL,\\n  `order_account_id_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `order_order_id_aggregate_stddev_samp_100004` double(26,4) DEFAULT NULL,\\n  `loan_date_directField_timeColumn_100031` date DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100006` decimal(14,4) DEFAULT NULL,\\n  `order_amount_aggregate_sum_100019` decimal(28,1) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100007` decimal(10,5) DEFAULT NULL,\\n  `order_amount_aggregate_min_100011` decimal(6,1) DEFAULT NULL,\\n  `loan_amount_directField_numericalColumn_100026` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de patrón de diario financiero bkp con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('bkp__financial_journal_pattern', 'CREATE TABLE `bkp__financial_journal_pattern` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de predictor diario financiero bkp con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('bkp__financial_journal_predictor', 'CREATE TABLE `bkp__financial_journal_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tabla de diario financiero bkp con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('bkp__financial_journal_table', 'CREATE TABLE `bkp__financial_journal_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bkp financial M E M R A Z A PRINCIPAL con las columnas de, identificación propagada, fecha propagada, destino propagado, estado del préstamo directo Campo nominal Columna, duración del préstamo directo Campo numérico Columna, fecha del préstamo directo Campo hora Columna, orden de cuenta para agregar máximo, orden de cuenta para agregar promedio, fecha de cuenta directa Campo hora Columna, distrito A directo Campo numérico Columna, tarjeta emitida directo Campo tiempo Columna, distrito A directo Campo nominal Columna, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, monto del pedido suma total, monto del pedido promedio promedio, monto del pedido agregado min, monto del préstamo directo Campo numérico Columna , distrito A directo Campo numérico Columna , distrito A directo Campo nominal Columna , monto de pedido agregado máx , distrito A directo Campo numérico Columna , distrito A directo Campo numérico Columna , distrito A directo Campo numérico Columna , pago de préstamo directo Campo numérico Columna , distrito A directo Campo numérico Columna , tipo tarjeta directo Campo nominal Colu mn , columna numérica de campo directo del distrito A , columna numérica de campo directo del distrito A , columna numérica de campo directo del distrito A , columna de pedido para agregar stddev samp , columna nominal de campo directo de frecuencia de la cuenta , columna numérica de campo directo del distrito A",
      "output": "('bkp_financial_MAINSAMPLE', \"CREATE TABLE `bkp_financial_MAINSAMPLE` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directField_nominalColumn_100015` varchar(1) DEFAULT NULL,\\n  `loan_duration_directField_numericalColumn_100030` int(11) DEFAULT NULL,\\n  `loan_date_directField_timeColumn_100034` date DEFAULT NULL,\\n  `order_account_to_aggregate_max_100007` int(11) DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100003` decimal(14,4) DEFAULT NULL,\\n  `account_date_directField_timeColumn_100032` date DEFAULT NULL,\\n  `district_A6_directField_numericalColumn_100025` int(11) DEFAULT NULL,\\n  `card_issued_directField_timeColumn_100033` date DEFAULT NULL,\\n  `district_A3_directField_nominalColumn_100014` varchar(15) DEFAULT NULL,\\n  `district_A11_directField_numericalColumn_100017` int(11) DEFAULT NULL,\\n  `district_A10_directField_numericalColumn_100016` decimal(4,1) DEFAULT NULL,\\n  `order_amount_aggregate_sum_100010` decimal(28,1) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100004` decimal(10,5) DEFAULT NULL,\\n  `order_amount_aggregate_min_100006` decimal(6,1) DEFAULT NULL,\\n  `loan_amount_directField_numericalColumn_100029` int(11) DEFAULT NULL,\\n  `district_A16_directField_numericalColumn_100022` int(11) DEFAULT NULL,\\n  `district_A2_directField_nominalColumn_100013` varchar(19) DEFAULT NULL,\\n  `order_amount_aggregate_max_100008` decimal(6,1) DEFAULT NULL,\\n  `district_A15_directField_numericalColumn_100021` int(5) DEFAULT NULL,\\n  `district_A13_directField_numericalColumn_100019` decimal(3,2) DEFAULT NULL,\\n  `district_A12_directField_numericalColumn_100018` decimal(4,1) DEFAULT NULL,\\n  `loan_payments_directField_numericalColumn_100031` decimal(6,2) DEFAULT NULL,\\n  `district_A14_directField_numericalColumn_100020` int(11) DEFAULT NULL,\\n  `card_type_directField_nominalColumn_100012` varchar(7) DEFAULT NULL,\\n  `district_A5_directField_numericalColumn_100024` int(11) DEFAULT NULL,\\n  `district_A7_directField_numericalColumn_100026` int(11) DEFAULT NULL,\\n  `district_A9_directField_numericalColumn_100028` int(11) DEFAULT NULL,\\n  `order_account_to_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `account_frequency_directField_nominalColumn_100011` varchar(18) DEFAULT '',\\n  `district_A8_directField_numericalColumn_100027` int(6) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de bkp financiero M S con las columnas de, ID propagado, fecha propagada, objetivo propagado, estado del préstamo directo Campo nominal Columna, duración del préstamo directo Campo numérico Columna, ID de cuenta de pedido agregado stddev samp, cantidad trans agregada min, saldo trans agregado min, cliente ID de cliente agregado stddev samp, orden de pedido id agregado stddev samp, fecha de préstamo directo Campo hora Columna, cuenta de pedido para agregar promedio, cliente id de cliente suma agregada, id de cuenta de préstamo directo Campo numérico Columna, monto de pedido suma agregada, monto de pedido promedio agregado, monto de pedido agregado mínimo, monto de préstamo directo Campo numérico Columna , monto máximo agregado de la orden , monto máximo agregado de la transacción , mínimo agregado de la cuenta trans , distrito A directo Campo numérico Columna",
      "output": "('bkp_financial_MS', 'CREATE TABLE `bkp_financial_MS` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directField_nominalColumn_100085` varchar(1) DEFAULT NULL,\\n  `loan_duration_directField_numericalColumn_100106` int(11) DEFAULT NULL,\\n  `order_account_id_aggregate_stddev_samp_100008` double(26,4) DEFAULT NULL,\\n  `trans_amount_aggregate_min_100046` int(11) DEFAULT NULL,\\n  `trans_balance_aggregate_min_100047` int(11) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  `order_order_id_aggregate_stddev_samp_100011` double(26,4) DEFAULT NULL,\\n  `loan_date_directField_timeColumn_100111` date DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100025` decimal(14,4) DEFAULT NULL,\\n  `client_client_id_aggregate_sum_100067` decimal(32,0) DEFAULT NULL,\\n  `loan_account_id_directField_numericalColumn_100104` int(11) DEFAULT NULL,\\n  `order_amount_aggregate_sum_100074` decimal(28,1) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100026` decimal(10,5) DEFAULT NULL,\\n  `order_amount_aggregate_min_100042` decimal(6,1) DEFAULT NULL,\\n  `loan_amount_directField_numericalColumn_100105` int(11) DEFAULT NULL,\\n  `order_amount_aggregate_max_100058` decimal(6,1) DEFAULT NULL,\\n  `trans_amount_aggregate_max_100062` int(11) DEFAULT NULL,\\n  `trans_account_aggregate_min_100044` int(11) unsigned DEFAULT NULL,\\n  `district_A9_directField_numericalColumn_100102` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de patrón j financiero bkp con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('bkp_financial_j_pattern', 'CREATE TABLE `bkp_financial_j_pattern` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de predictor j financiero bkp con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('bkp_financial_j_predictor', 'CREATE TABLE `bkp_financial_j_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tabla j financiera bkp con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('bkp_financial_j_table', 'CREATE TABLE `bkp_financial_j_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de patrón de diario financiero bkp con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('bkp_financial_journal_pattern', 'CREATE TABLE `bkp_financial_journal_pattern` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de predictor diario financiero bkp con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('bkp_financial_journal_predictor', 'CREATE TABLE `bkp_financial_journal_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tabla de diario financiero bkp con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('bkp_financial_journal_table', 'CREATE TABLE `bkp_financial_journal_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Mutagénesis de bkp MUESTRA PRINCIPAL con las columnas de, ID propagado, fecha propagada, objetivo propagado, estado del préstamo directo Campo nominal Columna , duración del préstamo directo Campo numérico Columna , pedido cuenta id agregado stddev samp , pedido pedido id agregado stddev samp , fecha de préstamo directo Campo hora Columna , cuenta de pedido para agregar promedio , suma total del monto del pedido , promedio agregado del monto del pedido , mínimo agregado del monto del pedido , monto directo del préstamo Campo numérico Columna",
      "output": "('bkp_mutagenesis_MAINSAMPLE', 'CREATE TABLE `bkp_mutagenesis_MAINSAMPLE` (\\n  `propagated_id1` int(11) DEFAULT NULL  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directField_nominalColumn_100022` varchar(1) DEFAULT NULL,\\n  `loan_duration_directField_numericalColumn_100027` int(11) DEFAULT NULL,\\n  `order_account_id_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `order_order_id_aggregate_stddev_samp_100004` double(26,4) DEFAULT NULL,\\n  `loan_date_directField_timeColumn_100031` date DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100006` decimal(14,4) DEFAULT NULL,\\n  `order_amount_aggregate_sum_100019` decimal(28,1) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100007` decimal(10,5) DEFAULT NULL,\\n  `order_amount_aggregate_min_100011` decimal(6,1) DEFAULT NULL,\\n  `loan_amount_directField_numericalColumn_100026` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de patrón de diario de mutagénesis bkp con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('bkp_mutagenesis_journal_pattern', 'CREATE TABLE `bkp_mutagenesis_journal_pattern` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de predictor diario de mutagénesis bkp con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('bkp_mutagenesis_journal_predictor', 'CREATE TABLE `bkp_mutagenesis_journal_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tabla del diario de mutagénesis bkp con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('bkp_mutagenesis_journal_table', 'CREATE TABLE `bkp_mutagenesis_journal_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de vínculo con las columnas de, enlace de, molécula es, tipo de enlace",
      "output": "('bond', 'CREATE TABLE `bond` (\\n  `bond_id` varchar(255) NOT NULL  `molecule_id` varchar(255) DEFAULT NULL,\\n  `bond_type` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`bond_id`),\\n  KEY `bond_id` (`bond_id`),\\n  KEY `molecule_id` (`molecule_id`),\\n  CONSTRAINT `bond_ibfk_1` FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bool con las columnas de, nombre",
      "output": "('bool', \"CREATE TABLE `bool` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de entidad de negocios con las columnas de, ID de entidad de negocio, ID de fila, fecha de modificación",
      "output": "('businessentity', \"CREATE TABLE `businessentity` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key for all customers, vendors, and employees.'  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Source of the ID that connects vendors, customers, and employees with address and contact information.'\")"
    },
    {
      "input": "Una tabla de dirección de la entidad comercial con las columnas de, ID de entidad comercial, ID de dirección, ID de tipo de dirección, ID de fila, fecha de modificación",
      "output": "('businessentityaddress', \"CREATE TABLE `businessentityaddress` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.'  `addressid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Address.AddressID.',\\n  `addresstypeid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to AddressType.AddressTypeID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`,`addressid`,`addresstypeid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping customers, vendors, and employees to their addresses.'\")"
    },
    {
      "input": "Una tabla de empresaentidadcontacto con las columnas de, ID de entidad de negocio, ID de persona, ID de tipo de contacto, ID de fila, fecha de modificación",
      "output": "('businessentitycontact', \"CREATE TABLE `businessentitycontact` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to BusinessEntity.BusinessEntityID.'  `personid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Person.BusinessEntityID.',\\n  `contacttypeid` int(11) NOT NULL COMMENT 'Primary key.  Foreign key to ContactType.ContactTypeID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`,`personid`,`contacttypeid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping stores, vendors, and employees to people'\")"
    },
    {
      "input": "Una tabla de coches con las columnas de, id, id del tren, posición, forma, longitud, lados, techo, ruedas, forma de carga, número de carga",
      "output": "('cars', 'CREATE TABLE `cars` (\\n  `id` int(11) NOT NULL  `train_id` int(11) DEFAULT NULL,\\n  `position` int(11) DEFAULT NULL,\\n  `shape` varchar(255) DEFAULT NULL,\\n  `len` varchar(255) DEFAULT NULL,\\n  `sides` varchar(255) DEFAULT NULL,\\n  `roof` varchar(255) DEFAULT NULL,\\n  `wheels` int(11) DEFAULT NULL,\\n  `load_shape` varchar(255) DEFAULT NULL,\\n  `load_num` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `train_id` (`train_id`),\\n  CONSTRAINT `cars_ibfk_1` FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de categoría con las columnas de, categoría no, categoría desc, código de categoría",
      "output": "('category', 'CREATE TABLE `category` (\\n  `category_no` int(11) NOT NULL  `category_desc` varchar(31) NOT NULL,\\n  `category_code` char(2) NOT NULL,\\n  PRIMARY KEY (`category_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de conjuntos de caracteres con las columnas de, nombre del conjunto de caracteres, nombre de clasificación predeterminado, descripción, maxlen",
      "output": "('character_sets', \"CREATE TABLE `character_sets` (\\n  `character_set_name` varchar(32) NOT NULL DEFAULT ''  `default_collate_name` varchar(32) NOT NULL DEFAULT '',\\n  `description` varchar(60) NOT NULL DEFAULT '',\\n  `maxlen` bigint(3) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=5592405 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de cobrar con las columnas de, n.° de cargo, n.° de miembro, n.° de proveedor, n.° de categoría, dt de cargo, monto de cargo, n.° de estado de cuenta, código de cargo",
      "output": "('charge', 'CREATE TABLE `charge` (\\n  `charge_no` int(11) NOT NULL  `member_no` int(11) NOT NULL,\\n  `provider_no` int(11) NOT NULL,\\n  `category_no` int(11) NOT NULL,\\n  `charge_dt` datetime NOT NULL,\\n  `charge_amt` decimal(19,4) NOT NULL,\\n  `statement_no` int(11) NOT NULL,\\n  `charge_code` char(2) NOT NULL,\\n  PRIMARY KEY (`charge_no`),\\n  KEY `charge_category_no` (`category_no`),\\n  KEY `charge_statement_no` (`statement_no`),\\n  KEY `charge_statement_no_2` (`statement_no`),\\n  KEY `charge_statement_no_3` (`statement_no`),\\n  KEY `charge_member_no` (`member_no`),\\n  KEY `charge_statement_no_4` (`statement_no`),\\n  KEY `charge_member_no_2` (`member_no`),\\n  KEY `charge_statement_no_5` (`statement_no`),\\n  KEY `charge_member_no_3` (`member_no`),\\n  KEY `charge_provider_no` (`provider_no`),\\n  CONSTRAINT `charge_ibfk_1` FOREIGN KEY (`category_no`) REFERENCES `category` (`category_no`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `charge_ibfk_2` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `charge_ibfk_3` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `charge_ibfk_4` FOREIGN KEY (`provider_no`) REFERENCES `provider` (`provider_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cita con las columnas de, id de artículo citado, id de artículo citado",
      "output": "('cites', 'CREATE TABLE `cites` (\\n  `cited_paper_id` varchar(255) NOT NULL  `citing_paper_id` varchar(255) NOT NULL,\\n  PRIMARY KEY (`cited_paper_id`,`citing_paper_id`),\\n  KEY `cited_paper_id` (`cited_paper_id`),\\n  KEY `citing_paper_id` (`citing_paper_id`),\\n  CONSTRAINT `cites_ibfk_1` FOREIGN KEY (`cited_paper_id`) REFERENCES `webpage` (`webpage_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `cites_ibfk_2` FOREIGN KEY (`citing_paper_id`) REFERENCES `webpage` (`webpage_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de clase con las columnas de, cls",
      "output": "('class', 'CREATE TABLE `class` (\\n  `cls` varchar(8) NOT NULL  PRIMARY KEY (`cls`),\\n  KEY `cls` (`cls`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, país, establo",
      "output": "('client', 'CREATE TABLE `client` (\\n  `client_id` int(11) NOT NULL  `kraj` varchar(255) DEFAULT NULL,\\n  `obor` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`client_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de estadisticas de clientes con las columnas de, cliente, conexiones totales, conexiones simultáneas, tiempo de conexión, tiempo ocupado, tiempo de CPU, bytes recibidos, bytes enviados, bytes de binlog escritos, filas leídas, filas enviadas, filas eliminadas, filas insertadas, filas actualizadas, comandos de selección, comandos de actualización, otros comandos, confirmar transacciones, revertir transacciones, conexiones denegadas, conexiones perdidas, acceso denegado, consultas vacías",
      "output": "('client_statistics', \"CREATE TABLE `client_statistics` (\\n  `client` varchar(64) NOT NULL DEFAULT ''  `total_connections` bigint(21) NOT NULL DEFAULT 0,\\n  `concurrent_connections` bigint(21) NOT NULL DEFAULT 0,\\n  `connected_time` bigint(21) NOT NULL DEFAULT 0,\\n  `busy_time` double NOT NULL DEFAULT 0,\\n  `cpu_time` double NOT NULL DEFAULT 0,\\n  `bytes_received` bigint(21) NOT NULL DEFAULT 0,\\n  `bytes_sent` bigint(21) NOT NULL DEFAULT 0,\\n  `binlog_bytes_written` bigint(21) NOT NULL DEFAULT 0,\\n  `rows_read` bigint(21) NOT NULL DEFAULT 0,\\n  `rows_sent` bigint(21) NOT NULL DEFAULT 0,\\n  `rows_deleted` bigint(21) NOT NULL DEFAULT 0,\\n  `rows_inserted` bigint(21) NOT NULL DEFAULT 0,\\n  `rows_updated` bigint(21) NOT NULL DEFAULT 0,\\n  `select_commands` bigint(21) NOT NULL DEFAULT 0,\\n  `update_commands` bigint(21) NOT NULL DEFAULT 0,\\n  `other_commands` bigint(21) NOT NULL DEFAULT 0,\\n  `commit_transactions` bigint(21) NOT NULL DEFAULT 0,\\n  `rollback_transactions` bigint(21) NOT NULL DEFAULT 0,\\n  `denied_connections` bigint(21) NOT NULL DEFAULT 0,\\n  `lost_connections` bigint(21) NOT NULL DEFAULT 0,\\n  `access_denied` bigint(21) NOT NULL DEFAULT 0,\\n  `empty_queries` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=5804009 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de aplicabilidad del conjunto de caracteres de intercalación con las columnas de, nombre de colación, nombre de conjunto de caracteres",
      "output": "('collation_character_set_applicability', \"CREATE TABLE `collation_character_set_applicability` (\\n  `collation_name` varchar(32) NOT NULL DEFAULT ''  `character_set_name` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=11012736 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de aperitivos con las columnas de, nombre de colación, nombre de conjunto de caracteres, id, es predeterminado, está compilado, sortlen",
      "output": "('collations', \"CREATE TABLE `collations` (\\n  `collation_name` varchar(32) NOT NULL DEFAULT ''  `character_set_name` varchar(32) NOT NULL DEFAULT '',\\n  `id` bigint(11) NOT NULL DEFAULT 0,\\n  `is_default` varchar(3) NOT NULL DEFAULT '',\\n  `is_compiled` varchar(3) NOT NULL DEFAULT '',\\n  `sortlen` bigint(3) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=9296466 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de privilegios de columna con las columnas de, beneficiario, catálogo de tablas, esquema de tablas, nombre de tabla, nombre de columna, tipo de privilegio, es otorgable",
      "output": "('column_privileges', \"CREATE TABLE `column_privileges` (\\n  `grantee` varchar(190) NOT NULL DEFAULT ''  `table_catalog` varchar(512) NOT NULL DEFAULT '',\\n  `table_schema` varchar(64) NOT NULL DEFAULT '',\\n  `table_name` varchar(64) NOT NULL DEFAULT '',\\n  `column_name` varchar(64) NOT NULL DEFAULT '',\\n  `privilege_type` varchar(64) NOT NULL DEFAULT '',\\n  `is_grantable` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=742303 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de columnas con las columnas de, catálogo de tabla, esquema de tabla, nombre de tabla, nombre de columna, posición ordinal, valor predeterminado de columna, admite valores NULL, tipo de datos, longitud máxima de caracteres, longitud de octeto de caracteres, precisión numérica, escala numérica, precisión de fecha y hora, nombre de conjunto de caracteres, nombre de intercalación, columna tipo, clave de columna, extra, privilegios, comentario de columna",
      "output": "('columns', \"CREATE TABLE `columns` (\\n  `table_catalog` varchar(512) NOT NULL DEFAULT ''  `table_schema` varchar(64) NOT NULL DEFAULT '',\\n  `table_name` varchar(64) NOT NULL DEFAULT '',\\n  `column_name` varchar(64) NOT NULL DEFAULT '',\\n  `ordinal_position` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `column_default` longtext DEFAULT NULL,\\n  `is_nullable` varchar(3) NOT NULL DEFAULT '',\\n  `data_type` varchar(64) NOT NULL DEFAULT '',\\n  `character_maximum_length` bigint(21) unsigned DEFAULT NULL,\\n  `character_octet_length` bigint(21) unsigned DEFAULT NULL,\\n  `numeric_precision` bigint(21) unsigned DEFAULT NULL,\\n  `numeric_scale` bigint(21) unsigned DEFAULT NULL,\\n  `datetime_precision` bigint(21) unsigned DEFAULT NULL,\\n  `character_set_name` varchar(32) DEFAULT NULL,\\n  `collation_name` varchar(32) DEFAULT NULL,\\n  `column_type` longtext NOT NULL,\\n  `column_key` varchar(3) NOT NULL DEFAULT '',\\n  `extra` varchar(27) NOT NULL DEFAULT '',\\n  `privileges` varchar(80) NOT NULL DEFAULT '',\\n  `column_comment` varchar(1024) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 MAX_ROWS=358272 PAGE_CHECKSUM=0 ROW_FORMAT=PAGE TRANSACTIONAL=0\")"
    },
    {
      "input": "Una tabla de comentarios con las columnas de, ID, ID de publicación, puntuación, texto, fecha de creación, ID de usuario, nombre para mostrar del usuario",
      "output": "('comments', 'CREATE TABLE `comments` (\\n  `Id` int(11) NOT NULL  `PostId` int(11) DEFAULT NULL,\\n  `Score` int(11) DEFAULT NULL,\\n  `Text` longtext DEFAULT NULL,\\n  `CreationDate` datetime DEFAULT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  `UserDisplayName` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `comment_staged_UserId_fkey` (`UserId`),\\n  KEY `comment_PostId_fkey` (`PostId`),\\n  CONSTRAINT `comment_PostId_fkey` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comment_staged_UserId_fkey` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de comp otro con las columnas de, ID de componente, parte de mí, peso",
      "output": "('comp_other', 'CREATE TABLE `comp_other` (\\n  `component_id` varchar(255) DEFAULT NULL  `part_ me` varchar(255) DEFAULT NULL,\\n  `weight` float DEFAULT NULL,\\n  KEY `comp_other_component_id` (`component_id`),\\n  CONSTRAINT `comp_other_ibfk_1` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de camiseta de cortesía con las columnas de, identificación del componente, identificación del tipo de componente, patrón de pernos largo, patrón de pernos ancho, longitud de extensión, longitud total, grosor, longitud de caída, código de clase mj, código de clase de enchufe mj, ranura, característica única, orientación, peso",
      "output": "('comp_tee', 'CREATE TABLE `comp_tee` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `bolt_pattern_long` float DEFAULT NULL,\\n  `bolt_pattern_wide` float DEFAULT NULL,\\n  `extension_length` float DEFAULT NULL,\\n  `overall_length` float DEFAULT NULL,\\n  `thickness` int(11) DEFAULT NULL,\\n  `drop_length` float DEFAULT NULL,\\n  `mj_class_code` varchar(255) DEFAULT NULL,\\n  `mj_plug_class_code` varchar(255) DEFAULT NULL,\\n  `groove` varchar(255) DEFAULT NULL,\\n  `unique_feature` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` float DEFAULT NULL,\\n  KEY `comp_tee_component_id` (`component_id`),\\n  KEY `comp_tee_component_type_id` (`component_type_id`),\\n  CONSTRAINT `comp_tee_ibfk_1` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de componentes con las columnas de, ID de componente, yo, ID de tipo de componente",
      "output": "('components', 'CREATE TABLE `components` (\\n  `component_id` varchar(255) NOT NULL  `me` varchar(255) DEFAULT NULL,\\n  `component_type_id` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`component_id`),\\n  UNIQUE KEY `components_component_id_key` (`component_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de conectado con las columnas de, átomo ide, átomo es, enlace id",
      "output": "('connected', 'CREATE TABLE `connected` (\\n  `atom_id` varchar(255) NOT NULL  `atom_id2` varchar(255) NOT NULL,\\n  `bond_id` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`atom_id`,`atom_id2`),\\n  KEY `atom_id` (`atom_id`),\\n  KEY `atom_id2` (`atom_id2`),\\n  KEY `bond_id` (`bond_id`),\\n  CONSTRAINT `connected_ibfk_1` FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `connected_ibfk_2` FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `connected_ibfk_3` FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Tipo de Contacto con las columnas de, ID de tipo de contacto, nombre, fecha de modificación",
      "output": "('contacttype', \"CREATE TABLE `contacttype` (\\n  `contacttypeid` int(11) NOT NULL COMMENT 'Primary key for ContactType records.'  `name` varchar(100) NOT NULL COMMENT 'Contact type description.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`contacttypeid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the types of business entity contacts.'\")"
    },
    {
      "input": "Una tabla de contenido con las columnas de, ID de página web, ID de palabra citada",
      "output": "('content', 'CREATE TABLE `content` (\\n  `webpage_id` varchar(255) NOT NULL  `word_cited_id` varchar(255) NOT NULL,\\n  PRIMARY KEY (`webpage_id`,`word_cited_id`),\\n  KEY `webpage_id` (`webpage_id`),\\n  CONSTRAINT `content_ibfk_1` FOREIGN KEY (`webpage_id`) REFERENCES `webpage` (`webpage_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de corporación con las columnas de, corp no, nombre de corp, calle, ciudad, provincia estatal, país, código de correo, teléfono no, expr dt, región no, código de corp",
      "output": "('corporation', 'CREATE TABLE `corporation` (\\n  `corp_no` int(11) NOT NULL  `corp_name` varchar(31) NOT NULL,\\n  `street` varchar(15) NOT NULL,\\n  `city` varchar(15) NOT NULL,\\n  `state_prov` char(2) NOT NULL,\\n  `country` char(2) NOT NULL,\\n  `mail_code` char(10) NOT NULL,\\n  `phone_no` char(13) NOT NULL,\\n  `expr_dt` datetime NOT NULL,\\n  `region_no` int(11) NOT NULL,\\n  `corp_code` char(2) NOT NULL,\\n  PRIMARY KEY (`corp_no`),\\n  KEY `corporation_region_no` (`region_no`),\\n  CONSTRAINT `corporation_ibfk_1` FOREIGN KEY (`region_no`) REFERENCES `region` (`region_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de paísregión con las columnas de, código de región del país, nombre, fecha de modificación",
      "output": "('countryregion', \"CREATE TABLE `countryregion` (\\n  `countryregioncode` varchar(3) NOT NULL COMMENT 'ISO standard code for countries and regions.'  `name` varchar(100) NOT NULL COMMENT 'Country or region name.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`countryregioncode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the ISO standard codes for countries and regions.'\")"
    },
    {
      "input": "Una tabla de paísregiónmoneda con las columnas de, código de región del país, código de moneda, fecha de modificación",
      "output": "('countryregioncurrency', \"CREATE TABLE `countryregioncurrency` (\\n  `countryregioncode` varchar(3) NOT NULL COMMENT 'ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.'  `currencycode` char(3) NOT NULL COMMENT 'ISO standard currency code. Foreign key to Currency.CurrencyCode.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`countryregioncode`,`currencycode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping ISO currency codes to a country or region.'\")"
    },
    {
      "input": "Una tabla de curso con las columnas de, id del curso, calificación, diferencia",
      "output": "('course', 'CREATE TABLE `course` (\\n  `course_id` int(11) NOT NULL  `rating` varchar(45) DEFAULT NULL,\\n  `diff` varchar(45) DEFAULT NULL,\\n  PRIMARY KEY (`course_id`),\\n  KEY `course_rating` (`rating`),\\n  KEY `course_diff` (`diff`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cursos con las columnas de, id, nombre, id del profesor",
      "output": "('courses', 'CREATE TABLE `courses` (\\n  `id` int(10) unsigned NOT NULL  `name` varchar(32) DEFAULT NULL,\\n  `teacher_id` int(10) unsigned NOT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `teacher_id` (`teacher_id`),\\n  CONSTRAINT `courses_ibfk_1` FOREIGN KEY (`teacher_id`) REFERENCES `teachers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de artesanos con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('craftsmen', 'CREATE TABLE `craftsmen` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) DEFAULT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `craftsmen_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tarjeta de crédito con las columnas de, id de tarjeta de crédito, tipo de tarjeta, número de tarjeta, mes de vencimiento, año de vencimiento, fecha de modificación",
      "output": "('creditcard', \"CREATE TABLE `creditcard` (\\n  `creditcardid` int(11) NOT NULL COMMENT 'Primary key for CreditCard records.'  `cardtype` varchar(50) NOT NULL COMMENT 'Credit card name.',\\n  `cardnumber` varchar(25) NOT NULL COMMENT 'Credit card number.',\\n  `expmonth` tinyint(3) unsigned NOT NULL COMMENT 'Credit card expiration month.',\\n  `expyear` smallint(6) NOT NULL COMMENT 'Credit card expiration year.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`creditcardid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customer credit card information.'\")"
    },
    {
      "input": "Una tabla de cultura con las columnas de, ID de cultura, nombre, fecha de modificación",
      "output": "('culture', \"CREATE TABLE `culture` (\\n  `cultureid` char(6) NOT NULL COMMENT 'Primary key for Culture records.'  `name` varchar(100) NOT NULL COMMENT 'Culture description.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`cultureid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the languages in which some AdventureWorks data is stored.'\")"
    },
    {
      "input": "Una tabla de divisa con las columnas de, código de moneda, nombre, fecha de modificación",
      "output": "('currency', \"CREATE TABLE `currency` (\\n  `currencycode` char(3) NOT NULL COMMENT 'The ISO code for the Currency.'  `name` varchar(100) NOT NULL COMMENT 'Currency name.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`currencycode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing standard ISO currencies.'\")"
    },
    {
      "input": "Una tabla de taza de cambio con las columnas de, id tipo de cambio, fecha de cambio de moneda, desde código de moneda, a código de moneda, tipo de cambio medio, tipo de cambio al final del día, fecha de modificación",
      "output": "('currencyrate', \"CREATE TABLE `currencyrate` (\\n  `currencyrateid` int(11) NOT NULL COMMENT 'Primary key for CurrencyRate records.'  `currencyratedate` datetime NOT NULL COMMENT 'Date and time the exchange rate was obtained.',\\n  `fromcurrencycode` char(3) NOT NULL COMMENT 'Exchange rate was converted from this currency code.',\\n  `tocurrencycode` char(3) NOT NULL COMMENT 'Exchange rate was converted to this currency code.',\\n  `averagerate` decimal(19,4) NOT NULL COMMENT 'Average exchange rate for the day.',\\n  `endofdayrate` decimal(19,4) NOT NULL COMMENT 'Final exchange rate for the day.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`currencyrateid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Currency exchange rates.'\")"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, ID de persona, ID de tienda, ID de territorio, número de cuenta, ID de fila, fecha de modificación",
      "output": "('customer', \"CREATE TABLE `customer` (\\n  `customerid` int(11) NOT NULL COMMENT 'Primary key.'  `personid` int(11) DEFAULT NULL COMMENT 'Foreign key to Person.BusinessEntityID',\\n  `storeid` int(11) DEFAULT NULL COMMENT 'Foreign key to Store.BusinessEntityID',\\n  `territoryid` int(11) DEFAULT NULL COMMENT 'ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `accountnumber` varchar(10) NOT NULL COMMENT 'Unique number identifying the customer assigned by the accounting system.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`customerid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Current customer information. Also see the Person and Store tables.'\")"
    },
    {
      "input": "Una tabla de clientes con las columnas de, idcliente, segmento, moneda",
      "output": "('customers', 'CREATE TABLE `customers` (\\n  `customerid` int(11) NOT NULL  `segment` varchar(255) DEFAULT NULL,\\n  `currency` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`customerid`),\\n  UNIQUE KEY `customer_staged_customerid_key` (`customerid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de función de datos con las columnas de, hizo, índice, nombre, tipo de datos, valores nominales, es objetivo, es identificador de fila, es ignorar, Número de valores distintos, Número de valores únicos, Número de valores perdidos, Número de valores enteros, Número de valores reales, Número de Valores nominales, número de valores, valor máximo, valor mínimo, valor medio, desviación estándar, distribución de clases",
      "output": "('data_feature', \"CREATE TABLE `data_feature` (\\n  `did` int(10) unsigned NOT NULL  `index` int(10) NOT NULL DEFAULT 0,\\n  `name` varchar(64) NOT NULL,\\n  `data_type` varchar(64) DEFAULT NULL,\\n  `nominal_values` text DEFAULT NULL,\\n  `is_target` enum('true','false') NOT NULL DEFAULT 'false',\\n  `is_row_identifier` enum('true','false') NOT NULL DEFAULT 'false',\\n  `is_ignore` enum('true','false') NOT NULL DEFAULT 'false',\\n  `NumberOfDistinctValues` int(11) DEFAULT NULL,\\n  `NumberOfUniqueValues` int(11) DEFAULT NULL,\\n  `NumberOfMissingValues` int(11) NOT NULL,\\n  `NumberOfIntegerValues` int(11) DEFAULT NULL,\\n  `NumberOfRealValues` int(11) DEFAULT NULL,\\n  `NumberOfNominalValues` varchar(512) NOT NULL,\\n  `NumberOfValues` int(11) NOT NULL,\\n  `MaximumValue` int(11) NOT NULL,\\n  `MinimumValue` int(11) NOT NULL,\\n  `MeanValue` int(11) NOT NULL,\\n  `StandardDeviation` int(11) NOT NULL,\\n  `ClassDistribution` text DEFAULT NULL,\\n  PRIMARY KEY (`did`,`index`),\\n  CONSTRAINT `data_feature_ibfk_1` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de calidad de datos con las columnas de, datos, calidad, ID de implementación, etiqueta, valor, descripción",
      "output": "('data_quality', \"CREATE TABLE `data_quality` (\\n  `data` int(10) unsigned NOT NULL DEFAULT 0  `quality` varchar(128) NOT NULL DEFAULT '',\\n  `implementation_id` int(16) NOT NULL,\\n  `label` varchar(128) NOT NULL,\\n  `value` varchar(128) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  PRIMARY KEY (`data`,`quality`,`label`),\\n  KEY `data_quality_implementation_id` (`implementation_id`),\\n  KEY `data_quality_quality` (`quality`),\\n  CONSTRAINT `data_quality_ibfk_1` FOREIGN KEY (`quality`) REFERENCES `quality` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `data_quality_ibfk_2` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de registro de base de datos con las columnas de, base de datoslogid, postiempo, usuario de la base de datos, evento, esquema, objeto, tsql, xmlevent",
      "output": "('databaselog', \"CREATE TABLE `databaselog` (\\n  `databaselogid` int(11) NOT NULL COMMENT 'Primary key for DatabaseLog records.'  `posttime` datetime NOT NULL COMMENT 'The date and time the DDL change occurred.',\\n  `databaseuser` varchar(160) NOT NULL COMMENT 'The user who implemented the DDL change.',\\n  `event` varchar(160) NOT NULL COMMENT 'The type of DDL statement that was executed.',\\n  `schema` varchar(160) DEFAULT NULL COMMENT 'The schema to which the changed object belongs.',\\n  `object` varchar(160) DEFAULT NULL COMMENT 'The object that was changed by the DDL statment.',\\n  `tsql` longtext NOT NULL COMMENT 'The exact Transact-SQL statement that was executed.',\\n  `xmlevent` text NOT NULL COMMENT 'The raw XML data generated by database trigger.',\\n  PRIMARY KEY (`databaselogid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.'\")"
    },
    {
      "input": "Una tabla de conjunto de datos con las columnas de, hizo, cargador, fuente, nombre, versión, etiqueta de versión, descripción, formato, creador, colaborador, fecha de recopilación, fecha de carga, idioma, licencia, cita, colección, URL, es original, ID de archivo, atributo de destino predeterminado, ID de fila atributo, ignorar atributo, url de papel, visibilidad, id de datos original, url de datos original, procesado, error, mensaje de error, estado, actualizar comentario, última actualización",
      "output": "('dataset', \"CREATE TABLE `dataset` (\\n  `did` int(10) unsigned NOT NULL AUTO_INCREMENT  `uploader` int(10) DEFAULT NULL,\\n  `source` int(10) unsigned DEFAULT NULL,\\n  `name` varchar(128) NOT NULL,\\n  `version` varchar(64) NOT NULL,\\n  `version_label` varchar(128) DEFAULT NULL,\\n  `description` text NOT NULL,\\n  `format` varchar(64) NOT NULL DEFAULT 'arff',\\n  `creator` text DEFAULT NULL,\\n  `contributor` text DEFAULT NULL,\\n  `collection_date` varchar(128) DEFAULT NULL,\\n  `upload_date` datetime NOT NULL,\\n  `language` varchar(128) DEFAULT NULL,\\n  `licence` varchar(64) NOT NULL DEFAULT 'Public',\\n  `citation` text DEFAULT NULL,\\n  `collection` varchar(64) DEFAULT NULL,\\n  `url` mediumtext NOT NULL,\\n  `isOriginal` enum('true','false') DEFAULT NULL,\\n  `file_id` int(10) DEFAULT NULL,\\n  `default_target_attribute` varchar(128) DEFAULT NULL,\\n  `row_id_attribute` varchar(128) DEFAULT NULL,\\n  `ignore_attribute` varchar(128) DEFAULT NULL,\\n  `paper_url` mediumtext DEFAULT NULL,\\n  `visibility` varchar(128) NOT NULL DEFAULT 'public',\\n  `original_data_id` int(10) DEFAULT NULL,\\n  `original_data_url` mediumtext DEFAULT NULL,\\n  `processed` datetime DEFAULT NULL,\\n  `error` enum('true','false') NOT NULL DEFAULT 'false',\\n  `error_message` text DEFAULT NULL,\\n  `status` enum('in_preparation','active','deactivated') NOT NULL DEFAULT 'in_preparation',\\n  `update_comment` text DEFAULT NULL,\\n  `last_update` datetime DEFAULT NULL,\\n  PRIMARY KEY (`did`),\\n  KEY `dataset_name` (`name`),\\n  KEY `dataset_name_did_version_version_label` (`name`,`did`,`version`,`version_label`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de Departamento con las columnas de, ID de departamento, nombre, nombre de grupo, fecha de modificación",
      "output": "('department', \"CREATE TABLE `department` (\\n  `departmentid` smallint(6) NOT NULL COMMENT 'Primary key for Department records.'  `name` varchar(100) NOT NULL COMMENT 'Name of the department.',\\n  `groupname` varchar(100) NOT NULL COMMENT 'Name of the group to which the department belongs.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`departmentid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table containing the departments within the Adventure Works Cycles company.'\")"
    },
    {
      "input": "Una tabla de usuarios distintos del mapa real de la tabla de búsqueda con las columnas de, ID de usuario, nombre de usuario en pantalla, grado de entrada, grado de salida, ID de usuario incorrecta",
      "output": "('distinct_users_from_search_table_real_map', 'CREATE TABLE `distinct_users_from_search_table_real_map` (\\n  `user_id` int(11) NOT NULL  `user_screen_name` varchar(255) DEFAULT NULL,\\n  `indegree` int(11) DEFAULT NULL,\\n  `outdegree` int(11) DEFAULT NULL,\\n  `bad_user_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de obtenido con las columnas de, id cliente, mes año datum transakce, sluzba, kc dobito",
      "output": "('dobito', 'CREATE TABLE `dobito` (\\n  `client_id` int(11) DEFAULT NULL  `month_year_datum_transakce` date NOT NULL,\\n  `sluzba` varchar(255) NOT NULL,\\n  `kc_dobito` decimal(10,2) NOT NULL,\\n  KEY `dobito_client_id` (`client_id`),\\n  CONSTRAINT `dobito_ibfk_1` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de documento con las columnas de, nodo de documento, nivel de documento, título, propietario, bandera de carpeta, nombre de archivo, extensión de archivo, revisión, número de cambio, estado, resumen de documento, documento, guía de fila, fecha de modificación",
      "output": "('document', \"CREATE TABLE `document` (\\n  `documentnode` varchar(255) NOT NULL COMMENT 'Primary key for Document records.'  `documentlevel` smallint(6) DEFAULT NULL COMMENT 'Depth in the document hierarchy.',\\n  `title` varchar(50) NOT NULL COMMENT 'Title of the document.',\\n  `owner` int(11) NOT NULL COMMENT 'Employee who controls the document.  Foreign key to Employee.BusinessEntityID',\\n  `folderflag` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = This is a folder, 1 = This is a document.',\\n  `filename` varchar(400) NOT NULL COMMENT 'File name of the document',\\n  `fileextension` varchar(8) NOT NULL COMMENT 'File extension indicating the document type. For example, .doc or .txt.',\\n  `revision` char(5) NOT NULL COMMENT 'Revision number of the document. ',\\n  `changenumber` int(11) NOT NULL DEFAULT 0 COMMENT 'Engineering change approval number.',\\n  `status` tinyint(3) unsigned NOT NULL COMMENT '1 = Pending approval, 2 = Approved, 3 = Obsolete',\\n  `documentsummary` longtext DEFAULT NULL COMMENT 'Document abstract.',\\n  `document` longblob DEFAULT NULL COMMENT 'Complete document.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Required for FileStream.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`documentnode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product maintenance documents.'\")"
    },
    {
      "input": "Una tabla de descargas con las columnas de, hizo, tipo de conocimiento, id de conocimiento, id de usuario, conteo, tiempo",
      "output": "('downloads', 'CREATE TABLE `downloads` (\\n  `did` int(16) unsigned NOT NULL AUTO_INCREMENT  `knowledge_type` varchar(1) NOT NULL,\\n  `knowledge_id` int(10) NOT NULL,\\n  `user_id` mediumint(8) NOT NULL,\\n  `count` smallint(6) NOT NULL DEFAULT 1,\\n  `time` timestamp NOT NULL DEFAULT current_timestamp(),\\n  PRIMARY KEY (`knowledge_type`,`knowledge_id`,`user_id`),\\n  KEY `downloads_did` (`did`),\\n  CONSTRAINT `downloads_ibfk_1` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de votos negativos con las columnas de, hizo, tipo de conocimiento, id de conocimiento, id de usuario, motivo, hora, original",
      "output": "('downvotes', 'CREATE TABLE `downvotes` (\\n  `did` int(16) unsigned NOT NULL AUTO_INCREMENT  `knowledge_type` varchar(1) NOT NULL,\\n  `knowledge_id` int(10) NOT NULL,\\n  `user_id` mediumint(8) NOT NULL,\\n  `reason` int(11) NOT NULL,\\n  `time` timestamp NOT NULL DEFAULT current_timestamp(),\\n  `original` tinyint(4) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`knowledge_type`,`knowledge_id`,`user_id`),\\n  KEY `downvotes_did` (`did`),\\n  CONSTRAINT `downvotes_ibfk_1` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, c clave de acceso, c nombre, c dirección, c clave de nación, c teléfono, c acctbal, c mktsegment, c comentario",
      "output": "('dss_customer', 'CREATE TABLE `dss_customer` (\\n  `c_custkey` int(11) NOT NULL  `c_name` varchar(25) NOT NULL,\\n  `c_address` varchar(40) NOT NULL,\\n  `c_nationkey` int(11) NOT NULL,\\n  `c_phone` char(15) NOT NULL,\\n  `c_acctbal` double NOT NULL,\\n  `c_mktsegment` char(10) NOT NULL,\\n  `c_comment` varchar(117) DEFAULT NULL,\\n  PRIMARY KEY (`c_custkey`),\\n  KEY `c_nationkey` (`c_nationkey`),\\n  CONSTRAINT `dss_customer_ibfk_1` FOREIGN KEY (`c_nationkey`) REFERENCES `dss_nation` (`n_nationkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de elemento de línea de dss con las columnas de, l clave de pedido, l clave parcial, l clave de suministro, l número de línea, l cantidad, l precio extendido, l descuento, l impuesto, l bandera de devolución, l estado de línea, l fecha de envío, l fecha de confirmación, l fecha de recepción, l instrucción de envío, l modo de envío, l comentario",
      "output": "('dss_lineitem', 'CREATE TABLE `dss_lineitem` (\\n  `l_orderkey` decimal(18,0) NOT NULL  `l_partkey` int(11) NOT NULL,\\n  `l_suppkey` int(11) NOT NULL,\\n  `l_linenumber` int(11) NOT NULL,\\n  `l_quantity` double NOT NULL,\\n  `l_extendedprice` double NOT NULL,\\n  `l_discount` double NOT NULL,\\n  `l_tax` double NOT NULL,\\n  `l_returnflag` char(1) NOT NULL,\\n  `l_linestatus` char(1) NOT NULL,\\n  `l_shipdate` date DEFAULT NULL,\\n  `l_commitdate` date DEFAULT NULL,\\n  `l_receiptdate` date DEFAULT NULL,\\n  `l_shipinstruct` char(25) NOT NULL,\\n  `l_shipmode` char(10) NOT NULL,\\n  `l_comment` varchar(44) DEFAULT NULL,\\n  PRIMARY KEY (`l_orderkey`,`l_linenumber`),\\n  KEY `lineitem_idx1` (`l_orderkey`,`l_returnflag`,`l_extendedprice`,`l_discount`),\\n  KEY `lineitem_idx2` (`l_partkey`,`l_quantity`,`l_extendedprice`,`l_suppkey`,`l_orderkey`,`l_discount`),\\n  KEY `l_suppkey` (`l_suppkey`),\\n  KEY `l_partkey` (`l_partkey`,`l_suppkey`),\\n  CONSTRAINT `dss_lineitem_ibfk_1` FOREIGN KEY (`l_orderkey`) REFERENCES `dss_order` (`o_orderkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de nación dss con las columnas de, n clave de nación, n nombre, n clave de región, n comentario",
      "output": "('dss_nation', 'CREATE TABLE `dss_nation` (\\n  `n_nationkey` int(11) NOT NULL  `n_name` char(25) NOT NULL,\\n  `n_regionkey` int(11) NOT NULL,\\n  `n_comment` varchar(152) DEFAULT NULL,\\n  PRIMARY KEY (`n_nationkey`),\\n  KEY `n_regionkey` (`n_regionkey`),\\n  CONSTRAINT `dss_nation_ibfk_1` FOREIGN KEY (`n_regionkey`) REFERENCES `dss_region` (`r_regionkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de orden de dss con las columnas de, la clave del pedido, la clave del cliente, el estado del pedido, el precio total, la fecha del pedido, la prioridad del pedido, el empleado, la prioridad del envío, el comentario",
      "output": "('dss_order', 'CREATE TABLE `dss_order` (\\n  `o_orderkey` decimal(18,0) NOT NULL  `o_custkey` int(11) NOT NULL,\\n  `o_orderstatus` char(1) NOT NULL,\\n  `o_totalprice` double NOT NULL,\\n  `o_orderdate` date DEFAULT NULL,\\n  `o_orderpriority` char(15) NOT NULL,\\n  `o_clerk` char(15) NOT NULL,\\n  `o_shippriority` int(11) NOT NULL,\\n  `o_comment` varchar(79) DEFAULT NULL,\\n  PRIMARY KEY (`o_orderkey`),\\n  KEY `orders_idx1` (`o_orderkey`),\\n  KEY `orders_idx2` (`o_clerk`,`o_orderkey`,`o_orderdate`),\\n  KEY `o_custkey` (`o_custkey`),\\n  CONSTRAINT `dss_order_ibfk_1` FOREIGN KEY (`o_custkey`) REFERENCES `dss_customer` (`c_custkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de parte dss con las columnas de, p partkey, p nombre, p mfgr, p marca, p tipo, p tamaño, p contenedor, p precio minorista, p comentario",
      "output": "('dss_part', 'CREATE TABLE `dss_part` (\\n  `p_partkey` int(11) NOT NULL  `p_name` varchar(55) NOT NULL,\\n  `p_mfgr` char(25) NOT NULL,\\n  `p_brand` char(10) NOT NULL,\\n  `p_type` varchar(25) NOT NULL,\\n  `p_size` int(11) NOT NULL,\\n  `p_container` char(10) NOT NULL,\\n  `p_retailprice` double NOT NULL,\\n  `p_comment` varchar(23) NOT NULL,\\n  PRIMARY KEY (`p_partkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de repuestos dss con las columnas de, ps partkey, ps suppkey, ps disponibilidad, ps supplycost, ps comentario",
      "output": "('dss_partsupp', 'CREATE TABLE `dss_partsupp` (\\n  `ps_partkey` int(11) NOT NULL  `ps_suppkey` int(11) NOT NULL,\\n  `ps_availqty` int(11) NOT NULL,\\n  `ps_supplycost` double NOT NULL,\\n  `ps_comment` varchar(199) DEFAULT NULL,\\n  PRIMARY KEY (`ps_partkey`,`ps_suppkey`),\\n  KEY `partsupp_idx1` (`ps_partkey`),\\n  KEY `partsupp_idx2` (`ps_suppkey`,`ps_partkey`),\\n  KEY `ps_partkey` (`ps_partkey`,`ps_suppkey`),\\n  CONSTRAINT `dss_partsupp_ibfk_1` FOREIGN KEY (`ps_suppkey`) REFERENCES `dss_supplier` (`s_suppkey`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `dss_partsupp_ibfk_2` FOREIGN KEY (`ps_partkey`) REFERENCES `dss_part` (`p_partkey`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `dss_partsupp_ibfk_3` FOREIGN KEY (`ps_partkey`, `ps_suppkey`) REFERENCES `dss_lineitem` (`l_partkey`, `l_suppkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de región dss con las columnas de, r clave de región, r nombre, r comentario",
      "output": "('dss_region', 'CREATE TABLE `dss_region` (\\n  `r_regionkey` int(11) NOT NULL  `r_name` char(25) NOT NULL,\\n  `r_comment` varchar(152) DEFAULT NULL,\\n  PRIMARY KEY (`r_regionkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de proveedor de dss con las columnas de, s suppkey, s name, s address, s nationkey, s phone, s acctbal, s comment",
      "output": "('dss_supplier', 'CREATE TABLE `dss_supplier` (\\n  `s_suppkey` int(11) NOT NULL  `s_name` char(25) NOT NULL,\\n  `s_address` varchar(40) NOT NULL,\\n  `s_nationkey` int(11) NOT NULL,\\n  `s_phone` char(15) NOT NULL,\\n  `s_acctbal` double NOT NULL,\\n  `s_comment` varchar(101) NOT NULL,\\n  PRIMARY KEY (`s_suppkey`),\\n  UNIQUE KEY `supplier_idx1` (`s_suppkey`),\\n  KEY `s_nationkey` (`s_nationkey`),\\n  CONSTRAINT `dss_supplier_ibfk_1` FOREIGN KEY (`s_nationkey`) REFERENCES `dss_nation` (`n_nationkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de dirección de correo electrónico con las columnas de, ID de entidad comercial, ID de dirección de correo electrónico, dirección de correo electrónico, ID de fila, fecha de modificación",
      "output": "('emailaddress', \"CREATE TABLE `emailaddress` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID'  `emailaddressid` int(11) NOT NULL COMMENT 'Primary key. ID of this email address.',\\n  `emailaddress` varchar(50) DEFAULT NULL COMMENT 'E-mail address for the person.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`emailaddressid`,`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Where to send a person email.'\")"
    },
    {
      "input": "Una tabla de empleado con las columnas de, ID de entidad comercial, número de ID nacional, ID de inicio de sesión, nodo de organización, nivel de organización, cargo, fecha de nacimiento, estado civil, género, fecha de contratación, bandera asalariada, horas de vacaciones, horas de baja por enfermedad, bandera actual, ID de fila, fecha modificada",
      "output": "('employee', \"CREATE TABLE `employee` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.'  `nationalidnumber` varchar(15) NOT NULL COMMENT 'Unique national identification number such as a social security number.',\\n  `loginid` varchar(256) NOT NULL COMMENT 'Network login.',\\n  `organizationnode` varchar(255) DEFAULT NULL COMMENT 'Where the employee is located in corporate hierarchy.',\\n  `organizationlevel` smallint(6) DEFAULT NULL COMMENT 'The depth of the employee in the corporate hierarchy.',\\n  `jobtitle` varchar(50) NOT NULL COMMENT 'Work title such as Buyer or Sales Representative.',\\n  `birthdate` date NOT NULL COMMENT 'Date of birth.',\\n  `maritalstatus` char(1) NOT NULL COMMENT 'M = Married, S = Single',\\n  `gender` char(1) NOT NULL COMMENT 'M = Male, F = Female',\\n  `hiredate` date NOT NULL COMMENT 'Employee hired on this date.',\\n  `salariedflag` tinyint(1) NOT NULL DEFAULT 1 COMMENT 'Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.',\\n  `vacationhours` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Number of available vacation hours.',\\n  `sickleavehours` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Number of available sick leave hours.',\\n  `currentflag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Inactive, 1 = Active',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee information such as salary, department, and title.'\")"
    },
    {
      "input": "Una tabla de empleadodepartamentohistoria con las columnas de, businessentityid, departmentid, shiftid, fecha de inicio, fecha de finalización, fecha de modificación",
      "output": "('employeedepartmenthistory', \"CREATE TABLE `employeedepartmenthistory` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Employee identification number. Foreign key to Employee.BusinessEntityID.'  `departmentid` smallint(6) NOT NULL COMMENT 'Department in which the employee worked including currently. Foreign key to Department.DepartmentID.',\\n  `shiftid` tinyint(3) unsigned NOT NULL COMMENT 'Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.',\\n  `startdate` date NOT NULL COMMENT 'Date the employee started work in the department.',\\n  `enddate` date DEFAULT NULL COMMENT 'Date the employee left the department. NULL = Current department.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`,`startdate`,`departmentid`,`shiftid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee department transfers.'\")"
    },
    {
      "input": "Una tabla de historial de pago del empleado con las columnas de, identificación de entidad comercial, fecha de cambio de tasa, tasa, frecuencia de pago, fecha de modificación",
      "output": "('employeepayhistory', \"CREATE TABLE `employeepayhistory` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Employee identification number. Foreign key to Employee.BusinessEntityID.'  `ratechangedate` datetime NOT NULL COMMENT 'Date the change in pay is effective',\\n  `rate` decimal(19,4) NOT NULL COMMENT 'Salary hourly rate.',\\n  `payfrequency` tinyint(3) unsigned NOT NULL COMMENT '1 = Salary received monthly, 2 = Salary received biweekly',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`,`ratechangedate`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Employee pay history.'\")"
    },
    {
      "input": "Una tabla de roles habilitados con las columnas de, nombre de rol",
      "output": "('enabled_roles', 'CREATE TABLE `enabled_roles` (\\n  `role_name` varchar(128) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=5549053 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de motores con las columnas de, motor, soporte, comentario, transacciones, xa, savepoints",
      "output": "('engines', \"CREATE TABLE `engines` (\\n  `engine` varchar(64) NOT NULL DEFAULT ''  `support` varchar(8) NOT NULL DEFAULT '',\\n  `comment` varchar(160) NOT NULL DEFAULT '',\\n  `transactions` varchar(3) DEFAULT NULL,\\n  `xa` varchar(3) DEFAULT NULL,\\n  `savepoints` varchar(3) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8 MAX_ROWS=2937734 ROW_FORMAT=FIXED\")"
    },
    {
      "input": "Una tabla de registro de errores con las columnas de, errorlogid, errortime, nombre de usuario, número de error, erroreverity, errorstate, errorprocedure, errorline, errormessage",
      "output": "('errorlog', \"CREATE TABLE `errorlog` (\\n  `errorlogid` int(11) NOT NULL COMMENT 'Primary key for ErrorLog records.'  `errortime` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'The date and time at which the error occurred.',\\n  `username` varchar(160) NOT NULL COMMENT 'The user who executed the batch in which the error occurred.',\\n  `errornumber` int(11) NOT NULL COMMENT 'The error number of the error that occurred.',\\n  `errorseverity` int(11) DEFAULT NULL COMMENT 'The severity of the error that occurred.',\\n  `errorstate` int(11) DEFAULT NULL COMMENT 'The state number of the error that occurred.',\\n  `errorprocedure` varchar(126) DEFAULT NULL COMMENT 'The name of the stored procedure or trigger where the error occurred.',\\n  `errorline` int(11) DEFAULT NULL COMMENT 'The line number at which the error occurred.',\\n  `errormessage` varchar(4000) NOT NULL COMMENT 'The message text of the error that occurred.',\\n  PRIMARY KEY (`errorlogid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.'\")"
    },
    {
      "input": "Una tabla de estimar F K v con las columnas de, esquema, tabla de pk, columna de pk, nombre de tipo de datos de pk, pk es único, pk es restricción única, tamaño de columna de pk, dígitos decimales de pk, pk tiene valor predeterminado, posición ordinal de pk, posición final de ordinal de pk, recuento de columnas de tabla de pk, pk es Incremento automático, pk es Columna generada, pk es Anulable, pk levenshtein Distancia, pk repeticiones, pk prefijo Recuento de esquemas, pk sufijo Recuento de esquemas, pk prefijo Recuento de tablas, pk sufijo Recuento de tablas, pk prefijo Ratio, pk sufijo Ratio, pk ha numerado Hermano, pk contiene Aux, pk contiene Código, pk contiene Id, pk contiene Key, pk contiene Name, pk contiene Nbr, pk contiene No, pk contiene Num, pk contiene Number, pk contiene Pk, pk contiene Sk, pk contiene Symb, pk contiene Tipo, pk contiene, pk es clave principal, fk tabla, fk columna, fk nombre de tipo de datos, fk es único, fk es restricción única, fk tamaño de columna, fk dígitos decimales, fk tiene valor predeterminado, fk ordinal Posición, fk ordinal Position End, fk table Column Count, fk es Autoincrement, fk es Columna generada, fk es anulable, fk levenshtein Dista nce, fk repeticiones, fk prefijo Recuento de esquemas, fk sufijo Recuento de esquemas, fk prefijo Recuento de tablas, fk sufijo Recuento de tablas, fk prefijo Relación, fk sufijo Relación, fk tiene hermano numerado, fk contiene Aux, fk contiene Código, fk contiene Id, fk contiene Clave, fk contiene Nombre, fk contiene Nbr, fk contiene No, fk contiene Num, fk contiene Número, fk contiene Pk, fk contiene Sk, fk contiene Symb, fk contiene Tipo, fk contiene, fk es Clave Primaria, tipo de datos De acuerdo, tipo de datos Categoría De acuerdo, longitud de datos De acuerdo, decimal De acuerdo, levenshtein Columnas, contiene Fk, contiene Tipo, contiene Eid, contiene, es clave externa",
      "output": "('estimateFK_v4', 'CREATE TABLE `estimateFK_v4` (\\n  `schema` varchar(255) DEFAULT NULL  `pk_table` varchar(255) DEFAULT NULL,\\n  `pk_column` varchar(255) DEFAULT NULL,\\n  `pk_dataTypeName` varchar(255) DEFAULT NULL,\\n  `pk_isUnique` varchar(255) DEFAULT NULL,\\n  `pk_isUniqueConstraint` varchar(255) DEFAULT NULL,\\n  `pk_columnSize` int(11) DEFAULT NULL,\\n  `pk_decimalDigits` int(11) DEFAULT NULL,\\n  `pk_hasDefault` varchar(255) DEFAULT NULL,\\n  `pk_ordinalPosition` int(11) DEFAULT NULL,\\n  `pk_ordinalPositionEnd` int(11) DEFAULT NULL,\\n  `pk_tableColumnCount` int(11) DEFAULT NULL,\\n  `pk_isAutoincrement` varchar(255) DEFAULT NULL,\\n  `pk_isGeneratedColumn` varchar(255) DEFAULT NULL,\\n  `pk_isNullable` varchar(255) DEFAULT NULL,\\n  `pk_levenshteinDistance` int(11) DEFAULT NULL,\\n  `pk_repetitions` int(11) DEFAULT NULL,\\n  `pk_prefixSchemaCount` int(11) DEFAULT NULL,\\n  `pk_suffixSchemaCount` int(11) DEFAULT NULL,\\n  `pk_prefixTableCount` int(11) DEFAULT NULL,\\n  `pk_suffixTableCount` int(11) DEFAULT NULL,\\n  `pk_prefixRatio` int(11) DEFAULT NULL,\\n  `pk_suffixRatio` float DEFAULT NULL,\\n  `pk_hasNumberedSibling` varchar(255) DEFAULT NULL,\\n  `pk_containsAux` varchar(255) DEFAULT NULL,\\n  `pk_containsCode` varchar(255) DEFAULT NULL,\\n  `pk_containsId` varchar(255) DEFAULT NULL,\\n  `pk_containsKey` varchar(255) DEFAULT NULL,\\n  `pk_containsName` varchar(255) DEFAULT NULL,\\n  `pk_containsNbr` varchar(255) DEFAULT NULL,\\n  `pk_containsNo` varchar(255) DEFAULT NULL,\\n  `pk_containsNum` varchar(255) DEFAULT NULL,\\n  `pk_containsNumber` varchar(255) DEFAULT NULL,\\n  `pk_containsPk` varchar(255) DEFAULT NULL,\\n  `pk_containsSk` varchar(255) DEFAULT NULL,\\n  `pk_containsSymb` varchar(255) DEFAULT NULL,\\n  `pk_containsType` varchar(255) DEFAULT NULL,\\n  `pk_contains` varchar(255) DEFAULT NULL,\\n  `pk_isPrimaryKey` varchar(255) DEFAULT NULL,\\n  `fk_table` varchar(255) DEFAULT NULL,\\n  `fk_column` varchar(255) DEFAULT NULL,\\n  `fk_dataTypeName` varchar(255) DEFAULT NULL,\\n  `fk_isUnique` varchar(255) DEFAULT NULL,\\n  `fk_isUniqueConstraint` varchar(255) DEFAULT NULL,\\n  `fk_columnSize` int(11) DEFAULT NULL,\\n  `fk_decimalDigits` int(11) DEFAULT NULL,\\n  `fk_hasDefault` varchar(255) DEFAULT NULL,\\n  `fk_ordinalPosition` int(11) DEFAULT NULL,\\n  `fk_ordinalPositionEnd` int(11) DEFAULT NULL,\\n  `fk_tableColumnCount` int(11) DEFAULT NULL,\\n  `fk_isAutoincrement` varchar(255) DEFAULT NULL,\\n  `fk_isGeneratedColumn` varchar(255) DEFAULT NULL,\\n  `fk_isNullable` varchar(255) DEFAULT NULL,\\n  `fk_levenshteinDistance` int(11) DEFAULT NULL,\\n  `fk_repetitions` int(11) DEFAULT NULL,\\n  `fk_prefixSchemaCount` int(11) DEFAULT NULL,\\n  `fk_suffixSchemaCount` int(11) DEFAULT NULL,\\n  `fk_prefixTableCount` int(11) DEFAULT NULL,\\n  `fk_suffixTableCount` int(11) DEFAULT NULL,\\n  `fk_prefixRatio` float DEFAULT NULL,\\n  `fk_suffixRatio` float DEFAULT NULL,\\n  `fk_hasNumberedSibling` varchar(255) DEFAULT NULL,\\n  `fk_containsAux` varchar(255) DEFAULT NULL,\\n  `fk_containsCode` varchar(255) DEFAULT NULL,\\n  `fk_containsId` varchar(255) DEFAULT NULL,\\n  `fk_containsKey` varchar(255) DEFAULT NULL,\\n  `fk_containsName` varchar(255) DEFAULT NULL,\\n  `fk_containsNbr` varchar(255) DEFAULT NULL,\\n  `fk_containsNo` varchar(255) DEFAULT NULL,\\n  `fk_containsNum` varchar(255) DEFAULT NULL,\\n  `fk_containsNumber` varchar(255) DEFAULT NULL,\\n  `fk_containsPk` varchar(255) DEFAULT NULL,\\n  `fk_containsSk` varchar(255) DEFAULT NULL,\\n  `fk_containsSymb` varchar(255) DEFAULT NULL,\\n  `fk_containsType` varchar(255) DEFAULT NULL,\\n  `fk_contains` varchar(255) DEFAULT NULL,\\n  `fk_isPrimaryKey` varchar(255) DEFAULT NULL,\\n  `dataTypeAgree` varchar(255) DEFAULT NULL,\\n  `dataTypeCategoryAgree` varchar(255) DEFAULT NULL,\\n  `dataLengthAgree` varchar(255) DEFAULT NULL,\\n  `decimalAgree` varchar(255) DEFAULT NULL,\\n  `levenshteinColumns` int(11) DEFAULT NULL,\\n  `containsFk` varchar(255) DEFAULT NULL,\\n  `containsType` varchar(255) DEFAULT NULL,\\n  `containsEid` varchar(255) DEFAULT NULL,\\n  `contains` varchar(255) DEFAULT NULL,\\n  `isForeignKey` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de procedimiento de estimación con las columnas de, id, ttid, nombre, tipo, repeticiones, pliegues, porcentaje, muestreo estratificado, conjunto de pruebas personalizado, fecha",
      "output": "('estimation_procedure', \"CREATE TABLE `estimation_procedure` (\\n  `id` int(8) NOT NULL AUTO_INCREMENT  `ttid` int(11) NOT NULL,\\n  `name` varchar(128) NOT NULL,\\n  `type` varchar(64) NOT NULL,\\n  `repeats` int(8) DEFAULT NULL,\\n  `folds` int(8) DEFAULT NULL,\\n  `percentage` int(8) DEFAULT NULL,\\n  `stratified_sampling` enum('true','false') DEFAULT NULL,\\n  `custom_testset` enum('true','false') NOT NULL DEFAULT 'false',\\n  `date` timestamp NOT NULL DEFAULT current_timestamp(),\\n  PRIMARY KEY (`id`),\\n  KEY `estimation_procedure_ttid` (`ttid`),\\n  KEY `estimation_procedure__type` (`type`),\\n  CONSTRAINT `estimation_procedure_ibfk_1` FOREIGN KEY (`ttid`) REFERENCES `task_type` (`ttid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `estimation_procedure_ibfk_2` FOREIGN KEY (`type`) REFERENCES `estimation_procedure_type` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tipo de procedimiento de estimación con las columnas de, nombre, descripción",
      "output": "('estimation_procedure_type', 'CREATE TABLE `estimation_procedure_type` (\\n  `name` varchar(64) NOT NULL  `description` mediumtext NOT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de evaluación con las columnas de, hizo, fuente, ID de implementación, función, etiqueta, valor, stdev",
      "output": "('evaluation', 'CREATE TABLE `evaluation` (\\n  `did` int(10) unsigned NOT NULL DEFAULT 0  `source` int(10) unsigned NOT NULL,\\n  `implementation_id` int(16) NOT NULL,\\n  `function` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\\n  `label` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\\n  `value` double NOT NULL,\\n  `stdev` double DEFAULT NULL,\\n  UNIQUE KEY `did` (`did`,`function`,`label`),\\n  KEY `function` (`function`,`source`,`label`(32)),\\n  KEY `func` (`function`),\\n  KEY `implementation_id` (`implementation_id`),\\n  CONSTRAINT `evaluation_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`),\\n  CONSTRAINT `evaluation_ibfk_2` FOREIGN KEY (`function`) REFERENCES `math_function` (`name`),\\n  CONSTRAINT `evaluation_ibfk_3` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipo de evento con las columnas de, id, tipo de evento",
      "output": "('event_type', 'CREATE TABLE `event_type` (\\n  `id` int(11) NOT NULL  `event_type` varchar(255) NOT NULL,\\n  PRIMARY KEY (`id`,`event_type`),\\n  CONSTRAINT `event_type_id_fkey` FOREIGN KEY (`id`) REFERENCES `target` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de eventos con las columnas de, ID de evento, ID de dispositivo, marca de tiempo, longitud, latitud",
      "output": "('events', 'CREATE TABLE `events` (\\n  `event_id` int(11) NOT NULL  `device_id` bigint(20) DEFAULT NULL,\\n  `timestamp` datetime DEFAULT NULL,\\n  `longitude` decimal(10,0) DEFAULT NULL,\\n  `latitude` decimal(10,0) DEFAULT NULL,\\n  PRIMARY KEY (`event_id`),\\n  KEY `device_id` (`device_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de eventos relevantes con las columnas de, ID de evento, ID de dispositivo, marca de tiempo, longitud, latitud",
      "output": "('events_relevant', 'CREATE TABLE `events_relevant` (\\n  `event_id` int(11) NOT NULL  `device_id` bigint(20) DEFAULT NULL,\\n  `timestamp` datetime DEFAULT NULL,\\n  `longitude` decimal(10,0) DEFAULT NULL,\\n  `latitude` decimal(10,0) DEFAULT NULL,\\n  PRIMARY KEY (`event_id`),\\n  KEY `device_id` (`device_id`),\\n  CONSTRAINT `events_relevant_ibfk_1` FOREIGN KEY (`device_id`) REFERENCES `gender_age` (`device_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de culpa con las columnas dehecho, cumplido",
      "output": "('fault', 'CREATE TABLE `fault` (\\n  `tm` int(11) NOT NULL  `tf` varchar(1) NOT NULL,\\n  PRIMARY KEY (`tm`,`tf`),\\n  KEY `tm` (`tm`),\\n  KEY `tf` (`tf`),\\n  CONSTRAINT `fault_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fault_ibfk_2` FOREIGN KEY (`tf`) REFERENCES `trfl` (`tf`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de prueba de falla con las columnas dehecho, cumplido",
      "output": "('fault_test', 'CREATE TABLE `fault_test` (\\n  `tm` int(11) NOT NULL  `tf` varchar(1) NOT NULL,\\n  PRIMARY KEY (`tm`,`tf`),\\n  KEY `tf` (`tf`),\\n  KEY `tm` (`tm`),\\n  CONSTRAINT `fault_test_ibfk_1` FOREIGN KEY (`tf`) REFERENCES `trfl` (`tf`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fault_test_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de prueba de falla negativa con las columnas dehecho, cumplido",
      "output": "('fault_test_Neg', 'CREATE TABLE `fault_test_Neg` (\\n  `tm` int(11) NOT NULL  `tf` varchar(1) NOT NULL,\\n  PRIMARY KEY (`tm`,`tf`),\\n  KEY `tm` (`tm`),\\n  KEY `tf` (`tf`),\\n  CONSTRAINT `fault_test_Neg_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fault_test_Neg_ibfk_2` FOREIGN KEY (`tf`) REFERENCES `trfl` (`tf`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de caracteristicas con las columnas de, Tienda, Fecha, Temperatura, Precio del combustible, Rebaja, Rebaja, Rebaja, Rebaja, Rebaja, IPC, Desempleo, Es feriado",
      "output": "('features', 'CREATE TABLE `features` (\\n  `Store` int(11) NOT NULL  `Date` date NOT NULL,\\n  `Temperature` float DEFAULT NULL,\\n  `Fuel_Price` float DEFAULT NULL,\\n  `MarkDown1` float DEFAULT NULL,\\n  `MarkDown2` float DEFAULT NULL,\\n  `MarkDown3` float DEFAULT NULL,\\n  `MarkDown4` float DEFAULT NULL,\\n  `MarkDown5` float DEFAULT NULL,\\n  `CPI` float DEFAULT NULL,\\n  `Unemployment` float DEFAULT NULL,\\n  `IsHoliday` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Store`,`Date`),\\n  KEY `Store` (`Store`),\\n  CONSTRAINT `features_ibfk_1` FOREIGN KEY (`Store`) REFERENCES `stores` (`Store`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de gasolineras con las columnas de, gasstationid, chainid, país, segmento",
      "output": "('gasstations', 'CREATE TABLE `gasstations` (\\n  `gasstationid` int(11) NOT NULL  `chainid` int(11) DEFAULT NULL,\\n  `country` varchar(255) DEFAULT NULL,\\n  `segment` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`gasstationid`),\\n  UNIQUE KEY `gasstations_gasstationid_key` (`gasstationid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de género edad con las columnas de, ID de dispositivo, género, edad, grupo",
      "output": "('gender_age', 'CREATE TABLE `gender_age` (\\n  `device_id` bigint(20) NOT NULL  `gender` varchar(255) DEFAULT NULL,\\n  `age` int(11) DEFAULT NULL,\\n  `group` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`device_id`),\\n  CONSTRAINT `gender_age_ibfk_1` FOREIGN KEY (`device_id`) REFERENCES `phone_brand_device_model2` (`device_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de prueba de edad de genero con las columnas de, Identificación del dispositivo",
      "output": "('gender_age_test', 'CREATE TABLE `gender_age_test` (\\n  `device_id` bigint(20) NOT NULL  PRIMARY KEY (`device_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tren de edad de género con las columnas de, ID de dispositivo, género, edad, grupo",
      "output": "('gender_age_train', 'CREATE TABLE `gender_age_train` (\\n  `device_id` bigint(20) NOT NULL  `gender` varchar(255) DEFAULT NULL,\\n  `age` int(11) DEFAULT NULL,\\n  `group` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`device_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de fase de misión gmt con las columnas de, estado, tm",
      "output": "('gmt_mission_phase', 'CREATE TABLE `gmt_mission_phase` (\\n  `state` varchar(50) NOT NULL  `tm` int(11) NOT NULL,\\n  PRIMARY KEY (`state`,`tm`),\\n  KEY `tm` (`tm`),\\n  CONSTRAINT `gmt_mission_phase_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Los grados con las columnas de, identificación del estudiante, identificación del curso, grado",
      "output": "('grades', 'CREATE TABLE `grades` (\\n  `student_id` int(10) unsigned NOT NULL  `course_id` int(10) unsigned NOT NULL,\\n  `grade` varchar(2) DEFAULT NULL,\\n  PRIMARY KEY (`student_id`,`course_id`),\\n  KEY `student_id` (`student_id`),\\n  KEY `course_id` (`course_id`),\\n  CONSTRAINT `grades_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `grades_ibfk_2` FOREIGN KEY (`course_id`) REFERENCES `courses` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ilustración con las columnas de, illustrationid, diagrama, fecha de modificación",
      "output": "('illustration', \"CREATE TABLE `illustration` (\\n  `illustrationid` int(11) NOT NULL COMMENT 'Primary key for Illustration records.'  `diagram` text DEFAULT NULL COMMENT 'Illustrations used in manufacturing instructions. Stored as XML.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`illustrationid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Bicycle assembly diagrams.'\")"
    },
    {
      "input": "Una tabla de implementación con las columnas de, id, nombre completo, cargador, nombre, versión, versión externa, creador, colaborador, fecha de carga, licencia, idioma, descripción, descripción completa, notas de instalación, dependencias, implementos, id de archivo binario, id de archivo fuente, visibilidad, cita",
      "output": "('implementation', \"CREATE TABLE `implementation` (\\n  `id` int(16) NOT NULL AUTO_INCREMENT  `fullName` varchar(1024) NOT NULL,\\n  `uploader` int(10) DEFAULT NULL,\\n  `name` varchar(1024) NOT NULL,\\n  `version` int(16) NOT NULL,\\n  `external_version` varchar(128) NOT NULL,\\n  `creator` varchar(128) DEFAULT NULL,\\n  `contributor` text DEFAULT NULL,\\n  `uploadDate` datetime NOT NULL,\\n  `licence` varchar(64) DEFAULT NULL,\\n  `language` varchar(128) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  `fullDescription` text DEFAULT NULL,\\n  `installationNotes` text DEFAULT NULL,\\n  `dependencies` text DEFAULT NULL,\\n  `implements` varchar(128) DEFAULT NULL,\\n  `binary_file_id` int(10) DEFAULT NULL,\\n  `source_file_id` int(10) DEFAULT NULL,\\n  `visibility` varchar(128) NOT NULL DEFAULT 'public',\\n  `citation` text DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `implementation_uploader` (`uploader`),\\n  KEY `implementation_id_external_version` (`id`,`external_version`),\\n  KEY `implementation_name` (`name`(255))\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de componente de implementación con las columnas de, padre, hijo, identificador",
      "output": "('implementation_component', 'CREATE TABLE `implementation_component` (\\n  `parent` int(16) NOT NULL  `child` int(16) NOT NULL,\\n  `identifier` varchar(1024) DEFAULT NULL,\\n  PRIMARY KEY (`parent`,`child`),\\n  KEY `implementation_component_child` (`child`),\\n  CONSTRAINT `implementation_component_ibfk_1` FOREIGN KEY (`parent`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `implementation_component_ibfk_2` FOREIGN KEY (`child`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de impotente con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('impotenten', 'CREATE TABLE `impotenten` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) DEFAULT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `impotenten_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de aporte con las columnas de, id, nombre completo, id de implementación, nombre, descripción, tipo de datos, valor predeterminado, rango recomendado",
      "output": "('input', 'CREATE TABLE `input` (\\n  `id` int(10) NOT NULL AUTO_INCREMENT  `fullName` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\\n  `implementation_id` int(16) NOT NULL,\\n  `name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `description` text CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `dataType` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `defaultValue` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `recommendedRange` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `input_implementation_id` (`implementation_id`),\\n  CONSTRAINT `input_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de facturas con las columnas de, número, número sup, viaje, viaje sup, factura, cámara",
      "output": "('invoices', 'CREATE TABLE `invoices` (\\n  `number` int(11) DEFAULT NULL  `number_sup` char(1) DEFAULT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) DEFAULT NULL,\\n  `invoice` int(11) DEFAULT NULL,\\n  `chamber` char(1) DEFAULT NULL,\\n  KEY `invoices_number_fkey` (`number`,`number_sup`),\\n  CONSTRAINT `invoices_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de j Carcinogénesis con las columnas de, id del predictor, hora de inicio, tiempo de ejecución, nombre del predictor, nombre de la tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre del patrón, autor del patrón, código del patrón, código sql, destino, relevancia, recuento de filas qc , qc null Count, está bien",
      "output": "('j_Carcinogenesis', \"CREATE TABLE `j_Carcinogenesis` (\\n  `predictor_id` int(11) NOT NULL DEFAULT 0  `start_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(2024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT 0,\\n  `qc_nullCount` int(11) DEFAULT 0,\\n  `is_ok` int(11) DEFAULT 0\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de j S A P con las columnas de, id de predictor, id de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, qc recuento de filas, qc recuento nulo, está bien",
      "output": "('j_SAP', 'CREATE TABLE `j_SAP` (\\n  `predictor_id` int(11) NOT NULL DEFAULT 0  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(2024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de j Toxicología con las columnas de, id del predictor, hora de inicio, tiempo de ejecución, nombre del predictor, nombre de la tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre del patrón, autor del patrón, código del patrón, código sql, destino, relevancia, recuento de filas qc , qc null Count, está bien",
      "output": "('j_Toxicology', \"CREATE TABLE `j_Toxicology` (\\n  `predictor_id` int(11) NOT NULL DEFAULT 0  `start_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(2024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT 0,\\n  `qc_nullCount` int(11) DEFAULT 0,\\n  `is_ok` int(11) DEFAULT 0\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de j financiero con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('j_financial', 'CREATE TABLE `j_financial` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de j mutagénesis con las columnas de, id del predictor, hora de inicio, tiempo de ejecución, nombre del predictor, nombre de la tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre del patrón, autor del patrón, código del patrón, código sql, destino, relevancia, recuento de filas qc , qc null Count, está bien",
      "output": "('j_mutagenesis', \"CREATE TABLE `j_mutagenesis` (\\n  `predictor_id` int(11) NOT NULL DEFAULT 0  `start_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(1024) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT 0,\\n  `qc_nullCount` int(11) DEFAULT 0,\\n  `is_ok` int(11) DEFAULT 0\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de j tpcc con las columnas de, id de predictor, id de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, qc recuento de filas, qc recuento nulo, está bien",
      "output": "('j_tpcc', 'CREATE TABLE `j_tpcc` (\\n  `predictor_id` int(11) NOT NULL DEFAULT 0  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(2024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de j voz con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('j_voc', 'CREATE TABLE `j_voc` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de candidato a trabajo con las columnas de, jobcandidateid, businessentityid, currículum, fecha de modificación",
      "output": "('jobcandidate', \"CREATE TABLE `jobcandidate` (\\n  `jobcandidateid` int(11) NOT NULL COMMENT 'Primary key for JobCandidate records.'  `businessentityid` int(11) DEFAULT NULL COMMENT 'Employee identification number if applicant was hired. Foreign key to Employee.BusinessEntityID.',\\n  `resume` text DEFAULT NULL COMMENT 'Résumé in XML format.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`jobcandidateid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Résumés submitted to Human Resources by job applicants.'\")"
    },
    {
      "input": "Una tabla de diario con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('journal', 'CREATE TABLE `journal` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de diario financiero exhaustivo con las columnas de, id de predictor, id de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, qc recuento de filas, qc recuento nulo, está bien",
      "output": "('journal_financial_exhaustive', 'CREATE TABLE `journal_financial_exhaustive` (\\n  `predictor_id` int(11) NOT NULL DEFAULT 0  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(2024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de patrón de diario con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('journal_pattern2', 'CREATE TABLE `journal_pattern2` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de patrón de diario con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('journal_pattern3', 'CREATE TABLE `journal_pattern3` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de predictor diario con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas qc, recuento nulo de qc, está bien, está duplicado, nombre duplicado",
      "output": "('journal_predictor', 'CREATE TABLE `journal_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance` decimal(18,3) DEFAULT NULL,\\n  `concept_drift` decimal(7,6) DEFAULT NULL,\\n  `qc_rowCount` int(11) DEFAULT NULL,\\n  `qc_nullCount` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ejecución del diario con las columnas de, hora de finalización, nombre del esquema, tiempo de ejecución, memoria, conteo de advertencias, conteo de errores, conteo de predictores, conteo de salidas del predictor, conteo de tabla propagada, configuración, promedio de precisión, estándar de precisión, auc avg, auc std, fscore avg, fscore std, precisión promedio, precisión estándar, recordar promedio, recordar estándar, auc optimista promedio, auc optimista estándar, auc promedio promedio, auc promedio estándar, auc pesimista promedio, auc pesimista estándar, correlación promedio, correlación estándar, rmse promedio, rmse estándar, error relativo promedio , error relativo estándar",
      "output": "('journal_run', 'CREATE TABLE `journal_run` (\\n  `finish_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()  `schema_name` varchar(255) DEFAULT NULL,\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `memory` decimal(18,3) DEFAULT NULL,\\n  `warn_count` int(11) DEFAULT NULL,\\n  `error_count` int(11) DEFAULT NULL,\\n  `predictor_count` int(11) DEFAULT NULL,\\n  `predictor_output_count` int(11) DEFAULT NULL,\\n  `propagated_table_count` int(11) DEFAULT NULL,\\n  `setting` varchar(2024) DEFAULT NULL,\\n  `accuracy_avg` decimal(8,3) DEFAULT NULL,\\n  `accuracy_std` decimal(8,3) DEFAULT NULL,\\n  `auc_avg` decimal(8,3) DEFAULT NULL,\\n  `auc_std` decimal(8,3) DEFAULT NULL,\\n  `fscore_avg` decimal(8,3) DEFAULT NULL,\\n  `fscore_std` decimal(8,3) DEFAULT NULL,\\n  `precision_avg` decimal(8,3) DEFAULT NULL,\\n  `precision_std` decimal(8,3) DEFAULT NULL,\\n  `recall_avg` decimal(8,3) DEFAULT NULL,\\n  `recall_std` decimal(8,3) DEFAULT NULL,\\n  `auc_optimistic_avg` decimal(8,3) DEFAULT NULL,\\n  `auc_optimistic_std` decimal(8,3) DEFAULT NULL,\\n  `auc_average_avg` decimal(8,3) DEFAULT NULL,\\n  `auc_average_std` decimal(8,3) DEFAULT NULL,\\n  `auc_pessimistic_avg` decimal(8,3) DEFAULT NULL,\\n  `auc_pessimistic_std` decimal(8,3) DEFAULT NULL,\\n  `correlation_avg` decimal(8,3) DEFAULT NULL,\\n  `correlation_std` decimal(8,3) DEFAULT NULL,\\n  `rmse_avg` decimal(8,3) DEFAULT NULL,\\n  `rmse_std` decimal(8,3) DEFAULT NULL,\\n  `relative_error_avg` decimal(8,3) DEFAULT NULL,\\n  `relative_error_std` decimal(8,3) DEFAULT NULL,\\n  PRIMARY KEY (`finish_time`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ejecución del diario con las columnas de, hora de finalización, nombre de esquema, estándar de error relativo",
      "output": "('journal_run2', 'CREATE TABLE `journal_run2` (\\n  `finish_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()  `schema_name` varchar(255) DEFAULT NULL,\\n  `relative_error_std` decimal(8,3) DEFAULT NULL,\\n  PRIMARY KEY (`finish_time`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ejecución del diario con las columnas de, hora de finalización, nombre del esquema, tiempo de ejecución, memoria, conteo de advertencias, conteo de errores, conteo de predictores, conteo de salidas del predictor, conteo de tablas propagadas, recuperación, recuperación estándar, auc optimista, auc optimista estándar, auc promedio, auc promedio estándar, auc pesimista , auc pesimista estándar, correlación, correlación estándar, rmse, rmse estándar, error relativo, error relativo estándar",
      "output": "('journal_run3', 'CREATE TABLE `journal_run3` (\\n  `finish_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()  `schema_name` varchar(255) DEFAULT NULL,\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `memory` decimal(18,3) DEFAULT NULL,\\n  `warn_count` int(11) DEFAULT NULL,\\n  `error_count` int(11) DEFAULT NULL,\\n  `predictor_count` int(11) DEFAULT NULL,\\n  `predictor_output_count` int(11) DEFAULT NULL,\\n  `propagated_table_count` int(11) DEFAULT NULL,\\n  `recall` decimal(8,3) DEFAULT NULL,\\n  `recall_std` decimal(8,3) DEFAULT NULL,\\n  `auc_optimistic` decimal(8,3) DEFAULT NULL,\\n  `auc_optimistic_std` decimal(8,3) DEFAULT NULL,\\n  `auc_average` decimal(8,3) DEFAULT NULL,\\n  `auc_average_std` decimal(8,3) DEFAULT NULL,\\n  `auc_pessimistic` decimal(8,3) DEFAULT NULL,\\n  `auc_pessimistic_std` decimal(8,3) DEFAULT NULL,\\n  `correlation` decimal(8,3) DEFAULT NULL,\\n  `correlation_std` decimal(8,3) DEFAULT NULL,\\n  `rmse` decimal(8,3) DEFAULT NULL,\\n  `rmse_std` decimal(8,3) DEFAULT NULL,\\n  `relative_error` decimal(8,3) DEFAULT NULL,\\n  `relative_error_std` decimal(8,3) DEFAULT NULL,\\n  PRIMARY KEY (`finish_time`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ejecución del diario con las columnas de, hora de finalización, nombre de esquema, tiempo de ejecución, memoria, recuento de advertencias, recuento de errores, recuento de predictores, recuento de salidas de predictores, recuento de tablas propagadas, configuración, precisión, precisión estándar, auc, auc estándar, fscore, fscore estándar, precisión estándar, recuperación , recordar estándar, auc optimista, auc optimista estándar, auc promedio, auc promedio estándar, auc pesimista, auc pesimista estándar, correlación, correlación estándar, rmse, rmse estándar, error relativo, error relativo estándar",
      "output": "('journal_run4', 'CREATE TABLE `journal_run4` (\\n  `finish_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()  `schema_name` varchar(255) DEFAULT NULL,\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `memory` decimal(18,3) DEFAULT NULL,\\n  `warn_count` int(11) DEFAULT NULL,\\n  `error_count` int(11) DEFAULT NULL,\\n  `predictor_count` int(11) DEFAULT NULL,\\n  `predictor_output_count` int(11) DEFAULT NULL,\\n  `propagated_table_count` int(11) DEFAULT NULL,\\n  `setting` varchar(2024) DEFAULT NULL,\\n  `accuracy` decimal(8,3) DEFAULT NULL,\\n  `accuracy_std` decimal(8,3) DEFAULT NULL,\\n  `auc` decimal(8,3) DEFAULT NULL,\\n  `auc_std` decimal(8,3) DEFAULT NULL,\\n  `fscore` decimal(8,3) DEFAULT NULL,\\n  `fscore_std` decimal(8,3) DEFAULT NULL,\\n  `precision_std` decimal(8,3) DEFAULT NULL,\\n  `recall` decimal(8,3) DEFAULT NULL,\\n  `recall_std` decimal(8,3) DEFAULT NULL,\\n  `auc_optimistic` decimal(8,3) DEFAULT NULL,\\n  `auc_optimistic_std` decimal(8,3) DEFAULT NULL,\\n  `auc_average` decimal(8,3) DEFAULT NULL,\\n  `auc_average_std` decimal(8,3) DEFAULT NULL,\\n  `auc_pessimistic` decimal(8,3) DEFAULT NULL,\\n  `auc_pessimistic_std` decimal(8,3) DEFAULT NULL,\\n  `correlation` decimal(8,3) DEFAULT NULL,\\n  `correlation_std` decimal(8,3) DEFAULT NULL,\\n  `rmse` decimal(8,3) DEFAULT NULL,\\n  `rmse_std` decimal(8,3) DEFAULT NULL,\\n  `relative_error` decimal(8,3) DEFAULT NULL,\\n  `relative_error_std` decimal(8,3) DEFAULT NULL,\\n  PRIMARY KEY (`finish_time`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tabla de diario con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('journal_table', 'CREATE TABLE `journal_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`table_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de llave con las columnas de, tienda nbr, estación nbr",
      "output": "('key', 'CREATE TABLE `key` (\\n  `store_nbr` int(11) NOT NULL  `station_nbr` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`store_nbr`),\\n  UNIQUE KEY `key_store_nbr_key` (`store_nbr`),\\n  KEY `key_station_nbr_fkey` (`station_nbr`),\\n  CONSTRAINT `key_station_nbr_fkey` FOREIGN KEY (`station_nbr`) REFERENCES `station` (`station_nbr`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de categorías de etiquetas con las columnas de, ID de etiqueta, categoría",
      "output": "('label_categories', 'CREATE TABLE `label_categories` (\\n  `label_id` int(11) NOT NULL  `category` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`label_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ubicación con las columnas de, ID de ubicación, nombre, tarifa de coste, disponibilidad, fecha de modificación",
      "output": "('location', \"CREATE TABLE `location` (\\n  `locationid` smallint(6) NOT NULL COMMENT 'Primary key for Location records.'  `name` varchar(100) NOT NULL COMMENT 'Location description.',\\n  `costrate` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Standard hourly cost of the manufacturing location.',\\n  `availability` decimal(8,2) NOT NULL DEFAULT 0.00 COMMENT 'Work capacity (in hours) of the manufacturing location.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`locationid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product inventory and manufacturing locations.'\")"
    },
    {
      "input": "Una tabla de Iniciar sesión con las columnas de, id, nombre de esquema, tiempo de ejecución, precisión, marca de tiempo, recuento de predictores, recuento de tablas propagadas, nota",
      "output": "('log', 'CREATE TABLE `log` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `schema_name` varchar(255) NOT NULL,\\n  `runtime` int(11) DEFAULT NULL,\\n  `accuracy` float DEFAULT NULL,\\n  `timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `predictor_count` int(11) DEFAULT NULL,\\n  `propagated_table_count` int(11) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de copia de registro con las columnas de, id, nombre de esquema, tiempo de ejecución, precisión, marca de tiempo, recuento de predictores, recuento de tablas propagadas, nota, precisión estándar, auc, auc estándar, fscore, fscore estándar, precisión, precisión estándar, recuperación, recuperación estándar, correlación, correlación estándar, auc optimista, auc optimista std, auc pesimista, auc pesimista std, auc promedio, auc promedio std, rmse, rmse std, error relativo, error relativo std, configuración, memoria, recuento de advertencias, recuento de errores, tiempo de ejecución s",
      "output": "('log_copy', 'CREATE TABLE `log_copy` (\\n  `id` int(11) NOT NULL  `schema_name` varchar(255) NOT NULL,\\n  `runtime` int(11) DEFAULT NULL,\\n  `accuracy` decimal(8,5) DEFAULT NULL,\\n  `timestamp` datetime DEFAULT NULL,\\n  `predictor_count` int(11) DEFAULT NULL,\\n  `propagated_table_count` int(11) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  `accuracy_std` decimal(8,5) DEFAULT NULL,\\n  `auc` decimal(8,5) DEFAULT NULL,\\n  `auc_std` decimal(8,5) DEFAULT NULL,\\n  `fscore` decimal(8,5) DEFAULT NULL,\\n  `fscore_std` decimal(8,5) DEFAULT NULL,\\n  `precision` decimal(8,5) DEFAULT NULL,\\n  `precision_std` decimal(8,5) DEFAULT NULL,\\n  `recall` decimal(8,5) DEFAULT NULL,\\n  `recall_std` decimal(8,5) DEFAULT NULL,\\n  `correlation` decimal(8,5) DEFAULT NULL,\\n  `correlation_std` decimal(8,5) DEFAULT NULL,\\n  `auc_optimistic` decimal(8,5) DEFAULT NULL,\\n  `auc_optimistic_std` decimal(8,5) DEFAULT NULL,\\n  `auc_pessimistic` decimal(8,5) DEFAULT NULL,\\n  `auc_pessimistic_std` decimal(8,5) DEFAULT NULL,\\n  `auc_average` decimal(8,5) DEFAULT NULL,\\n  `auc_average_std` decimal(8,5) DEFAULT NULL,\\n  `rmse` decimal(20,5) DEFAULT NULL,\\n  `rmse_std` decimal(20,5) DEFAULT NULL,\\n  `relative_error` decimal(20,5) DEFAULT NULL,\\n  `relative_error_std` decimal(20,5) DEFAULT NULL,\\n  `setting` text DEFAULT NULL,\\n  `memory` decimal(8,3) DEFAULT NULL,\\n  `warn_count` int(11) DEFAULT NULL,\\n  `error_count` int(11) DEFAULT NULL,\\n  `runtime_s` decimal(8,3) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de función de registro con las columnas de, id, función de registro, volumen",
      "output": "('log_feature', 'CREATE TABLE `log_feature` (\\n  `id` int(11) NOT NULL  `log_feature` varchar(255) NOT NULL,\\n  `volume` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`,`log_feature`),\\n  CONSTRAINT `log_feature_id_fkey` FOREIGN KEY (`id`) REFERENCES `target` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de correos con las columnas de, REFID, REF FECHA, RESPUESTA",
      "output": "('mailings3', 'CREATE TABLE `mailings3` (\\n  `REFID` int(11) NOT NULL  `REF_DATE` datetime DEFAULT NULL,\\n  `RESPONSE` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`REFID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de muestra principal con las columnas de, identificador propagado, fecha propagada, objetivo propagado, estado del préstamo campo directo columna nominal , duración del préstamo campo directo columna numérica , saldo trans agregado mínimo , monto trans agregado mínimo , distrito a campo directo columna numérica , distrito a campo directo columna numérica , frecuencia de cuenta campo directo columna nominal , distrito a campo directo columna numérica , distrito un campo directo columna numérica , distrito un campo directo columna numérica , trans cuenta agregada min , distrito un campo directo columna numérica , distrito un campo directo columna nominal , distrito un campo directo columna numérica , distrito un campo directo columna nominal , distrito un campo directo columna numérica , fecha de préstamo campo directo columna de tiempo , fecha de cuenta campo directo columna de tiempo , cantidad agregada mínima del pedido, cuenta del pedido para agregar el máximo, distrito una columna numérica de campo directo, cuenta del pedido para agregar el promedio, cantidad agregada del pedido promedio, saldo agregado máximo trans, cantidad agregada máxima del pedido, cantidad agregada ma trans x, muestra de dev estándar del monto trans, monto del préstamo columna numérica de campo directo, distrito a columna numérica de campo directo, pagos de préstamos columna numérica de campo directo, máximo agregado de cuenta trans, suma agregada de cuenta trans, promedio agregado de cuenta trans, distrito a columna numérica de campo directo, distrito a columna numérica de campo directo, cuenta trans muestra de evolución estándar agregada, monto del pedido muestra de evolución estándar agregada, cuenta de pedido para muestra de evolución estándar agregada, columna de tiempo de campo directo emitida por tarjeta, columna nominal de campo directo de tipo de tarjeta",
      "output": "('mainsample', \"CREATE TABLE `mainsample` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directfield_nominalcolumn_100030` varchar(1) DEFAULT NULL,\\n  `loan_duration_directfield_numericalcolumn_100045` int(11) DEFAULT NULL,\\n  `trans_balance_aggregate_min_100015` int(11) DEFAULT NULL,\\n  `trans_amount_aggregate_min_100014` int(11) DEFAULT NULL,\\n  `district_a9_directfield_numericalcolumn_100043` int(11) DEFAULT NULL,\\n  `district_a12_directfield_numericalcolumn_100033` decimal(4,1) DEFAULT NULL,\\n  `account_frequency_directfield_nominalcolumn_100026` varchar(18) DEFAULT '',\\n  `district_a14_directfield_numericalcolumn_100035` int(11) DEFAULT NULL,\\n  `district_a11_directfield_numericalcolumn_100032` int(11) DEFAULT NULL,\\n  `district_a10_directfield_numericalcolumn_100031` decimal(4,1) DEFAULT NULL,\\n  `trans_account_aggregate_min_100013` int(11) DEFAULT NULL,\\n  `district_a16_directfield_numericalcolumn_100037` int(11) DEFAULT NULL,\\n  `district_a2_directfield_nominalcolumn_100028` varchar(19) DEFAULT NULL,\\n  `district_a15_directfield_numericalcolumn_100036` int(5) DEFAULT NULL,\\n  `district_a3_directfield_nominalcolumn_100029` varchar(15) DEFAULT NULL,\\n  `district_a13_directfield_numericalcolumn_100034` decimal(3,2) DEFAULT NULL,\\n  `loan_date_directfield_timecolumn_100049` date DEFAULT NULL,\\n  `account_date_directfield_timecolumn_100047` date DEFAULT NULL,\\n  `order_amount_aggregate_min_100012` decimal(6,1) DEFAULT NULL,\\n  `order_account_to_aggregate_max_100016` int(11) DEFAULT NULL,\\n  `district_a6_directfield_numericalcolumn_100040` int(11) DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100006` decimal(14,4) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100007` decimal(10,5) DEFAULT NULL,\\n  `trans_balance_aggregate_max_100020` int(11) DEFAULT NULL,\\n  `order_amount_aggregate_max_100017` decimal(6,1) DEFAULT NULL,\\n  `trans_amount_aggregate_max_100019` int(11) DEFAULT NULL,\\n  `trans_amount_aggregate_stddev_samp_100004` double(26,4) DEFAULT NULL,\\n  `loan_amount_directfield_numericalcolumn_100044` int(11) DEFAULT NULL,\\n  `district_a5_directfield_numericalcolumn_100039` int(11) DEFAULT NULL,\\n  `loan_payments_directfield_numericalcolumn_100046` decimal(6,2) DEFAULT NULL,\\n  `trans_account_aggregate_max_100018` int(11) DEFAULT NULL,\\n  `trans_account_aggregate_sum_100023` decimal(32,0) DEFAULT NULL,\\n  `trans_account_aggregate_avg_100008` decimal(14,4) DEFAULT NULL,\\n  `district_a8_directfield_numericalcolumn_100042` int(6) DEFAULT NULL,\\n  `district_a7_directfield_numericalcolumn_100041` int(11) DEFAULT NULL,\\n  `trans_account_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  `order_amount_aggregate_stddev_samp_100002` double(18,5) DEFAULT NULL,\\n  `order_account_to_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `card_issued_directfield_timecolumn_100048` date DEFAULT NULL,\\n  `card_type_directfield_nominalcolumn_100027` varchar(7) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de temperatura de la muestra principal con las columnas de, identificador propagado, fecha propagada, objetivo propagado, estado del préstamo campo directo columna nominal , duración del préstamo campo directo columna numérica , saldo trans agregado mínimo , monto trans agregado mínimo , distrito a campo directo columna numérica , distrito a campo directo columna numérica , frecuencia de cuenta campo directo columna nominal , distrito a campo directo columna numérica , distrito un campo directo columna numérica , distrito un campo directo columna numérica , trans cuenta agregada min , distrito un campo directo columna numérica , distrito un campo directo columna nominal , distrito un campo directo columna numérica , distrito un campo directo columna nominal , distrito un campo directo columna numérica , fecha de préstamo campo directo columna de tiempo , fecha de cuenta campo directo columna de tiempo , cantidad agregada mínima del pedido, cuenta del pedido para agregar el máximo, distrito una columna numérica de campo directo, cuenta del pedido para agregar el promedio, cantidad agregada del pedido promedio, saldo agregado máximo trans, cantidad agregada máxima del pedido, cantidad agregada ma trans x, muestra de dev estándar del monto trans, monto del préstamo columna numérica de campo directo, distrito a columna numérica de campo directo, pagos de préstamos columna numérica de campo directo, máximo agregado de cuenta trans, suma agregada de cuenta trans, promedio agregado de cuenta trans, distrito a columna numérica de campo directo, distrito a columna numérica de campo directo, cuenta trans muestra de evolución estándar agregada, monto del pedido muestra de evolución estándar agregada, cuenta de pedido para muestra de evolución estándar agregada, columna de tiempo de campo directo emitida por tarjeta, columna nominal de campo directo de tipo de tarjeta",
      "output": "('mainsample_temp100', \"CREATE TABLE `mainsample_temp100` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directfield_nominalcolumn_100030` varchar(1) DEFAULT NULL,\\n  `loan_duration_directfield_numericalcolumn_100045` int(11) DEFAULT NULL,\\n  `trans_balance_aggregate_min_100015` int(11) DEFAULT NULL,\\n  `trans_amount_aggregate_min_100014` int(11) DEFAULT NULL,\\n  `district_a9_directfield_numericalcolumn_100043` int(11) DEFAULT NULL,\\n  `district_a12_directfield_numericalcolumn_100033` decimal(4,1) DEFAULT NULL,\\n  `account_frequency_directfield_nominalcolumn_100026` varchar(18) DEFAULT '',\\n  `district_a14_directfield_numericalcolumn_100035` int(11) DEFAULT NULL,\\n  `district_a11_directfield_numericalcolumn_100032` int(11) DEFAULT NULL,\\n  `district_a10_directfield_numericalcolumn_100031` decimal(4,1) DEFAULT NULL,\\n  `trans_account_aggregate_min_100013` int(11) DEFAULT NULL,\\n  `district_a16_directfield_numericalcolumn_100037` int(11) DEFAULT NULL,\\n  `district_a2_directfield_nominalcolumn_100028` varchar(19) DEFAULT NULL,\\n  `district_a15_directfield_numericalcolumn_100036` int(5) DEFAULT NULL,\\n  `district_a3_directfield_nominalcolumn_100029` varchar(15) DEFAULT NULL,\\n  `district_a13_directfield_numericalcolumn_100034` decimal(3,2) DEFAULT NULL,\\n  `loan_date_directfield_timecolumn_100049` date DEFAULT NULL,\\n  `account_date_directfield_timecolumn_100047` date DEFAULT NULL,\\n  `order_amount_aggregate_min_100012` decimal(6,1) DEFAULT NULL,\\n  `order_account_to_aggregate_max_100016` int(11) DEFAULT NULL,\\n  `district_a6_directfield_numericalcolumn_100040` int(11) DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100006` decimal(14,4) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100007` decimal(10,5) DEFAULT NULL,\\n  `trans_balance_aggregate_max_100020` int(11) DEFAULT NULL,\\n  `order_amount_aggregate_max_100017` decimal(6,1) DEFAULT NULL,\\n  `trans_amount_aggregate_max_100019` int(11) DEFAULT NULL,\\n  `trans_amount_aggregate_stddev_samp_100004` double(26,4) DEFAULT NULL,\\n  `loan_amount_directfield_numericalcolumn_100044` int(11) DEFAULT NULL,\\n  `district_a5_directfield_numericalcolumn_100039` int(11) DEFAULT NULL,\\n  `loan_payments_directfield_numericalcolumn_100046` decimal(6,2) DEFAULT NULL,\\n  `trans_account_aggregate_max_100018` int(11) DEFAULT NULL,\\n  `trans_account_aggregate_sum_100023` decimal(32,0) DEFAULT NULL,\\n  `trans_account_aggregate_avg_100008` decimal(14,4) DEFAULT NULL,\\n  `district_a8_directfield_numericalcolumn_100042` int(6) DEFAULT NULL,\\n  `district_a7_directfield_numericalcolumn_100041` int(11) DEFAULT NULL,\\n  `trans_account_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  `order_amount_aggregate_stddev_samp_100002` double(18,5) DEFAULT NULL,\\n  `order_account_to_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `card_issued_directfield_timecolumn_100048` date DEFAULT NULL,\\n  `card_type_directfield_nominalcolumn_100027` varchar(7) DEFAULT NULL,\\n  KEY `ix_temp100` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de función matemática con las columnas de, nombre, tipo de función, mín., máx., unidad, mayor es mejor, descripción, código fuente, fecha",
      "output": "('math_function', \"CREATE TABLE `math_function` (\\n  `name` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL  `functionType` varchar(128) NOT NULL DEFAULT 'EvaluationFunction',\\n  `min` varchar(64) NOT NULL,\\n  `max` varchar(64) NOT NULL,\\n  `unit` varchar(64) NOT NULL,\\n  `higherIsBetter` varchar(16) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  `source_code` text NOT NULL,\\n  `date` timestamp NOT NULL DEFAULT current_timestamp(),\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de miembro con las columnas de, número de miembro, apellido, primer nombre, inicial del segundo nombre, calle, ciudad, provincia estatal, país, código de correo, número de teléfono, fotografía, edición dt, expr dt, región no, corp no, saldo anterior, saldo actual, código de miembro",
      "output": "('member', 'CREATE TABLE `member` (\\n  `member_no` int(11) NOT NULL  `lastname` varchar(15) NOT NULL,\\n  `firstname` varchar(15) NOT NULL,\\n  `middleinitial` char(1) DEFAULT NULL,\\n  `street` varchar(15) NOT NULL,\\n  `city` varchar(15) NOT NULL,\\n  `state_prov` char(2) NOT NULL,\\n  `country` char(2) NOT NULL,\\n  `mail_code` char(10) NOT NULL,\\n  `phone_no` char(13) DEFAULT NULL,\\n  `photograph` longblob DEFAULT NULL,\\n  `issue_dt` datetime NOT NULL,\\n  `expr_dt` datetime NOT NULL,\\n  `region_no` int(11) NOT NULL,\\n  `corp_no` int(11) DEFAULT NULL,\\n  `prev_balance` decimal(19,4) DEFAULT NULL,\\n  `curr_balance` decimal(19,4) DEFAULT NULL,\\n  `member_code` char(2) NOT NULL,\\n  PRIMARY KEY (`member_no`),\\n  KEY `member_region_no` (`region_no`),\\n  KEY `member_corp_no` (`corp_no`),\\n  CONSTRAINT `member_ibfk_1` FOREIGN KEY (`region_no`) REFERENCES `region` (`region_no`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `member_ibfk_2` FOREIGN KEY (`corp_no`) REFERENCES `corporation` (`corp_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de molécula con las columnas de, ID de molécula, etiqueta",
      "output": "('molecule', 'CREATE TABLE `molecule` (\\n  `molecule_id` varchar(255) NOT NULL  `label` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`molecule_id`),\\n  KEY `molecule_id` (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ms carcinogénesis con las columnas de, identificador propagado, fecha propagada, destino propagado, átomo nombre existencial Count o , átomo nombre texto Longitud stddev samp , átomo cargo existencial Count a x , átomo número de niños , átomo atomtype número de tipos de niños , átomo nombre texto Longitud avg , átomo nombre existencial Count h , atom atomtype existenciacional Count , atom atomtype existenciacional Count , atom name existenciacional Count s , atom charge existenciacional Count ainfx , sbond number Of Children , atom atomtype existenciacional Count , atom atomtype existenciacional Count , sbond number Of Children , atom nombre numero De Hijo Tipos , atom atomtype texto Longitud avg , atom carga existenciacional Contar a x , atom atomtype text Longitud stddev samp , atom nombre existencial Contar c , atom atomtype existenciacional Contar , sbond numero De hijos , atom atomtype existenciacional Contar , atom carga existencial Contar a xinf , atom número de carga de tipos de niños , atom atomtype existenciacional Count , atom charge texto longitud promedio , atom cha rge text Longitud stddev samp , atom carga duplicación Ratio nominal Columna , atom atomtype existenciacional Count , atom atomtype existenciacional Count , atom atomtype existenciacional Count , atom name existenciacional Count cl , atom charge existenciacional Count a x , atom atomtype existenciacional Count , atom atomtype existenciacional Count , atom atomtype existenciacional Count , atom atomtype existenciacional Count , atom name existenciacional Count br , atom name existenciacional Count n , atom atomtype existenciacional Count , atom charge text Longitud min , atom name existenciacional Count na , atom atomtype texto Longitud min , atom atomtype existencial Count , atom atomtype existencial Count , atom atomtype existenciacional Count , atom charge text Longitud max , atom atomtype duplication Ratio nominal Columna , atom name existenciacional Count p , atom name text Length max , atom name duplication Ratio nominal Columna , atom atomtype existencial Count , atom name existencial Count i , átomo nombre existeci Contador onal sn , nombre del átomo Contador existencial ti , nombre del átomo Contador existencial pb , nombre del átomo Contador existencial as , átomo tipo de átomo Contador existencial , nombre del átomo Contador existencial cu , nombre del átomo Contador existencial ba",
      "output": "('ms_Carcinogenesis', \"CREATE TABLE `ms_Carcinogenesis` (\\n  `propagated_id` char(100) CHARACTER SET latin1 NOT NULL DEFAULT ''  `propagated_date` char(100) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `propagated_target` char(1) CHARACTER SET latin1 DEFAULT NULL,\\n  `atom_name_existencionalCount_o_100034` decimal(23,0) DEFAULT NULL,\\n  `atom_name_textLength_stddev_samp_100068` double(24,4) DEFAULT NULL,\\n  `atom_charge_existencionalCount_a00_0615x0_1375_100027` decimal(23,0) DEFAULT NULL,\\n  `atom_numberOfChildren_100058` bigint(21) DEFAULT 0,\\n  `atom_atomtype_numberOfChildTypes_100063` bigint(21) DEFAULT 0,\\n  `atom_name_textLength_avg_100071` decimal(13,4) DEFAULT NULL,\\n  `atom_name_existencionalCount_h_100032` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_3_100007` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_10_100009` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_s_100037` decimal(23,0) DEFAULT NULL,\\n  `atom_charge_existencionalCount_a0infx0_1355_100031` decimal(23,0) DEFAULT NULL,\\n  `sbond_1_numberOfChildren_100059` bigint(21) DEFAULT 0,\\n  `atom_atomtype_existencionalCount_22_100008` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_36_100022` decimal(23,0) DEFAULT NULL,\\n  `sbond_2_numberOfChildren_100060` bigint(21) DEFAULT 0,\\n  `atom_name_numberOfChildTypes_100065` bigint(21) DEFAULT 0,\\n  `atom_atomtype_textLength_avg_100069` decimal(13,4) DEFAULT NULL,\\n  `atom_charge_existencionalCount_a00_1355x0_0175_100029` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_textLength_stddev_samp_100066` double(24,4) DEFAULT NULL,\\n  `atom_name_existencionalCount_c_100033` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_8_100018` decimal(23,0) DEFAULT NULL,\\n  `sbond_7_numberOfChildren_100062` bigint(21) DEFAULT 0,\\n  `atom_atomtype_existencionalCount_45_100015` decimal(23,0) DEFAULT NULL,\\n  `atom_charge_existencionalCount_a00_1375xinf_100028` decimal(23,0) DEFAULT NULL,\\n  `atom_charge_numberOfChildTypes_100064` bigint(21) DEFAULT 0,\\n  `atom_atomtype_existencionalCount_1_100010` decimal(23,0) DEFAULT NULL,\\n  `atom_charge_textLength_avg_100070` decimal(13,4) DEFAULT NULL,\\n  `atom_charge_textLength_stddev_samp_100067` double(24,4) DEFAULT NULL,\\n  `atom_charge_duplicationRatio_nominalColumn_100005` decimal(46,4) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_14_100014` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_40_100012` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_93_100011` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_cl_100036` decimal(23,0) DEFAULT NULL,\\n  `atom_charge_existencionalCount_a00_0175x0_0615_100030` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_50_100016` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_29_100026` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_51_100020` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_94_100024` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_br_100038` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_n_100035` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_49_100019` decimal(23,0) DEFAULT NULL,\\n  `atom_charge_textLength_min_100073` bigint(10) DEFAULT NULL,\\n  `atom_name_existencionalCount_na_100040` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_textLength_min_100072` bigint(10) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_32_100013` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_21_100025` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_27_100021` decimal(23,0) DEFAULT NULL,\\n  `atom_charge_textLength_max_100076` bigint(10) DEFAULT NULL,\\n  `atom_atomtype_duplicationRatio_nominalColumn_100004` decimal(46,4) DEFAULT NULL,\\n  `atom_name_existencionalCount_p_100039` decimal(23,0) DEFAULT NULL,\\n  `atom_name_textLength_max_100077` bigint(10) DEFAULT NULL,\\n  `atom_name_duplicationRatio_nominalColumn_100006` decimal(46,4) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_16_100017` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_i_100042` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_sn_100044` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_ti_100045` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_pb_100046` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_as_100051` decimal(23,0) DEFAULT NULL,\\n  `atom_atomtype_existencionalCount_38_100023` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_cu_100043` decimal(23,0) DEFAULT NULL,\\n  `atom_name_existencionalCount_ba_100050` decimal(23,0) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de ms SAP con las columnas de, identificador propagado, fecha propagada, destino propagado, Mailings Kx Index direct Field number column , Sales A M O U N T added sum , Sales A M O U N T added max , Demog A V A R direct Field number column , Demog A V A R direct Field number column , Customers D A T A direct Field number column , Customers edad directo Campo numérico Columna , Ventas CANTIDAD agregado promedio , Ventas CANTIDAD agregado stddev samp , Clientes OCUPACIÓN directo Campo nominal Columna , Ventas CANTIDAD agregado mínimo , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico columna , Clientes DATOS directo Campo numérico Columna , Clientes N O M directo Campo nominal Columna , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Ventas E V E N T D A T E hora Frecuencia , Demog I N H A B I T A N T S K directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Clientes D A T A directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Clientes N O M directo Campo nominal Columna , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Clientes N O M directo Campo numérico Columna , Clientes E D U C A T I O N N U M directo Campo numérico Columna , Clientes S E X directo Campo nominal Columna , Demog I N C O M E K directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Demog A V A R directo Campo numérico Columna , Clientes ESTADO M A R I T A L directo Campo nominal Columna , Demog A V A R directo Campo numérico Columna , Mailings R E F D A T E directo Campo tiempo Columna",
      "output": "('ms_SAP', 'CREATE TABLE `ms_SAP` (\\n  `propagated_id1` int(11) DEFAULT NULL  `propagated_date` datetime DEFAULT NULL,\\n  `propagated_target` varchar(255) DEFAULT NULL,\\n  `Mailings1_2_KxIndex_directField_numericalColumn_100037` int(11) DEFAULT NULL,\\n  `Sales_AMOUNT_aggregate_sum_100005` double DEFAULT NULL,\\n  `Sales_AMOUNT_aggregate_max_100004` float DEFAULT NULL,\\n  `Demog_A_VAR16_directField_numericalColumn_100024` float DEFAULT NULL,\\n  `Demog_A_VAR10_directField_numericalColumn_100018` float DEFAULT NULL,\\n  `Customers_DATA3_directField_numericalColumn_100014` float DEFAULT NULL,\\n  `Customers_age_directField_numericalColumn_100016` int(11) DEFAULT NULL,\\n  `Sales_AMOUNT_aggregate_avg_100002` double DEFAULT NULL,\\n  `Sales_AMOUNT_aggregate_stddev_samp_100001` double DEFAULT NULL,\\n  `Customers_OCCUPATION_directField_nominalColumn_100010` varchar(255) DEFAULT NULL,\\n  `Sales_AMOUNT_aggregate_min_100003` float DEFAULT NULL,\\n  `Demog_A_VAR12_directField_numericalColumn_100020` float DEFAULT NULL,\\n  `Demog_A_VAR4_directField_numericalColumn_100029` float DEFAULT NULL,\\n  `Customers_DATA2_directField_numericalColumn_100013` float DEFAULT NULL,\\n  `Customers_NOM1_directField_nominalColumn_100007` varchar(255) DEFAULT NULL,\\n  `Demog_A_VAR6_directField_numericalColumn_100031` float DEFAULT NULL,\\n  `Demog_A_VAR9_directField_numericalColumn_100034` float DEFAULT NULL,\\n  `Sales_EVENT_DATE_timeFrequency_100039` decimal(26,5) DEFAULT NULL,\\n  `Demog_INHABITANTS_K_directField_numericalColumn_100036` float DEFAULT NULL,\\n  `Demog_A_VAR7_directField_numericalColumn_100032` float DEFAULT NULL,\\n  `Customers_DATA1_directField_numericalColumn_100012` float DEFAULT NULL,\\n  `Demog_A_VAR3_directField_numericalColumn_100028` float DEFAULT NULL,\\n  `Demog_A_VAR8_directField_numericalColumn_100033` float DEFAULT NULL,\\n  `Demog_A_VAR2_directField_numericalColumn_100027` float DEFAULT NULL,\\n  `Demog_A_VAR17_directField_numericalColumn_100025` float DEFAULT NULL,\\n  `Customers_NOM2_directField_nominalColumn_100008` varchar(255) DEFAULT NULL,\\n  `Demog_A_VAR14_directField_numericalColumn_100022` float DEFAULT NULL,\\n  `Demog_A_VAR13_directField_numericalColumn_100021` float DEFAULT NULL,\\n  `Demog_A_VAR1_directField_numericalColumn_100017` float DEFAULT NULL,\\n  `Customers_NOM3_directField_nominalColumn_100009` varchar(255) DEFAULT NULL,\\n  `Customers_EDUCATIONNUM_directField_numericalColumn_100015` int(11) DEFAULT NULL,\\n  `Customers_SEX_directField_nominalColumn_100011` varchar(255) DEFAULT NULL,\\n  `Demog_INCOME_K_directField_numericalColumn_100035` decimal(10,2) DEFAULT NULL,\\n  `Demog_A_VAR11_directField_numericalColumn_100019` float DEFAULT NULL,\\n  `Demog_A_VAR15_directField_numericalColumn_100023` float DEFAULT NULL,\\n  `Demog_A_VAR5_directField_numericalColumn_100030` float DEFAULT NULL,\\n  `Customers_MARITAL_STATUS_directField_nominalColumn_100006` varchar(255) DEFAULT NULL,\\n  `Demog_A_VAR18_directField_numericalColumn_100026` float DEFAULT NULL,\\n  `Mailings1_2_REF_DATE_directField_timeColumn_100038` datetime DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ms Toxicología con las columnas de, id propagado, fecha propagada, objetivo propagado, número de átomo de hijos , número de enlace de hijos , número de hijos conectado , número de hijos conectado , elemento átomo existencial Contador c , tipo de enlace de enlace Contador existencial , elemento atómico Contador existencial o , elemento atómico número de tipos de hijos, átomo elemento texto Longitud stddev samp, átomo elemento existenciacional Conteo s, átomo elemento texto Longitud promedio, enlace enlace tipo existenciacional Conteo, átomo elemento existencial Conteo h, átomo elemento existencial Conteo br, átomo elemento existencial Conteo cl, elemento átomo Relación de duplicación Columna nominal , número de tipo de enlace de enlace De tipos secundarios , elemento de átomo existenciacional Conteo na , elemento de átomo existenciacional Conteo n , elemento de átomo existenciacional Conteo f , tipo de enlace de enlace relación de duplicación Columna nominal , elemento de átomo texto Longitud máx , tipo de enlace de enlace existenciacional Conteo , átomo elemento existencial Cuenta sn , átomo elemento existencial Cuenta cu , átomo elemento existencial Cuenta y , átomo elemento existencial Cuenta p , átomo elemento existencial Cuenta i , átomo elemento existencial Cuenta k , átomo elemento existencial Cuenta pb , átomo elemento existencial Cuenta ca , átomo elemento existencial Cuenta si , átomo elemento existencial Cuenta b , átomo elemento existencial Cuenta te , relación de elementos atómicos de valores perdidos columna nominal , tipo de enlace de enlace relación de valores perdidos columna nominal , tipo de enlace de enlace texto Longitud stddev samp , tipo de enlace de enlace texto Longitud media , texto de elemento de átomo Longitud mín , tipo de enlace de enlace texto Longitud mín , tipo de enlace de enlace Longitud máxima del texto",
      "output": "('ms_Toxicology', \"CREATE TABLE `ms_Toxicology` (\\n  `propagated_id` varchar(255) NOT NULL DEFAULT ''  `propagated_date` varchar(255) NOT NULL DEFAULT '',\\n  `propagated_target` varchar(255) DEFAULT NULL,\\n  `atom_numberOfChildren_100032` bigint(21) DEFAULT 0,\\n  `bond_numberOfChildren_100033` bigint(21) DEFAULT 0,\\n  `connected_numberOfChildren_100034` bigint(21) DEFAULT 0,\\n  `connected_numberOfChildren_100035` bigint(21) DEFAULT 0,\\n  `atom_element_existencionalCount_c_100006` decimal(23,0) DEFAULT NULL,\\n  `bond_bond_type_existencionalCount__100026` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_o_100007` decimal(23,0) DEFAULT NULL,\\n  `atom_element_numberOfChildTypes_100036` bigint(21) DEFAULT 0,\\n  `atom_element_textLength_stddev_samp_100038` double(24,4) DEFAULT NULL,\\n  `atom_element_existencionalCount_s_100010` decimal(23,0) DEFAULT NULL,\\n  `atom_element_textLength_avg_100040` decimal(13,4) DEFAULT NULL,\\n  `bond_bond_type_existencionalCount__100025` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_h_100005` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_br_100011` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_cl_100009` decimal(23,0) DEFAULT NULL,\\n  `atom_element_duplicationRatio_nominalColumn_100003` decimal(46,4) DEFAULT NULL,\\n  `bond_bond_type_numberOfChildTypes_100037` bigint(21) DEFAULT 0,\\n  `atom_element_existencionalCount_na_100012` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_n_100008` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_f_100014` decimal(23,0) DEFAULT NULL,\\n  `bond_bond_type_duplicationRatio_nominalColumn_100004` decimal(46,4) DEFAULT NULL,\\n  `atom_element_textLength_max_100044` bigint(10) DEFAULT NULL,\\n  `bond_bond_type_existencionalCount__100027` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_sn_100018` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_cu_100017` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_y_100021` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_p_100013` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_i_100015` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_k_100020` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_pb_100022` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_ca_100024` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_si_100016` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_b_100019` decimal(23,0) DEFAULT NULL,\\n  `atom_element_existencionalCount_te_100023` decimal(23,0) DEFAULT NULL,\\n  `atom_element_ratioOfMissingValues_nominalColumn_100030` decimal(25,4) DEFAULT NULL,\\n  `bond_bond_type_ratioOfMissingValues_nominalColumn_100031` decimal(25,4) DEFAULT NULL,\\n  `bond_bond_type_textLength_stddev_samp_100039` double(24,4) DEFAULT NULL,\\n  `bond_bond_type_textLength_avg_100041` decimal(13,4) DEFAULT NULL,\\n  `atom_element_textLength_min_100042` bigint(10) DEFAULT NULL,\\n  `bond_bond_type_textLength_min_100043` bigint(10) DEFAULT NULL,\\n  `bond_bond_type_textLength_max_100045` bigint(10) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de sra financiera con las columnas de, ID propagado, fecha propagada, objetivo propagado, estado del préstamo directo Campo nominal Columna, duración del préstamo directo Campo numérico Columna, ID de cuenta de pedido agregado stddev samp, cliente ID de cliente agregado stddev samp, pedido ID de pedido agregado stddev samp, fecha de préstamo directo Campo hora Columna, id. de distrito del cliente promedio agregado, cuenta de pedido para agregar máx., cuenta de pedido para agregar promedio, fecha de cuenta directa Campo hora Columna, distrito A directo Campo numérico Columna, id de cuenta de pedido suma agregada, distrito A directo Campo nominal Columna, disp id de cuenta suma agregada, cliente id de cliente suma agregada, pedido id de orden suma agregada, cliente id de cliente agregado promedio, disp id de disp suma agregada, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, monto del pedido suma agregada, cliente distrito id agregado sum , monto del pedido agregado promedio , monto del pedido agregado min , monto del préstamo directo Campo numérico Columna , distrito A directo Número de campo rical Columna, cliente id de cliente agregado stddev samp, monto del pedido agregado máximo, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, pagos de préstamo directo Campo numérico Columna, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, cliente distrito id suma agregada, distrito A directo Campo numérico Columna, distrito A directo Campo numérico Columna, orden de cuenta para agregar stddev samp, cuenta frecuencia directo Campo nominal Columna, distrito A directo Campo numérico Columna, tarjeta tarjeta id directo Campo numérico Columna, tipo de tarjeta directo Campo nominal Columna, cliente distrito id agregado stddev samp",
      "output": "('ms_financial', \"CREATE TABLE `ms_financial` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directField_nominalColumn_100060` varchar(1) DEFAULT NULL,\\n  `loan_duration_directField_numericalColumn_100081` int(11) DEFAULT NULL,\\n  `order_account_id_aggregate_stddev_samp_100008` double(26,4) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  `order_order_id_aggregate_stddev_samp_100011` double(26,4) DEFAULT NULL,\\n  `loan_date_directField_timeColumn_100086` date DEFAULT NULL,\\n  `client_district_id_aggregate_avg_100015` decimal(14,4) DEFAULT NULL,\\n  `order_account_to_aggregate_max_100042` int(11) DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100020` decimal(14,4) DEFAULT NULL,\\n  `account_date_directField_timeColumn_100084` date DEFAULT NULL,\\n  `district_A6_directField_numericalColumn_100074` int(11) DEFAULT NULL,\\n  `order_account_id_aggregate_sum_100052` decimal(32,0) DEFAULT NULL,\\n  `district_A3_directField_nominalColumn_100059` varchar(15) DEFAULT NULL,\\n  `disp_account_id_aggregate_sum_100049` decimal(32,0) DEFAULT NULL,\\n  `client_client_id_aggregate_sum_100047` decimal(32,0) DEFAULT NULL,\\n  `order_order_id_aggregate_sum_100055` decimal(32,0) DEFAULT NULL,\\n  `client_client_id_aggregate_avg_100014` decimal(14,4) DEFAULT NULL,\\n  `disp_disp_id_aggregate_sum_100051` decimal(32,0) DEFAULT NULL,\\n  `district_A11_directField_numericalColumn_100066` int(11) DEFAULT NULL,\\n  `district_A10_directField_numericalColumn_100065` decimal(4,1) DEFAULT NULL,\\n  `order_amount_aggregate_sum_100054` decimal(28,1) DEFAULT NULL,\\n  `client_district_id_aggregate_sum_100046` decimal(32,0) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100021` decimal(10,5) DEFAULT NULL,\\n  `order_amount_aggregate_min_100032` decimal(6,1) DEFAULT NULL,\\n  `loan_amount_directField_numericalColumn_100080` int(11) DEFAULT NULL,\\n  `district_A16_directField_numericalColumn_100071` int(11) DEFAULT NULL,\\n  `client_client_id_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `order_amount_aggregate_max_100043` decimal(6,1) DEFAULT NULL,\\n  `district_A15_directField_numericalColumn_100070` int(5) DEFAULT NULL,\\n  `district_A13_directField_numericalColumn_100068` decimal(3,2) DEFAULT NULL,\\n  `district_A12_directField_numericalColumn_100067` decimal(4,1) DEFAULT NULL,\\n  `loan_payments_directField_numericalColumn_100083` decimal(6,2) DEFAULT NULL,\\n  `district_A14_directField_numericalColumn_100069` int(11) DEFAULT NULL,\\n  `district_A5_directField_numericalColumn_100073` int(11) DEFAULT NULL,\\n  `client_district_id_aggregate_sum_100048` decimal(32,0) DEFAULT NULL,\\n  `district_A7_directField_numericalColumn_100075` int(11) DEFAULT NULL,\\n  `district_A9_directField_numericalColumn_100077` int(11) DEFAULT NULL,\\n  `order_account_to_aggregate_stddev_samp_100009` double(26,4) DEFAULT NULL,\\n  `account_frequency_directField_nominalColumn_100056` varchar(18) DEFAULT '',\\n  `district_A8_directField_numericalColumn_100076` int(6) DEFAULT NULL,\\n  `card_card_id_directField_numericalColumn_100063` int(11) DEFAULT 0,\\n  `card_type_directField_nominalColumn_100057` varchar(7) DEFAULT NULL,\\n  `client_district_id_aggregate_stddev_samp_100002` double(26,4) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de ms mutagénesis con las columnas de, identificador propagado, fecha propagada, objetivo propagado, molécula logp ind ratio, molécula logp inda ratio, carga atómica agregada stddev samp, tipo de átomo agregada stddev samp, carga atómica promedio agregada, tipo de átomo agregada promedio, carga atómica agregada min, tipo de átomo agregada min , carga atómica agregada máx , tipo de átomo agregada máx , carga atómica agregada suma , tipo de átomo agregada suma , tipo de enlace agregada stddev samp , tipo de enlace agregada avg , tipo de enlace agregada min , tipo de enlace agregada máx , tipo de enlace agregada suma , carga atómica agregado Promedio distinto, agregado de tipo de átomo Promedio distinto, agregado de carga de átomo Suma distinta, agregado de tipo de átomo Suma distinta, agregado de tipo de enlace Promedio distinto, agregado de tipo de enlace Suma distinta, agregado de carga de átomo Rango, agregado de tipo de átomo Rango, agregado de tipo de enlace Rango, átomo elemento carga agregada Subgrupo stddev samp c , átomo elemento carga agregada Subgrupo stddev samp h , átomo elemento carga agregada Subgrupo stddev samp o , átomo elemento carga agregado Subgrupo stddev samp n , átomo elemento carga agregado Subgrupo stddev samp f , átomo elemento tipo agregado Subgrupo stddev samp c , átomo elemento tipo agregado Subgrupo stddev samp h , átomo elemento tipo agregado Subgrupo stddev samp o , átomo elemento tipo agregado Subgrupo stddev samp n , átomo elemento tipo agregado Subgrupo stddev samp f , átomo elemento carga agregado Subgrupo avg c , átomo elemento carga agregado Subgrupo avg h , átomo elemento carga agregado Subgrupo avg o , átomo elemento carga agregado Subgrupo avg n , átomo elemento carga agregado Subgrupo avg f , átomo elemento tipo agregado Subgrupo avg c , átomo elemento tipo agregado Subgrupo avg h , átomo elemento tipo agregado Subgrupo avg o , átomo elemento tipo agregado Subgrupo avg n , átomo elemento tipo agregado Subgrupo avg f , átomo elemento carga agregado Subgrupo min c , átomo elemento carga agregada Subgrupo min h , átomo elemento carga agregada Subgrupo min o , átomo elemento carga agregada Subgrupo min n , átomo elemento carga agregado Subgrupo min f , átomo elemento tipo agregado Subgrupo min c , átomo elemento tipo agregado Subgrupo min h , átomo elemento tipo agregado Subgrupo min o , átomo elemento tipo agregado Subgrupo min n , átomo elemento tipo agregado Subgrupo min f , agregado de carga del elemento del átomo Subgrupo máx c , agregado de carga del elemento del átomo Subgrupo máx h , agregado de carga del elemento del átomo Subgrupo máx o , agregado de carga del elemento del átomo Subgrupo máx n , agregado de carga del elemento del átomo Subgrupo máx f",
      "output": "('ms_mutagenesis', \"CREATE TABLE `ms_mutagenesis` (\\n  `propagated_id` char(4) NOT NULL DEFAULT ''  `propagated_date` char(4) NOT NULL DEFAULT '',\\n  `propagated_target` char(3) DEFAULT NULL,\\n  `molecule_logp_ind1_ratio_100141` double DEFAULT NULL,\\n  `molecule_logp_inda_ratio_100142` double DEFAULT NULL,\\n  `atom_charge_aggregate_stddev_samp_100001` double DEFAULT NULL,\\n  `atom_type_aggregate_stddev_samp_100002` double(26,4) DEFAULT NULL,\\n  `atom_charge_aggregate_avg_100003` double DEFAULT NULL,\\n  `atom_type_aggregate_avg_100004` decimal(14,4) DEFAULT NULL,\\n  `atom_charge_aggregate_min_100005` double DEFAULT NULL,\\n  `atom_type_aggregate_min_100006` int(11) DEFAULT NULL,\\n  `atom_charge_aggregate_max_100007` double DEFAULT NULL,\\n  `atom_type_aggregate_max_100008` int(11) DEFAULT NULL,\\n  `atom_charge_aggregate_sum_100009` double DEFAULT NULL,\\n  `atom_type_aggregate_sum_100010` decimal(32,0) DEFAULT NULL,\\n  `bond_type_aggregate_stddev_samp_100011` double(26,4) DEFAULT NULL,\\n  `bond_type_aggregate_avg_100012` decimal(14,4) DEFAULT NULL,\\n  `bond_type_aggregate_min_100013` int(11) DEFAULT NULL,\\n  `bond_type_aggregate_max_100014` int(11) DEFAULT NULL,\\n  `bond_type_aggregate_sum_100015` decimal(32,0) DEFAULT NULL,\\n  `atom_charge_aggregateDistinct_avg_100018` double DEFAULT NULL,\\n  `atom_type_aggregateDistinct_avg_100019` decimal(14,4) DEFAULT NULL,\\n  `atom_charge_aggregateDistinct_sum_100020` double DEFAULT NULL,\\n  `atom_type_aggregateDistinct_sum_100021` decimal(32,0) DEFAULT NULL,\\n  `bond_type_aggregateDistinct_avg_100023` decimal(14,4) DEFAULT NULL,\\n  `bond_type_aggregateDistinct_sum_100024` decimal(32,0) DEFAULT NULL,\\n  `atom_charge_aggregateRange_100025` double DEFAULT NULL,\\n  `atom_type_aggregateRange_100026` bigint(12) DEFAULT NULL,\\n  `bond_type_aggregateRange_100027` bigint(12) DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_stddev_samp_c_100040` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_stddev_samp_h_100041` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_stddev_samp_o_100042` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_stddev_samp_n_100043` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_stddev_samp_f_100044` double DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_stddev_samp_c_100045` double(26,4) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_stddev_samp_h_100046` double(26,4) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_stddev_samp_o_100047` double(26,4) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_stddev_samp_n_100048` double(26,4) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_stddev_samp_f_100049` double(26,4) DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_avg_c_100050` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_avg_h_100051` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_avg_o_100052` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_avg_n_100053` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_avg_f_100054` double DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_avg_c_100055` decimal(14,4) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_avg_h_100056` decimal(14,4) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_avg_o_100057` decimal(14,4) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_avg_n_100058` decimal(14,4) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_avg_f_100059` decimal(14,4) DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_min_c_100060` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_min_h_100061` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_min_o_100062` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_min_n_100063` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_min_f_100064` double DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_min_c_100065` int(11) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_min_h_100066` int(11) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_min_o_100067` int(11) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_min_n_100068` int(11) DEFAULT NULL,\\n  `atom_element_type_aggregateSubgroup_min_f_100069` int(11) DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_max_c_100070` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_max_h_100071` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_max_o_100072` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_max_n_100073` double DEFAULT NULL,\\n  `atom_element_charge_aggregateSubgroup_max_f_100074` double DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de pero tu con las columnas de, identificación propagada, identificación propagada, fecha propagada, destino propagado, viajes puerto de llegada directo Campo columna nominal, número de viajes directo Campo numérico Columna, viajes próximo viaje directo Campo numérico Columna, cámara de viajes directo Campo nominal Columna, número total directo Campo numérico Columna, viajes salida puerto directo Campo nominal Columna, número de marinos directo Campo numérico Columna, soldados número directo Campo numérico Columna, soldados a bordo a la salida directo Campo numérico Colum, viajes número sup directo Campo nominal Columna, viajes tipo de barco directo Campo nominal Columna, viajes astillero Campo directo Columna nominal , tonelaje de viajes Campo directo Columna numérica , número de pasajeros Campo directo Columna numérica , gente de mar a bordo a la salida Campo directo Colu numérico , número de facturas promediado total , número de artesanos Campo directo Columna numérica , total a bordo a la salida Campo directo Columna numérica , viajes nominado de campo directo construido al Columna , soldados dejados en el cabo directo Campo numérico Columna , viajes comprados directo Campo nominal Columna , maestro de viajes directo Campo nominal Columna , viajes nombre del barco directo Campo nominal Columna , gente de mar a bordo a la llegada directo Campo numérico Columna , viajes artificial id directo Campo nominal Columna , datos de los viajes directo Campo nominal Columna , total dejado en el cabo directo Campo numérico Columna , viajes contratados directo Campo nominal Columna , soldados a bordo a la llegada directo Campo numérico Columna , muerte total durante el viaje directo Campo numérico Columna , gente de mar muerta durante el viaje directo Campo numérico Columna , número de facturas suma total , muerte total en el cabo directo Campo numérico Columna , viaje total directo Campo numérico Columna , artesanos a bordo a la llegada directo Campo numérico Columna , viajes viaje directo Campo numérico Columna , pasajeros a bordo a la llegada directo Campo numérico Columna , gente de mar a bordo en el cabo columna numérica de campo directo, soldados muerte durante el viaje directo Campo numérico Columna , número impotente directo Campo numérico Columna , soldados a bordo en el cabo directo Campo numérico Columna , viajes cabo llamado directo Campo nominal Columna , facturas factura total promedio , facturas factura suma total , pasajeros muerte en cabo directo Campo numérico Columna , facturas factura total mín , impotente a bordo a la salida directo Campo numérico Col , facturas factura total máx , facturas viaje total máx , facturas viaje total mínimo , facturas viaje total promedio , total a bordo a la llegada directo Campo numérico Columna , artesano muerte durante el viaje directo Campo columna numérica, muerte de marineros en el cabo directo Campo numérico Columna, facturas factura agregada stddev samp, pasajeros dejados en el cabo directo Campo numérico Columna, marineros dejados en el cabo directo Campo numérico Columna, artesanos dejados en el cabo directo Campo numérico Columna, facturas viaje suma total, pasajeros a bordo en Cape Direct Field n Columna numérica, campo directo de viaje de pasajeros Columna numérica, muerte de soldados en el cabo Campo directo Columna numérica, pasajeros a bordo en el campo directo de salida Columna numérica, artesanos a bordo en el cabo directo Campo numérico Columna, viaje de marineros directo Campo numérico Columna, viaje de soldados directo Campo numérico Columna , facturas viaje agregado stddev samp , número de facturas agregado stddev samp , total a bordo en cabo directo Campo numérico Columna , artesanos viaje directo Campo numérico Columna , muerte de pasajeros durante el viaje directo Campo numérico Colu , viaje impotente directo Campo numérico Columna , artesanos muertos en cabo directo Campo numérico Columna , número de soldados sup directo Campo nominal Columna , número de marinos sup directo Campo nominal Columna , artesanos a bordo a la salida directo Campo numérico Colu , número de artesanos sup directo Campo nominal Columna , viaje total sup directo Campo nominal Columna , viajes viaje sup directo Campo Columna nominal, número impotente sup directo Campo nominal Columna , viaje marineros sup directo Campo nominal Columna , viaje soldados sup directo Campo nominal Columna , cabo viajes salida directa Campo tiempo Columna , cabo viajes llegada directo Campo tiempo Columna , número total sup directo Campo nominal Columna , número de pasajeros sup directo Campo nominal Columna , viaje artesano sup directo Campo nominal Columna , viaje impotente sup directo Campo nominal Columna , muerte impotente en cabo directo Campo numérico Columna , fecha de llegada del viaje directo Campo hora Columna",
      "output": "('ms_voc', \"CREATE TABLE `ms_voc` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_id2` char(1) NOT NULL DEFAULT '',\\n  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(30) DEFAULT NULL,\\n  `voyages_arrival_harbour_directField_nominalColumn_100028` varchar(30) DEFAULT NULL,\\n  `voyages_number_directField_numericalColumn_100092` int(11) DEFAULT NULL,\\n  `voyages_next_voyage_directField_numericalColumn_100091` int(11) DEFAULT NULL,\\n  `voyages_chamber_directField_nominalColumn_100034` char(1) DEFAULT NULL,\\n  `total_number_directField_numericalColumn_100086` int(11) DEFAULT NULL,\\n  `voyages_departure_harbour_directField_nominalColumn_100035` varchar(30) DEFAULT NULL,\\n  `seafarers_number_directField_numericalColumn_100070` int(11) DEFAULT NULL,\\n  `soldiers_number_directField_numericalColumn_100078` int(11) DEFAULT NULL,\\n  `soldiers_onboard_at_departure_directField_numericalColum_100081` int(11) DEFAULT NULL,\\n  `voyages_number_sup_directField_nominalColumn_100038` char(1) DEFAULT NULL,\\n  `voyages_type_of_boat_directField_nominalColumn_100041` varchar(30) DEFAULT NULL,\\n  `voyages_yard_directField_nominalColumn_100042` char(1) DEFAULT NULL,\\n  `voyages_tonnage_directField_numericalColumn_100093` int(11) DEFAULT NULL,\\n  `passengers_number_directField_numericalColumn_100062` int(11) DEFAULT NULL,\\n  `seafarers_onboard_at_departure_directField_numericalColu_100073` int(11) DEFAULT NULL,\\n  `invoices_number_aggregate_avg_100005` decimal(14,4) DEFAULT NULL,\\n  `craftsmen_number_directField_numericalColumn_100046` int(11) DEFAULT NULL,\\n  `total_onboard_at_departure_directField_numericalColumn_100089` int(11) DEFAULT NULL,\\n  `voyages_built_directField_nominalColumn_100032` varchar(15) DEFAULT NULL,\\n  `soldiers_left_at_cape_directField_numericalColumn_100077` int(11) DEFAULT NULL,\\n  `voyages_bought_directField_nominalColumn_100031` varchar(15) DEFAULT NULL,\\n  `voyages_master_directField_nominalColumn_100037` varchar(50) DEFAULT NULL,\\n  `voyages_boatname_directField_nominalColumn_100030` varchar(50) DEFAULT NULL,\\n  `seafarers_onboard_at_arrival_directField_numericalColumn_100071` int(11) DEFAULT NULL,\\n  `voyages_artificial_id_directField_nominalColumn_100029` char(12) DEFAULT NULL,\\n  `voyages_particulars_directField_nominalColumn_100039` text DEFAULT NULL,\\n  `total_left_at_cape_directField_numericalColumn_100085` int(11) DEFAULT NULL,\\n  `voyages_hired_directField_nominalColumn_100036` varchar(15) DEFAULT NULL,\\n  `soldiers_onboard_at_arrival_directField_numericalColumn_100079` int(11) DEFAULT NULL,\\n  `total_death_during_voyage_directField_numericalColumn_100084` int(11) DEFAULT NULL,\\n  `seafarers_death_during_voyage_directField_numericalColum_100068` int(11) DEFAULT NULL,\\n  `invoices_number_aggregate_sum_100014` decimal(32,0) DEFAULT NULL,\\n  `total_death_at_cape_directField_numericalColumn_100083` int(11) DEFAULT NULL,\\n  `total_trip_directField_numericalColumn_100090` int(11) DEFAULT NULL,\\n  `craftsmen_onboard_at_arrival_directField_numericalColumn_100047` int(11) DEFAULT NULL,\\n  `voyages_trip_directField_numericalColumn_100094` int(11) DEFAULT NULL,\\n  `passengers_onboard_at_arrival_directField_numericalColum_100063` int(11) DEFAULT NULL,\\n  `seafarers_onboard_at_cape_directField_numericalColumn_100072` int(11) DEFAULT NULL,\\n  `soldiers_death_during_voyage_directField_numericalColumn_100076` int(11) DEFAULT NULL,\\n  `impotenten_number_directField_numericalColumn_100054` int(11) DEFAULT NULL,\\n  `soldiers_onboard_at_cape_directField_numericalColumn_100080` int(11) DEFAULT NULL,\\n  `voyages_cape_call_directField_nominalColumn_100033` varchar(5) DEFAULT NULL,\\n  `invoices_invoice_aggregate_avg_100004` decimal(14,4) DEFAULT NULL,\\n  `invoices_invoice_aggregate_sum_100013` decimal(32,0) DEFAULT NULL,\\n  `passengers_death_at_cape_directField_numericalColumn_100059` int(11) DEFAULT NULL,\\n  `invoices_invoice_aggregate_min_100007` int(11) DEFAULT NULL,\\n  `impotenten_onboard_at_departure_directField_numericalCol_100057` int(11) DEFAULT NULL,\\n  `invoices_invoice_aggregate_max_100010` int(11) DEFAULT NULL,\\n  `invoices_trip_aggregate_max_100012` int(11) DEFAULT NULL,\\n  `invoices_trip_aggregate_min_100009` int(11) DEFAULT NULL,\\n  `invoices_trip_aggregate_avg_100006` decimal(14,4) DEFAULT NULL,\\n  `total_onboard_at_arrival_directField_numericalColumn_100087` int(11) DEFAULT NULL,\\n  `craftsmen_death_during_voyage_directField_numericalColum_100044` int(11) DEFAULT NULL,\\n  `seafarers_death_at_cape_directField_numericalColumn_100067` int(11) DEFAULT NULL,\\n  `invoices_invoice_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  `passengers_left_at_cape_directField_numericalColumn_100061` int(11) DEFAULT NULL,\\n  `seafarers_left_at_cape_directField_numericalColumn_100069` int(11) DEFAULT NULL,\\n  `craftsmen_left_at_cape_directField_numericalColumn_100045` int(11) DEFAULT NULL,\\n  `invoices_trip_aggregate_sum_100015` decimal(32,0) DEFAULT NULL,\\n  `passengers_onboard_at_cape_directField_numericalColumn_100064` int(11) DEFAULT NULL,\\n  `passengers_trip_directField_numericalColumn_100066` int(11) DEFAULT NULL,\\n  `soldiers_death_at_cape_directField_numericalColumn_100075` int(11) DEFAULT NULL,\\n  `passengers_onboard_at_departure_directField_numericalCol_100065` int(11) DEFAULT NULL,\\n  `craftsmen_onboard_at_cape_directField_numericalColumn_100048` int(11) DEFAULT NULL,\\n  `seafarers_trip_directField_numericalColumn_100074` int(11) DEFAULT NULL,\\n  `soldiers_trip_directField_numericalColumn_100082` int(11) DEFAULT NULL,\\n  `invoices_trip_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  `invoices_number_aggregate_stddev_samp_100002` double(26,4) DEFAULT NULL,\\n  `total_onboard_at_cape_directField_numericalColumn_100088` int(11) DEFAULT NULL,\\n  `craftsmen_trip_directField_numericalColumn_100050` int(11) DEFAULT NULL,\\n  `passengers_death_during_voyage_directField_numericalColu_100060` int(11) DEFAULT NULL,\\n  `impotenten_trip_directField_numericalColumn_100058` int(11) DEFAULT NULL,\\n  `craftsmen_death_at_cape_directField_numericalColumn_100043` int(11) DEFAULT NULL,\\n  `soldiers_number_sup_directField_nominalColumn_100024` char(1) DEFAULT NULL,\\n  `seafarers_number_sup_directField_nominalColumn_100022` char(1) DEFAULT NULL,\\n  `craftsmen_onboard_at_departure_directField_numericalColu_100049` int(11) DEFAULT NULL,\\n  `craftsmen_number_sup_directField_nominalColumn_100016` char(1) DEFAULT NULL,\\n  `total_trip_sup_directField_nominalColumn_100027` char(1) DEFAULT NULL,\\n  `voyages_trip_sup_directField_nominalColumn_100040` char(1) DEFAULT NULL,\\n  `impotenten_number_sup_directField_nominalColumn_100018` char(1) DEFAULT NULL,\\n  `seafarers_trip_sup_directField_nominalColumn_100023` char(1) DEFAULT NULL,\\n  `soldiers_trip_sup_directField_nominalColumn_100025` char(1) DEFAULT NULL,\\n  `voyages_cape_departure_directField_timeColumn_100097` date DEFAULT NULL,\\n  `voyages_cape_arrival_directField_timeColumn_100096` date DEFAULT NULL,\\n  `total_number_sup_directField_nominalColumn_100026` char(1) DEFAULT NULL,\\n  `passengers_number_sup_directField_nominalColumn_100020` char(1) DEFAULT NULL,\\n  `craftsmen_trip_sup_directField_nominalColumn_100017` char(1) DEFAULT NULL,\\n  `impotenten_trip_sup_directField_nominalColumn_100019` char(1) DEFAULT NULL,\\n  `impotenten_death_at_cape_directField_numericalColumn_100051` int(11) DEFAULT NULL,\\n  `voyages_arrival_date_directField_timeColumn_100095` date DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de pasajeros con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('passengers', 'CREATE TABLE `passengers` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) DEFAULT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `passengers_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de clave con las columnas de, businessentityid, hash de contraseña, passwordsalt, rowguid, fecha de modificación",
      "output": "('password', \"CREATE TABLE `password` (\\n  `businessentityid` int(11) NOT NULL  `passwordhash` varchar(128) NOT NULL COMMENT 'Password for the e-mail account.',\\n  `passwordsalt` varchar(10) NOT NULL COMMENT 'Random value concatenated with the password string before the password is hashed.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='One way hashed authentication information'\")"
    },
    {
      "input": "Una tabla de pago con las columnas de, nº de pago, nº de miembro, dt de pago, importe de pago, nº de estado de cuenta, código de pago",
      "output": "('payment', 'CREATE TABLE `payment` (\\n  `payment_no` int(11) NOT NULL  `member_no` int(11) NOT NULL,\\n  `payment_dt` datetime NOT NULL,\\n  `payment_amt` decimal(19,4) NOT NULL,\\n  `statement_no` int(11) DEFAULT NULL,\\n  `payment_code` char(2) NOT NULL,\\n  PRIMARY KEY (`payment_no`),\\n  KEY `payment_statement_no` (`statement_no`),\\n  KEY `payment_member_no` (`member_no`),\\n  CONSTRAINT `payment_ibfk_1` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de persona con las columnas de, ID de entidad comercial, tipo de persona, estilo de nombre, título, nombre, segundo nombre, apellido, sufijo, promoción de correo electrónico, información de contacto adicional, datos demográficos, ID de fila, fecha modificada",
      "output": "('person', \"CREATE TABLE `person` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key for Person records.'  `persontype` char(2) NOT NULL COMMENT 'Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact',\\n  `namestyle` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.',\\n  `title` varchar(8) DEFAULT NULL COMMENT 'A courtesy title. For example, Mr. or Ms.',\\n  `firstname` varchar(100) NOT NULL COMMENT 'First name of the person.',\\n  `middlename` varchar(100) DEFAULT NULL COMMENT 'Middle name or middle initial of the person.',\\n  `lastname` varchar(100) NOT NULL COMMENT 'Last name of the person.',\\n  `suffix` varchar(10) DEFAULT NULL COMMENT 'Surname suffix. For example, Sr. or Jr.',\\n  `emailpromotion` int(11) NOT NULL DEFAULT 0 COMMENT '0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. ',\\n  `additionalcontactinfo` text DEFAULT NULL COMMENT 'Additional contact information about the person stored in xml format. ',\\n  `demographics` text DEFAULT NULL COMMENT 'Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.'\")"
    },
    {
      "input": "Una tabla de personacreditcard con las columnas de, ID de entidad comercial, ID de tarjeta de crédito, fecha de modificación",
      "output": "('personcreditcard', \"CREATE TABLE `personcreditcard` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Business entity identification number. Foreign key to Person.BusinessEntityID.'  `creditcardid` int(11) NOT NULL COMMENT 'Credit card identification number. Foreign key to CreditCard.CreditCardID.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`,`creditcardid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping people to their credit card information in the CreditCard table. '\")"
    },
    {
      "input": "Una tabla de perséfone con las columnas de, identificación de entidad comercial, número de teléfono, identificación de tipo de número de teléfono, fecha de modificación",
      "output": "('personphone', \"CREATE TABLE `personphone` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Business entity identification number. Foreign key to Person.BusinessEntityID.'  `phonenumber` varchar(50) NOT NULL COMMENT 'Telephone number identification number.',\\n  `phonenumbertypeid` int(11) NOT NULL COMMENT 'Kind of phone number. Foreign key to PhoneNumberType.PhoneNumberTypeID.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`,`phonenumber`,`phonenumbertypeid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Telephone number and type of a person.'\")"
    },
    {
      "input": "Una tabla de modelo de dispositivo de marca de teléfono con las columnas de, ID de dispositivo, marca de teléfono, modelo de dispositivo",
      "output": "('phone_brand_device_model2', 'CREATE TABLE `phone_brand_device_model2` (\\n  `device_id` bigint(20) NOT NULL  `phone_brand` varchar(255) NOT NULL,\\n  `device_model` varchar(255) NOT NULL,\\n  PRIMARY KEY (`device_id`,`phone_brand`,`device_model`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipo de número de teléfono con las columnas de, ID de tipo de número de teléfono, nombre, fecha de modificación",
      "output": "('phonenumbertype', \"CREATE TABLE `phonenumbertype` (\\n  `phonenumbertypeid` int(11) NOT NULL COMMENT 'Primary key for telephone number type records.'  `name` varchar(100) NOT NULL COMMENT 'Name of the telephone number type',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`phonenumbertypeid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Type of phone number of a person.'\")"
    },
    {
      "input": "Una tabla de Historial de publicaciones con las columnas de, ID, ID de tipo de historial de publicación, ID de publicación, ID de G U de revisión, fecha de creación, ID de usuario, texto, comentario, nombre para mostrar del usuario",
      "output": "('postHistory', 'CREATE TABLE `postHistory` (\\n  `Id` int(11) NOT NULL  `PostHistoryTypeId` int(11) DEFAULT NULL,\\n  `PostId` int(11) DEFAULT NULL,\\n  `RevisionGUID` varchar(255) DEFAULT NULL,\\n  `CreationDate` datetime DEFAULT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  `Text` longtext DEFAULT NULL,\\n  `Comment` text DEFAULT NULL,\\n  `UserDisplayName` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  UNIQUE KEY `postHistory_Id_key` (`Id`),\\n  KEY `postHistory_UserId_fkey` (`UserId`),\\n  KEY `postHistory_PostId_fkey` (`PostId`),\\n  CONSTRAINT `postHistory_PostId_fkey` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `postHistory_UserId_fkey` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de publicar enlaces con las columnas de, Id., Fecha de creación, Id. de publicación, Id. de publicación relacionada, Id. de tipo de enlace",
      "output": "('postLinks', 'CREATE TABLE `postLinks` (\\n  `Id` int(11) NOT NULL  `CreationDate` datetime DEFAULT NULL,\\n  `PostId` int(11) DEFAULT NULL,\\n  `RelatedPostId` int(11) DEFAULT NULL,\\n  `LinkTypeId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `postlinks_stripped_PostId_fkey` (`PostId`),\\n  KEY `postlinks_stripped_RelatedPostId_fkey` (`RelatedPostId`),\\n  CONSTRAINT `postlinks_stripped_PostId_fkey` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `postlinks_stripped_RelatedPostId_fkey` FOREIGN KEY (`RelatedPostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de publicaciones con las columnas de, ID, ID de tipo de publicación, ID de respuesta aceptada, fecha de creación, puntuación, recuento de vistas, cuerpo, ID de usuario propietario, última fecha de actividad, título, etiquetas, recuento de respuestas, recuento de comentarios, recuento de favoritos, ID de usuario del último editor, fecha de última edición , Fecha de propiedad de la comunidad, ID principal, Fecha de cierre, Nombre para mostrar del propietario, Nombre para mostrar del último editor",
      "output": "('posts', 'CREATE TABLE `posts` (\\n  `Id` int(11) NOT NULL  `PostTypeId` int(11) DEFAULT NULL,\\n  `AcceptedAnswerId` int(11) DEFAULT NULL,\\n  `CreaionDate` datetime DEFAULT NULL,\\n  `Score` int(11) DEFAULT NULL,\\n  `ViewCount` int(11) DEFAULT NULL,\\n  `Body` longtext DEFAULT NULL,\\n  `OwnerUserId` int(11) DEFAULT NULL,\\n  `LasActivityDate` datetime DEFAULT NULL,\\n  `Title` varchar(255) DEFAULT NULL,\\n  `Tags` varchar(255) DEFAULT NULL,\\n  `AnswerCount` int(11) DEFAULT NULL,\\n  `CommentCount` int(11) DEFAULT NULL,\\n  `FavoriteCount` int(11) DEFAULT NULL,\\n  `LastEditorUserId` int(11) DEFAULT NULL,\\n  `LastEditDate` datetime DEFAULT NULL,\\n  `CommunityOwnedDate` datetime DEFAULT NULL,\\n  `ParentId` int(11) DEFAULT NULL,\\n  `ClosedDate` datetime DEFAULT NULL,\\n  `OwnerDisplayName` varchar(255) DEFAULT NULL,\\n  `LastEditorDisplayName` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  UNIQUE KEY `posts_Id_key` (`Id`),\\n  KEY `posts_ParentId_fkey` (`ParentId`),\\n  KEY `posts_OwnerUserId_fkey` (`OwnerUserId`),\\n  KEY `posts_LastEditorUserId_fkey` (`LastEditorUserId`),\\n  CONSTRAINT `posts_LastEditorUserId_fkey` FOREIGN KEY (`LastEditorUserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `posts_OwnerUserId_fkey` FOREIGN KEY (`OwnerUserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `posts_ParentId_fkey` FOREIGN KEY (`ParentId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, destino propagado, cuenta de pedido para agregar stddev samp",
      "output": "('predictor100001', \"CREATE TABLE `predictor100001` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_account_to_aggregate_stddev_samp_100001` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, destino propagado, monto del pedido agregado stddev samp",
      "output": "('predictor100002', \"CREATE TABLE `predictor100002` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_amount_aggregate_stddev_samp_100002` double(18,5) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, muestra de stddev agregada de cuenta trans",
      "output": "('predictor100003', \"CREATE TABLE `predictor100003` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_account_aggregate_stddev_samp_100003` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, destino propagado, cantidad trans agregada stddev samp",
      "output": "('predictor100004', \"CREATE TABLE `predictor100004` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_amount_aggregate_stddev_samp_100004` double(26,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, cuenta de pedido para agregar promedio",
      "output": "('predictor100006', \"CREATE TABLE `predictor100006` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_account_to_aggregate_avg_100006` decimal(14,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, identificador propagado, fecha propagada, objetivo propagado, cantidad de pedido agregado promedio",
      "output": "('predictor100007', \"CREATE TABLE `predictor100007` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_amount_aggregate_avg_100007` decimal(10,5) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, objetivo propagado, promedio agregado de cuenta trans",
      "output": "('predictor100008', \"CREATE TABLE `predictor100008` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_account_aggregate_avg_100008` decimal(14,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, destino propagado, monto mínimo agregado del pedido",
      "output": "('predictor100012', \"CREATE TABLE `predictor100012` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_amount_aggregate_min_100012` decimal(6,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, mínimo agregado de cuenta trans",
      "output": "('predictor100013', \"CREATE TABLE `predictor100013` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_account_aggregate_min_100013` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, identificador propagado, fecha propagada, objetivo propagado, cantidad trans agregada mínima",
      "output": "('predictor100014', \"CREATE TABLE `predictor100014` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_amount_aggregate_min_100014` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, objetivo propagado, balance agregado mínimo trans",
      "output": "('predictor100015', \"CREATE TABLE `predictor100015` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_balance_aggregate_min_100015` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, objetivo propagado, orden de cuenta para agregar máximo",
      "output": "('predictor100016', \"CREATE TABLE `predictor100016` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_account_to_aggregate_max_100016` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, identificador propagado, fecha propagada, destino propagado, cantidad máxima agregada del pedido",
      "output": "('predictor100017', \"CREATE TABLE `predictor100017` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `order_amount_aggregate_max_100017` decimal(6,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, objetivo propagado, máximo agregado de cuenta trans",
      "output": "('predictor100018', \"CREATE TABLE `predictor100018` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_account_aggregate_max_100018` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, objetivo propagado, cantidad máxima agregada trans",
      "output": "('predictor100019', \"CREATE TABLE `predictor100019` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_amount_aggregate_max_100019` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, identificador propagado, fecha propagada, objetivo propagado, máximo agregado de saldo trans",
      "output": "('predictor100020', \"CREATE TABLE `predictor100020` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_balance_aggregate_max_100020` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, suma agregada de cuenta trans",
      "output": "('predictor100023', \"CREATE TABLE `predictor100023` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `trans_account_aggregate_sum_100023` decimal(32,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, destino propagado, frecuencia de cuenta columna nominal de campo directo",
      "output": "('predictor100026', \"CREATE TABLE `predictor100026` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `account_frequency_directfield_nominalcolumn_100026` varchar(18) DEFAULT '',\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, tipo de tarjeta directfield nominalcolumn",
      "output": "('predictor100027', \"CREATE TABLE `predictor100027` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `card_type_directfield_nominalcolumn_100027` varchar(7) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, identificador propagado, fecha propagada, objetivo propagado, distrito una columna nominal de campo directo",
      "output": "('predictor100028', \"CREATE TABLE `predictor100028` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a2_directfield_nominalcolumn_100028` varchar(19) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, identificador propagado, fecha propagada, objetivo propagado, distrito una columna nominal de campo directo",
      "output": "('predictor100029', \"CREATE TABLE `predictor100029` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a3_directfield_nominalcolumn_100029` varchar(15) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, estado del préstamo directfield nominalcolumn",
      "output": "('predictor100030', \"CREATE TABLE `predictor100030` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_status_directfield_nominalcolumn_100030` varchar(1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100031', \"CREATE TABLE `predictor100031` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a10_directfield_numericalcolumn_100031` decimal(4,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100032', \"CREATE TABLE `predictor100032` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a11_directfield_numericalcolumn_100032` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100033', \"CREATE TABLE `predictor100033` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a12_directfield_numericalcolumn_100033` decimal(4,1) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100034', \"CREATE TABLE `predictor100034` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a13_directfield_numericalcolumn_100034` decimal(3,2) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100035', \"CREATE TABLE `predictor100035` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a14_directfield_numericalcolumn_100035` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100036', \"CREATE TABLE `predictor100036` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a15_directfield_numericalcolumn_100036` int(5) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100037', \"CREATE TABLE `predictor100037` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a16_directfield_numericalcolumn_100037` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100039', \"CREATE TABLE `predictor100039` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a5_directfield_numericalcolumn_100039` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100040', \"CREATE TABLE `predictor100040` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a6_directfield_numericalcolumn_100040` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100041', \"CREATE TABLE `predictor100041` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a7_directfield_numericalcolumn_100041` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100042', \"CREATE TABLE `predictor100042` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a8_directfield_numericalcolumn_100042` int(6) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, destino propagado, distrito una columna numérica de campo directo",
      "output": "('predictor100043', \"CREATE TABLE `predictor100043` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `district_a9_directfield_numericalcolumn_100043` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, ID propagado, fecha propagada, objetivo propagado, monto del préstamo campo directo columna numérica",
      "output": "('predictor100044', \"CREATE TABLE `predictor100044` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_amount_directfield_numericalcolumn_100044` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, identificación propagada, fecha propagada, objetivo propagado, duración del préstamo campo directo columna numérica",
      "output": "('predictor100045', \"CREATE TABLE `predictor100045` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_duration_directfield_numericalcolumn_100045` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, objetivo propagado, pagos de préstamos campo directo columna numérica",
      "output": "('predictor100046', \"CREATE TABLE `predictor100046` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_payments_directfield_numericalcolumn_100046` decimal(6,2) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, destino propagado, fecha de cuenta columna de tiempo de campo directo",
      "output": "('predictor100047', \"CREATE TABLE `predictor100047` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `account_date_directfield_timecolumn_100047` date DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, identificación propagada, fecha propagada, objetivo propagado, columna de tiempo de campo directo emitida por tarjeta",
      "output": "('predictor100048', \"CREATE TABLE `predictor100048` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `card_issued_directfield_timecolumn_100048` date DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de vaticinador con las columnas de, id propagado, fecha propagada, destino propagado, fecha de préstamo columna de tiempo de campo directo",
      "output": "('predictor100049', \"CREATE TABLE `predictor100049` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date NOT NULL DEFAULT '0000-00-00',\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `loan_date_directfield_timecolumn_100049` date DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de probehnuto con las columnas de, id de cliente, mes, año, fecha de la transacción, servicio, kc en el que se hizo clic",
      "output": "('probehnuto', 'CREATE TABLE `probehnuto` (\\n  `client_id` int(11) DEFAULT NULL  `month_year_datum_transakce` date NOT NULL,\\n  `sluzba` varchar(255) DEFAULT NULL,\\n  `kc_proklikano` decimal(10,2) NOT NULL,\\n  KEY `probehnuto_client_id` (`client_id`),\\n  CONSTRAINT `probehnuto_ibfk_1` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de probehnuto mimo penezenku con las columnas de, ID de cliente, Mes/Año, publicidad fuera de la billetera",
      "output": "('probehnuto_mimo_penezenku', 'CREATE TABLE `probehnuto_mimo_penezenku` (\\n  `client_id` int(11) NOT NULL  `Month/Year` date NOT NULL,\\n  `probehla_inzerce_mimo_penezenku` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`client_id`,`Month/Year`),\\n  KEY `probehnuto_mimo_penezenku_client_id` (`client_id`),\\n  CONSTRAINT `probehnuto_mimo_penezenku_ibfk_1` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de producto con las columnas de, ID de producto, nombre, número de producto, Marcar, Bandera de productos terminados, color, Nivel de seguridad, Punto de reorden, Costo estándar, Precio de lista, tamaño, Código de medida de tamaño, Código de medida de peso, peso, Días de fabricación, Línea de producto, clase, estilo, Productsubcategoryid, ID de modelo de producto, Fecha de inicio de venta, Fecha de finalización de venta, Fecha descontinuada, Rowguid, Fecha modificada",
      "output": "('product', \"CREATE TABLE `product` (\\n  `productid` int(11) NOT NULL COMMENT 'Primary key for Product records.'  `name` varchar(100) NOT NULL COMMENT 'Name of the product.',\\n  `productnumber` varchar(25) NOT NULL COMMENT 'Unique product identification number.',\\n  `makeflag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Product is purchased, 1 = Product is manufactured in-house.',\\n  `finishedgoodsflag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Product is not a salable item. 1 = Product is salable.',\\n  `color` varchar(15) DEFAULT NULL COMMENT 'Product color.',\\n  `safetystocklevel` smallint(6) NOT NULL COMMENT 'Minimum inventory quantity. ',\\n  `reorderpoint` smallint(6) NOT NULL COMMENT 'Inventory level that triggers a purchase order or work order. ',\\n  `standardcost` decimal(19,4) NOT NULL COMMENT 'Standard cost of the product.',\\n  `listprice` decimal(19,4) NOT NULL COMMENT 'Selling price.',\\n  `size` varchar(5) DEFAULT NULL COMMENT 'Product size.',\\n  `sizeunitmeasurecode` char(3) DEFAULT NULL COMMENT 'Unit of measure for Size column.',\\n  `weightunitmeasurecode` char(3) DEFAULT NULL COMMENT 'Unit of measure for Weight column.',\\n  `weight` decimal(8,2) DEFAULT NULL COMMENT 'Product weight.',\\n  `daystomanufacture` int(11) NOT NULL COMMENT 'Number of days required to manufacture the product.',\\n  `productline` char(2) DEFAULT NULL COMMENT 'R = Road, M = Mountain, T = Touring, S = Standard',\\n  `class` char(2) DEFAULT NULL COMMENT 'H = High, M = Medium, L = Low',\\n  `style` char(2) DEFAULT NULL COMMENT 'W = Womens, M = Mens, U = Universal',\\n  `productsubcategoryid` int(11) DEFAULT NULL COMMENT 'Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. ',\\n  `productmodelid` int(11) DEFAULT NULL COMMENT 'Product is a member of this product model. Foreign key to ProductModel.ProductModelID.',\\n  `sellstartdate` datetime NOT NULL COMMENT 'Date the product was available for sale.',\\n  `sellenddate` datetime DEFAULT NULL COMMENT 'Date the product was no longer available for sale.',\\n  `discontinueddate` datetime DEFAULT NULL COMMENT 'Date the product was discontinued.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Products sold or used in the manfacturing of sold products.'\")"
    },
    {
      "input": "Una tabla de categoria de producto con las columnas de, ID de categoría de producto, nombre, ID de fila, fecha de modificación",
      "output": "('productcategory', \"CREATE TABLE `productcategory` (\\n  `productcategoryid` int(11) NOT NULL COMMENT 'Primary key for ProductCategory records.'  `name` varchar(100) NOT NULL COMMENT 'Category description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productcategoryid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='High-level product categorization.'\")"
    },
    {
      "input": "Una tabla de productocostohistoria con las columnas de, ID de producto, fecha de inicio, fecha de finalización, costo estándar, fecha de modificación",
      "output": "('productcosthistory', \"CREATE TABLE `productcosthistory` (\\n  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID'  `startdate` datetime NOT NULL COMMENT 'Product cost start date.',\\n  `enddate` datetime DEFAULT NULL COMMENT 'Product cost end date.',\\n  `standardcost` decimal(19,4) NOT NULL COMMENT 'Standard cost of the product.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productid`,`startdate`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Changes in the cost of a product over time.'\")"
    },
    {
      "input": "Una tabla de Descripción del Producto con las columnas de, ID de descripción de producto, descripción, ID de fila, fecha de modificación",
      "output": "('productdescription', \"CREATE TABLE `productdescription` (\\n  `productdescriptionid` int(11) NOT NULL COMMENT 'Primary key for ProductDescription records.'  `description` varchar(400) NOT NULL COMMENT 'Description of the product.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productdescriptionid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product descriptions in several languages.'\")"
    },
    {
      "input": "Una tabla de productodocumento con las columnas de, ID de producto, nodo de documento, fecha de modificación",
      "output": "('productdocument', \"CREATE TABLE `productdocument` (\\n  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `documentnode` varchar(255) NOT NULL COMMENT 'Document identification number. Foreign key to Document.DocumentNode.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productid`,`documentnode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products to related product documents.'\")"
    },
    {
      "input": "Una tabla de inventario de productos con las columnas de, ID de producto, ID de ubicación, estante, contenedor, cantidad, ID de fila, fecha de modificación",
      "output": "('productinventory', \"CREATE TABLE `productinventory` (\\n  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `locationid` smallint(6) NOT NULL COMMENT 'Inventory location identification number. Foreign key to Location.LocationID. ',\\n  `shelf` varchar(10) NOT NULL COMMENT 'Storage compartment within an inventory location.',\\n  `bin` tinyint(3) unsigned NOT NULL COMMENT 'Storage container on a shelf in an inventory location.',\\n  `quantity` smallint(6) NOT NULL DEFAULT 0 COMMENT 'Quantity of products in the inventory location.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productid`,`locationid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product inventory information.'\")"
    },
    {
      "input": "Una tabla de lista de productos historia de precios con las columnas de, ID de producto, fecha de inicio, fecha de finalización, precio de catálogo, fecha de modificación",
      "output": "('productlistpricehistory', \"CREATE TABLE `productlistpricehistory` (\\n  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID'  `startdate` datetime NOT NULL COMMENT 'List price start date.',\\n  `enddate` datetime DEFAULT NULL COMMENT 'List price end date',\\n  `listprice` decimal(19,4) NOT NULL COMMENT 'Product list price.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productid`,`startdate`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Changes in the list price of a product over time.'\")"
    },
    {
      "input": "Una tabla de Modelo del Producto con las columnas de, ID de modelo de producto, nombre, descripción de catálogo, instrucciones, ID de fila, fecha de modificación",
      "output": "('productmodel', \"CREATE TABLE `productmodel` (\\n  `productmodelid` int(11) NOT NULL COMMENT 'Primary key for ProductModel records.'  `name` varchar(100) NOT NULL COMMENT 'Product model description.',\\n  `catalogdescription` text DEFAULT NULL COMMENT 'Detailed product catalog information in xml format.',\\n  `instructions` text DEFAULT NULL COMMENT 'Manufacturing instructions in xml format.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productmodelid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product model classification.'\")"
    },
    {
      "input": "Una tabla de productomodeloilustración con las columnas de, ID de modelo de producto, ID de ilustración, fecha de modificación",
      "output": "('productmodelillustration', \"CREATE TABLE `productmodelillustration` (\\n  `productmodelid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductModel.ProductModelID.'  `illustrationid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Illustration.IllustrationID.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productmodelid`,`illustrationid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping product models and illustrations.'\")"
    },
    {
      "input": "Una tabla de productomodeloproductodescripcióncultura con las columnas de, ID de modelo de producto, ID de descripción de producto, ID de cultura, fecha de modificación",
      "output": "('productmodelproductdescriptionculture', \"CREATE TABLE `productmodelproductdescriptionculture` (\\n  `productmodelid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductModel.ProductModelID.'  `productdescriptionid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to ProductDescription.ProductDescriptionID.',\\n  `cultureid` char(6) NOT NULL COMMENT 'Culture identification number. Foreign key to Culture.CultureID.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productmodelid`,`productdescriptionid`,`cultureid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping product descriptions and the language the description is written in.'\")"
    },
    {
      "input": "Una tabla de foto del producto con las columnas de, productphotoid, thumbnailphoto, thumbnailphotofilename, foto grande, nombre de archivo de foto grande, fecha modificada",
      "output": "('productphoto', \"CREATE TABLE `productphoto` (\\n  `productphotoid` int(11) NOT NULL COMMENT 'Primary key for ProductPhoto records.'  `thumbnailphoto` longblob DEFAULT NULL COMMENT 'Small image of the product.',\\n  `thumbnailphotofilename` varchar(50) DEFAULT NULL COMMENT 'Small image file name.',\\n  `largephoto` longblob DEFAULT NULL COMMENT 'Large image of the product.',\\n  `largephotofilename` varchar(50) DEFAULT NULL COMMENT 'Large image file name.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productphotoid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product images.'\")"
    },
    {
      "input": "Una tabla de foto del producto con las columnas de, ID de producto, ID de producto, principal, fecha de modificación",
      "output": "('productproductphoto', \"CREATE TABLE `productproductphoto` (\\n  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.'  `productphotoid` int(11) NOT NULL COMMENT 'Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.',\\n  `primary` tinyint(1) NOT NULL DEFAULT 0 COMMENT '0 = Photo is not the principal image. 1 = Photo is the principal image.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productid`,`productphotoid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products and product photos.'\")"
    },
    {
      "input": "Una tabla de revision de producto con las columnas de, productreviewid, productid, reviewername, reviewdate, emailaddress, rating, comments, modifieddate",
      "output": "('productreview', \"CREATE TABLE `productreview` (\\n  `productreviewid` int(11) NOT NULL COMMENT 'Primary key for ProductReview records.'  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `reviewername` varchar(100) NOT NULL COMMENT 'Name of the reviewer.',\\n  `reviewdate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date review was submitted.',\\n  `emailaddress` varchar(50) NOT NULL COMMENT 'Reviewer''s e-mail address.',\\n  `rating` int(11) NOT NULL COMMENT 'Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.',\\n  `comments` varchar(3850) DEFAULT NULL COMMENT 'Reviewer''s comments',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productreviewid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customer reviews of products they have purchased.'\")"
    },
    {
      "input": "Una tabla de productos con las columnas de, ID de producto, descripción",
      "output": "('products', 'CREATE TABLE `products` (\\n  `productid` int(11) NOT NULL  `description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`productid`),\\n  UNIQUE KEY `products_productid_key` (`productid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de subcategoría de productos con las columnas de, ID de subcategoría de producto, ID de categoría de producto, nombre, ID de fila, fecha de modificación",
      "output": "('productsubcategory', \"CREATE TABLE `productsubcategory` (\\n  `productsubcategoryid` int(11) NOT NULL COMMENT 'Primary key for ProductSubcategory records.'  `productcategoryid` int(11) NOT NULL COMMENT 'Product category identification number. Foreign key to ProductCategory.ProductCategoryID.',\\n  `name` varchar(100) NOT NULL COMMENT 'Subcategory description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productsubcategoryid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Product subcategories. See ProductCategory table.'\")"
    },
    {
      "input": "Una tabla de vendedor de productos con las columnas de, ID de producto, ID de entidad comercial, tiempo promedio de entrega, precio estándar, último costo de recepción, última fecha de recepción, cantidad menor, cantidad máxima de pedido, cantidad en pedido, código de medida unitaria, fecha modificada",
      "output": "('productvendor', \"CREATE TABLE `productvendor` (\\n  `productid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Product.ProductID.'  `businessentityid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Vendor.BusinessEntityID.',\\n  `averageleadtime` int(11) NOT NULL COMMENT 'The average span of time (in days) between placing an order with the vendor and receiving the purchased product.',\\n  `standardprice` decimal(19,4) NOT NULL COMMENT 'The vendor''s usual selling price.',\\n  `lastreceiptcost` decimal(19,4) DEFAULT NULL COMMENT 'The selling price when last purchased.',\\n  `lastreceiptdate` datetime DEFAULT NULL COMMENT 'Date the product was last received by the vendor.',\\n  `minorderqty` int(11) NOT NULL COMMENT 'The maximum quantity that should be ordered.',\\n  `maxorderqty` int(11) NOT NULL COMMENT 'The minimum quantity that should be ordered.',\\n  `onorderqty` int(11) DEFAULT NULL COMMENT 'The quantity currently on order.',\\n  `unitmeasurecode` char(3) NOT NULL COMMENT 'The product''s unit of measure.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`productid`,`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping vendors with the products they supply.'\")"
    },
    {
      "input": "Una tabla de profe con las columnas de, pro id, popularidad, capacidad de enseñanza",
      "output": "('prof', 'CREATE TABLE `prof` (\\n  `prof_id` int(11) NOT NULL DEFAULT 0  `popularity` varchar(45) DEFAULT NULL,\\n  `teachingability` varchar(45) DEFAULT NULL,\\n  PRIMARY KEY (`prof_id`),\\n  KEY `prof_popularity` (`popularity`),\\n  KEY `prof_teachingability` (`teachingability`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cuenta propagada con las columnas de, ID propagado, fecha propagada, destino propagado, pliegue propagado, ID de cuenta, ID de distrito, frecuencia, fecha",
      "output": "('propagated_account_002', \"CREATE TABLE `propagated_account_002` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `account_id` int(11) NOT NULL DEFAULT 0,\\n  `district_id` int(11) DEFAULT 0,\\n  `frequency` varchar(18) DEFAULT '',\\n  `date` date DEFAULT NULL,\\n  KEY `ix_account_002` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tarjeta propagada con las columnas de, ID propagado, fecha propagada, objetivo propagado, pliegue propagado, ID de tarjeta, ID de pantalla, tipo, emitido",
      "output": "('propagated_card_009', 'CREATE TABLE `propagated_card_009` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `card_id` int(11) NOT NULL DEFAULT 0,\\n  `disp_id` int(11) DEFAULT NULL,\\n  `type` varchar(7) DEFAULT NULL,\\n  `issued` date DEFAULT NULL,\\n  KEY `ix_card_009` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cliente propagado con las columnas de, ID propagado, fecha propagada, objetivo propagado, pliegue propagado, ID de cliente, género, fecha de nacimiento, ID de distrito",
      "output": "('propagated_client_007', 'CREATE TABLE `propagated_client_007` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `client_id` int(11) NOT NULL,\\n  `gender` varchar(1) DEFAULT NULL,\\n  `birth_date` date DEFAULT NULL,\\n  `district_id` int(11) DEFAULT NULL,\\n  KEY `ix_client_007` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cliente propagado con las columnas de, ID propagado, fecha propagada, objetivo propagado, pliegue propagado, ID de cliente, género, fecha de nacimiento, ID de distrito",
      "output": "('propagated_client_008', 'CREATE TABLE `propagated_client_008` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `client_id` int(11) NOT NULL,\\n  `gender` varchar(1) DEFAULT NULL,\\n  `birth_date` date DEFAULT NULL,\\n  `district_id` int(11) DEFAULT NULL,\\n  KEY `ix_client_008` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de disipación propagada con las columnas de, ID propagado, fecha propagada, destino propagado, pliegue propagado, ID de pantalla, ID de cliente, ID de cuenta, tipo",
      "output": "('propagated_disp_004', 'CREATE TABLE `propagated_disp_004` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `disp_id` int(11) NOT NULL,\\n  `client_id` int(11) DEFAULT NULL,\\n  `account_id` int(11) DEFAULT NULL,\\n  `type` varchar(9) DEFAULT NULL,\\n  KEY `ix_disp_004` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de distrito propagado con las columnas de, ID propagado, fecha propagada, objetivo propagado, pliegue propagado, ID de distrito, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A",
      "output": "('propagated_district_003', 'CREATE TABLE `propagated_district_003` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `district_id` int(11) NOT NULL DEFAULT 0,\\n  `A2` varchar(19) DEFAULT NULL,\\n  `A3` varchar(15) DEFAULT NULL,\\n  `A4` int(20) DEFAULT NULL,\\n  `A5` int(11) DEFAULT NULL,\\n  `A6` int(11) DEFAULT NULL,\\n  `A7` int(11) DEFAULT NULL,\\n  `A8` int(6) DEFAULT NULL,\\n  `A9` int(11) DEFAULT NULL,\\n  `A10` decimal(4,1) DEFAULT NULL,\\n  `A11` int(11) DEFAULT NULL,\\n  `A12` decimal(4,1) DEFAULT NULL,\\n  `A13` decimal(3,2) DEFAULT NULL,\\n  `A14` int(11) DEFAULT NULL,\\n  `A15` int(5) DEFAULT NULL,\\n  `A16` int(11) DEFAULT NULL,\\n  KEY `ix_district_003` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de préstamo propagado con las columnas de, identificación propagada, fecha propagada, objetivo propagado, oro propagado, od del préstamo, identificación de la cuenta, fecha, cantidad, duración, pagos, estado",
      "output": "('propagated_loan_001', 'CREATE TABLE `propagated_loan_001` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `loan_id` int(11) NOT NULL DEFAULT 0,\\n  `account_id` int(11) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `amount` int(11) DEFAULT NULL,\\n  `duration` int(11) DEFAULT NULL,\\n  `payments` decimal(6,2) DEFAULT NULL,\\n  `status` varchar(1) DEFAULT NULL,\\n  KEY `ix_loan_001` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de orden propagado con las columnas de, ID propagado, fecha propagada, objetivo propagado, pliegue propagado, ID de pedido, ID de cuenta, banco a, cuenta a, cantidad, símbolo k",
      "output": "('propagated_order_005', 'CREATE TABLE `propagated_order_005` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `order_id` int(11) NOT NULL DEFAULT 0,\\n  `account_id` int(11) DEFAULT NULL,\\n  `bank_to` varchar(2) DEFAULT NULL,\\n  `account_to` int(11) DEFAULT NULL,\\n  `amount` decimal(6,1) DEFAULT NULL,\\n  `k_symbol` varchar(8) DEFAULT NULL,\\n  KEY `ix_order_005` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de trans propagado con las columnas de, identificación propagada, fecha propagada, objetivo propagado, pliegue propagado, identificación trans, identificación de cuenta, fecha, tipo, operación, monto, saldo, símbolo k, banco, cuenta",
      "output": "('propagated_trans_006', 'CREATE TABLE `propagated_trans_006` (\\n  `propagated_id1` int(11) NOT NULL DEFAULT 0  `propagated_date` date DEFAULT NULL,\\n  `propagated_target` varchar(1) DEFAULT NULL,\\n  `propagated_fold` double(17,0) NOT NULL DEFAULT 0,\\n  `trans_id` int(11) NOT NULL DEFAULT 0,\\n  `account_id` int(11) DEFAULT 0,\\n  `date` date DEFAULT NULL,\\n  `type` varchar(6) DEFAULT NULL,\\n  `operation` varchar(14) DEFAULT NULL,\\n  `amount` int(11) DEFAULT NULL,\\n  `balance` int(11) DEFAULT NULL,\\n  `k_symbol` varchar(11) DEFAULT NULL,\\n  `bank` varchar(2) DEFAULT NULL,\\n  `account` int(11) unsigned DEFAULT NULL,\\n  KEY `ix_trans_006` (`propagated_id1`,`propagated_date`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de proveedor con las columnas de, n.° de proveedor, nombre del proveedor, calle, ciudad, provincia estatal, código de correo, país, n.° de teléfono, dt de emisión, dt de expansión, n.° de región, código de proveedor",
      "output": "('provider', 'CREATE TABLE `provider` (\\n  `provider_no` int(11) NOT NULL  `provider_name` varchar(15) NOT NULL,\\n  `street` varchar(15) NOT NULL,\\n  `city` varchar(15) NOT NULL,\\n  `state_prov` char(2) NOT NULL,\\n  `mail_code` char(10) NOT NULL,\\n  `country` char(2) NOT NULL,\\n  `phone_no` char(13) NOT NULL,\\n  `issue_dt` datetime NOT NULL,\\n  `expr_dt` datetime NOT NULL,\\n  `region_no` int(11) NOT NULL,\\n  `provider_code` char(2) NOT NULL,\\n  PRIMARY KEY (`provider_no`),\\n  KEY `provider_region_no` (`region_no`),\\n  CONSTRAINT `provider_ibfk_1` FOREIGN KEY (`region_no`) REFERENCES `region` (`region_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de detalle de orden de compra con las columnas de, ID de pedido de compra, ID de detalle de pedido de compra, fecha de vencimiento, cantidad de pedido, ID de producto, precio unitario, total de línea, cantidad recibida, cantidad rechazada, cantidad almacenada, fecha modificada",
      "output": "('purchaseorderdetail', \"CREATE TABLE `purchaseorderdetail` (\\n  `purchaseorderid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.'  `purchaseorderdetailid` int(11) NOT NULL COMMENT 'Primary key. One line number per purchased product.',\\n  `duedate` datetime NOT NULL COMMENT 'Date the product is expected to be received.',\\n  `orderqty` smallint(6) NOT NULL COMMENT 'Quantity ordered.',\\n  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `unitprice` decimal(19,4) NOT NULL COMMENT 'Vendor''s selling price of a single product.',\\n  `linetotal` decimal(19,4) NOT NULL COMMENT 'Per product subtotal. Computed as OrderQty * UnitPrice.',\\n  `receivedqty` decimal(8,2) NOT NULL COMMENT 'Quantity actually received from the vendor.',\\n  `rejectedqty` decimal(8,2) NOT NULL COMMENT 'Quantity rejected during inspection.',\\n  `stockedqty` decimal(9,2) NOT NULL COMMENT 'Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`purchaseorderdetailid`,`purchaseorderid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Individual products associated with a specific purchase order. See PurchaseOrderHeader.'\")"
    },
    {
      "input": "Una tabla de encabezado de orden de compra con las columnas de, id de pedido de compra, número de revisión, estado, id de empleado, id de proveedor, id de método de envío, fecha de pedido, fecha de envío, subtotal, impuestos, flete, vencimiento total, fecha de modificación",
      "output": "('purchaseorderheader', \"CREATE TABLE `purchaseorderheader` (\\n  `purchaseorderid` int(11) NOT NULL COMMENT 'Primary key.'  `revisionnumber` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT 'Incremental number to track changes to the purchase order over time.',\\n  `status` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT 'Order current status. 1 = Pending"
    },
    {
      "input": "Una tabla de calidad con las columnas de, nombre, tipo, fórmula, descripción, tipo de datos, min, max, unidad, prioridad, showonline, fecha",
      "output": "('quality', \"CREATE TABLE `quality` (\\n  `name` varchar(128) NOT NULL  `type` varchar(128) NOT NULL DEFAULT 'DataProperty',\\n  `formula` text DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  `datatype` varchar(128) NOT NULL DEFAULT 'undefined',\\n  `min` float DEFAULT NULL,\\n  `max` float DEFAULT NULL,\\n  `unit` varchar(32) DEFAULT NULL,\\n  `priority` int(11) NOT NULL DEFAULT 9999,\\n  `showonline` enum('true','false') NOT NULL,\\n  `date` timestamp NOT NULL DEFAULT current_timestamp(),\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de región con las columnas de, número de región, nombre de la región, calle, ciudad, provincia, país, código de correo, número de teléfono, código de región",
      "output": "('region', 'CREATE TABLE `region` (\\n  `region_no` int(11) NOT NULL  `region_name` varchar(15) NOT NULL,\\n  `street` varchar(15) NOT NULL,\\n  `city` varchar(15) NOT NULL,\\n  `state_prov` char(2) NOT NULL,\\n  `country` char(2) NOT NULL,\\n  `mail_code` char(10) NOT NULL,\\n  `phone_no` char(13) NOT NULL,\\n  `region_code` char(2) NOT NULL,\\n  PRIMARY KEY (`region_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de registro con las columnas de, id del curso, id del estudiante, grado, sat",
      "output": "('registration', 'CREATE TABLE `registration` (\\n  `course_id` int(11) NOT NULL DEFAULT 0  `student_id` int(11) NOT NULL DEFAULT 0,\\n  `grade` varchar(45) NOT NULL,\\n  `sat` varchar(45) NOT NULL,\\n  PRIMARY KEY (`course_id`,`student_id`),\\n  KEY `registration_sat` (`sat`),\\n  KEY `registration_grade` (`grade`),\\n  KEY `registration_student_id` (`student_id`),\\n  KEY `registration_course_id` (`course_id`),\\n  CONSTRAINT `FK_registration_1` FOREIGN KEY (`student_id`) REFERENCES `student` (`student_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_registration_2` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipo de recurso con las columnas de, id, tipo de recurso",
      "output": "('resource_type', 'CREATE TABLE `resource_type` (\\n  `id` int(11) NOT NULL  `resource_type` varchar(255) NOT NULL,\\n  PRIMARY KEY (`id`,`resource_type`),\\n  CONSTRAINT `resource_type_id_fkey` FOREIGN KEY (`id`) REFERENCES `target` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de correr con las columnas de, deshacerse, cargador, principal, configuración, ID de tarea, hora de inicio, estado, prioridad, error, advertencia, mensaje de error, procesado, experimento, corredor, máquina, visibilidad",
      "output": "('run', \"CREATE TABLE `run` (\\n  `rid` int(10) unsigned NOT NULL AUTO_INCREMENT  `uploader` int(10) DEFAULT NULL,\\n  `parent` int(10) unsigned DEFAULT NULL,\\n  `setup` int(10) unsigned NOT NULL DEFAULT 0,\\n  `task_id` int(10) DEFAULT NULL,\\n  `start_time` datetime DEFAULT NULL,\\n  `status` varchar(64) NOT NULL,\\n  `priority` tinyint(8) NOT NULL DEFAULT 10,\\n  `error` varchar(512) DEFAULT NULL,\\n  `warning` varchar(512) DEFAULT NULL,\\n  `error_message` text DEFAULT NULL,\\n  `processed` datetime DEFAULT NULL,\\n  `experiment` int(10) unsigned DEFAULT NULL,\\n  `runner` varchar(16) DEFAULT NULL,\\n  `machine` varchar(64) DEFAULT NULL,\\n  `visibility` varchar(128) NOT NULL DEFAULT 'public',\\n  PRIMARY KEY (`rid`),\\n  KEY `run_setup_task_id` (`setup`,`task_id`),\\n  KEY `run_setup_uploader` (`setup`,`uploader`),\\n  KEY `run_task_id_uploader` (`task_id`,`uploader`),\\n  KEY `run_task_id_uploader_start_time` (`task_id`,`uploader`,`start_time`),\\n  CONSTRAINT `run_ibfk_1` FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de archivo de ejecución con las columnas de, hizo, fuente, campo, nombre, formato, ID de archivo",
      "output": "('runfile', 'CREATE TABLE `runfile` (\\n  `did` int(16) unsigned NOT NULL AUTO_INCREMENT  `source` int(16) NOT NULL,\\n  `field` varchar(128) NOT NULL,\\n  `name` varchar(128) NOT NULL,\\n  `format` varchar(128) NOT NULL,\\n  `file_id` int(16) NOT NULL,\\n  PRIMARY KEY (`did`),\\n  KEY `runfile_source_field` (`source`,`field`),\\n  CONSTRAINT `runfile_ibfk_1` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Detalle de pedido de venta con las columnas de, ID de pedido de venta, ID de detalle de pedido de venta, número de seguimiento del transportista, cantidad de pedido, ID de producto, ID de oferta especial, precio unitario, descuento de precio unitario, total de línea, ID de fila, fecha modificada",
      "output": "('salesorderdetail', \"CREATE TABLE `salesorderdetail` (\\n  `salesorderid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.'  `salesorderdetailid` int(11) NOT NULL COMMENT 'Primary key. One incremental unique number per product sold.',\\n  `carriertrackingnumber` varchar(25) DEFAULT NULL COMMENT 'Shipment tracking number supplied by the shipper.',\\n  `orderqty` smallint(6) NOT NULL COMMENT 'Quantity ordered per product.',\\n  `productid` int(11) NOT NULL COMMENT 'Product sold to customer. Foreign key to Product.ProductID.',\\n  `specialofferid` int(11) NOT NULL COMMENT 'Promotional code. Foreign key to SpecialOffer.SpecialOfferID.',\\n  `unitprice` decimal(19,4) NOT NULL COMMENT 'Selling price of a single product.',\\n  `unitpricediscount` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Discount amount.',\\n  `linetotal` decimal(38,6) NOT NULL COMMENT 'Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`salesorderdetailid`,`salesorderid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Individual products associated with a specific sales order. See SalesOrderHeader.'\")"
    },
    {
      "input": "Una tabla de encabezado de pedido de ventas con las columnas de, ID de pedido de ventas, número de revisión, fecha de pedido, fecha de vencimiento, fecha de envío, estado, bandera de pedido en línea, número de pedido de ventas, número de pedido de compra, número de cuenta, ID de cliente, ID de vendedor, ID de territorio, ID de dirección de factura, ID de dirección de envío, ID de método de envío, ID de tarjeta de crédito, código de aprobación de tarjeta de crédito, ID de tasa de moneda, subtotal, impuesto, flete, total debido, comentario, guía de fila , fecha de modificación",
      "output": "('salesorderheader', \"CREATE TABLE `salesorderheader` (\\n  `salesorderid` int(11) NOT NULL COMMENT 'Primary key.'  `revisionnumber` tinyint(3) unsigned NOT NULL DEFAULT 0 COMMENT 'Incremental number to track changes to the sales order over time.',\\n  `orderdate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Dates the sales order was created.',\\n  `duedate` datetime NOT NULL COMMENT 'Date the order is due to the customer.',\\n  `shipdate` datetime DEFAULT NULL COMMENT 'Date the order was shipped to the customer.',\\n  `status` tinyint(3) unsigned NOT NULL DEFAULT 1 COMMENT 'Order current status. 1 = In process"
    },
    {
      "input": "Una tabla de encabezado de pedido de ventasmotivo de ventas con las columnas de, ID de pedido de ventas, ID de motivo de ventas, fecha de modificación",
      "output": "('salesorderheadersalesreason', \"CREATE TABLE `salesorderheadersalesreason` (\\n  `salesorderid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.'  `salesreasonid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to SalesReason.SalesReasonID.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`salesorderid`,`salesreasonid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping sales orders to sales reason codes.'\")"
    },
    {
      "input": "Una tabla de vendedor con las columnas de, ID de entidad comercial, ID de territorio, cuota de ventas, bonificación, porcentaje de comisión, td de ventas, año pasado de ventas, ID de fila, fecha modificada",
      "output": "('salesperson', \"CREATE TABLE `salesperson` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID'  `territoryid` int(11) DEFAULT NULL COMMENT 'Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `salesquota` decimal(19,4) DEFAULT NULL COMMENT 'Projected yearly sales.',\\n  `bonus` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Bonus due if quota is met.',\\n  `commissionpct` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Commision percent received per sale.',\\n  `salesytd` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales total year to date.',\\n  `saleslastyear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales total of previous year.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales representative current information.'\")"
    },
    {
      "input": "Una tabla de vendedorcuotahistoria con las columnas de, ID de entidad comercial, fecha de cuota, cuota de ventas, ID de fila, fecha de modificación",
      "output": "('salespersonquotahistory', \"CREATE TABLE `salespersonquotahistory` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.'  `quotadate` datetime NOT NULL COMMENT 'Sales quota date.',\\n  `salesquota` decimal(19,4) NOT NULL COMMENT 'Sales quota amount.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`,`quotadate`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales performance tracking.'\")"
    },
    {
      "input": "Una tabla de motivo de venta con las columnas de, idrazónventas, nombre, tiporazón, fechamodificada",
      "output": "('salesreason', \"CREATE TABLE `salesreason` (\\n  `salesreasonid` int(11) NOT NULL COMMENT 'Primary key for SalesReason records.'  `name` varchar(100) NOT NULL COMMENT 'Sales reason description.',\\n  `reasontype` varchar(100) NOT NULL COMMENT 'Category the sales reason belongs to.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`salesreasonid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Lookup table of customer purchase reasons.'\")"
    },
    {
      "input": "Una tabla de tasa de impuestos sobre las ventas con las columnas de, salestaxrateid, stateprovinceid, taxtype, taxrate, nombre, filaguid, fechamodificada",
      "output": "('salestaxrate', \"CREATE TABLE `salestaxrate` (\\n  `salestaxrateid` int(11) NOT NULL COMMENT 'Primary key for SalesTaxRate records.'  `stateprovinceid` int(11) NOT NULL COMMENT 'State, province, or country/region the sales tax applies to.',\\n  `taxtype` tinyint(3) unsigned NOT NULL COMMENT '1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.',\\n  `taxrate` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Tax rate amount.',\\n  `name` varchar(100) NOT NULL COMMENT 'Tax rate description.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`salestaxrateid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Tax rate lookup table.'\")"
    },
    {
      "input": "Una tabla de territorio de ventas con las columnas de, id de territorio, nombre, código de región de país, grupo, salesytd, saleslastyear, costytd, costlastyear, rowguid, modifieddate",
      "output": "('salesterritory', \"CREATE TABLE `salesterritory` (\\n  `territoryid` int(11) NOT NULL COMMENT 'Primary key for SalesTerritory records.'  `name` varchar(100) NOT NULL COMMENT 'Sales territory description',\\n  `countryregioncode` varchar(3) NOT NULL COMMENT 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ',\\n  `group` varchar(50) NOT NULL COMMENT 'Geographic area to which the sales territory belong.',\\n  `salesytd` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales in the territory year to date.',\\n  `saleslastyear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Sales in the territory the previous year.',\\n  `costytd` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Business costs in the territory year to date.',\\n  `costlastyear` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Business costs in the territory the previous year.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`territoryid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales territory lookup table.'\")"
    },
    {
      "input": "Una tabla de ventasterritoriohistoria con las columnas de, businessentityid , territorioid , fecha de inicio , fecha de finalización , rowguid , fecha de modificación",
      "output": "('salesterritoryhistory', \"CREATE TABLE `salesterritoryhistory` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key. The sales rep.  Foreign key to SalesPerson.BusinessEntityID.'  `territoryid` int(11) NOT NULL COMMENT 'Primary key. Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `startdate` datetime NOT NULL COMMENT 'Primary key. Date the sales representive started work in the territory.',\\n  `enddate` datetime DEFAULT NULL COMMENT 'Date the sales representative left work in the territory.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`,`startdate`,`territoryid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sales representative transfers to other sales territories.'\")"
    },
    {
      "input": "Una tabla de envío de muestras con las columnas de, ID de dispositivo, F , F , F , F , F , F+, M , M , M , M , M , M+",
      "output": "('sample_submission', 'CREATE TABLE `sample_submission` (\\n  `device_id` bigint(20) NOT NULL  `F23-` float DEFAULT NULL,\\n  `F24-26` float DEFAULT NULL,\\n  `F27-28` float DEFAULT NULL,\\n  `F29-32` float DEFAULT NULL,\\n  `F33-42` float DEFAULT NULL,\\n  `F43+` float DEFAULT NULL,\\n  `M22-` float DEFAULT NULL,\\n  `M23-26` float DEFAULT NULL,\\n  `M27-28` float DEFAULT NULL,\\n  `M29-31` float DEFAULT NULL,\\n  `M32-38` float DEFAULT NULL,\\n  `M39+` float DEFAULT NULL,\\n  PRIMARY KEY (`device_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de salvadera con las columnas de, objetivo propagado, característica",
      "output": "('sandbox', 'CREATE TABLE `sandbox` (\\n  `propagated_target` int(11) NOT NULL  `feature` int(11) NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de calendario con las columnas de, sid, ID de tarea, experimento, activo, última asignación, ttid, dependencias, cadena de configuración",
      "output": "('schedule', \"CREATE TABLE `schedule` (\\n  `sid` int(8) NOT NULL  `task_id` int(8) NOT NULL,\\n  `experiment` varchar(128) NOT NULL DEFAULT '',\\n  `active` enum('true','false') NOT NULL DEFAULT 'true',\\n  `last_assigned` datetime DEFAULT NULL,\\n  `ttid` int(11) NOT NULL,\\n  `dependencies` varchar(128) NOT NULL,\\n  `setup_string` mediumtext NOT NULL,\\n  PRIMARY KEY (`sid`,`task_id`),\\n  KEY `schedule_dependencies_active_ttid_last_assigned` (`dependencies`,`active`,`ttid`,`last_assigned`),\\n  KEY `schedule_sid_task_id_active` (`sid`,`task_id`,`active`),\\n  KEY `schedule_sid_task_id_active_last_assigned` (`sid`,`task_id`,`active`,`last_assigned`),\\n  KEY `schedule_task_id` (`task_id`),\\n  KEY `schedule_ttid` (`ttid`),\\n  CONSTRAINT `schedule_ibfk_1` FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `schedule_ibfk_2` FOREIGN KEY (`ttid`) REFERENCES `task_type` (`ttid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de Razón de chatarra con las columnas de, scrapreasonid, nombre, fecha de modificación",
      "output": "('scrapreason', \"CREATE TABLE `scrapreason` (\\n  `scrapreasonid` smallint(6) NOT NULL COMMENT 'Primary key for ScrapReason records.'  `name` varchar(100) NOT NULL COMMENT 'Failure description.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`scrapreasonid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Manufacturing failure reasons lookup table.'\")"
    },
    {
      "input": "Una tabla de gente de mar con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('seafarers', 'CREATE TABLE `seafarers` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) DEFAULT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `seafarers_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de diferencias de configuración con las columnas de, sid A, sid B, ID de tarea, tamaño de tarea, diferencias",
      "output": "('setup_differences', 'CREATE TABLE `setup_differences` (\\n  `sidA` int(10) unsigned NOT NULL  `sidB` int(10) unsigned NOT NULL,\\n  `task_id` int(10) NOT NULL,\\n  `task_size` int(10) NOT NULL,\\n  `differences` int(10) NOT NULL,\\n  PRIMARY KEY (`sidA`,`sidB`,`task_id`),\\n  KEY `setup_differences_sidB` (`sidB`),\\n  KEY `setup_differences_task_id` (`task_id`),\\n  CONSTRAINT `setup_differences_ibfk_1` FOREIGN KEY (`sidA`) REFERENCES `algorithm_setup` (`sid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `setup_differences_ibfk_2` FOREIGN KEY (`sidB`) REFERENCES `algorithm_setup` (`sid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `setup_differences_ibfk_3` FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipo de gravedad con las columnas de, id, tipo de gravedad",
      "output": "('severity_type', 'CREATE TABLE `severity_type` (\\n  `id` int(11) NOT NULL  `severity_type` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  CONSTRAINT `severity_type_id_fkey` FOREIGN KEY (`id`) REFERENCES `target` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cambio con las columnas de, shiftid, nombre, hora de inicio, hora de finalización, fecha de modificación",
      "output": "('shift', \"CREATE TABLE `shift` (\\n  `shiftid` tinyint(3) unsigned NOT NULL COMMENT 'Primary key for Shift records.'  `name` varchar(100) NOT NULL COMMENT 'Shift description.',\\n  `starttime` time NOT NULL COMMENT 'Shift start time.',\\n  `endtime` time NOT NULL COMMENT 'Shift end time.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`shiftid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Work shift lookup table.'\")"
    },
    {
      "input": "Una tabla de método de envío con las columnas de, método de envío, nombre, base de envío, tasa de envío, guía de fila, fecha de modificación",
      "output": "('shipmethod', \"CREATE TABLE `shipmethod` (\\n  `shipmethodid` int(11) NOT NULL COMMENT 'Primary key for ShipMethod records.'  `name` varchar(100) NOT NULL COMMENT 'Shipping company name.',\\n  `shipbase` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Minimum shipping charge.',\\n  `shiprate` decimal(19,4) NOT NULL DEFAULT 0.0000 COMMENT 'Shipping charge per pound.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`shipmethodid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Shipping company lookup table.'\")"
    },
    {
      "input": "Una tabla de carro de la compra con las columnas de, shoppingcartitemid, shoppingcartid, cantidad, productid, fecha de creación, fecha de modificación",
      "output": "('shoppingcartitem', \"CREATE TABLE `shoppingcartitem` (\\n  `shoppingcartitemid` int(11) NOT NULL COMMENT 'Primary key for ShoppingCartItem records.'  `shoppingcartid` varchar(50) NOT NULL COMMENT 'Shopping cart identification number.',\\n  `quantity` int(11) NOT NULL DEFAULT 1 COMMENT 'Product quantity ordered.',\\n  `productid` int(11) NOT NULL COMMENT 'Product ordered. Foreign key to Product.ProductID.',\\n  `datecreated` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date the time the record was created.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`shoppingcartitemid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Contains online customer orders until the order is submitted or cancelled.'\")"
    },
    {
      "input": "Una tabla de soldados con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('soldiers', 'CREATE TABLE `soldiers` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) DEFAULT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `soldiers_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de oferta especial con las columnas de, specialofferid, description, discountpct, type, category, startdate, enddate, minqty, maxqty, rowguid, modifieddate",
      "output": "('specialoffer', \"CREATE TABLE `specialoffer` (\\n  `specialofferid` int(11) NOT NULL COMMENT 'Primary key for SpecialOffer records.'  `description` varchar(255) NOT NULL COMMENT 'Discount description.',\\n  `discountpct` decimal(10,4) NOT NULL DEFAULT 0.0000 COMMENT 'Discount precentage.',\\n  `type` varchar(50) NOT NULL COMMENT 'Discount type category.',\\n  `category` varchar(50) NOT NULL COMMENT 'Group the discount applies to such as Reseller or Customer.',\\n  `startdate` datetime NOT NULL COMMENT 'Discount start date.',\\n  `enddate` datetime NOT NULL COMMENT 'Discount end date.',\\n  `minqty` int(11) NOT NULL DEFAULT 0 COMMENT 'Minimum discount percent allowed.',\\n  `maxqty` int(11) DEFAULT NULL COMMENT 'Maximum discount percent allowed.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`specialofferid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Sale discounts lookup table.'\")"
    },
    {
      "input": "Una tabla de oferta especialproducto con las columnas de, ID de oferta especial, ID de producto, ID de fila, fecha de modificación",
      "output": "('specialofferproduct', \"CREATE TABLE `specialofferproduct` (\\n  `specialofferid` int(11) NOT NULL COMMENT 'Primary key for SpecialOfferProduct records.'  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`specialofferid`,`productid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Cross-reference table mapping products to special offer discounts.'\")"
    },
    {
      "input": "Una tabla de declaración con las columnas de, nº de extracto, nº de miembro, dt de extracto, dt de vencimiento, importe de extracto, código de extracto",
      "output": "('statement', 'CREATE TABLE `statement` (\\n  `statement_no` int(11) NOT NULL  `member_no` int(11) NOT NULL,\\n  `statement_dt` datetime NOT NULL,\\n  `due_dt` datetime NOT NULL,\\n  `statement_amt` decimal(19,4) NOT NULL,\\n  `statement_code` char(2) NOT NULL,\\n  PRIMARY KEY (`statement_no`),\\n  KEY `statement_member_no` (`member_no`),\\n  CONSTRAINT `statement_ibfk_1` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Provincia del estado con las columnas de, id de provincia de estado, código de provincia de estado, código de región de país, es solo bandera de provincia de estado, nombre, id de territorio, ID de fila, fecha modificada",
      "output": "('stateprovince', \"CREATE TABLE `stateprovince` (\\n  `stateprovinceid` int(11) NOT NULL COMMENT 'Primary key for StateProvince records.'  `stateprovincecode` char(3) NOT NULL COMMENT 'ISO standard state or province code.',\\n  `countryregioncode` varchar(3) NOT NULL COMMENT 'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ',\\n  `isonlystateprovinceflag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.',\\n  `name` varchar(100) NOT NULL COMMENT 'State or province description.',\\n  `territoryid` int(11) NOT NULL COMMENT 'ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`stateprovinceid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='State and province lookup table.'\")"
    },
    {
      "input": "Una tabla de estación con las columnas de, número de estación",
      "output": "('station', 'CREATE TABLE `station` (\\n  `station_nbr` int(11) NOT NULL  PRIMARY KEY (`station_nbr`),\\n  UNIQUE KEY `station_station_nbr_key` (`station_nbr`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de estado con las columnas de, código de estado, descripción de estado",
      "output": "('status', 'CREATE TABLE `status` (\\n  `status_code` char(2) NOT NULL  `status_desc` varchar(31) NOT NULL,\\n  PRIMARY KEY (`status_code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Tienda con las columnas de, ID de entidad comercial, nombre, ID de vendedor, datos demográficos, ID de fila, fecha de modificación",
      "output": "('store', \"CREATE TABLE `store` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Customer.BusinessEntityID.'  `name` varchar(100) NOT NULL COMMENT 'Name of the store.',\\n  `salespersonid` int(11) DEFAULT NULL COMMENT 'ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.',\\n  `demographics` text DEFAULT NULL COMMENT 'Demographic informationg about the store such as the number of employees, annual sales and store type.',\\n  `rowguid` varchar(64) NOT NULL COMMENT 'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Customers (resellers) of Adventure Works products.'\")"
    },
    {
      "input": "Una tabla de historias con las columnas de, Tienda, Tipo, Tamaño",
      "output": "('stores', 'CREATE TABLE `stores` (\\n  `Store` int(11) NOT NULL  `Type` varchar(255) DEFAULT NULL,\\n  `Size` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Store`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de alumno con las columnas de, id de estudiante, inteligencia, clasificación",
      "output": "('student', 'CREATE TABLE `student` (\\n  `student_id` int(11) NOT NULL DEFAULT 0  `intelligence` varchar(45) DEFAULT NULL,\\n  `ranking` varchar(45) DEFAULT NULL,\\n  PRIMARY KEY (`student_id`),\\n  KEY `student_intelligence` (`intelligence`),\\n  KEY `student_ranking` (`ranking`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de estudiantes con las columnas de, id, nombre, correo electrónico, contraseña",
      "output": "('students', 'CREATE TABLE `students` (\\n  `id` int(10) unsigned NOT NULL  `name` varchar(32) DEFAULT NULL,\\n  `email` varchar(32) DEFAULT NULL,\\n  `password` varchar(16) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de éxito con las columnas de, tm, tm",
      "output": "('succ', 'CREATE TABLE `succ` (\\n  `tm1` int(11) NOT NULL  `tm2` int(11) NOT NULL,\\n  PRIMARY KEY (`tm1`,`tm2`),\\n  KEY `tm1` (`tm1`),\\n  KEY `tm2` (`tm2`),\\n  CONSTRAINT `succ_ibfk_1` FOREIGN KEY (`tm1`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `succ_ibfk_2` FOREIGN KEY (`tm2`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de etiquetas con las columnas de, Id., nombre de etiqueta, recuento, Id. de publicación de extracto, Id. de publicación de wiki",
      "output": "('tags', 'CREATE TABLE `tags` (\\n  `Id` int(11) NOT NULL  `TagName` varchar(255) DEFAULT NULL,\\n  `Count` int(11) DEFAULT NULL,\\n  `ExcerptPostId` int(11) DEFAULT NULL,\\n  `WikiPostId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `tags_ExcerptPostId_fkey` (`ExcerptPostId`),\\n  CONSTRAINT `tags_ExcerptPostId_fkey` FOREIGN KEY (`ExcerptPostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, id, ubicación, gravedad de la falla",
      "output": "('target', 'CREATE TABLE `target` (\\n  `id` int(11) NOT NULL  `location` varchar(255) DEFAULT NULL,\\n  `fault_severity` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `target_id_key` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tarea con las columnas de, ID de tarea, ttid, creador, fecha de creación",
      "output": "('task', 'CREATE TABLE `task` (\\n  `task_id` int(10) NOT NULL AUTO_INCREMENT  `ttid` int(10) NOT NULL,\\n  `creator` int(10) DEFAULT NULL,\\n  `creation_date` datetime DEFAULT NULL,\\n  PRIMARY KEY (`task_id`),\\n  KEY `task_ttid` (`ttid`),\\n  CONSTRAINT `task_ibfk_1` FOREIGN KEY (`ttid`) REFERENCES `task_type` (`ttid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de entradas de tareas con las columnas de, ID de tarea, entrada, valor",
      "output": "('task_inputs', 'CREATE TABLE `task_inputs` (\\n  `task_id` int(10) NOT NULL  `input` varchar(64) NOT NULL,\\n  `value` mediumtext NOT NULL,\\n  PRIMARY KEY (`task_id`,`input`),\\n  UNIQUE KEY `task_inputs_task_id_input_value` (`task_id`,`input`,`value`(16)),\\n  CONSTRAINT `task_inputs_ibfk_1` FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipos de tarea io con las columnas de, nombre, descripción",
      "output": "('task_io_types', 'CREATE TABLE `task_io_types` (\\n  `name` varchar(64) NOT NULL  `description` text NOT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipo de tarea con las columnas de, ttid, nombre, descripción, creador, colaboradores, fecha de creación",
      "output": "('task_type', 'CREATE TABLE `task_type` (\\n  `ttid` int(10) NOT NULL AUTO_INCREMENT  `name` varchar(128) NOT NULL,\\n  `description` mediumtext NOT NULL,\\n  `creator` varchar(128) NOT NULL,\\n  `contributors` mediumtext DEFAULT NULL,\\n  `creationDate` datetime NOT NULL,\\n  PRIMARY KEY (`ttid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipo de tarea de entrada y salida con las columnas de, ttid, nombre, tipo, io, requisito, descripción, orden, plantilla api, búsqueda de plantilla",
      "output": "('task_type_inout', \"CREATE TABLE `task_type_inout` (\\n  `ttid` int(10) NOT NULL  `name` varchar(64) NOT NULL,\\n  `type` varchar(64) NOT NULL,\\n  `io` enum('input','output') NOT NULL,\\n  `requirement` enum('required','optional','hidden') NOT NULL,\\n  `description` varchar(256) NOT NULL,\\n  `order` int(8) NOT NULL,\\n  `template_api` text DEFAULT NULL,\\n  `template_search` text DEFAULT NULL,\\n  PRIMARY KEY (`ttid`,`name`,`type`),\\n  KEY `task_type_inout_type` (`type`),\\n  CONSTRAINT `task_type_inout_ibfk_1` FOREIGN KEY (`ttid`) REFERENCES `task_type` (`ttid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `task_type_inout_ibfk_2` FOREIGN KEY (`type`) REFERENCES `task_io_types` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de maestros con las columnas de, identificación, nombre",
      "output": "('teachers', 'CREATE TABLE `teachers` (\\n  `id` int(10) unsigned NOT NULL  `name` varchar(32) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tiempo con las columnas de, tm",
      "output": "('time', 'CREATE TABLE `time` (\\n  `tm` int(11) NOT NULL  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de relé de tiempo con las columnas de, clase, tm",
      "output": "('tm001_eod_relay', \"CREATE TABLE `tm001_eod_relay` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm001_eod_relay_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm001_eod_relay_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm battov temperatura con las columnas de, clase, tm",
      "output": "('tm002_battov_temp', \"CREATE TABLE `tm002_battov_temp` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm002_battov_temp_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm002_battov_temp_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm eoc señalado con las columnas de, clase, tm",
      "output": "('tm004_eoc_signaled', \"CREATE TABLE `tm004_eoc_signaled` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm004_eoc_signaled_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm004_eoc_signaled_ibfk_2` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm007_switch', \"CREATE TABLE `tm007_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm007_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm007_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm009_switch', \"CREATE TABLE `tm009_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm009_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm009_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de anulación de tm eod con las columnas de, clase, tm",
      "output": "('tm011_eod_override', \"CREATE TABLE `tm011_eod_override` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm011_eod_override_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm011_eod_override_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm013_switch', \"CREATE TABLE `tm013_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm013_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm013_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm eod señalado con las columnas de, clase, tm",
      "output": "('tm015_eod_signaled', \"CREATE TABLE `tm015_eod_signaled` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm015_eod_signaled_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm015_eod_signaled_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm017_switch', \"CREATE TABLE `tm017_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm017_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm017_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm018_switch', \"CREATE TABLE `tm018_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm018_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm018_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm eoc deshabilitado con las columnas de, clase, tm",
      "output": "('tm021_eoc_disabled', \"CREATE TABLE `tm021_eoc_disabled` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm021_eoc_disabled_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm021_eoc_disabled_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm022_switch', \"CREATE TABLE `tm022_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm022_switch_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm022_switch_ibfk_2` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm ovt deshabilitado con las columnas de, clase, tm",
      "output": "('tm029_ovt_disabled', \"CREATE TABLE `tm029_ovt_disabled` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm029_ovt_disabled_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm029_ovt_disabled_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm031_switch', \"CREATE TABLE `tm031_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm031_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm031_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm038_switch', \"CREATE TABLE `tm038_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm038_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm038_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tiempo deshabilitado con las columnas de, clase, tm",
      "output": "('tm039_eod_disabled', \"CREATE TABLE `tm039_eod_disabled` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm039_eod_disabled_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm039_eod_disabled_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm040_switch', \"CREATE TABLE `tm040_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm040_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm040_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm042_switch', \"CREATE TABLE `tm042_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm042_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm042_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, clase, tm",
      "output": "('tm043_switch', \"CREATE TABLE `tm043_switch` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm043_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm043_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm suministrar un con las columnas de, clase, tm",
      "output": "('tm054_supply_1a', \"CREATE TABLE `tm054_supply_1a` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm054_supply_1a_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm054_supply_1a_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm suministro b con las columnas de, clase, tm",
      "output": "('tm055_supply_1b', \"CREATE TABLE `tm055_supply_1b` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm055_supply_1b_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm055_supply_1b_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de suministro de tm c con las columnas de, clase, tm",
      "output": "('tm057_supply_2c', \"CREATE TABLE `tm057_supply_2c` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm057_supply_2c_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm057_supply_2c_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm asr o interruptor con las columnas de, clase, tm",
      "output": "('tm058_asr_or_switch_10', \"CREATE TABLE `tm058_asr_or_switch_10` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm058_asr_or_switch_10_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm058_asr_or_switch_10_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de suministro de tm c con las columnas de, clase, tm",
      "output": "('tm070_supply_3c', \"CREATE TABLE `tm070_supply_3c` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm070_supply_3c_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm070_supply_3c_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tm asr o interruptor con las columnas de, clase, tm",
      "output": "('tm071_asr_or_switch_20', \"CREATE TABLE `tm071_asr_or_switch_20` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm071_asr_or_switch_20_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm071_asr_or_switch_20_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tensión de bus tm con las columnas de, clase, tm",
      "output": "('tm211_bus_voltage', \"CREATE TABLE `tm211_bus_voltage` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm211_bus_voltage_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm211_bus_voltage_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de suministro de tm c con las columnas de, clase, tm",
      "output": "('tm220_supply_1c', 'CREATE TABLE `tm220_supply_1c` (\\n  `class` varchar(8) NOT NULL  `tm` int(11) NOT NULL,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm220_supply_1c_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm220_supply_1c_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tm cargando con las columnas de, clase, tm",
      "output": "('tm222_charging', \"CREATE TABLE `tm222_charging` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm222_charging_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm222_charging_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de voltaje de la batería con las columnas de, clase, tm",
      "output": "('tm257_battery_voltage', \"CREATE TABLE `tm257_battery_voltage` (\\n  `class` varchar(8) NOT NULL DEFAULT ''  `tm` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`class`,`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm257_battery_voltage_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm257_battery_voltage_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de total con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('total', 'CREATE TABLE `total` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) DEFAULT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `total_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de rastro con las columnas de, ejecutar id, repetir, plegar, iteración, cadena de configuración, evaluación, seleccionado",
      "output": "('trace', \"CREATE TABLE `trace` (\\n  `run_id` int(10) unsigned NOT NULL  `repeat` int(11) NOT NULL,\\n  `fold` int(11) NOT NULL,\\n  `iteration` int(11) NOT NULL,\\n  `setup_string` mediumtext NOT NULL,\\n  `evaluation` varchar(265) NOT NULL,\\n  `selected` enum('true','false') NOT NULL,\\n  PRIMARY KEY (`run_id`,`repeat`,`fold`,`iteration`),\\n  CONSTRAINT `trace_ibfk_1` FOREIGN KEY (`run_id`) REFERENCES `run` (`rid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tren con las columnas de, fecha, tienda nbr, artículo nbr, unidades",
      "output": "('train', 'CREATE TABLE `train` (\\n  `date` date NOT NULL  `store_nbr` int(11) NOT NULL,\\n  `item_nbr` int(11) NOT NULL,\\n  `units` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`store_nbr`,`date`,`item_nbr`),\\n  CONSTRAINT `train_store_nbr_fkey` FOREIGN KEY (`store_nbr`) REFERENCES `key` (`store_nbr`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de trenes con las columnas de, identificación, dirección",
      "output": "('trains', 'CREATE TABLE `trains` (\\n  `id` int(11) NOT NULL  `direction` varchar(4) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `id` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Historial de transacciones con las columnas de, ID de transacción, ID de producto, ID de pedido de referencia, ID de línea de pedido de referencia, fecha de transacción, tipo de transacción, cantidad, costo real, fecha modificada",
      "output": "('transactionhistory', \"CREATE TABLE `transactionhistory` (\\n  `transactionid` int(11) NOT NULL COMMENT 'Primary key for TransactionHistory records.'  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `referenceorderid` int(11) NOT NULL COMMENT 'Purchase order, sales order, or work order identification number.',\\n  `referenceorderlineid` int(11) NOT NULL DEFAULT 0 COMMENT 'Line number associated with the purchase order, sales order, or work order.',\\n  `transactiondate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time of the transaction.',\\n  `transactiontype` char(1) NOT NULL COMMENT 'W = WorkOrder, S = SalesOrder, P = PurchaseOrder',\\n  `quantity` int(11) NOT NULL COMMENT 'Product quantity.',\\n  `actualcost` decimal(19,4) NOT NULL COMMENT 'Product cost.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`transactionid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Record of each purchase order, sales order, or work order transaction year to date.'\")"
    },
    {
      "input": "Una tabla de archivo de historial de transacciones con las columnas de, ID de transacción, ID de producto, ID de pedido de referencia, ID de línea de pedido de referencia, fecha de transacción, tipo de transacción, cantidad, costo real, fecha modificada",
      "output": "('transactionhistoryarchive', \"CREATE TABLE `transactionhistoryarchive` (\\n  `transactionid` int(11) NOT NULL COMMENT 'Primary key for TransactionHistoryArchive records.'  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `referenceorderid` int(11) NOT NULL COMMENT 'Purchase order, sales order, or work order identification number.',\\n  `referenceorderlineid` int(11) NOT NULL DEFAULT 0 COMMENT 'Line number associated with the purchase order, sales order, or work order.',\\n  `transactiondate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time of the transaction.',\\n  `transactiontype` char(1) NOT NULL COMMENT 'W = Work Order, S = Sales Order, P = Purchase Order',\\n  `quantity` int(11) NOT NULL COMMENT 'Product quantity.',\\n  `actualcost` decimal(19,4) NOT NULL COMMENT 'Product cost.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`transactionid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Transactions for previous years.'\")"
    },
    {
      "input": "Una tabla de actas con las columnas de, fecha, hora, ID de cliente, ID de tarjeta, ID de gasolinera, ID de producto, cantidad, precio",
      "output": "('transactions', 'CREATE TABLE `transactions` (\\n  `date` date DEFAULT NULL  `time` time DEFAULT NULL,\\n  `customerid` int(11) DEFAULT NULL,\\n  `cardid` int(11) DEFAULT NULL,\\n  `gasstationid` int(11) DEFAULT NULL,\\n  `productid` int(11) DEFAULT NULL,\\n  `amount` int(11) DEFAULT NULL,\\n  `price` decimal(12,2) DEFAULT NULL,\\n  KEY `transactions_large_staged_customerid_fkey` (`customerid`),\\n  KEY `transactions_large_staged_gasstationid_fkey` (`gasstationid`),\\n  KEY `transactions_large_staged_productid_fkey` (`productid`),\\n  CONSTRAINT `transactions_large_staged_customerid_fkey` FOREIGN KEY (`customerid`) REFERENCES `customers` (`customerid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `transactions_large_staged_gasstationid_fkey` FOREIGN KEY (`gasstationid`) REFERENCES `gasstations` (`gasstationid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `transactions_large_staged_productid_fkey` FOREIGN KEY (`productid`) REFERENCES `products` (`productid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de transacciones k con las columnas de, ID de transacción, fecha, hora, ID de cliente, ID de tarjeta, ID de gasolinera, ID de producto, cantidad, precio",
      "output": "('transactions_1k', 'CREATE TABLE `transactions_1k` (\\n  `transactionid` int(11) NOT NULL AUTO_INCREMENT  `date` date DEFAULT NULL,\\n  `time` time DEFAULT NULL,\\n  `customerid` int(11) DEFAULT NULL,\\n  `cardid` int(11) DEFAULT NULL,\\n  `gasstationid` int(11) DEFAULT NULL,\\n  `productid` int(11) DEFAULT NULL,\\n  `amount` int(11) DEFAULT NULL,\\n  `price` decimal(12,2) DEFAULT NULL,\\n  PRIMARY KEY (`transactionid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de trfl con las columnas de, tf",
      "output": "('trfl', 'CREATE TABLE `trfl` (\\n  `tf` varchar(1) NOT NULL  PRIMARY KEY (`tf`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de unidad de medida con las columnas de, código de medida de unidad, nombre, fecha de modificación",
      "output": "('unitmeasure', \"CREATE TABLE `unitmeasure` (\\n  `unitmeasurecode` char(3) NOT NULL COMMENT 'Primary key.'  `name` varchar(100) NOT NULL COMMENT 'Unit of measure description.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`unitmeasurecode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Unit of measure lookup table.'\")"
    },
    {
      "input": "Una tabla de usuarios con las columnas de, Id., Reputación, Fecha de creación, Nombre para mostrar, Fecha de último acceso, URL del sitio web, Ubicación, Acerca de mí, Vistas, Votos positivos, Votos negativos, Id. de cuenta, Edad, URL de imagen de perfil",
      "output": "('users', 'CREATE TABLE `users` (\\n  `Id` int(11) NOT NULL  `Reputation` int(11) DEFAULT NULL,\\n  `CreationDate` datetime DEFAULT NULL,\\n  `DisplayName` varchar(255) DEFAULT NULL,\\n  `LastAccessDate` datetime DEFAULT NULL,\\n  `WebsiteUrl` varchar(255) DEFAULT NULL,\\n  `Location` varchar(255) DEFAULT NULL,\\n  `AboutMe` longtext DEFAULT NULL,\\n  `Views` int(11) DEFAULT NULL,\\n  `UpVotes` int(11) DEFAULT NULL,\\n  `DownVotes` int(11) DEFAULT NULL,\\n  `AccountId` int(11) DEFAULT NULL,\\n  `Age` int(11) DEFAULT NULL,\\n  `ProfileImageUrl` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  UNIQUE KEY `users_staged_Id_key` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de atributos de youtube con las columnas de, estados de identificación, nombre, valor, valor, dirección",
      "output": "('utube_attributes', 'CREATE TABLE `utube_attributes` (\\n  `id_states` int(11) NOT NULL  `name` varchar(255) NOT NULL,\\n  `value1` varchar(255) DEFAULT NULL,\\n  `value2` varchar(255) DEFAULT NULL,\\n  `direction` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id_states`,`name`),\\n  KEY `id_states` (`id_states`),\\n  CONSTRAINT `utube_attributes_ibfk_1` FOREIGN KEY (`id_states`) REFERENCES `utube_states` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de estado de youtube con las columnas de, identificación, clase",
      "output": "('utube_states', 'CREATE TABLE `utube_states` (\\n  `id` int(11) NOT NULL  `class` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de vendedor con las columnas de, businessentityid, número de cuenta, nombre, calificación crediticia, estado de proveedor preferido, bandera activa, URL de servicio web de compras, fecha de modificación",
      "output": "('vendor', \"CREATE TABLE `vendor` (\\n  `businessentityid` int(11) NOT NULL COMMENT 'Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID'  `accountnumber` varchar(30) NOT NULL COMMENT 'Vendor account (identification) number.',\\n  `name` varchar(100) NOT NULL COMMENT 'Company name.',\\n  `creditrating` tinyint(3) unsigned NOT NULL COMMENT '1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average',\\n  `preferredvendorstatus` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.',\\n  `activeflag` tinyint(1) NOT NULL DEFAULT 1 COMMENT '0 = Vendor no longer used. 1 = Vendor is actively used.',\\n  `purchasingwebserviceurl` varchar(1024) DEFAULT NULL COMMENT 'Vendor URL.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`businessentityid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Companies from whom Adventure Works Cycles purchases parts or other goods.'\")"
    },
    {
      "input": "Una tabla de votos con las columnas de, ID, ID de publicación, ID de tipo de voto, fecha de creación, ID de usuario, cantidad de recompensa",
      "output": "('votes', 'CREATE TABLE `votes` (\\n  `Id` int(11) NOT NULL  `PostId` int(11) DEFAULT NULL,\\n  `VoteTypeId` int(11) DEFAULT NULL,\\n  `CreationDate` date DEFAULT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  `BountyAmount` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `votes_stripped_UserId_fkey` (`UserId`),\\n  KEY `votes_stripped_PostId_fkey` (`PostId`),\\n  CONSTRAINT `votes_stripped_PostId_fkey` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `votes_stripped_UserId_fkey` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de viajes con las columnas de, identificación artificial, número, número sup, viaje, viaje sup, nombre del barco, patrón, tonelaje, tipo de barco, construido, comprado, contratado, astillero, cámara, fecha de salida, puerto de salida, llegada al cabo, salida al cabo, llamada al cabo, llegada fecha, puerto de llegada, próximo viaje, detalles",
      "output": "('voyages', 'CREATE TABLE `voyages` (\\n  `artificial_id` char(12) DEFAULT NULL  `number` int(11) NOT NULL,\\n  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) DEFAULT NULL,\\n  `boatname` varchar(50) DEFAULT NULL,\\n  `master` varchar(50) DEFAULT NULL,\\n  `tonnage` int(11) DEFAULT NULL,\\n  `type_of_boat` varchar(30) DEFAULT NULL,\\n  `built` varchar(15) DEFAULT NULL,\\n  `bought` varchar(15) DEFAULT NULL,\\n  `hired` varchar(15) DEFAULT NULL,\\n  `yard` char(1) DEFAULT NULL,\\n  `chamber` char(1) DEFAULT NULL,\\n  `departure_date` date DEFAULT NULL,\\n  `departure_harbour` varchar(30) DEFAULT NULL,\\n  `cape_arrival` date DEFAULT NULL,\\n  `cape_departure` date DEFAULT NULL,\\n  `cape_call` varchar(5) DEFAULT NULL,\\n  `arrival_date` date DEFAULT NULL,\\n  `arrival_harbour` varchar(30) DEFAULT NULL,\\n  `next_voyage` int(11) DEFAULT NULL,\\n  `particulars` text DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de clima con las columnas de, estación nbr, fecha, tmax, tmin, tavg, salir, punto de rocío, bulbo húmedo, calor, guay, amanecer, atardecer, codesum, nevada, preciptotal, presión de gas, nivel del mar, velocidad de resultado, resultadodir, velocidad media",
      "output": "('weather', 'CREATE TABLE `weather` (\\n  `station_nbr` int(11) NOT NULL  `date` date NOT NULL,\\n  `tmax` int(11) DEFAULT NULL,\\n  `tmin` int(11) DEFAULT NULL,\\n  `tavg` int(11) DEFAULT NULL,\\n  `depart` int(11) DEFAULT NULL,\\n  `dewpoint` int(11) DEFAULT NULL,\\n  `wetbulb` int(11) DEFAULT NULL,\\n  `heat` int(11) DEFAULT NULL,\\n  `cool` int(11) DEFAULT NULL,\\n  `sunrise` time DEFAULT NULL,\\n  `sunset` time DEFAULT NULL,\\n  `codesum` varchar(255) DEFAULT NULL,\\n  `snowfall` float DEFAULT NULL,\\n  `preciptotal` float DEFAULT NULL,\\n  `stnpressure` float DEFAULT NULL,\\n  `sealevel` float DEFAULT NULL,\\n  `resultspeed` float DEFAULT NULL,\\n  `resultdir` int(11) DEFAULT NULL,\\n  `avgspeed` float DEFAULT NULL,\\n  PRIMARY KEY (`station_nbr`,`date`),\\n  CONSTRAINT `weather_station_nbr_fkey` FOREIGN KEY (`station_nbr`) REFERENCES `station` (`station_nbr`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de página web con las columnas de, ID de página web, etiqueta de clase",
      "output": "('webpage', 'CREATE TABLE `webpage` (\\n  `webpage_id` varchar(255) NOT NULL  `class_label` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`webpage_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de orden de trabajo con las columnas de, workorderid, productid, orderqty, stockedqty, scrappedqty, fecha de inicio, fecha de finalización, fecha de vencimiento, scrapreasonid, fecha modificada",
      "output": "('workorder', \"CREATE TABLE `workorder` (\\n  `workorderid` int(11) NOT NULL COMMENT 'Primary key for WorkOrder records.'  `productid` int(11) NOT NULL COMMENT 'Product identification number. Foreign key to Product.ProductID.',\\n  `orderqty` int(11) NOT NULL COMMENT 'Product quantity to build.',\\n  `stockedqty` int(11) NOT NULL COMMENT 'Quantity built and put in inventory.',\\n  `scrappedqty` smallint(6) NOT NULL COMMENT 'Quantity that failed inspection.',\\n  `startdate` datetime NOT NULL COMMENT 'Work order start date.',\\n  `enddate` datetime DEFAULT NULL COMMENT 'Work order end date.',\\n  `duedate` datetime NOT NULL COMMENT 'Work order due date.',\\n  `scrapreasonid` smallint(6) DEFAULT NULL COMMENT 'Reason for inspection failure.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`workorderid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Manufacturing work orders.'\")"
    },
    {
      "input": "Una tabla de enrutamiento de órdenes de trabajo con las columnas de, ID de orden de trabajo, ID de producto, secuencia de operación, ID de ubicación, fecha de inicio programada, fecha de finalización programada, fecha de inicio real, fecha de finalización real, horas de recursos reales, costo planificado, costo real, fecha modificada",
      "output": "('workorderrouting', \"CREATE TABLE `workorderrouting` (\\n  `workorderid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to WorkOrder.WorkOrderID.'  `productid` int(11) NOT NULL COMMENT 'Primary key. Foreign key to Product.ProductID.',\\n  `operationsequence` smallint(6) NOT NULL COMMENT 'Primary key. Indicates the manufacturing process sequence.',\\n  `locationid` smallint(6) NOT NULL COMMENT 'Manufacturing location where the part is processed. Foreign key to Location.LocationID.',\\n  `scheduledstartdate` datetime NOT NULL COMMENT 'Planned manufacturing start date.',\\n  `scheduledenddate` datetime NOT NULL COMMENT 'Planned manufacturing end date.',\\n  `actualstartdate` datetime DEFAULT NULL COMMENT 'Actual start date.',\\n  `actualenddate` datetime DEFAULT NULL COMMENT 'Actual end date.',\\n  `actualresourcehrs` decimal(9,4) DEFAULT NULL COMMENT 'Number of manufacturing hours used.',\\n  `plannedcost` decimal(19,4) NOT NULL COMMENT 'Estimated manufacturing cost.',\\n  `actualcost` decimal(19,4) DEFAULT NULL COMMENT 'Actual manufacturing cost.',\\n  `modifieddate` timestamp NOT NULL DEFAULT current_timestamp() COMMENT 'Date and time the record was last updated.',\\n  PRIMARY KEY (`workorderid`,`productid`,`operationsequence`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Work order details.'\")"
    },
    {
      "input": "Una tabla de año mes con las columnas de, idcliente, fecha, consumo",
      "output": "('yearmonth', 'CREATE TABLE `yearmonth` (\\n  `customerid` int(11) NOT NULL  `date` int(11) NOT NULL,\\n  `consumption` decimal(12,2) DEFAULT NULL,\\n  PRIMARY KEY (`customerid`,`date`),\\n  CONSTRAINT `yearmonth_staged_customerid_fkey` FOREIGN KEY (`customerid`) REFERENCES `customers` (`customerid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Categorías con las columnas de, Id. de categoría, Nombre de categoría, Descripción, Imagen",
      "output": "('Categories', 'CREATE TABLE `Categories` (\\n  `CategoryID` int(11) NOT NULL AUTO_INCREMENT  `CategoryName` varchar(15) NOT NULL,\\n  `Description` mediumtext DEFAULT NULL,\\n  `Picture` longblob DEFAULT NULL,\\n  PRIMARY KEY (`CategoryID`),\\n  KEY `Categories_CategoryName` (`CategoryName`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Cliente Cliente Demostración con las columnas de, ID de cliente, ID de tipo de cliente",
      "output": "('CustomerCustomerDemo', 'CREATE TABLE `CustomerCustomerDemo` (\\n  `CustomerID` varchar(5) NOT NULL  `CustomerTypeID` varchar(10) NOT NULL,\\n  PRIMARY KEY (`CustomerID`,`CustomerTypeID`),\\n  KEY `FK_CustomerCustomerDemo` (`CustomerTypeID`),\\n  CONSTRAINT `FK_CustomerCustomerDemo` FOREIGN KEY (`CustomerTypeID`) REFERENCES `CustomerDemographics` (`CustomerTypeID`),\\n  CONSTRAINT `FK_CustomerCustomerDemo_Customers` FOREIGN KEY (`CustomerID`) REFERENCES `Customers` (`CustomerID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Datos demográficos del cliente con las columnas de, ID de tipo de cliente, Descripción del cliente",
      "output": "('CustomerDemographics', 'CREATE TABLE `CustomerDemographics` (\\n  `CustomerTypeID` varchar(10) NOT NULL  `CustomerDesc` mediumtext DEFAULT NULL,\\n  PRIMARY KEY (`CustomerTypeID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Clientes con las columnas de, Id. del cliente, Nombre de la empresa, Nombre del contacto, Título del contacto, Dirección, Ciudad, Región, Código postal, País, Teléfono, Fax",
      "output": "('Customers', 'CREATE TABLE `Customers` (\\n  `CustomerID` varchar(5) NOT NULL  `CompanyName` varchar(40) NOT NULL,\\n  `ContactName` varchar(30) DEFAULT NULL,\\n  `ContactTitle` varchar(30) DEFAULT NULL,\\n  `Address` varchar(60) DEFAULT NULL,\\n  `City` varchar(15) DEFAULT NULL,\\n  `Region` varchar(15) DEFAULT NULL,\\n  `PostalCode` varchar(10) DEFAULT NULL,\\n  `Country` varchar(15) DEFAULT NULL,\\n  `Phone` varchar(24) DEFAULT NULL,\\n  `Fax` varchar(24) DEFAULT NULL,\\n  PRIMARY KEY (`CustomerID`),\\n  KEY `Customers_City` (`City`),\\n  KEY `Customers_CompanyName` (`CompanyName`),\\n  KEY `Customers_PostalCode` (`PostalCode`),\\n  KEY `Customers_Region` (`Region`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Territorios de empleados con las columnas de, ID de empleado, ID de territorio",
      "output": "('EmployeeTerritories', 'CREATE TABLE `EmployeeTerritories` (\\n  `EmployeeID` int(11) NOT NULL  `TerritoryID` varchar(20) NOT NULL,\\n  PRIMARY KEY (`EmployeeID`,`TerritoryID`),\\n  KEY `FK_EmployeeTerritories_Territories` (`TerritoryID`),\\n  CONSTRAINT `FK_EmployeeTerritories_Employees` FOREIGN KEY (`EmployeeID`) REFERENCES `Employees` (`EmployeeID`),\\n  CONSTRAINT `FK_EmployeeTerritories_Territories` FOREIGN KEY (`TerritoryID`) REFERENCES `Territories` (`TerritoryID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Empleados con las columnas de, Id. de empleado, Apellido, Nombre, Título, Título de cortesía, Fecha de nacimiento, Fecha de contratación, Dirección, Ciudad, Región, Código postal, País, Teléfono particular, Extensión, Foto, Notas, Informes a, Ruta de la foto, Salario",
      "output": "('Employees', 'CREATE TABLE `Employees` (\\n  `EmployeeID` int(11) NOT NULL AUTO_INCREMENT  `LastName` varchar(20) NOT NULL,\\n  `FirstName` varchar(10) NOT NULL,\\n  `Title` varchar(30) DEFAULT NULL,\\n  `TitleOfCourtesy` varchar(25) DEFAULT NULL,\\n  `BirthDate` datetime DEFAULT NULL,\\n  `HireDate` datetime DEFAULT NULL,\\n  `Address` varchar(60) DEFAULT NULL,\\n  `City` varchar(15) DEFAULT NULL,\\n  `Region` varchar(15) DEFAULT NULL,\\n  `PostalCode` varchar(10) DEFAULT NULL,\\n  `Country` varchar(15) DEFAULT NULL,\\n  `HomePhone` varchar(24) DEFAULT NULL,\\n  `Extension` varchar(4) DEFAULT NULL,\\n  `Photo` longblob DEFAULT NULL,\\n  `Notes` mediumtext NOT NULL,\\n  `ReportsTo` int(11) DEFAULT NULL,\\n  `PhotoPath` varchar(255) DEFAULT NULL,\\n  `Salary` float DEFAULT NULL,\\n  PRIMARY KEY (`EmployeeID`),\\n  KEY `FK_Employees_Employees` (`ReportsTo`),\\n  KEY `Employees_LastName` (`LastName`),\\n  KEY `Employees_PostalCode` (`PostalCode`),\\n  CONSTRAINT `FK_Employees_Employees` FOREIGN KEY (`ReportsTo`) REFERENCES `Employees` (`EmployeeID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Pedidos con las columnas de, Id. de pedido, Id. de cliente, Id. de empleado, Fecha de pedido, Fecha requerida, Fecha de envío, Vía de envío, Carga, Nombre de envío, Dirección de envío, Ciudad de envío, Región de envío, Código postal de envío, País de envío",
      "output": "('Orders', 'CREATE TABLE `Orders` (\\n  `OrderID` int(11) NOT NULL AUTO_INCREMENT  `CustomerID` varchar(5) DEFAULT NULL,\\n  `EmployeeID` int(11) DEFAULT NULL,\\n  `OrderDate` datetime DEFAULT NULL,\\n  `RequiredDate` datetime DEFAULT NULL,\\n  `ShippedDate` datetime DEFAULT NULL,\\n  `ShipVia` int(11) DEFAULT NULL,\\n  `Freight` decimal(10,4) DEFAULT 0.0000,\\n  `ShipName` varchar(40) DEFAULT NULL,\\n  `ShipAddress` varchar(60) DEFAULT NULL,\\n  `ShipCity` varchar(15) DEFAULT NULL,\\n  `ShipRegion` varchar(15) DEFAULT NULL,\\n  `ShipPostalCode` varchar(10) DEFAULT NULL,\\n  `ShipCountry` varchar(15) DEFAULT NULL,\\n  PRIMARY KEY (`OrderID`),\\n  KEY `FK_Orders_Customers` (`CustomerID`),\\n  KEY `FK_Orders_Employees` (`EmployeeID`),\\n  KEY `FK_Orders_Shippers` (`ShipVia`),\\n  KEY `Orders_OrderDate` (`OrderDate`),\\n  KEY `Orders_ShippedDate` (`ShippedDate`),\\n  KEY `Orders_ShipPostalCode` (`ShipPostalCode`),\\n  CONSTRAINT `FK_Orders_Customers` FOREIGN KEY (`CustomerID`) REFERENCES `Customers` (`CustomerID`),\\n  CONSTRAINT `FK_Orders_Employees` FOREIGN KEY (`EmployeeID`) REFERENCES `Employees` (`EmployeeID`),\\n  CONSTRAINT `FK_Orders_Shippers` FOREIGN KEY (`ShipVia`) REFERENCES `Shippers` (`ShipperID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de productos con las columnas de, Id. de producto, Nombre de producto, Id. de proveedor, Id. de categoría, Cantidad por unidad, Precio unitario, Unidades en stock, Unidades en pedido, Nivel de pedido, Descontinuado",
      "output": "('Products', 'CREATE TABLE `Products` (\\n  `ProductID` int(11) NOT NULL AUTO_INCREMENT  `ProductName` varchar(40) NOT NULL,\\n  `SupplierID` int(11) DEFAULT NULL,\\n  `CategoryID` int(11) DEFAULT NULL,\\n  `QuantityPerUnit` varchar(20) DEFAULT NULL,\\n  `UnitPrice` decimal(10,4) DEFAULT 0.0000,\\n  `UnitsInStock` smallint(2) DEFAULT 0,\\n  `UnitsOnOrder` smallint(2) DEFAULT 0,\\n  `ReorderLevel` smallint(2) DEFAULT 0,\\n  `Discontinued` tinyint(1) NOT NULL,\\n  PRIMARY KEY (`ProductID`),\\n  KEY `FK_Products_Categories` (`CategoryID`),\\n  KEY `FK_Products_Suppliers` (`SupplierID`),\\n  KEY `Products_ProductName` (`ProductName`),\\n  CONSTRAINT `FK_Products_Categories` FOREIGN KEY (`CategoryID`) REFERENCES `Categories` (`CategoryID`),\\n  CONSTRAINT `FK_Products_Suppliers` FOREIGN KEY (`SupplierID`) REFERENCES `Suppliers` (`SupplierID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Región con las columnas de, Id. de región, Descripción de región",
      "output": "('Region', 'CREATE TABLE `Region` (\\n  `RegionID` int(11) NOT NULL  `RegionDescription` varchar(50) NOT NULL,\\n  PRIMARY KEY (`RegionID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Cargadores con las columnas de, ID del remitente, nombre de la empresa, teléfono",
      "output": "('Shippers', 'CREATE TABLE `Shippers` (\\n  `ShipperID` int(11) NOT NULL AUTO_INCREMENT  `CompanyName` varchar(40) NOT NULL,\\n  `Phone` varchar(24) DEFAULT NULL,\\n  PRIMARY KEY (`ShipperID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Proveedores con las columnas de, Id. del proveedor, Nombre de la empresa, Nombre del contacto, Título del contacto, Dirección, Ciudad, Región, Código postal, País, Teléfono, Fax, Página de inicio",
      "output": "('Suppliers', 'CREATE TABLE `Suppliers` (\\n  `SupplierID` int(11) NOT NULL AUTO_INCREMENT  `CompanyName` varchar(40) NOT NULL,\\n  `ContactName` varchar(30) DEFAULT NULL,\\n  `ContactTitle` varchar(30) DEFAULT NULL,\\n  `Address` varchar(60) DEFAULT NULL,\\n  `City` varchar(15) DEFAULT NULL,\\n  `Region` varchar(15) DEFAULT NULL,\\n  `PostalCode` varchar(10) DEFAULT NULL,\\n  `Country` varchar(15) DEFAULT NULL,\\n  `Phone` varchar(24) DEFAULT NULL,\\n  `Fax` varchar(24) DEFAULT NULL,\\n  `HomePage` mediumtext DEFAULT NULL,\\n  PRIMARY KEY (`SupplierID`),\\n  KEY `Suppliers_CompanyName` (`CompanyName`),\\n  KEY `Suppliers_PostalCode` (`PostalCode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Territorios con las columnas de, ID de territorio, Descripción de territorio, ID de región",
      "output": "('Territories', 'CREATE TABLE `Territories` (\\n  `TerritoryID` varchar(20) NOT NULL  `TerritoryDescription` varchar(50) NOT NULL,\\n  `RegionID` int(11) NOT NULL,\\n  PRIMARY KEY (`TerritoryID`),\\n  KEY `FK_Territories_Region` (`RegionID`),\\n  CONSTRAINT `FK_Territories_Region` FOREIGN KEY (`RegionID`) REFERENCES `Region` (`RegionID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de accidente con las columnas de, accidente de identificación, accidente de clase, unidad administrativa, accidente de tiempo, asentamiento o fuera, categoría de camino, letrero de camino o asentamiento, texto de camino o asentamiento, letrero de sección o calle, texto de sección o calle, calle estacionaria o casa, descripción de la escena, causa de accidente, tipo de accidente, accidente meteorológico, estado del tráfico, estado de la carretera, estado de la superficie de la carretera, x, y, x wgs, y wgs",
      "output": "('nesreca', 'CREATE TABLE `nesreca` (\\n  `id_nesreca` char(6) NOT NULL  `klas_nesreca` char(1) NOT NULL,\\n  `upravna_enota` char(4) NOT NULL,\\n  `cas_nesreca` datetime NOT NULL,\\n  `naselje_ali_izven` char(1) NOT NULL,\\n  `kategorija_cesta` char(1) DEFAULT NULL,\\n  `oznaka_cesta_ali_naselje` char(5) NOT NULL,\\n  `tekst_cesta_ali_naselje` varchar(25) NOT NULL,\\n  `oznaka_odsek_ali_ulica` char(5) NOT NULL,\\n  `tekst_odsek_ali_ulica` varchar(25) NOT NULL,\\n  `stacionazna_ali_hisna_st` varchar(9) DEFAULT NULL,\\n  `opis_prizorisce` char(1) NOT NULL,\\n  `vzrok_nesreca` char(2) NOT NULL,\\n  `tip_nesreca` char(2) NOT NULL,\\n  `vreme_nesreca` char(1) NOT NULL,\\n  `stanje_promet` char(1) NOT NULL,\\n  `stanje_vozisce` char(2) NOT NULL,\\n  `stanje_povrsina_vozisce` char(2) NOT NULL,\\n  `x` int(11) DEFAULT NULL,\\n  `y` int(11) DEFAULT NULL,\\n  `x_wgs84` double DEFAULT NULL,\\n  `y_wgs84` double DEFAULT NULL,\\n  PRIMARY KEY (`id_nesreca`),\\n  KEY `nesreca_cas_nesreca_idx` (`cas_nesreca`),\\n  KEY `nesreca_pos_idx` (`x`,`y`),\\n  KEY `nesreca_pos_wgs_84` (`x_wgs84`,`y_wgs84`),\\n  KEY `upravna_enota` (`upravna_enota`),\\n  CONSTRAINT `nesreca_ibfk_1` FOREIGN KEY (`upravna_enota`) REFERENCES `upravna_enota` (`id_upravna_enota`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de persona con las columnas de, id accidente, autor o participante, edad, sexo, unidad administrativa, nacionalidad, lesión, tipo de participante, cinturón de seguridad o casco, pista de conducción L L, pista de conducción M M, alcoholímetro, examen pericial, edad d, prueba de manejo d, alcoholímetro d , revisión por pares d",
      "output": "('oseba', 'CREATE TABLE `oseba` (\\n  `id_nesreca` char(6) NOT NULL  `povzrocitelj_ali_udelezenec` char(1) DEFAULT NULL,\\n  `starost` tinyint(3) unsigned DEFAULT NULL,\\n  `spol` char(1) DEFAULT NULL,\\n  `upravna_enota` char(4) NOT NULL,\\n  `drzavljanstvo` char(3) NOT NULL,\\n  `poskodba` char(1) DEFAULT NULL,\\n  `vrsta_udelezenca` char(2) DEFAULT NULL,\\n  `varnostni_pas_ali_celada` char(1) DEFAULT NULL,\\n  `vozniski_staz_LL` tinyint(3) unsigned DEFAULT NULL,\\n  `vozniski_staz_MM` tinyint(3) unsigned DEFAULT NULL,\\n  `alkotest` decimal(3,2) DEFAULT NULL,\\n  `strokovni_pregled` decimal(3,2) DEFAULT NULL,\\n  `starost_d` char(1) DEFAULT NULL,\\n  `vozniski_staz_d` char(1) DEFAULT NULL,\\n  `alkotest_d` char(1) DEFAULT NULL,\\n  `strokovni_pregled_d` char(1) DEFAULT NULL,\\n  KEY `oseba_id_nesreca` (`id_nesreca`),\\n  KEY `upravna_enota` (`upravna_enota`),\\n  CONSTRAINT `oseba_ibfk_1` FOREIGN KEY (`id_nesreca`) REFERENCES `nesreca` (`id_nesreca`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `oseba_ibfk_2` FOREIGN KEY (`upravna_enota`) REFERENCES `upravna_enota` (`id_upravna_enota`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Unidad administrativa con las columnas de, id unidad administrativa, nombre unidad administrativa, st habitantes, area",
      "output": "('upravna_enota', 'CREATE TABLE `upravna_enota` (\\n  `id_upravna_enota` char(4) NOT NULL  `ime_upravna_enota` varchar(255) NOT NULL,\\n  `st_prebivalcev` int(10) unsigned DEFAULT NULL,\\n  `povrsina` smallint(5) unsigned DEFAULT NULL,\\n  PRIMARY KEY (`id_upravna_enota`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de actor con las columnas de, identificación del actor, nombre, apellido, última actualización",
      "output": "('actor', 'CREATE TABLE `actor` (\\n  `actor_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `first_name` varchar(45) NOT NULL,\\n  `last_name` varchar(45) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`actor_id`),\\n  KEY `idx_actor_last_name` (`last_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Dirección con las columnas de, id de dirección, dirección, dirección, distrito, id de ciudad, código postal, teléfono, última actualización",
      "output": "('address', 'CREATE TABLE `address` (\\n  `address_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `address` varchar(50) NOT NULL,\\n  `address2` varchar(50) DEFAULT NULL,\\n  `district` varchar(20) NOT NULL,\\n  `city_id` smallint(5) unsigned NOT NULL,\\n  `postal_code` varchar(10) DEFAULT NULL,\\n  `phone` varchar(20) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`address_id`),\\n  KEY `idx_address_city_id` (`city_id`),\\n  CONSTRAINT `fk_address_city` FOREIGN KEY (`city_id`) REFERENCES `city` (`city_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de años con las columnas de, argumento, argumento",
      "output": "('age', 'CREATE TABLE `age` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `age_arg1` (`arg1`),\\n  CONSTRAINT `age_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de IMC con las columnas de, argumento, argumento",
      "output": "('bmi', 'CREATE TABLE `bmi` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `bmi_arg1` (`arg1`),\\n  CONSTRAINT `bmi_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de categoría con las columnas de, ID de categoría, nombre, última actualización",
      "output": "('category', 'CREATE TABLE `category` (\\n  `category_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT  `name` varchar(25) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`category_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ciudad con las columnas de, id de ciudad, ciudad, id de país, última actualización",
      "output": "('city', 'CREATE TABLE `city` (\\n  `city_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `city` varchar(50) NOT NULL,\\n  `country_id` smallint(5) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`city_id`),\\n  KEY `idx_city_country_id` (`country_id`),\\n  CONSTRAINT `fk_city_country` FOREIGN KEY (`country_id`) REFERENCES `country` (`country_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de país con las columnas de, ID de país, país, última actualización",
      "output": "('country', 'CREATE TABLE `country` (\\n  `country_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `country` varchar(50) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`country_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, ID de tienda, nombre, apellido, correo electrónico, ID de dirección, activo, fecha de creación, última actualización",
      "output": "('customer', 'CREATE TABLE `customer` (\\n  `customer_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `store_id` tinyint(3) unsigned NOT NULL,\\n  `first_name` varchar(45) NOT NULL,\\n  `last_name` varchar(45) NOT NULL,\\n  `email` varchar(50) DEFAULT NULL,\\n  `address_id` smallint(5) unsigned NOT NULL,\\n  `active` tinyint(1) NOT NULL DEFAULT 1,\\n  `create_date` datetime NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`customer_id`),\\n  KEY `idx_last_name` (`last_name`),\\n  KEY `idx_customer_store_id` (`store_id`),\\n  KEY `idx_customer_address_id` (`address_id`),\\n  CONSTRAINT `fk_customer_address` FOREIGN KEY (`address_id`) REFERENCES `address` (`address_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_customer_store` FOREIGN KEY (`store_id`) REFERENCES `store` (`store_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de diastólica con las columnas de, argumento, argumento",
      "output": "('diastolic', 'CREATE TABLE `diastolic` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `diastolic_arg1` (`arg1`),\\n  CONSTRAINT `diastolic_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de película con las columnas de, identificación de la película, título, descripción, año de lanzamiento, identificación del idioma, identificación del idioma original, duración del alquiler, tarifa de alquiler, duración, costo de reemplazo, calificación, características especiales, última actualización",
      "output": "('film', \"CREATE TABLE `film` (\\n  `film_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `title` varchar(255) NOT NULL,\\n  `description` text DEFAULT NULL,\\n  `release_year` year(4) DEFAULT NULL,\\n  `language_id` tinyint(3) unsigned NOT NULL,\\n  `original_language_id` tinyint(3) unsigned DEFAULT NULL,\\n  `rental_duration` tinyint(3) unsigned NOT NULL DEFAULT 3,\\n  `rental_rate` decimal(4,2) NOT NULL DEFAULT 4.99,\\n  `length` smallint(5) unsigned DEFAULT NULL,\\n  `replacement_cost` decimal(5,2) NOT NULL DEFAULT 19.99,\\n  `rating` enum('G','PG','PG-13','R','NC-17') DEFAULT 'G',\\n  `special_features` set('Trailers','Commentaries','Deleted Scenes','Behind the Scenes') DEFAULT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`film_id`),\\n  KEY `idx_title` (`title`),\\n  KEY `idx_film_language_id` (`language_id`),\\n  KEY `idx_film_original_language_id` (`original_language_id`),\\n  CONSTRAINT `fk_film_language` FOREIGN KEY (`language_id`) REFERENCES `language` (`language_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_film_language_original` FOREIGN KEY (`original_language_id`) REFERENCES `language` (`language_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de Actor de películas con las columnas de, identificación del actor, identificación de la película, última actualización",
      "output": "('film_actor', 'CREATE TABLE `film_actor` (\\n  `actor_id` smallint(5) unsigned NOT NULL  `film_id` smallint(5) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`actor_id`,`film_id`),\\n  KEY `idx_film_actor_film_id` (`film_id`),\\n  CONSTRAINT `fk_film_actor_actor` FOREIGN KEY (`actor_id`) REFERENCES `actor` (`actor_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_film_actor_film` FOREIGN KEY (`film_id`) REFERENCES `film` (`film_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de categoría de película con las columnas de, id de película, id de categoría, última actualización",
      "output": "('film_category', 'CREATE TABLE `film_category` (\\n  `film_id` smallint(5) unsigned NOT NULL  `category_id` tinyint(3) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`film_id`,`category_id`),\\n  KEY `fk_film_category_category` (`category_id`),\\n  CONSTRAINT `fk_film_category_category` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_film_category_film` FOREIGN KEY (`film_id`) REFERENCES `film` (`film_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de inventario con las columnas de, ID de inventario, ID de película, ID de tienda, última actualización",
      "output": "('inventory', 'CREATE TABLE `inventory` (\\n  `inventory_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT  `film_id` smallint(5) unsigned NOT NULL,\\n  `store_id` tinyint(3) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`inventory_id`),\\n  KEY `idx_store_id_film_id` (`store_id`,`film_id`),\\n  KEY `idx_inventory_film_id` (`film_id`),\\n  CONSTRAINT `fk_inventory_film` FOREIGN KEY (`film_id`) REFERENCES `film` (`film_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_inventory_store` FOREIGN KEY (`store_id`) REFERENCES `store` (`store_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de idioma con las columnas de, ID de idioma, nombre, última actualización",
      "output": "('language', 'CREATE TABLE `language` (\\n  `language_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT  `name` char(20) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`language_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de número de embarazo con las columnas de, argumento, argumento",
      "output": "('numPreg', 'CREATE TABLE `numPreg` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `numPreg_arg1` (`arg1`),\\n  CONSTRAINT `numPreg_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de pago con las columnas de, id de pago, id de cliente, id de personal, id de alquiler, importe, fecha de pago, última actualización",
      "output": "('payment', 'CREATE TABLE `payment` (\\n  `payment_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `customer_id` smallint(5) unsigned NOT NULL,\\n  `staff_id` tinyint(3) unsigned NOT NULL,\\n  `rental_id` int(11) DEFAULT NULL,\\n  `amount` decimal(5,2) NOT NULL,\\n  `payment_date` datetime NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`payment_id`),\\n  KEY `fk_payment_rental` (`rental_id`),\\n  KEY `idx_payment_staff_id` (`staff_id`),\\n  KEY `idx_payment_customer_id` (`customer_id`),\\n  CONSTRAINT `fk_payment_customer` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_payment_rental` FOREIGN KEY (`rental_id`) REFERENCES `rental` (`rental_id`) ON DELETE SET NULL ON UPDATE CASCADE,\\n  CONSTRAINT `fk_payment_staff` FOREIGN KEY (`staff_id`) REFERENCES `staff` (`staff_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de árbol genealógico con las columnas de, argumento, argumento",
      "output": "('pedigree', 'CREATE TABLE `pedigree` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `pedigree_arg1` (`arg1`),\\n  CONSTRAINT `pedigree_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de pimas con las columnas de, argumento, argumento",
      "output": "('pima', 'CREATE TABLE `pima` (\\n  `arg1` varchar(4) NOT NULL  `arg2` varchar(1) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `pima_arg1` (`arg1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de plasma con las columnas de, argumento, argumento",
      "output": "('plasma', 'CREATE TABLE `plasma` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `plasma_arg1` (`arg1`),\\n  CONSTRAINT `plasma_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de alquiler con las columnas de, ID de alquiler, fecha de alquiler, ID de inventario, ID de cliente, fecha de devolución, ID de personal, última actualización",
      "output": "('rental', 'CREATE TABLE `rental` (\\n  `rental_id` int(11) NOT NULL AUTO_INCREMENT  `rental_date` datetime NOT NULL,\\n  `inventory_id` mediumint(8) unsigned NOT NULL,\\n  `customer_id` smallint(5) unsigned NOT NULL,\\n  `return_date` datetime DEFAULT NULL,\\n  `staff_id` tinyint(3) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`rental_id`),\\n  UNIQUE KEY `rental_date` (`rental_date`,`inventory_id`,`customer_id`),\\n  KEY `idx_rental_customer_id` (`customer_id`),\\n  KEY `idx_rental_inventory_id` (`inventory_id`),\\n  KEY `idx_rental_staff_id` (`staff_id`),\\n  CONSTRAINT `fk_rental_customer` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_rental_inventory` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_rental_staff` FOREIGN KEY (`staff_id`) REFERENCES `staff` (`staff_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de suero con las columnas de, argumento, argumento",
      "output": "('serum', 'CREATE TABLE `serum` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `serum_arg1` (`arg1`),\\n  CONSTRAINT `serum_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de personal con las columnas de, identificación del personal, nombre, apellido, identificación de la dirección, imagen, correo electrónico, identificación de la tienda, activo, nombre de usuario, contraseña, última actualización",
      "output": "('staff', 'CREATE TABLE `staff` (\\n  `staff_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT  `first_name` varchar(45) NOT NULL,\\n  `last_name` varchar(45) NOT NULL,\\n  `address_id` smallint(5) unsigned NOT NULL,\\n  `picture` blob DEFAULT NULL,\\n  `email` varchar(50) DEFAULT NULL,\\n  `store_id` tinyint(3) unsigned NOT NULL,\\n  `active` tinyint(1) NOT NULL DEFAULT 1,\\n  `username` varchar(16) NOT NULL,\\n  `password` varchar(40) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`staff_id`),\\n  KEY `idx_staff_store_id` (`store_id`),\\n  KEY `idx_staff_address_id` (`address_id`),\\n  CONSTRAINT `fk_staff_address` FOREIGN KEY (`address_id`) REFERENCES `address` (`address_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_staff_store` FOREIGN KEY (`store_id`) REFERENCES `store` (`store_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Tienda con las columnas de, ID de la tienda, ID del personal del administrador, ID de la dirección, última actualización",
      "output": "('store', 'CREATE TABLE `store` (\\n  `store_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT  `manager_staff_id` tinyint(3) unsigned NOT NULL,\\n  `address_id` smallint(5) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`store_id`),\\n  UNIQUE KEY `idx_unique_manager` (`manager_staff_id`),\\n  KEY `idx_store_address_id` (`address_id`),\\n  CONSTRAINT `fk_store_address` FOREIGN KEY (`address_id`) REFERENCES `address` (`address_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_store_staff` FOREIGN KEY (`manager_staff_id`) REFERENCES `staff` (`staff_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tríceps con las columnas de, argumento, argumento",
      "output": "('tricepts', 'CREATE TABLE `tricepts` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `tricepts_arg1` (`arg1`),\\n  CONSTRAINT `tricepts_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Empleados con las columnas de, ID de empleado, nombre, inicial del segundo nombre, apellido",
      "output": "('Employees', 'CREATE TABLE `Employees` (\\n  `EmployeeID` int(11) NOT NULL  `FirstName` varchar(40) NOT NULL,\\n  `MiddleInitial` varchar(40) DEFAULT NULL,\\n  `LastName` varchar(40) NOT NULL,\\n  PRIMARY KEY (`EmployeeID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de productos con las columnas de, ID de producto, nombre, precio",
      "output": "('Products', 'CREATE TABLE `Products` (\\n  `ProductID` int(11) NOT NULL  `Name` varchar(50) NOT NULL,\\n  `Price` decimal(19,4) DEFAULT NULL,\\n  PRIMARY KEY (`ProductID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de lista de materiales con las columnas de, identificación del conjunto de tubos, identificación del componente, cantidad",
      "output": "('bill_of_materials', 'CREATE TABLE `bill_of_materials` (\\n  `tube_assembly_id` varchar(255) DEFAULT NULL  `component_id` varchar(255) DEFAULT NULL,\\n  `quantity` int(11) DEFAULT NULL,\\n  KEY `bill_of_materials_post_tube_assembly_id_fkey` (`tube_assembly_id`),\\n  KEY `bill_of_materials_post_component_id_fkey` (`component_id`),\\n  CONSTRAINT `bill_of_materials_post_component_id_fkey` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `bill_of_materials_post_tube_assembly_id_fkey` FOREIGN KEY (`tube_assembly_id`) REFERENCES `tube` (`tube_assembly_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de adaptador de comp con las columnas de, ID de componente, ID de tipo de componente, ángulo del adaptador, longitud total, ID de forma final, ID de tipo de conexión, longitud, tamaño de rosca, paso de rosca, tamaño nominal, ID de forma final, ID de tipo de conexión, longitud, tamaño de rosca, paso de rosca, tamaño nomi l, tamaño hexadecimal, característica única, orientación, peso",
      "output": "('comp_adaptor', 'CREATE TABLE `comp_adaptor` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `adaptor_angle` int(11) DEFAULT NULL,\\n  `overall_length` decimal(65,30) DEFAULT NULL,\\n  `end_form_id_1` varchar(255) DEFAULT NULL,\\n  `connection_type_id_1` varchar(255) DEFAULT NULL,\\n  `length_1` decimal(65,30) DEFAULT NULL,\\n  `thread_size_1` decimal(65,30) DEFAULT NULL,\\n  `thread_pitch_1` decimal(65,30) DEFAULT NULL,\\n  `nomi l_size_1` decimal(65,30) DEFAULT NULL,\\n  `end_form_id_2` varchar(255) DEFAULT NULL,\\n  `connection_type_id_2` varchar(255) DEFAULT NULL,\\n  `length_2` decimal(65,30) DEFAULT NULL,\\n  `thread_size_2` decimal(65,30) DEFAULT NULL,\\n  `thread_pitch_2` decimal(65,30) DEFAULT NULL,\\n  `nomi l_size_2` decimal(65,30) DEFAULT NULL,\\n  `hex_size` decimal(65,30) DEFAULT NULL,\\n  `unique_feature` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` decimal(65,30) DEFAULT NULL,\\n  KEY `comp_adaptor_post_component_id_fkey` (`component_id`),\\n  KEY `comp_adaptor_post_component_type_id_fkey` (`component_type_id`),\\n  KEY `comp_adaptor_post_end_form_id_2_fkey` (`end_form_id_2`),\\n  KEY `comp_adaptor_post_end_form_id_1_fkey` (`end_form_id_1`),\\n  KEY `comp_adaptor_post_connection_type_id_1_fkey` (`connection_type_id_1`),\\n  KEY `comp_adaptor_post_connection_type_id_2_fkey` (`connection_type_id_2`),\\n  CONSTRAINT `comp_adaptor_post_component_id_fkey` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_adaptor_post_component_type_id_fkey` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_adaptor_post_connection_type_id_1_fkey` FOREIGN KEY (`connection_type_id_1`) REFERENCES `type_connection` (`connection_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_adaptor_post_connection_type_id_2_fkey` FOREIGN KEY (`connection_type_id_2`) REFERENCES `type_connection` (`connection_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_adaptor_post_end_form_id_1_fkey` FOREIGN KEY (`end_form_id_1`) REFERENCES `type_end_form` (`end_form_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_adaptor_post_end_form_id_2_fkey` FOREIGN KEY (`end_form_id_2`) REFERENCES `type_end_form` (`end_form_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de jefe de compensación con las columnas de, identificación del componente, identificación del tipo de componente, tipo, identificación del tipo de conexión, forma exterior, tipo de base, altura sobre el tubo, patrón de pernos largo, patrón de pernos ancho, ranura, diámetro de la base, diámetro del hombro, característica única, orientación, peso",
      "output": "('comp_boss', 'CREATE TABLE `comp_boss` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `type` varchar(255) DEFAULT NULL,\\n  `connection_type_id` varchar(255) DEFAULT NULL,\\n  `outside_shape` varchar(255) DEFAULT NULL,\\n  `base_type` varchar(255) DEFAULT NULL,\\n  `height_over_tube` decimal(65,30) DEFAULT NULL,\\n  `bolt_pattern_long` decimal(65,30) DEFAULT NULL,\\n  `bolt_pattern_wide` decimal(65,30) DEFAULT NULL,\\n  `groove` varchar(255) DEFAULT NULL,\\n  `base_diameter` decimal(65,30) DEFAULT NULL,\\n  `shoulder_diameter` decimal(65,30) DEFAULT NULL,\\n  `unique_feature` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` decimal(65,30) DEFAULT NULL,\\n  KEY `comp_boss_post_component_id_fkey` (`component_id`),\\n  KEY `comp_boss_post_component_type_id_fkey` (`component_type_id`),\\n  CONSTRAINT `comp_boss_post_component_id_fkey` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_boss_post_component_type_id_fkey` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de codo comp con las columnas de, identificación del componente, identificación del tipo de componente, patrón de pernos largo, patrón de pernos ancho, longitud de extensión, longitud total, grosor, longitud de caída, ángulo de codo, código de clase mj, código de clase de enchufe mj, diámetro del enchufe, ranura, característica única, orientación, peso",
      "output": "('comp_elbow', 'CREATE TABLE `comp_elbow` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `bolt_pattern_long` decimal(65,30) DEFAULT NULL,\\n  `bolt_pattern_wide` decimal(65,30) DEFAULT NULL,\\n  `extension_length` decimal(65,30) DEFAULT NULL,\\n  `overall_length` decimal(65,30) DEFAULT NULL,\\n  `thickness` decimal(65,30) DEFAULT NULL,\\n  `drop_length` decimal(65,30) DEFAULT NULL,\\n  `elbow_angle` decimal(65,30) DEFAULT NULL,\\n  `mj_class_code` varchar(255) DEFAULT NULL,\\n  `mj_plug_class_code` varchar(255) DEFAULT NULL,\\n  `plug_diameter` decimal(65,30) DEFAULT NULL,\\n  `groove` varchar(255) DEFAULT NULL,\\n  `unique_feature` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` decimal(65,30) DEFAULT NULL,\\n  KEY `comp_elbow_post_component_id_fkey` (`component_id`),\\n  KEY `comp_elbow_post_component_type_id_fkey` (`component_type_id`),\\n  CONSTRAINT `comp_elbow_post_component_id_fkey` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_elbow_post_component_type_id_fkey` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de flotador de compensación con las columnas de, ID de componente, ID de tipo de componente, patrón de pernos largo, patrón de pernos ancho, espesor, orientación, peso",
      "output": "('comp_float', 'CREATE TABLE `comp_float` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `bolt_pattern_long` float DEFAULT NULL,\\n  `bolt_pattern_wide` float DEFAULT NULL,\\n  `thickness` float DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` float DEFAULT NULL,\\n  KEY `comp_float_component_id` (`component_id`),\\n  KEY `comp_float_component_type_id` (`component_type_id`),\\n  CONSTRAINT `comp_float_ibfk_1` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_float_ibfk_2` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de borrador hfl con las columnas de, identificación del componente, identificación del tipo de componente, diámetro de la manguera, carcasa correspondiente, clase de acoplamiento, material, revestimiento, orientación, peso",
      "output": "('comp_hfl', 'CREATE TABLE `comp_hfl` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `hose_diameter` float DEFAULT NULL,\\n  `corresponding_shell` varchar(255) DEFAULT NULL,\\n  `coupling_class` varchar(255) DEFAULT NULL,\\n  `material` varchar(255) DEFAULT NULL,\\n  `plating` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` float DEFAULT NULL,\\n  KEY `comp_hfl_component_id` (`component_id`),\\n  KEY `comp_hfl_component_type_id` (`component_type_id`),\\n  CONSTRAINT `comp_hfl_ibfk_1` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_hfl_ibfk_2` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tuerca borrador con las columnas de, ID de componente, ID de tipo de componente, tamaño de tuerca hexagonal, ángulo de asiento, longitud, tamaño de rosca, paso de rosca, diámetro, agujero ciego, orientación, peso",
      "output": "('comp_nut', 'CREATE TABLE `comp_nut` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `hex_nut_size` decimal(65,30) DEFAULT NULL,\\n  `seat_angle` decimal(65,30) DEFAULT NULL,\\n  `length` decimal(65,30) DEFAULT NULL,\\n  `thread_size` varchar(255) DEFAULT NULL,\\n  `thread_pitch` decimal(65,30) DEFAULT NULL,\\n  `diameter` decimal(65,30) DEFAULT NULL,\\n  `blind_hole` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` decimal(65,30) DEFAULT NULL,\\n  KEY `comp_nut_pos_component_id_fkey` (`component_id`),\\n  KEY `comp_nut_pos_component_type_id_fkey` (`component_type_id`),\\n  CONSTRAINT `comp_nut_pos_component_id_fkey` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_nut_pos_component_type_id_fkey` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de manga de borrador con las columnas de, identificación de componente, identificación de tipo de componente, identificación de tipo de conexión, longitud, rosca de tuerca prevista, paso de tuerca previsto, característica única, enchapado, orientación, peso",
      "output": "('comp_sleeve', 'CREATE TABLE `comp_sleeve` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `connection_type_id` varchar(255) DEFAULT NULL,\\n  `length` float DEFAULT NULL,\\n  `intended_nut_thread` float DEFAULT NULL,\\n  `intended_nut_pitch` int(11) DEFAULT NULL,\\n  `unique_feature` varchar(255) DEFAULT NULL,\\n  `plating` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` float DEFAULT NULL,\\n  KEY `comp_sleeve_component_id` (`component_id`),\\n  KEY `comp_sleeve_component_type_id` (`component_type_id`),\\n  KEY `comp_sleeve_connection_type_id` (`connection_type_id`),\\n  CONSTRAINT `comp_sleeve_ibfk_1` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_sleeve_ibfk_2` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_sleeve_ibfk_3` FOREIGN KEY (`connection_type_id`) REFERENCES `type_connection` (`connection_type_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de compensación recta con las columnas de, identificación del componente, identificación del tipo de componente, patrón de pernos largo, patrón de pernos ancho, diámetro de la cabeza, longitud total, grosor, código de clase mj, ranura, característica única, orientación, peso",
      "output": "('comp_straight', 'CREATE TABLE `comp_straight` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `bolt_pattern_long` decimal(65,30) DEFAULT NULL,\\n  `bolt_pattern_wide` decimal(65,30) DEFAULT NULL,\\n  `head_diameter` decimal(65,30) DEFAULT NULL,\\n  `overall_length` decimal(65,30) DEFAULT NULL,\\n  `thickness` decimal(65,30) DEFAULT NULL,\\n  `mj_class_code` varchar(255) DEFAULT NULL,\\n  `groove` varchar(255) DEFAULT NULL,\\n  `unique_feature` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` decimal(65,30) DEFAULT NULL,\\n  KEY `comp_straight_pos_component_id_fkey` (`component_id`),\\n  KEY `comp_straight_pos_component_type_id_fkey` (`component_type_id`),\\n  CONSTRAINT `comp_straight_pos_component_id_fkey` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_straight_pos_component_type_id_fkey` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de borrador roscado con las columnas de, ID de componente, ID de tipo de componente, ángulo del adaptador, longitud total, tamaño hexadecimal, ID de forma final, ID de tipo de conexión, longitud, tamaño de rosca, paso de rosca, tamaño nominal, ID de forma final, ID de tipo de conexión, longitud, tamaño de rosca, paso de rosca, tamaño nomi l, id de forma final, id de tipo de conexión, longitud, tamaño de rosca, paso de rosca, tamaño nomi l, id de forma final, id de tipo de conexión, longitud, tamaño de rosca, paso de rosca, tamaño nomi l, característica única, orientación, peso",
      "output": "('comp_threaded', 'CREATE TABLE `comp_threaded` (\\n  `component_id` varchar(255) DEFAULT NULL  `component_type_id` varchar(255) DEFAULT NULL,\\n  `adaptor_angle` decimal(65,30) DEFAULT NULL,\\n  `overall_length` decimal(65,30) DEFAULT NULL,\\n  `hex_size` decimal(65,30) DEFAULT NULL,\\n  `end_form_id_1` varchar(255) DEFAULT NULL,\\n  `connection_type_id_1` varchar(255) DEFAULT NULL,\\n  `length_1` decimal(65,30) DEFAULT NULL,\\n  `thread_size_1` decimal(65,30) DEFAULT NULL,\\n  `thread_pitch_1` decimal(65,30) DEFAULT NULL,\\n  `nomi l_size_1` decimal(65,30) DEFAULT NULL,\\n  `end_form_id_2` varchar(255) DEFAULT NULL,\\n  `connection_type_id_2` varchar(255) DEFAULT NULL,\\n  `length_2` decimal(65,30) DEFAULT NULL,\\n  `thread_size_2` decimal(65,30) DEFAULT NULL,\\n  `thread_pitch_2` decimal(65,30) DEFAULT NULL,\\n  `nomi l_size_2` decimal(65,30) DEFAULT NULL,\\n  `end_form_id_3` varchar(255) DEFAULT NULL,\\n  `connection_type_id_3` varchar(255) DEFAULT NULL,\\n  `length_3` decimal(65,30) DEFAULT NULL,\\n  `thread_size_3` decimal(65,30) DEFAULT NULL,\\n  `thread_pitch_3` decimal(65,30) DEFAULT NULL,\\n  `nomi l_size_3` decimal(65,30) DEFAULT NULL,\\n  `end_form_id_4` varchar(255) DEFAULT NULL,\\n  `connection_type_id_4` varchar(255) DEFAULT NULL,\\n  `length_4` decimal(65,30) DEFAULT NULL,\\n  `thread_size_4` decimal(65,30) DEFAULT NULL,\\n  `thread_pitch_4` decimal(65,30) DEFAULT NULL,\\n  `nomi l_size_4` decimal(65,30) DEFAULT NULL,\\n  `unique_feature` varchar(255) DEFAULT NULL,\\n  `orientation` varchar(255) DEFAULT NULL,\\n  `weight` decimal(65,30) DEFAULT NULL,\\n  KEY `comp_threaded_post_component_type_id_fkey` (`component_type_id`),\\n  KEY `comp_threaded_post_component_id_fkey` (`component_id`),\\n  KEY `comp_threaded_post_connection_type_id_4_fkey` (`connection_type_id_4`),\\n  KEY `comp_threaded_post_connection_type_id_3_fkey` (`connection_type_id_3`),\\n  KEY `comp_threaded_post_connection_type_id_2_fkey` (`connection_type_id_2`),\\n  KEY `comp_threaded_post_connection_type_id_1_fkey` (`connection_type_id_1`),\\n  KEY `comp_threaded_post_end_form_id_4_fkey` (`end_form_id_4`),\\n  KEY `comp_threaded_post_end_form_id_3_fkey` (`end_form_id_3`),\\n  KEY `comp_threaded_post_end_form_id_2_fkey` (`end_form_id_2`),\\n  KEY `comp_threaded_post_end_form_id_1_fkey` (`end_form_id_1`),\\n  CONSTRAINT `comp_threaded_post_component_id_fkey` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_component_type_id_fkey` FOREIGN KEY (`component_type_id`) REFERENCES `type_component` (`component_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_connection_type_id_1_fkey` FOREIGN KEY (`connection_type_id_1`) REFERENCES `type_connection` (`connection_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_connection_type_id_2_fkey` FOREIGN KEY (`connection_type_id_2`) REFERENCES `type_connection` (`connection_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_connection_type_id_3_fkey` FOREIGN KEY (`connection_type_id_3`) REFERENCES `type_connection` (`connection_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_connection_type_id_4_fkey` FOREIGN KEY (`connection_type_id_4`) REFERENCES `type_connection` (`connection_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_end_form_id_1_fkey` FOREIGN KEY (`end_form_id_1`) REFERENCES `type_end_form` (`end_form_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_end_form_id_2_fkey` FOREIGN KEY (`end_form_id_2`) REFERENCES `type_end_form` (`end_form_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_end_form_id_3_fkey` FOREIGN KEY (`end_form_id_3`) REFERENCES `type_end_form` (`end_form_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comp_threaded_post_end_form_id_4_fkey` FOREIGN KEY (`end_form_id_4`) REFERENCES `type_end_form` (`end_form_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Especificaciones con las columnas de, id de conjunto de tubo, especificaciones",
      "output": "('spec', 'CREATE TABLE `spec` (\\n  `tube_assembly_id` varchar(255) DEFAULT NULL  `spec` varchar(255) DEFAULT NULL,\\n  KEY `spec2_tube_assembly_id_fkey` (`tube_assembly_id`),\\n  CONSTRAINT `spec2_tube_assembly_id_fkey` FOREIGN KEY (`tube_assembly_id`) REFERENCES `tube` (`tube_assembly_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, id, id del ensamblaje del tubo, proveedor, fecha de cotización, uso anual, cantidad mínima de pedido, precio de soporte, cantidad, costo, número del ensamblaje del tubo, número del proveedor",
      "output": "('target', 'CREATE TABLE `target` (\\n  `id` bigint(20) NOT NULL  `tube_assembly_id` varchar(255) DEFAULT NULL,\\n  `supplier` varchar(255) DEFAULT NULL,\\n  `quote_date` date DEFAULT NULL,\\n  `annual_usage` int(11) DEFAULT NULL,\\n  `min_order_quantity` int(11) DEFAULT NULL,\\n  `bracket_pricing` varchar(255) DEFAULT NULL,\\n  `quantity` int(11) DEFAULT NULL,\\n  `cost` float DEFAULT NULL,\\n  `tube_assembly_num` int(11) DEFAULT NULL,\\n  `supplier_num` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `target_post_tube_assembly_id_fkey` (`tube_assembly_id`),\\n  CONSTRAINT `target_post_tube_assembly_id_fkey` FOREIGN KEY (`tube_assembly_id`) REFERENCES `tube` (`tube_assembly_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tubo con las columnas de, Id. de ensamblaje de tubo, Id. de material, diámetro, pared, longitud, número de curvas, radio de curvatura, extremo x, extremo x, extremo x x, extremo x x, extremo a, extremo x, número de saliente, número de soporte, otro",
      "output": "('tube', 'CREATE TABLE `tube` (\\n  `tube_assembly_id` varchar(255) NOT NULL  `material_id` varchar(255) DEFAULT NULL,\\n  `diameter` float DEFAULT NULL,\\n  `wall` float DEFAULT NULL,\\n  `length` int(11) DEFAULT NULL,\\n  `num_bends` int(11) DEFAULT NULL,\\n  `bend_radius` float DEFAULT NULL,\\n  `end_a_1x` varchar(255) DEFAULT NULL,\\n  `end_a_2x` varchar(255) DEFAULT NULL,\\n  `end_x_1x` varchar(255) DEFAULT NULL,\\n  `end_x_2x` varchar(255) DEFAULT NULL,\\n  `end_a` varchar(255) DEFAULT NULL,\\n  `end_x` varchar(255) DEFAULT NULL,\\n  `num_boss` int(11) DEFAULT NULL,\\n  `num_bracket` int(11) DEFAULT NULL,\\n  `other` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`tube_assembly_id`),\\n  UNIQUE KEY `tube_tube_assembly_id_key` (`tube_assembly_id`),\\n  KEY `tube_end_a` (`end_a`),\\n  KEY `tube_end_a_2` (`end_a`),\\n  KEY `tube_end_x` (`end_x`),\\n  CONSTRAINT `tube_ibfk_1` FOREIGN KEY (`end_a`) REFERENCES `tube_end_form` (`end_form_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tube_ibfk_2` FOREIGN KEY (`end_x`) REFERENCES `tube_end_form` (`end_form_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de forma del extremo del tubo con las columnas de, ID de formulario final, formando",
      "output": "('tube_end_form', 'CREATE TABLE `tube_end_form` (\\n  `end_form_id` varchar(255) NOT NULL  `forming` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`end_form_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de componente de tipo con las columnas de, ID de tipo de componente, yo",
      "output": "('type_component', 'CREATE TABLE `type_component` (\\n  `component_type_id` varchar(255) NOT NULL  `me` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`component_type_id`),\\n  UNIQUE KEY `type_component_component_type_id_key` (`component_type_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipo de conexión con las columnas de, ID de tipo de conexión, yo",
      "output": "('type_connection', 'CREATE TABLE `type_connection` (\\n  `connection_type_id` varchar(255) NOT NULL  `me` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`connection_type_id`),\\n  UNIQUE KEY `type_connection_connection_type_id_key` (`connection_type_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de escriba el formulario final con las columnas de, ID de formulario final, yo",
      "output": "('type_end_form', 'CREATE TABLE `type_end_form` (\\n  `end_form_id` varchar(255) NOT NULL  `me` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`end_form_id`),\\n  UNIQUE KEY `type_end_form_end_form_id_key` (`end_form_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cuenta con las columnas de, ID de cuenta, ID de distrito, frecuencia, fecha",
      "output": "('account', \"CREATE TABLE `account` (\\n  `account_id` int(11) NOT NULL DEFAULT 0  `district_id` int(11) DEFAULT 0,\\n  `frequency` varchar(18) DEFAULT '',\\n  `date` date DEFAULT NULL,\\n  PRIMARY KEY (`account_id`),\\n  KEY `district_id` (`district_id`),\\n  CONSTRAINT `account_ibfk_1` FOREIGN KEY (`district_id`) REFERENCES `district` (`district_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT\")"
    },
    {
      "input": "Una tabla de tarjeta con las columnas de, id de tarjeta, id de disp, tipo, emitido",
      "output": "('card', 'CREATE TABLE `card` (\\n  `card_id` int(11) NOT NULL DEFAULT 0  `disp_id` int(11) DEFAULT NULL,\\n  `type` varchar(7) DEFAULT NULL,\\n  `issued` date DEFAULT NULL,\\n  PRIMARY KEY (`card_id`),\\n  KEY `disp_id` (`disp_id`),\\n  CONSTRAINT `card_ibfk_1` FOREIGN KEY (`disp_id`) REFERENCES `disp` (`disp_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, sexo, fecha de nacimiento, ID de distrito",
      "output": "('client', 'CREATE TABLE `client` (\\n  `client_id` int(11) NOT NULL  `gender` varchar(1) DEFAULT NULL,\\n  `birth_date` date DEFAULT NULL,\\n  `district_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`client_id`),\\n  KEY `client_id` (`client_id`),\\n  KEY `district_id` (`district_id`),\\n  CONSTRAINT `client_ibfk_1` FOREIGN KEY (`district_id`) REFERENCES `district` (`district_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de disipar con las columnas de, disp id, id de cliente, id de cuenta, tipo",
      "output": "('disp', 'CREATE TABLE `disp` (\\n  `disp_id` int(11) NOT NULL  `client_id` int(11) DEFAULT NULL,\\n  `account_id` int(11) DEFAULT NULL,\\n  `type` varchar(9) DEFAULT NULL,\\n  PRIMARY KEY (`disp_id`),\\n  KEY `disp_id` (`disp_id`),\\n  KEY `client_id` (`client_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `disp_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `disp_ibfk_2` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de distrito con las columnas de, ID de distrito, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a",
      "output": "('district', 'CREATE TABLE `district` (\\n  `district_id` int(11) NOT NULL DEFAULT 0  `a2` varchar(19) DEFAULT NULL,\\n  `a3` varchar(15) DEFAULT NULL,\\n  `a4` int(20) DEFAULT NULL,\\n  `a5` int(11) DEFAULT NULL,\\n  `a6` int(11) DEFAULT NULL,\\n  `a7` int(11) DEFAULT NULL,\\n  `a8` int(6) DEFAULT NULL,\\n  `a9` int(11) DEFAULT NULL,\\n  `a10` decimal(4,1) DEFAULT NULL,\\n  `a11` int(11) DEFAULT NULL,\\n  `a12` decimal(4,1) DEFAULT NULL,\\n  `a13` decimal(3,2) DEFAULT NULL,\\n  `a14` int(11) DEFAULT NULL,\\n  `a15` int(5) DEFAULT NULL,\\n  `a16` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`district_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bordes con las columnas de, yo hice",
      "output": "('edges', 'CREATE TABLE `edges` (\\n  `id1` int(11) NOT NULL  `id2` int(11) NOT NULL,\\n  PRIMARY KEY (`id1`,`id2`),\\n  KEY `edges_field2_fkey` (`id2`),\\n  CONSTRAINT `edges_field1_fkey` FOREIGN KEY (`id1`) REFERENCES `feat` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `edges_field2_fkey` FOREIGN KEY (`id2`) REFERENCES `feat` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Con con las columnas de, id, cumpleaños, cumpleaños, cumpleaños, cumpleaños, cumpleaños, cumpleaños, cumpleaños, cumpleaños, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación , educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación , educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación , educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, e educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, primer nombre, primer nombre, primer nombre, primer nombre, primer nombre, primer nombre, nombre de pila, nombre de pila, nombre de pila, nombre de pila, género, género, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido , apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, último nombre, lugar, lugar, lugar, lugar, lugar, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación n, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, nombre, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo Trabajo trabajo",
      "output": "('feat', 'CREATE TABLE `feat` (\\n  `id` int(11) NOT NULL  `birthday1` int(11) DEFAULT NULL,\\n  `birthday2` int(11) DEFAULT NULL,\\n  `birthday3` int(11) DEFAULT NULL,\\n  `birthday4` int(11) DEFAULT NULL,\\n  `birthday5` int(11) DEFAULT NULL,\\n  `birthday6` int(11) DEFAULT NULL,\\n  `birthday7` int(11) DEFAULT NULL,\\n  `birthday8` int(11) DEFAULT NULL,\\n  `education1` int(11) DEFAULT NULL,\\n  `education2` int(11) DEFAULT NULL,\\n  `education3` int(11) DEFAULT NULL,\\n  `education4` int(11) DEFAULT NULL,\\n  `education5` int(11) DEFAULT NULL,\\n  `education6` int(11) DEFAULT NULL,\\n  `education7` int(11) DEFAULT NULL,\\n  `education8` int(11) DEFAULT NULL,\\n  `education9` int(11) DEFAULT NULL,\\n  `education10` int(11) DEFAULT NULL,\\n  `education11` int(11) DEFAULT NULL,\\n  `education12` int(11) DEFAULT NULL,\\n  `education13` int(11) DEFAULT NULL,\\n  `education14` int(11) DEFAULT NULL,\\n  `education15` int(11) DEFAULT NULL,\\n  `education16` int(11) DEFAULT NULL,\\n  `education17` int(11) DEFAULT NULL,\\n  `education18` int(11) DEFAULT NULL,\\n  `education19` int(11) DEFAULT NULL,\\n  `education20` int(11) DEFAULT NULL,\\n  `education21` int(11) DEFAULT NULL,\\n  `education22` int(11) DEFAULT NULL,\\n  `education23` int(11) DEFAULT NULL,\\n  `education24` int(11) DEFAULT NULL,\\n  `education25` int(11) DEFAULT NULL,\\n  `education26` int(11) DEFAULT NULL,\\n  `education27` int(11) DEFAULT NULL,\\n  `education28` int(11) DEFAULT NULL,\\n  `education29` int(11) DEFAULT NULL,\\n  `education30` int(11) DEFAULT NULL,\\n  `education31` int(11) DEFAULT NULL,\\n  `education32` int(11) DEFAULT NULL,\\n  `education33` int(11) DEFAULT NULL,\\n  `education34` int(11) DEFAULT NULL,\\n  `education35` int(11) DEFAULT NULL,\\n  `education36` int(11) DEFAULT NULL,\\n  `education37` int(11) DEFAULT NULL,\\n  `education38` int(11) DEFAULT NULL,\\n  `education39` int(11) DEFAULT NULL,\\n  `education40` int(11) DEFAULT NULL,\\n  `education41` int(11) DEFAULT NULL,\\n  `education42` int(11) DEFAULT NULL,\\n  `education43` int(11) DEFAULT NULL,\\n  `education44` int(11) DEFAULT NULL,\\n  `education45` int(11) DEFAULT NULL,\\n  `education46` int(11) DEFAULT NULL,\\n  `education47` int(11) DEFAULT NULL,\\n  `education48` int(11) DEFAULT NULL,\\n  `education49` int(11) DEFAULT NULL,\\n  `education50` int(11) DEFAULT NULL,\\n  `education51` int(11) DEFAULT NULL,\\n  `education52` int(11) DEFAULT NULL,\\n  `education53` int(11) DEFAULT NULL,\\n  `education54` int(11) DEFAULT NULL,\\n  `education55` int(11) DEFAULT NULL,\\n  `education56` int(11) DEFAULT NULL,\\n  `education57` int(11) DEFAULT NULL,\\n  `education58` int(11) DEFAULT NULL,\\n  `education59` int(11) DEFAULT NULL,\\n  `education60` int(11) DEFAULT NULL,\\n  `education61` int(11) DEFAULT NULL,\\n  `education62` int(11) DEFAULT NULL,\\n  `education63` int(11) DEFAULT NULL,\\n  `education64` int(11) DEFAULT NULL,\\n  `education65` int(11) DEFAULT NULL,\\n  `education66` int(11) DEFAULT NULL,\\n  `education67` int(11) DEFAULT NULL,\\n  `education68` int(11) DEFAULT NULL,\\n  `education69` int(11) DEFAULT NULL,\\n  `education70` int(11) DEFAULT NULL,\\n  `education71` int(11) DEFAULT NULL,\\n  `education72` int(11) DEFAULT NULL,\\n  `education73` int(11) DEFAULT NULL,\\n  `education74` int(11) DEFAULT NULL,\\n  `education75` int(11) DEFAULT NULL,\\n  `education76` int(11) DEFAULT NULL,\\n  `education77` int(11) DEFAULT NULL,\\n  `education78` int(11) DEFAULT NULL,\\n  `education79` int(11) DEFAULT NULL,\\n  `education80` int(11) DEFAULT NULL,\\n  `education81` int(11) DEFAULT NULL,\\n  `education82` int(11) DEFAULT NULL,\\n  `education83` int(11) DEFAULT NULL,\\n  `education84` int(11) DEFAULT NULL,\\n  `education85` int(11) DEFAULT NULL,\\n  `education86` int(11) DEFAULT NULL,\\n  `education87` int(11) DEFAULT NULL,\\n  `education88` int(11) DEFAULT NULL,\\n  `education89` int(11) DEFAULT NULL,\\n  `education90` int(11) DEFAULT NULL,\\n  `education91` int(11) DEFAULT NULL,\\n  `education92` int(11) DEFAULT NULL,\\n  `education93` int(11) DEFAULT NULL,\\n  `education94` int(11) DEFAULT NULL,\\n  `education95` int(11) DEFAULT NULL,\\n  `education96` int(11) DEFAULT NULL,\\n  `education97` int(11) DEFAULT NULL,\\n  `education98` int(11) DEFAULT NULL,\\n  `education99` int(11) DEFAULT NULL,\\n  `first_name1` int(11) DEFAULT NULL,\\n  `first_name2` int(11) DEFAULT NULL,\\n  `first_name3` int(11) DEFAULT NULL,\\n  `first_name4` int(11) DEFAULT NULL,\\n  `first_name5` int(11) DEFAULT NULL,\\n  `first_name6` int(11) DEFAULT NULL,\\n  `first_name7` int(11) DEFAULT NULL,\\n  `first_name8` int(11) DEFAULT NULL,\\n  `first_name9` int(11) DEFAULT NULL,\\n  `first_name10` int(11) DEFAULT NULL,\\n  `gender1` int(11) DEFAULT NULL,\\n  `gender2` int(11) DEFAULT NULL,\\n  `hometown1` int(11) DEFAULT NULL,\\n  `hometown2` int(11) DEFAULT NULL,\\n  `hometown3` int(11) DEFAULT NULL,\\n  `hometown4` int(11) DEFAULT NULL,\\n  `hometown5` int(11) DEFAULT NULL,\\n  `hometown6` int(11) DEFAULT NULL,\\n  `hometown7` int(11) DEFAULT NULL,\\n  `hometown8` int(11) DEFAULT NULL,\\n  `hometown9` int(11) DEFAULT NULL,\\n  `hometown10` int(11) DEFAULT NULL,\\n  `hometown11` int(11) DEFAULT NULL,\\n  `languages1` int(11) DEFAULT NULL,\\n  `languages2` int(11) DEFAULT NULL,\\n  `languages3` int(11) DEFAULT NULL,\\n  `languages4` int(11) DEFAULT NULL,\\n  `languages5` int(11) DEFAULT NULL,\\n  `languages6` int(11) DEFAULT NULL,\\n  `languages7` int(11) DEFAULT NULL,\\n  `languages8` int(11) DEFAULT NULL,\\n  `languages9` int(11) DEFAULT NULL,\\n  `languages10` int(11) DEFAULT NULL,\\n  `languages11` int(11) DEFAULT NULL,\\n  `languages12` int(11) DEFAULT NULL,\\n  `last_name1` int(11) DEFAULT NULL,\\n  `last_name2` int(11) DEFAULT NULL,\\n  `last_name3` int(11) DEFAULT NULL,\\n  `last_name4` int(11) DEFAULT NULL,\\n  `last_name5` int(11) DEFAULT NULL,\\n  `last_name6` int(11) DEFAULT NULL,\\n  `last_name7` int(11) DEFAULT NULL,\\n  `last_name8` int(11) DEFAULT NULL,\\n  `last_name9` int(11) DEFAULT NULL,\\n  `last_name10` int(11) DEFAULT NULL,\\n  `last_name11` int(11) DEFAULT NULL,\\n  `last_name12` int(11) DEFAULT NULL,\\n  `last_name13` int(11) DEFAULT NULL,\\n  `last_name14` int(11) DEFAULT NULL,\\n  `last_name15` int(11) DEFAULT NULL,\\n  `last_name16` int(11) DEFAULT NULL,\\n  `last_name17` int(11) DEFAULT NULL,\\n  `last_name18` int(11) DEFAULT NULL,\\n  `last_name19` int(11) DEFAULT NULL,\\n  `last_name20` int(11) DEFAULT NULL,\\n  `last_name21` int(11) DEFAULT NULL,\\n  `last_name22` int(11) DEFAULT NULL,\\n  `last_name23` int(11) DEFAULT NULL,\\n  `last_name24` int(11) DEFAULT NULL,\\n  `last_name25` int(11) DEFAULT NULL,\\n  `last_name26` int(11) DEFAULT NULL,\\n  `last_name27` int(11) DEFAULT NULL,\\n  `last_name28` int(11) DEFAULT NULL,\\n  `last_name29` int(11) DEFAULT NULL,\\n  `last_name30` int(11) DEFAULT NULL,\\n  `locale1` int(11) DEFAULT NULL,\\n  `locale2` int(11) DEFAULT NULL,\\n  `locale3` int(11) DEFAULT NULL,\\n  `locale4` int(11) DEFAULT NULL,\\n  `locale5` int(11) DEFAULT NULL,\\n  `location1` int(11) DEFAULT NULL,\\n  `location2` int(11) DEFAULT NULL,\\n  `location3` int(11) DEFAULT NULL,\\n  `location4` int(11) DEFAULT NULL,\\n  `location5` int(11) DEFAULT NULL,\\n  `location6` int(11) DEFAULT NULL,\\n  `location7` int(11) DEFAULT NULL,\\n  `location8` int(11) DEFAULT NULL,\\n  `location9` int(11) DEFAULT NULL,\\n  `location10` int(11) DEFAULT NULL,\\n  `location11` int(11) DEFAULT NULL,\\n  `location12` int(11) DEFAULT NULL,\\n  `location13` int(11) DEFAULT NULL,\\n  `location14` int(11) DEFAULT NULL,\\n  `location15` int(11) DEFAULT NULL,\\n  `location16` int(11) DEFAULT NULL,\\n  `name1` int(11) DEFAULT NULL,\\n  `work1` int(11) DEFAULT NULL,\\n  `work2` int(11) DEFAULT NULL,\\n  `work3` int(11) DEFAULT NULL,\\n  `work4` int(11) DEFAULT NULL,\\n  `work5` int(11) DEFAULT NULL,\\n  `work6` int(11) DEFAULT NULL,\\n  `work7` int(11) DEFAULT NULL,\\n  `work8` int(11) DEFAULT NULL,\\n  `work9` int(11) DEFAULT NULL,\\n  `work10` int(11) DEFAULT NULL,\\n  `work11` int(11) DEFAULT NULL,\\n  `work12` int(11) DEFAULT NULL,\\n  `work13` int(11) DEFAULT NULL,\\n  `work14` int(11) DEFAULT NULL,\\n  `work15` int(11) DEFAULT NULL,\\n  `work16` int(11) DEFAULT NULL,\\n  `work17` int(11) DEFAULT NULL,\\n  `work18` int(11) DEFAULT NULL,\\n  `work19` int(11) DEFAULT NULL,\\n  `work20` int(11) DEFAULT NULL,\\n  `work21` int(11) DEFAULT NULL,\\n  `work22` int(11) DEFAULT NULL,\\n  `work23` int(11) DEFAULT NULL,\\n  `work24` int(11) DEFAULT NULL,\\n  `work25` int(11) DEFAULT NULL,\\n  `work26` int(11) DEFAULT NULL,\\n  `work27` int(11) DEFAULT NULL,\\n  `work28` int(11) DEFAULT NULL,\\n  `work29` int(11) DEFAULT NULL,\\n  `work30` int(11) DEFAULT NULL,\\n  `work31` int(11) DEFAULT NULL,\\n  `work32` int(11) DEFAULT NULL,\\n  `work33` int(11) DEFAULT NULL,\\n  `work34` int(11) DEFAULT NULL,\\n  `work35` int(11) DEFAULT NULL,\\n  `work36` int(11) DEFAULT NULL,\\n  `work37` int(11) DEFAULT NULL,\\n  `work38` int(11) DEFAULT NULL,\\n  `work39` int(11) DEFAULT NULL,\\n  `work40` int(11) DEFAULT NULL,\\n  `work41` int(11) DEFAULT NULL,\\n  `work42` int(11) DEFAULT NULL,\\n  `work43` int(11) DEFAULT NULL,\\n  `work44` int(11) DEFAULT NULL,\\n  `work45` int(11) DEFAULT NULL,\\n  `work46` int(11) DEFAULT NULL,\\n  `work47` int(11) DEFAULT NULL,\\n  `work48` int(11) DEFAULT NULL,\\n  `work49` int(11) DEFAULT NULL,\\n  `work50` int(11) DEFAULT NULL,\\n  `work51` int(11) DEFAULT NULL,\\n  `work52` int(11) DEFAULT NULL,\\n  `work53` int(11) DEFAULT NULL,\\n  `work54` int(11) DEFAULT NULL,\\n  `work55` int(11) DEFAULT NULL,\\n  `work56` int(11) DEFAULT NULL,\\n  `work57` int(11) DEFAULT NULL,\\n  `work58` int(11) DEFAULT NULL,\\n  `work59` int(11) DEFAULT NULL,\\n  `work60` int(11) DEFAULT NULL,\\n  `work61` int(11) DEFAULT NULL,\\n  `work62` int(11) DEFAULT NULL,\\n  `work63` int(11) DEFAULT NULL,\\n  `work64` int(11) DEFAULT NULL,\\n  `work65` int(11) DEFAULT NULL,\\n  `work66` int(11) DEFAULT NULL,\\n  `work67` int(11) DEFAULT NULL,\\n  `work68` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `feat_field1_key` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de préstamo con las columnas de, ID de préstamo, ID de cuenta, fecha, cantidad, duración, pagos, estado",
      "output": "('loan', 'CREATE TABLE `loan` (\\n  `loan_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `amount` int(11) DEFAULT NULL,\\n  `duration` int(11) DEFAULT NULL,\\n  `payments` decimal(6,2) DEFAULT NULL,\\n  `status` varchar(1) DEFAULT NULL,\\n  PRIMARY KEY (`loan_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `loan_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ordenar con las columnas de, ID de pedido, ID de cuenta, banco a, cuenta a, monto, símbolo k",
      "output": "('order', 'CREATE TABLE `order` (\\n  `order_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) DEFAULT NULL,\\n  `bank_to` varchar(2) DEFAULT NULL,\\n  `account_to` int(11) DEFAULT NULL,\\n  `amount` decimal(6,1) DEFAULT NULL,\\n  `k_symbol` varchar(8) DEFAULT NULL,\\n  PRIMARY KEY (`order_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `order_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de trans con las columnas de, identificación trans, identificación de cuenta, fecha, tipo, operación, cantidad, saldo, símbolo k, banco, cuenta",
      "output": "('trans', 'CREATE TABLE `trans` (\\n  `trans_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) DEFAULT 0,\\n  `date` date DEFAULT NULL,\\n  `type` varchar(6) DEFAULT NULL,\\n  `operation` varchar(14) DEFAULT NULL,\\n  `amount` int(11) DEFAULT NULL,\\n  `balance` int(11) DEFAULT NULL,\\n  `k_symbol` varchar(11) DEFAULT NULL,\\n  `bank` varchar(2) DEFAULT NULL,\\n  `account` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`trans_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `trans_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ÁTOMOS con las columnas de, ID, ID DE MEDICAMENTO, ELEMENTO, TIPO DE ÁTOMO, CARGO",
      "output": "('ATOMS', 'CREATE TABLE `ATOMS` (\\n  `ID` int(11) NOT NULL DEFAULT 0  `DRUG_ID` int(11) DEFAULT NULL,\\n  `ELEMENT` varchar(2) DEFAULT NULL,\\n  `ATOM_TYPE` int(11) DEFAULT NULL,\\n  `CHARGE` float DEFAULT NULL,\\n  PRIMARY KEY (`ID`),\\n  KEY `ATOMS_DRUG_ID` (`DRUG_ID`),\\n  CONSTRAINT `ATOMS_IBFK_1` FOREIGN KEY (`DRUG_ID`) REFERENCES `DRUGS` (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de CAUTIVERIO con las columnas de, ID, MEDICAMENTO ES, ÁTOMO AN, ÁTOMO ES, TIPO DE ENLACE",
      "output": "('BONDS', 'CREATE TABLE `BONDS` (\\n  `ID` int(11) NOT NULL DEFAULT 0  `DRUG_ID` int(11) DEFAULT NULL,\\n  `ATOM1_ID` int(11) DEFAULT NULL,\\n  `ATOM2_ID` int(11) DEFAULT NULL,\\n  `BOND_TYPE` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ID`),\\n  KEY `BONDS_DRUG_ID` (`DRUG_ID`),\\n  KEY `BONDS_ATOM1_ID` (`ATOM1_ID`),\\n  KEY `BONDS_ATOM2_ID` (`ATOM2_ID`),\\n  CONSTRAINT `BONDS_IBFK_1` FOREIGN KEY (`DRUG_ID`) REFERENCES `DRUGS` (`ID`),\\n  CONSTRAINT `BONDS_IBFK_2` FOREIGN KEY (`ATOM1_ID`) REFERENCES `ATOMS` (`ID`),\\n  CONSTRAINT `BONDS_IBFK_3` FOREIGN KEY (`ATOM2_ID`) REFERENCES `ATOMS` (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de DROGAS con las columnas de, ID, IND, INDA, ACT, LOGP, LUMO, ACTIVO",
      "output": "('DRUGS', 'CREATE TABLE `DRUGS` (\\n  `ID` int(11) NOT NULL DEFAULT 0  `IND1` float DEFAULT NULL,\\n  `INDA` float DEFAULT NULL,\\n  `ACT` float DEFAULT NULL,\\n  `LOGP` float DEFAULT NULL,\\n  `LUMO` float DEFAULT NULL,\\n  `ACTIVE` tinyint(1) DEFAULT NULL,\\n  PRIMARY KEY (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ACTOS LEGALES con las columnas de, ID, HASH, ACTUALIZAR, TRIBUNAL, TIPO DE CASO, NÚMERO DE CASO, AÑO DE ACTO, JUEZ, TIPO DE ACTO, NÚMERO DE ACTO, FECHA DE INICIO, FECHA LEGAL, ESTADO, ENLACE DE ACTO, FECHA DE MOTIVO, ENLACE DE MOTIVO, TRIBUNAL SUPERIOR, NÚMERO SUPERIOR, AÑO DEL TRIBUNAL SUPERIOR, TIPO DE DOCUMENTO, FECHA DE ENVÍO, RESULTADO DE LA APELACIÓN",
      "output": "('LEGALACTS', 'CREATE TABLE `LEGALACTS` (\\n  `ID` int(11) NOT NULL  `HASH` char(32) NOT NULL,\\n  `UPDATE` timestamp NOT NULL DEFAULT current_timestamp(),\\n  `COURT` varchar(100) DEFAULT NULL,\\n  `CASEKIND` varchar(50) DEFAULT NULL,\\n  `CASENUMBER` smallint(6) DEFAULT NULL,\\n  `ACTYEAR` smallint(6) DEFAULT NULL,\\n  `JUDGE` varchar(255) DEFAULT NULL,\\n  `ACTKIND` varchar(20) DEFAULT NULL,\\n  `ACTNUMBER` smallint(6) DEFAULT NULL,\\n  `STARTDATE` date DEFAULT NULL,\\n  `LEGALDATE` date DEFAULT NULL,\\n  `STATUS` varchar(20) DEFAULT NULL,\\n  `ACTLINK` tinyint(1) NOT NULL DEFAULT 0,\\n  `MOTIVEDATE` date DEFAULT NULL,\\n  `MOTIVELINK` tinyint(1) NOT NULL DEFAULT 0,\\n  `HIGHCOURT` varchar(100) DEFAULT NULL,\\n  `OUTNUMBER` smallint(6) DEFAULT NULL,\\n  `YEARHIGHERCOURT` smallint(6) DEFAULT NULL,\\n  `TYPEOFDOCUMENT` varchar(100) DEFAULT NULL,\\n  `SENDDATE` date DEFAULT NULL,\\n  `RESULTOFAPPEAL` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ENLACE LEGALACT con las columnas de, ACTID, ACTID",
      "output": "('LEGALACT_LINK', 'CREATE TABLE `LEGALACT_LINK` (\\n  `ACTID1` int(11) NOT NULL  `ACTID2` int(11) NOT NULL,\\n  PRIMARY KEY (`ACTID1`,`ACTID2`),\\n  KEY `ACTID2` (`ACTID2`),\\n  CONSTRAINT `LEGALACT_LINK_IBFK_1` FOREIGN KEY (`ACTID1`) REFERENCES `LEGALACTS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `LEGALACT_LINK_IBFK_2` FOREIGN KEY (`ACTID2`) REFERENCES `LEGALACTS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de PERSONAS JURÍDICAS con las columnas de, PERSONAS, ACTID",
      "output": "('LEGALACT_PEOPLE', 'CREATE TABLE `LEGALACT_PEOPLE` (\\n  `PEOPLEID` int(11) NOT NULL  `ACTID` int(11) NOT NULL,\\n  PRIMARY KEY (`PEOPLEID`,`ACTID`),\\n  KEY `ACTID` (`ACTID`),\\n  CONSTRAINT `LEGALACT_PEOPLE_IBFK_1` FOREIGN KEY (`PEOPLEID`) REFERENCES `PEOPLE` (`PERSONID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `LEGALACT_PEOPLE_IBFK_2` FOREIGN KEY (`ACTID`) REFERENCES `LEGALACTS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de GENTE con las columnas de, PERSONID, NOMBRE, JURADO, TRIBUNAL",
      "output": "('PEOPLE', 'CREATE TABLE `PEOPLE` (\\n  `PERSONID` int(11) NOT NULL AUTO_INCREMENT  `NAME` varchar(255) NOT NULL,\\n  `JURY` tinyint(1) NOT NULL DEFAULT 0,\\n  `COURT` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`PERSONID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ANILLOS con las columnas de, ID, ID DE ESTRUCTURA DE ANILLO",
      "output": "('RINGS', 'CREATE TABLE `RINGS` (\\n  `ID` int(11) NOT NULL DEFAULT 0  `RING_STRUC_ID` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ID`),\\n  KEY `RINGS_RING_STRUC_ID` (`RING_STRUC_ID`),\\n  CONSTRAINT `RINGS_IBFK_1` FOREIGN KEY (`RING_STRUC_ID`) REFERENCES `RING_STRUCS` (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ANILLO ÁTOMO con las columnas de, ID, ID DE ANILLO, ID DE ÁTOMO",
      "output": "('RING_ATOM', 'CREATE TABLE `RING_ATOM` (\\n  `ID` int(11) NOT NULL DEFAULT 0  `RING_ID` int(11) DEFAULT NULL,\\n  `ATOM_ID` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ID`),\\n  KEY `RING_ATOM_RING_ID` (`RING_ID`),\\n  KEY `RING_ATOM_ATOM_ID` (`ATOM_ID`),\\n  CONSTRAINT `RING_ATOM_IBFK_1` FOREIGN KEY (`RING_ID`) REFERENCES `RINGS` (`ID`),\\n  CONSTRAINT `RING_ATOM_IBFK_2` FOREIGN KEY (`ATOM_ID`) REFERENCES `ATOMS` (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ESTRUCTURAS DE ANILLO con las columnas de, ID, ID DE MEDICAMENTO, NOMBRE",
      "output": "('RING_STRUCS', 'CREATE TABLE `RING_STRUCS` (\\n  `ID` int(11) NOT NULL DEFAULT 0  `DRUG_ID` int(11) DEFAULT NULL,\\n  `NAME` varchar(64) DEFAULT NULL,\\n  PRIMARY KEY (`ID`),\\n  KEY `RING_STRUCTS_DRUG_ID` (`DRUG_ID`),\\n  CONSTRAINT `RING_STRUCS_IBFK_1` FOREIGN KEY (`DRUG_ID`) REFERENCES `DRUGS` (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de SCRAPEFIX con las columnas de, ACTID, DESCRIPCIÓN DEL ARREGLO, CONTRIBUYENTE",
      "output": "('SCRAPEFIX', 'CREATE TABLE `SCRAPEFIX` (\\n  `ACTID` int(11) NOT NULL  `FIX_DESCRIPTION` text NOT NULL,\\n  `CONTRIBUTOR` varchar(50) DEFAULT NULL,\\n  PRIMARY KEY (`ACTID`),\\n  CONSTRAINT `SCRAPEFIX_IBFK_1` FOREIGN KEY (`ACTID`) REFERENCES `LEGALACTS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de real academia de bellas artes con las columnas de, capacidad, id de beneficio, id de estudiante, salario",
      "output": "('ra', 'CREATE TABLE `ra` (\\n  `capability` varchar(45) DEFAULT NULL  `prof_id` int(11) NOT NULL DEFAULT 0,\\n  `student_id` int(11) NOT NULL DEFAULT 0,\\n  `salary` varchar(45) DEFAULT NULL,\\n  PRIMARY KEY (`prof_id`,`student_id`),\\n  KEY `ra_capability` (`capability`),\\n  KEY `ra_salary` (`salary`),\\n  KEY `ra_student_id` (`student_id`),\\n  KEY `ra_prof_id` (`prof_id`),\\n  CONSTRAINT `fk_ra_1` FOREIGN KEY (`student_id`) REFERENCES `student` (`student_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_ra_2` FOREIGN KEY (`prof_id`) REFERENCES `prof` (`prof_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de registro con las columnas de, id del curso, id del estudiante, grado, sat",
      "output": "('registration', 'CREATE TABLE `registration` (\\n  `course_id` int(11) NOT NULL DEFAULT 0  `student_id` int(11) NOT NULL DEFAULT 0,\\n  `grade` varchar(45) NOT NULL,\\n  `sat` varchar(45) NOT NULL,\\n  PRIMARY KEY (`course_id`,`student_id`),\\n  KEY `registration_sat` (`sat`),\\n  KEY `registration_grade` (`grade`),\\n  KEY `registration_student_id` (`student_id`),\\n  KEY `registration_course_id` (`course_id`),\\n  CONSTRAINT `fk_registration_1` FOREIGN KEY (`student_id`) REFERENCES `student` (`student_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_registration_2` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de átomo con las columnas de, id de átomo, id de molécula, tipo",
      "output": "('atom', 'CREATE TABLE `atom` (\\n  `atom_id` varchar(255) NOT NULL  `molecule_id` varchar(255) NOT NULL,\\n  `type` varchar(255) NOT NULL,\\n  PRIMARY KEY (`atom_id`),\\n  KEY `atom_molecule_id` (`molecule_id`),\\n  CONSTRAINT `atom_ibfk_1` FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de vínculo con las columnas de, id de átomo, id de átomo, tipo",
      "output": "('bond', 'CREATE TABLE `bond` (\\n  `atom_id` varchar(255) NOT NULL  `atom_id2` varchar(255) NOT NULL,\\n  `type` varchar(255) NOT NULL,\\n  PRIMARY KEY (`atom_id`,`atom_id2`),\\n  KEY `bond_atom_id2` (`atom_id2`),\\n  CONSTRAINT `bond_ibfk_1` FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `bond_ibfk_2` FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de gmiembro con las columnas de, id de átomo, id de grupo",
      "output": "('gmember', 'CREATE TABLE `gmember` (\\n  `atom_id` varchar(255) NOT NULL  `group_id` varchar(255) NOT NULL,\\n  PRIMARY KEY (`atom_id`,`group_id`),\\n  KEY `gmember_group_id` (`group_id`),\\n  CONSTRAINT `gmember_ibfk_1` FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `gmember_ibfk_2` FOREIGN KEY (`group_id`) REFERENCES `group` (`group_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de grupo con las columnas de, ID de grupo, tipo",
      "output": "('group', 'CREATE TABLE `group` (\\n  `group_id` varchar(255) NOT NULL  `type` varchar(255) NOT NULL,\\n  PRIMARY KEY (`group_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de molécula con las columnas de, ID de molécula, actividad, registro, peso",
      "output": "('molecule', 'CREATE TABLE `molecule` (\\n  `molecule_id` varchar(255) NOT NULL  `activity` float NOT NULL,\\n  `logp` float NOT NULL,\\n  `mweight` float NOT NULL,\\n  PRIMARY KEY (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de alkphos con las columnas de, argumento, argumento",
      "output": "('alkphos', 'CREATE TABLE `alkphos` (\\n  `arg1` varchar(4) NOT NULL  `arg2` int(11) NOT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `alkphos_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `alkphos_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `bupa_name` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bupa con las columnas de, argumento, argumento",
      "output": "('bupa', 'CREATE TABLE `bupa` (\\n  `arg1` varchar(4) NOT NULL  `arg2` varchar(1) NOT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `bupa_arg1` (`arg1`) USING BTREE,\\n  KEY `bupa_arg2` (`arg2`) USING BTREE,\\n  CONSTRAINT `bupa_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `bupa_name` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `bupa_ibfk_2` FOREIGN KEY (`arg2`) REFERENCES `bupa_type` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de nombre bupa con las columnas de, argumento",
      "output": "('bupa_name', 'CREATE TABLE `bupa_name` (\\n  `arg1` varchar(4) NOT NULL  PRIMARY KEY (`arg1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tipo bupa con las columnas de, argumento",
      "output": "('bupa_type', 'CREATE TABLE `bupa_type` (\\n  `arg1` varchar(1) NOT NULL  PRIMARY KEY (`arg1`),\\n  KEY `bupa_type_arg1` (`arg1`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bebidas con las columnas de, argumento, argumento",
      "output": "('drinks', 'CREATE TABLE `drinks` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) NOT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `drinks_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `drinks_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `bupa_name` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de gama gt con las columnas de, argumento, argumento",
      "output": "('gammagt', 'CREATE TABLE `gammagt` (\\n  `arg1` varchar(4) NOT NULL  `arg2` int(11) NOT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `gammagt_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `gammagt_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `bupa_name` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de mcv con las columnas de, argumento, argumento",
      "output": "('mcv', 'CREATE TABLE `mcv` (\\n  `arg1` varchar(4) NOT NULL  `arg2` int(11) NOT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `mcv_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `mcv_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `bupa_name` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de sgot con las columnas de, argumento, argumento",
      "output": "('sgot', 'CREATE TABLE `sgot` (\\n  `arg1` varchar(4) NOT NULL  `arg2` int(11) NOT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `sgot_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `sgot_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `bupa_name` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de sgpt con las columnas de, argumento, argumento",
      "output": "('sgpt', 'CREATE TABLE `sgpt` (\\n  `arg1` varchar(4) NOT NULL  `arg2` int(11) NOT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `sgpt_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `sgpt_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `bupa_name` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de frpm con las columnas de, Código C D S, Año académico, Código del condado, Código del distrito, Código de la escuela, Nombre del condado, Nombre del distrito, Nombre de la escuela, Tipo de distrito, Tipo de escuela, Tipo de opción educativa, Estado de provisión de N S L P, Escuela chárter (S/N), Número de escuela chárter , Tipo de financiación de la escuela autónoma, IRC, Grado bajo, Grado alto, Inscripción ( K ), Conteo de comidas gratis ( K ), Porcentaje (%) Elegible gratis ( K ), Recuento de F R P M ( K ), Porcentaje (%) Elegible F R P M ( K ) , Inscripción ( Edades ), Recuento de comidas gratis ( Edades ), Porcentaje (%) Elegible Gratis ( Edades ), Recuento de F R P M ( Edades ), Porcentaje (%) Elegible F R P M ( Edades ), Estado de certificación de otoño de C A L P A D S",
      "output": "('frpm', 'CREATE TABLE `frpm` (\\n  `CDSCode` varchar(14) NOT NULL  `Academic Year` varchar(9) DEFAULT NULL,\\n  `County Code` varchar(4) DEFAULT NULL,\\n  `District Code` int(11) DEFAULT NULL,\\n  `School Code` varchar(7) DEFAULT NULL,\\n  `County Name` varchar(15) DEFAULT NULL,\\n  `District Name` varchar(75) DEFAULT NULL,\\n  `School Name` varchar(85) DEFAULT NULL,\\n  `District Type` varchar(32) DEFAULT NULL,\\n  `School Type` varchar(41) DEFAULT NULL,\\n  `Educational Option Type` varchar(43) DEFAULT NULL,\\n  `NSLP Provision Status` varchar(24) DEFAULT NULL,\\n  `Charter School (Y/N)` smallint(6) DEFAULT NULL,\\n  `Charter School Number` varchar(4) DEFAULT NULL,\\n  `Charter Funding Type` varchar(23) DEFAULT NULL,\\n  `IRC` smallint(6) DEFAULT NULL,\\n  `Low Grade` varchar(5) DEFAULT NULL,\\n  `High Grade` varchar(14) DEFAULT NULL,\\n  `Enrollment (K-12)` double DEFAULT NULL,\\n  `Free Meal Count (K-12)` double DEFAULT NULL,\\n  `Percent (%) Eligible Free (K-12)` double DEFAULT NULL,\\n  `FRPM Count (K-12)` double DEFAULT NULL,\\n  `Percent (%) Eligible FRPM (K-12)` double DEFAULT NULL,\\n  `Enrollment (Ages 5-17)` double DEFAULT NULL,\\n  `Free Meal Count (Ages 5-17)` double DEFAULT NULL,\\n  `Percent (%) Eligible Free (Ages 5-17)` double DEFAULT NULL,\\n  `FRPM Count (Ages 5-17)` double DEFAULT NULL,\\n  `Percent (%) Eligible FRPM (Ages 5-17)` double DEFAULT NULL,\\n  `2013-14 CALPADS Fall 1 Certification Status` smallint(6) DEFAULT NULL,\\n  PRIMARY KEY (`CDSCode`),\\n  CONSTRAINT `frpm_ibfk_1` FOREIGN KEY (`CDSCode`) REFERENCES `schools` (`CDSCode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de puntajes sat. con las columnas de, cds, rtype, sname, dname, cname, enroll, Num Tst Takr, Avg Scr Read, Avg Scr Math, Avg Scr Write, Num G E, Pct G E",
      "output": "('satscores', 'CREATE TABLE `satscores` (\\n  `cds` varchar(14) NOT NULL  `rtype` varchar(1) NOT NULL,\\n  `sname` varchar(50) DEFAULT NULL,\\n  `dname` varchar(50) DEFAULT NULL,\\n  `cname` varchar(15) DEFAULT NULL,\\n  `enroll12` int(11) NOT NULL,\\n  `NumTstTakr` int(11) NOT NULL,\\n  `AvgScrRead` int(11) DEFAULT NULL,\\n  `AvgScrMath` int(11) DEFAULT NULL,\\n  `AvgScrWrite` int(11) DEFAULT NULL,\\n  `NumGE1500` int(11) DEFAULT NULL,\\n  `PctGE1500` double DEFAULT NULL,\\n  PRIMARY KEY (`cds`),\\n  CONSTRAINT `satscores_ibfk_1` FOREIGN KEY (`cds`) REFERENCES `schools` (`CDSCode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de escuelas con las columnas de, C D S Code, N C E S Dist, N C E S School, Status Type, County, District, School, Street, Street Abr, City, Zip, State, Mail Street, Mail Str Abr, Mail City, Mail Zip, Mail State, Phone, Ext, Sitio web, fecha de apertura, fecha de cierre, estatuto, número de estatuto, tipo de financiación, DOC, tipo de DOC, SOC, tipo de SOC, código de operaciones educativas, nombre de operaciones educativas, código E I L, nombre E I L, G ofrecido, G servido, virtual, imán, Latitud, longitud, nombre de Adm F, nombre de Adm L, correo electrónico de Adm, nombre de Adm F, nombre de Adm L, correo electrónico de Adm, nombre de Adm F, nombre de Adm L, correo electrónico de Adm, última actualización",
      "output": "('schools', 'CREATE TABLE `schools` (\\n  `CDSCode` varchar(14) NOT NULL  `NCESDist` varchar(7) DEFAULT NULL,\\n  `NCESSchool` varchar(5) DEFAULT NULL,\\n  `StatusType` varchar(7) NOT NULL,\\n  `County` varchar(15) NOT NULL,\\n  `District` varchar(74) NOT NULL,\\n  `School` varchar(89) DEFAULT NULL,\\n  `Street` varchar(62) DEFAULT NULL,\\n  `StreetAbr` varchar(59) DEFAULT NULL,\\n  `City` varchar(25) DEFAULT NULL,\\n  `Zip` varchar(10) DEFAULT NULL,\\n  `State` varchar(4) DEFAULT NULL,\\n  `MailStreet` varchar(70) DEFAULT NULL,\\n  `MailStrAbr` varchar(70) DEFAULT NULL,\\n  `MailCity` varchar(22) DEFAULT NULL,\\n  `MailZip` varchar(10) DEFAULT NULL,\\n  `MailState` varchar(4) DEFAULT NULL,\\n  `Phone` varchar(14) DEFAULT NULL,\\n  `Ext` varchar(6) DEFAULT NULL,\\n  `Website` varchar(96) DEFAULT NULL,\\n  `OpenDate` date DEFAULT NULL,\\n  `ClosedDate` date DEFAULT NULL,\\n  `Charter` smallint(6) DEFAULT NULL,\\n  `CharterNum` varchar(4) DEFAULT NULL,\\n  `FundingType` varchar(23) DEFAULT NULL,\\n  `DOC` varchar(2) NOT NULL,\\n  `DOCType` varchar(42) NOT NULL,\\n  `SOC` varchar(4) DEFAULT NULL,\\n  `SOCType` varchar(41) DEFAULT NULL,\\n  `EdOpsCode` varchar(7) DEFAULT NULL,\\n  `EdOpsName` varchar(43) DEFAULT NULL,\\n  `EILCode` varchar(8) DEFAULT NULL,\\n  `EILName` varchar(31) DEFAULT NULL,\\n  `GSoffered` varchar(16) DEFAULT NULL,\\n  `GSserved` varchar(5) DEFAULT NULL,\\n  `Virtual` varchar(4) DEFAULT NULL,\\n  `Magnet` smallint(6) DEFAULT NULL,\\n  `Latitude` double DEFAULT NULL,\\n  `Longitude` double DEFAULT NULL,\\n  `AdmFName1` varchar(17) DEFAULT NULL,\\n  `AdmLName1` varchar(22) DEFAULT NULL,\\n  `AdmEmail1` varchar(49) DEFAULT NULL,\\n  `AdmFName2` varchar(15) DEFAULT NULL,\\n  `AdmLName2` varchar(18) DEFAULT NULL,\\n  `AdmEmail2` varchar(40) DEFAULT NULL,\\n  `AdmFName3` varchar(8) DEFAULT NULL,\\n  `AdmLName3` varchar(15) DEFAULT NULL,\\n  `AdmEmail3` varchar(39) DEFAULT NULL,\\n  `LastUpdate` date NOT NULL,\\n  PRIMARY KEY (`CDSCode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de cita con las columnas de, id de artículo citado, id de artículo citado",
      "output": "('cites', 'CREATE TABLE `cites` (\\n  `cited_paper_id` int(11) NOT NULL  `citing_paper_id` int(11) NOT NULL,\\n  PRIMARY KEY (`cited_paper_id`,`citing_paper_id`),\\n  KEY `cited_paper_id` (`cited_paper_id`),\\n  KEY `citing_paper_id` (`citing_paper_id`),\\n  CONSTRAINT `cites_ibfk_1` FOREIGN KEY (`cited_paper_id`) REFERENCES `paper` (`paper_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `cites_ibfk_2` FOREIGN KEY (`citing_paper_id`) REFERENCES `paper` (`paper_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de contenido con las columnas de, ID de papel, ID de palabra citada",
      "output": "('content', 'CREATE TABLE `content` (\\n  `paper_id` int(11) NOT NULL  `word_cited_id` varchar(255) NOT NULL,\\n  PRIMARY KEY (`paper_id`,`word_cited_id`),\\n  KEY `paper_id` (`paper_id`),\\n  CONSTRAINT `content_ibfk_1` FOREIGN KEY (`paper_id`) REFERENCES `paper` (`paper_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de papel con las columnas de, identificación de papel, etiqueta de clase",
      "output": "('paper', 'CREATE TABLE `paper` (\\n  `paper_id` int(11) NOT NULL  `class_label` varchar(255) NOT NULL,\\n  PRIMARY KEY (`paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de átomo con las columnas de, átomo, fármaco, tipo de átomo, carga, nombre",
      "output": "('atom', 'CREATE TABLE `atom` (\\n  `atomid` char(100) NOT NULL  `drug` char(100) DEFAULT NULL,\\n  `atomtype` char(100) DEFAULT NULL,\\n  `charge` char(100) DEFAULT NULL,\\n  `name` char(2) DEFAULT NULL,\\n  PRIMARY KEY (`atomid`),\\n  KEY `atom_drug` (`drug`) USING BTREE,\\n  CONSTRAINT `atom_ibfk_1` FOREIGN KEY (`drug`) REFERENCES `canc` (`drug_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de cancelar con las columnas de, id de droga, clase",
      "output": "('canc', 'CREATE TABLE `canc` (\\n  `drug_id` char(100) NOT NULL  `class` char(1) DEFAULT NULL,\\n  PRIMARY KEY (`drug_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de enlace con las columnas de, id, fármaco, átomo, átomo",
      "output": "('sbond_1', 'CREATE TABLE `sbond_1` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `drug` char(100) DEFAULT NULL,\\n  `atomid` char(100) DEFAULT NULL,\\n  `atomid_2` char(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `sbond_1_drug` (`drug`) USING BTREE,\\n  KEY `sbond_1_atomid` (`atomid`) USING BTREE,\\n  KEY `sbond_1_atomid_2` (`atomid_2`) USING BTREE,\\n  CONSTRAINT `sbond_1_ibfk_1` FOREIGN KEY (`drug`) REFERENCES `canc` (`drug_id`),\\n  CONSTRAINT `sbond_1_ibfk_2` FOREIGN KEY (`atomid`) REFERENCES `atom` (`atomid`),\\n  CONSTRAINT `sbond_1_ibfk_3` FOREIGN KEY (`atomid_2`) REFERENCES `atom` (`atomid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=13563 DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de enlace con las columnas de, id, fármaco, átomo, átomo",
      "output": "('sbond_2', 'CREATE TABLE `sbond_2` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `drug` char(100) DEFAULT NULL,\\n  `atomid` char(100) DEFAULT NULL,\\n  `atomid_2` char(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `sbond_2_drug` (`drug`) USING BTREE,\\n  KEY `sbond_2_atomid` (`atomid`) USING BTREE,\\n  KEY `sbond_2_atomid_2` (`atomid_2`) USING BTREE,\\n  CONSTRAINT `sbond_2_ibfk_1` FOREIGN KEY (`drug`) REFERENCES `canc` (`drug_id`),\\n  CONSTRAINT `sbond_2_ibfk_2` FOREIGN KEY (`atomid`) REFERENCES `atom` (`atomid`),\\n  CONSTRAINT `sbond_2_ibfk_3` FOREIGN KEY (`atomid_2`) REFERENCES `atom` (`atomid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=927 DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de enlace con las columnas de, id, fármaco, átomo, átomo",
      "output": "('sbond_3', 'CREATE TABLE `sbond_3` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `drug` char(100) DEFAULT NULL,\\n  `atomid` char(100) DEFAULT NULL,\\n  `atomid_2` char(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `sbond_3_drug` (`drug`) USING BTREE,\\n  KEY `sbond_3_atomid` (`atomid`) USING BTREE,\\n  KEY `sbond_3_atomid_2` (`atomid_2`) USING BTREE,\\n  CONSTRAINT `sbond_3_ibfk_1` FOREIGN KEY (`drug`) REFERENCES `canc` (`drug_id`),\\n  CONSTRAINT `sbond_3_ibfk_2` FOREIGN KEY (`atomid`) REFERENCES `atom` (`atomid`),\\n  CONSTRAINT `sbond_3_ibfk_3` FOREIGN KEY (`atomid_2`) REFERENCES `atom` (`atomid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de enlace con las columnas de, id, fármaco, átomo, átomo",
      "output": "('sbond_7', 'CREATE TABLE `sbond_7` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `drug` char(100) DEFAULT NULL,\\n  `atomid` char(100) DEFAULT NULL,\\n  `atomid_2` char(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `sbond_7_drug` (`drug`) USING BTREE,\\n  KEY `sbond_7_atomid` (`atomid`) USING BTREE,\\n  KEY `sbond_7_atomid_2` (`atomid_2`) USING BTREE,\\n  CONSTRAINT `sbond_7_ibfk_1` FOREIGN KEY (`drug`) REFERENCES `canc` (`drug_id`),\\n  CONSTRAINT `sbond_7_ibfk_2` FOREIGN KEY (`atomid`) REFERENCES `atom` (`atomid`),\\n  CONSTRAINT `sbond_7_ibfk_3` FOREIGN KEY (`atomid_2`) REFERENCES `atom` (`atomid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=4135 DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de actividades con las columnas de, ID de actividad, ID de ensayo, ID de documento, ID de registro, molregno, relación, valor publicado, unidades publicadas, valor estándar, unidades estándar, bandera estándar, tipo estándar, comentario de actividad, tipo de actividad publicada",
      "output": "('activities', 'CREATE TABLE `activities` (\\n  `activity_id` int(11) NOT NULL  `assay_id` int(11) DEFAULT NULL,\\n  `doc_id` int(11) DEFAULT NULL,\\n  `record_id` int(11) DEFAULT NULL,\\n  `molregno` int(11) DEFAULT NULL,\\n  `relation` varchar(50) DEFAULT NULL,\\n  `published_value` float DEFAULT NULL,\\n  `published_units` varchar(100) DEFAULT NULL,\\n  `standard_value` float DEFAULT NULL,\\n  `standard_units` varchar(100) DEFAULT NULL,\\n  `standard_flag` int(11) DEFAULT NULL,\\n  `standard_type` varchar(250) DEFAULT NULL,\\n  `activity_comment` varchar(255) DEFAULT NULL,\\n  `published_activity_type` varchar(250) DEFAULT NULL,\\n  PRIMARY KEY (`activity_id`),\\n  KEY `activities_idx_assay_id` (`assay_id`),\\n  KEY `activities_idx_doc_id` (`doc_id`),\\n  KEY `activities_idx_molregno` (`molregno`),\\n  KEY `activities_idx_record_id` (`record_id`),\\n  CONSTRAINT `activities_fk_assay_id` FOREIGN KEY (`assay_id`) REFERENCES `assays` (`assay_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `activities_fk_doc_id` FOREIGN KEY (`doc_id`) REFERENCES `docs` (`doc_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `activities_fk_molregno` FOREIGN KEY (`molregno`) REFERENCES `compounds` (`molregno`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `activities_fk_record_id` FOREIGN KEY (`record_id`) REFERENCES `compound_records` (`record_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de objetivo de ensayo con las columnas de, identificación de ensayo, tid, identificación fiscal de ensayo, organismo de ensayo, tipo de relación, complejo, multi, confianza, cepa de ensayo",
      "output": "('assay2target', 'CREATE TABLE `assay2target` (\\n  `assay_id` int(11) NOT NULL  `tid` int(11) NOT NULL,\\n  `assay_tax_id` int(11) DEFAULT NULL,\\n  `assay_organism` varchar(250) DEFAULT NULL,\\n  `relationship_type` char(1) DEFAULT NULL,\\n  `complex` int(11) DEFAULT NULL,\\n  `multi` int(11) DEFAULT NULL,\\n  `confidence` int(11) DEFAULT NULL,\\n  `assay_strain` varchar(200) DEFAULT NULL,\\n  PRIMARY KEY (`assay_id`,`tid`),\\n  KEY `assay2target_idx_assay_id` (`assay_id`),\\n  KEY `assay2target_idx_confidence` (`confidence`),\\n  KEY `assay2target_idx_tid` (`tid`),\\n  CONSTRAINT `assay2target_fk_assay_id` FOREIGN KEY (`assay_id`) REFERENCES `assays` (`assay_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `assay2target_fk_confidence` FOREIGN KEY (`confidence`) REFERENCES `confidence_lookup` (`confidence`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `assay2target_fk_tid` FOREIGN KEY (`tid`) REFERENCES `target_dictionary` (`tid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de tipo de ensayo con las columnas de, tipo de ensayo, descripción del ensayo",
      "output": "('assay_type', 'CREATE TABLE `assay_type` (\\n  `assay_type` varchar(1) NOT NULL  `assay_desc` varchar(250) DEFAULT NULL,\\n  PRIMARY KEY (`assay_type`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de ensayos con las columnas de, ID de ensayo, tipo de ensayo, descripción, ID de documento",
      "output": "('assays', 'CREATE TABLE `assays` (\\n  `assay_id` int(11) NOT NULL  `assay_type` varchar(250) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  `doc_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`assay_id`),\\n  KEY `assays_idx_assay_type` (`assay_type`),\\n  KEY `assays_idx_doc_id` (`doc_id`),\\n  CONSTRAINT `assays_fk_assay_type` FOREIGN KEY (`assay_type`) REFERENCES `assay_type` (`assay_type`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `assays_fk_doc_id` FOREIGN KEY (`doc_id`) REFERENCES `docs` (`doc_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de propiedades compuestas con las columnas de, molregno, mw freebase, alogp, hba, hbd, psa, rtb, ro pass, num ro violaciones, med chem friendly, mol id",
      "output": "('compound_properties', 'CREATE TABLE `compound_properties` (\\n  `molregno` int(11) NOT NULL  `mw_freebase` float DEFAULT NULL,\\n  `alogp` float DEFAULT NULL,\\n  `hba` int(11) DEFAULT NULL,\\n  `hbd` int(11) DEFAULT NULL,\\n  `psa` float DEFAULT NULL,\\n  `rtb` int(11) DEFAULT NULL,\\n  `ro3_pass` varchar(3) DEFAULT NULL,\\n  `num_ro5_violations` int(11) DEFAULT NULL,\\n  `med_chem_friendly` varchar(3) DEFAULT NULL,\\n  `mol_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`molregno`)\\n) ENGINE=MyISAM DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de registros compuestos con las columnas de, ID de registro, molregno, ID de documento, clave compuesta, nombre compuesto",
      "output": "('compound_records', 'CREATE TABLE `compound_records` (\\n  `record_id` int(11) NOT NULL  `molregno` int(11) DEFAULT NULL,\\n  `doc_id` int(11) DEFAULT NULL,\\n  `compound_key` varchar(250) DEFAULT NULL,\\n  `compound_name` text DEFAULT NULL,\\n  PRIMARY KEY (`record_id`),\\n  KEY `compound_records_idx_doc_id` (`doc_id`),\\n  KEY `compound_records_idx_molregno` (`molregno`),\\n  CONSTRAINT `compound_records_fk_doc_id` FOREIGN KEY (`doc_id`) REFERENCES `docs` (`doc_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `compound_records_fk_molregno` FOREIGN KEY (`molregno`) REFERENCES `compounds` (`molregno`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de sinónimos compuestos con las columnas de, molregno, sinónimos",
      "output": "('compound_synonyms', 'CREATE TABLE `compound_synonyms` (\\n  `molregno` int(11) NOT NULL  `synonyms` varchar(100) NOT NULL,\\n  PRIMARY KEY (`molregno`,`synonyms`),\\n  KEY `compound_synonyms_idx_molregno` (`molregno`),\\n  CONSTRAINT `compound_synonyms_fk_molregno` FOREIGN KEY (`molregno`) REFERENCES `compounds` (`molregno`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de compuestos con las columnas de, Molaregano, Molweight, Moliformula, Molphi, Sonrisas Canónicas, Inchi, Clave Inchi",
      "output": "('compounds', 'CREATE TABLE `compounds` (\\n  `molregno` int(11) NOT NULL  `molweight` float DEFAULT NULL,\\n  `molformula` varchar(250) DEFAULT NULL,\\n  `molfile` longtext DEFAULT NULL,\\n  `canonical_smiles` text DEFAULT NULL,\\n  `inchi` text DEFAULT NULL,\\n  `inchi_key` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`molregno`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de búsqueda de confianza con las columnas de, confianza, resumen de confianza, descripción",
      "output": "('confidence_lookup', 'CREATE TABLE `confidence_lookup` (\\n  `confidence` int(11) NOT NULL  `confidence_summary` varchar(100) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  PRIMARY KEY (`confidence`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de documentos con las columnas de, ID de documento, diario, año, volumen, edición, primera página, última página, ID de pubmed",
      "output": "('docs', 'CREATE TABLE `docs` (\\n  `doc_id` int(11) NOT NULL  `journal` varchar(50) DEFAULT NULL,\\n  `year` varchar(50) DEFAULT NULL,\\n  `volume` varchar(50) DEFAULT NULL,\\n  `issue` varchar(50) DEFAULT NULL,\\n  `first_page` varchar(50) DEFAULT NULL,\\n  `last_page` varchar(50) DEFAULT NULL,\\n  `pubmed_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`doc_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de tipo de relación con las columnas de, tipo de relación, descripción de la relación",
      "output": "('relationship_type', 'CREATE TABLE `relationship_type` (\\n  `relationship_type` varchar(25) NOT NULL  `relationship_desc` varchar(250) DEFAULT NULL,\\n  PRIMARY KEY (`relationship_type`)\\n) ENGINE=MyISAM DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de clase objetivo con las columnas de, tc id, tid, l, l, l, l, l, l, l, l, clasificación de destino",
      "output": "('target_class', 'CREATE TABLE `target_class` (\\n  `tc_id` int(11) NOT NULL  `tid` int(11) DEFAULT NULL,\\n  `l1` varchar(100) DEFAULT NULL,\\n  `l2` varchar(100) DEFAULT NULL,\\n  `l3` varchar(100) DEFAULT NULL,\\n  `l4` varchar(100) DEFAULT NULL,\\n  `l5` varchar(100) DEFAULT NULL,\\n  `l6` varchar(100) DEFAULT NULL,\\n  `l7` varchar(100) DEFAULT NULL,\\n  `l8` varchar(100) DEFAULT NULL,\\n  `target_classification` varchar(250) DEFAULT NULL,\\n  PRIMARY KEY (`tc_id`),\\n  KEY `target_class_idx_tid` (`tid`),\\n  CONSTRAINT `target_class_fk_tid` FOREIGN KEY (`tid`) REFERENCES `target_dictionary` (`tid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de diccionario objetivo con las columnas de, tid, tipo de destino, fuente de db, descripción, nombres de genes, nombre de preferencia, sinónimos, palabras clave, secuencia de proteína, mdsum de proteína, identificación fiscal, organismo, tejido, tensión, versión de db, línea celular, en farmacia, en starlite, acceso de proteína , número ce",
      "output": "('target_dictionary', 'CREATE TABLE `target_dictionary` (\\n  `tid` int(11) NOT NULL  `target_type` varchar(25) DEFAULT NULL,\\n  `db_source` varchar(25) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  `gene_names` text DEFAULT NULL,\\n  `pref_name` varchar(200) DEFAULT NULL,\\n  `synonyms` text DEFAULT NULL,\\n  `keywords` text DEFAULT NULL,\\n  `protein_sequence` longtext DEFAULT NULL,\\n  `protein_md5sum` varchar(32) DEFAULT NULL,\\n  `tax_id` int(11) DEFAULT NULL,\\n  `organism` varchar(100) DEFAULT NULL,\\n  `tissue` varchar(50) DEFAULT NULL,\\n  `strain` varchar(25) DEFAULT NULL,\\n  `db_version` varchar(25) DEFAULT NULL,\\n  `cell_line` varchar(50) DEFAULT NULL,\\n  `in_drugstore` tinyint(1) DEFAULT NULL,\\n  `in_starlite` tinyint(1) DEFAULT NULL,\\n  `protein_accession` varchar(25) DEFAULT NULL,\\n  `ec_number` varchar(50) DEFAULT NULL,\\n  PRIMARY KEY (`tid`),\\n  KEY `target_dictionary_idx_target_type` (`target_type`),\\n  CONSTRAINT `target_dictionary_fk_target_type` FOREIGN KEY (`target_type`) REFERENCES `target_type` (`target_type`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de proteína diana con las columnas de, sonrisas canónicas, relación, unidades estándar, valor estándar, tipo estándar, tipo de ensayo, tipo de relación, organismo de ensayo, tipo objetivo, organismo, accesión de proteínas",
      "output": "('target_protein', 'CREATE TABLE `target_protein` (\\n  `canonical_smiles` text CHARACTER SET latin1 DEFAULT NULL  `relation` varchar(50) CHARACTER SET latin1 DEFAULT NULL,\\n  `standard_units` varchar(100) CHARACTER SET latin1 DEFAULT NULL,\\n  `standard_value` float DEFAULT NULL,\\n  `standard_type` varchar(250) CHARACTER SET latin1 DEFAULT NULL,\\n  `assay_type` varchar(250) CHARACTER SET latin1 DEFAULT NULL,\\n  `relationship_type` char(1) CHARACTER SET latin1 DEFAULT NULL,\\n  `assay_organism` varchar(250) CHARACTER SET latin1 DEFAULT NULL,\\n  `target_type` varchar(25) CHARACTER SET latin1 DEFAULT NULL,\\n  `organism` varchar(100) CHARACTER SET latin1 DEFAULT NULL,\\n  `protein_accession` varchar(25) CHARACTER SET latin1 DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipo de objetivo con las columnas de, tipo de destino, descripción del destino",
      "output": "('target_type', 'CREATE TABLE `target_type` (\\n  `target_type` varchar(25) NOT NULL  `target_desc` varchar(250) DEFAULT NULL,\\n  PRIMARY KEY (`target_type`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de versión con las columnas de, nombre, fecha de creación, comentarios",
      "output": "('version', 'CREATE TABLE `version` (\\n  `name` varchar(20) NOT NULL  `creation_date` date DEFAULT NULL,\\n  `comments` text DEFAULT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de juego con las columnas de, ID del juego, ID de apertura, evento, sitio, fecha del evento, ronda, blanco, negro, resultado del juego, ECO, Elo blanco, Elo negro, apertura, w, b, w, b, w, b, w, b, w , b, w, b, w, b, w, b, w, b, w, b",
      "output": "('game', 'CREATE TABLE `game` (\\n  `game_id` int(10) unsigned NOT NULL AUTO_INCREMENT  `opening_id` int(10) DEFAULT NULL,\\n  `event` text COLLATE utf8_bin DEFAULT NULL,\\n  `site` text COLLATE utf8_bin DEFAULT NULL,\\n  `event_date` date DEFAULT NULL,\\n  `round` text COLLATE utf8_bin DEFAULT NULL,\\n  `white` text COLLATE utf8_bin DEFAULT NULL,\\n  `black` text COLLATE utf8_bin DEFAULT NULL,\\n  `game_result` text COLLATE utf8_bin DEFAULT NULL,\\n  `ECO` text COLLATE utf8_bin DEFAULT NULL,\\n  `whiteElo` int(10) DEFAULT NULL,\\n  `BlackElo` int(10) DEFAULT NULL,\\n  `opening` text COLLATE utf8_bin DEFAULT NULL,\\n  `w1` text COLLATE utf8_bin DEFAULT NULL,\\n  `b1` text COLLATE utf8_bin DEFAULT NULL,\\n  `w2` text COLLATE utf8_bin DEFAULT NULL,\\n  `b2` text COLLATE utf8_bin DEFAULT NULL,\\n  `w3` text COLLATE utf8_bin DEFAULT NULL,\\n  `b3` text COLLATE utf8_bin DEFAULT NULL,\\n  `w4` text COLLATE utf8_bin DEFAULT NULL,\\n  `b4` text COLLATE utf8_bin DEFAULT NULL,\\n  `w5` text COLLATE utf8_bin DEFAULT NULL,\\n  `b5` text COLLATE utf8_bin DEFAULT NULL,\\n  `w6` text COLLATE utf8_bin DEFAULT NULL,\\n  `b6` text COLLATE utf8_bin DEFAULT NULL,\\n  `w7` text COLLATE utf8_bin DEFAULT NULL,\\n  `b7` text COLLATE utf8_bin DEFAULT NULL,\\n  `w8` text COLLATE utf8_bin DEFAULT NULL,\\n  `b8` text COLLATE utf8_bin DEFAULT NULL,\\n  `w9` text COLLATE utf8_bin DEFAULT NULL,\\n  `b9` text COLLATE utf8_bin DEFAULT NULL,\\n  `w10` text COLLATE utf8_bin DEFAULT NULL,\\n  `b10` text COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`game_id`),\\n  KEY `opening_id` (`opening_id`),\\n  CONSTRAINT `game_ibfk_1` FOREIGN KEY (`opening_id`) REFERENCES `opening` (`opening_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=296 DEFAULT CHARSET=utf8 COLLATE=utf8_bin')"
    },
    {
      "input": "Una tabla de apertura con las columnas de, ID de apertura, nombre, código, w, b, w, b, w, b, w, b, variación",
      "output": "('opening', 'CREATE TABLE `opening` (\\n  `opening_id` int(10) NOT NULL AUTO_INCREMENT  `name` text COLLATE utf8_bin DEFAULT NULL,\\n  `code` text COLLATE utf8_bin DEFAULT NULL,\\n  `w1` text COLLATE utf8_bin DEFAULT NULL,\\n  `b1` text COLLATE utf8_bin DEFAULT NULL,\\n  `w2` text COLLATE utf8_bin DEFAULT NULL,\\n  `b2` text COLLATE utf8_bin DEFAULT NULL,\\n  `w3` text COLLATE utf8_bin DEFAULT NULL,\\n  `b3` text COLLATE utf8_bin DEFAULT NULL,\\n  `w4` text COLLATE utf8_bin DEFAULT NULL,\\n  `b4` text COLLATE utf8_bin DEFAULT NULL,\\n  `variation` text COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`opening_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=1766 DEFAULT CHARSET=utf8 COLLATE=utf8_bin')"
    },
    {
      "input": "Una tabla de Álbum con las columnas de, Id. de álbum, Título, Id. de artista",
      "output": "('Album', 'CREATE TABLE `Album` (\\n  `AlbumId` int(11) NOT NULL  `Title` varchar(160) CHARACTER SET utf8 NOT NULL,\\n  `ArtistId` int(11) NOT NULL,\\n  PRIMARY KEY (`AlbumId`),\\n  KEY `IFK_AlbumArtistId` (`ArtistId`),\\n  CONSTRAINT `FK_AlbumArtistId` FOREIGN KEY (`ArtistId`) REFERENCES `Artist` (`ArtistId`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Artista con las columnas de, ID del artista, nombre",
      "output": "('Artist', 'CREATE TABLE `Artist` (\\n  `ArtistId` int(11) NOT NULL  `Name` varchar(120) CHARACTER SET utf8 DEFAULT NULL,\\n  PRIMARY KEY (`ArtistId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Cliente con las columnas de, Id. de cliente, Nombre, Apellido, Empresa, Dirección, Ciudad, Estado, País, Código postal, Teléfono, Fax, Correo electrónico, Id. de representante de soporte",
      "output": "('Customer', 'CREATE TABLE `Customer` (\\n  `CustomerId` int(11) NOT NULL  `FirstName` varchar(40) CHARACTER SET utf8 NOT NULL,\\n  `LastName` varchar(20) CHARACTER SET utf8 NOT NULL,\\n  `Company` varchar(80) CHARACTER SET utf8 DEFAULT NULL,\\n  `Address` varchar(70) CHARACTER SET utf8 DEFAULT NULL,\\n  `City` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `State` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `Country` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `PostalCode` varchar(10) CHARACTER SET utf8 DEFAULT NULL,\\n  `Phone` varchar(24) CHARACTER SET utf8 DEFAULT NULL,\\n  `Fax` varchar(24) CHARACTER SET utf8 DEFAULT NULL,\\n  `Email` varchar(60) CHARACTER SET utf8 NOT NULL,\\n  `SupportRepId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`CustomerId`),\\n  KEY `IFK_CustomerSupportRepId` (`SupportRepId`),\\n  CONSTRAINT `FK_CustomerSupportRepId` FOREIGN KEY (`SupportRepId`) REFERENCES `Employee` (`EmployeeId`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Empleado con las columnas de, Identificación del empleado, Apellido, Nombre, Título, Informes a, Fecha de nacimiento, Fecha de contratación, Dirección, Ciudad, Estado, País, Código postal, Teléfono, Fax, Correo electrónico",
      "output": "('Employee', 'CREATE TABLE `Employee` (\\n  `EmployeeId` int(11) NOT NULL  `LastName` varchar(20) CHARACTER SET utf8 NOT NULL,\\n  `FirstName` varchar(20) CHARACTER SET utf8 NOT NULL,\\n  `Title` varchar(30) CHARACTER SET utf8 DEFAULT NULL,\\n  `ReportsTo` int(11) DEFAULT NULL,\\n  `BirthDate` datetime DEFAULT NULL,\\n  `HireDate` datetime DEFAULT NULL,\\n  `Address` varchar(70) CHARACTER SET utf8 DEFAULT NULL,\\n  `City` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `State` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `Country` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `PostalCode` varchar(10) CHARACTER SET utf8 DEFAULT NULL,\\n  `Phone` varchar(24) CHARACTER SET utf8 DEFAULT NULL,\\n  `Fax` varchar(24) CHARACTER SET utf8 DEFAULT NULL,\\n  `Email` varchar(60) CHARACTER SET utf8 DEFAULT NULL,\\n  PRIMARY KEY (`EmployeeId`),\\n  KEY `IFK_EmployeeReportsTo` (`ReportsTo`),\\n  CONSTRAINT `FK_EmployeeReportsTo` FOREIGN KEY (`ReportsTo`) REFERENCES `Employee` (`EmployeeId`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Género con las columnas de, ID de género, Nombre",
      "output": "('Genre', 'CREATE TABLE `Genre` (\\n  `GenreId` int(11) NOT NULL  `Name` varchar(120) CHARACTER SET utf8 DEFAULT NULL,\\n  PRIMARY KEY (`GenreId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Factura con las columnas de, Id. de factura, Id. de cliente, Fecha de factura, Dirección de facturación, Ciudad de facturación, Estado de facturación, País de facturación, Código postal de facturación, Total",
      "output": "('Invoice', 'CREATE TABLE `Invoice` (\\n  `InvoiceId` int(11) NOT NULL  `CustomerId` int(11) NOT NULL,\\n  `InvoiceDate` datetime NOT NULL,\\n  `BillingAddress` varchar(70) CHARACTER SET utf8 DEFAULT NULL,\\n  `BillingCity` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `BillingState` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `BillingCountry` varchar(40) CHARACTER SET utf8 DEFAULT NULL,\\n  `BillingPostalCode` varchar(10) CHARACTER SET utf8 DEFAULT NULL,\\n  `Total` decimal(10,2) NOT NULL,\\n  PRIMARY KEY (`InvoiceId`),\\n  KEY `IFK_InvoiceCustomerId` (`CustomerId`),\\n  CONSTRAINT `FK_InvoiceCustomerId` FOREIGN KEY (`CustomerId`) REFERENCES `Customer` (`CustomerId`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Línea de factura con las columnas de, Id. de línea de factura, Id. de factura, Id. de seguimiento, Precio unitario, Cantidad",
      "output": "('InvoiceLine', 'CREATE TABLE `InvoiceLine` (\\n  `InvoiceLineId` int(11) NOT NULL  `InvoiceId` int(11) NOT NULL,\\n  `TrackId` int(11) NOT NULL,\\n  `UnitPrice` decimal(10,2) NOT NULL,\\n  `Quantity` int(11) NOT NULL,\\n  PRIMARY KEY (`InvoiceLineId`),\\n  KEY `IFK_InvoiceLineInvoiceId` (`InvoiceId`),\\n  KEY `IFK_InvoiceLineTrackId` (`TrackId`),\\n  CONSTRAINT `FK_InvoiceLineInvoiceId` FOREIGN KEY (`InvoiceId`) REFERENCES `Invoice` (`InvoiceId`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_InvoiceLineTrackId` FOREIGN KEY (`TrackId`) REFERENCES `Track` (`TrackId`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Tipo de medio con las columnas de, Id. de tipo de medio, Nombre",
      "output": "('MediaType', 'CREATE TABLE `MediaType` (\\n  `MediaTypeId` int(11) NOT NULL  `Name` varchar(120) CHARACTER SET utf8 DEFAULT NULL,\\n  PRIMARY KEY (`MediaTypeId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de lista de reproducción con las columnas de, Id. de lista de reproducción, Nombre",
      "output": "('Playlist', 'CREATE TABLE `Playlist` (\\n  `PlaylistId` int(11) NOT NULL  `Name` varchar(120) CHARACTER SET utf8 DEFAULT NULL,\\n  PRIMARY KEY (`PlaylistId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Pista de lista de reproducción con las columnas de, ID de lista de reproducción, ID de pista",
      "output": "('PlaylistTrack', 'CREATE TABLE `PlaylistTrack` (\\n  `PlaylistId` int(11) NOT NULL  `TrackId` int(11) NOT NULL,\\n  PRIMARY KEY (`PlaylistId`,`TrackId`),\\n  KEY `IFK_PlaylistTrackTrackId` (`TrackId`),\\n  CONSTRAINT `FK_PlaylistTrackPlaylistId` FOREIGN KEY (`PlaylistId`) REFERENCES `Playlist` (`PlaylistId`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_PlaylistTrackTrackId` FOREIGN KEY (`TrackId`) REFERENCES `Track` (`TrackId`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Pista con las columnas de, ID de pista, nombre, ID de álbum, tipo de medio, género, compositor, milisegundos, bytes, precio unitario",
      "output": "('Track', 'CREATE TABLE `Track` (\\n  `TrackId` int(11) NOT NULL  `Name` varchar(200) CHARACTER SET utf8 NOT NULL,\\n  `AlbumId` int(11) DEFAULT NULL,\\n  `MediaTypeId` int(11) NOT NULL,\\n  `GenreId` int(11) DEFAULT NULL,\\n  `Composer` varchar(220) CHARACTER SET utf8 DEFAULT NULL,\\n  `Milliseconds` int(11) NOT NULL,\\n  `Bytes` int(11) DEFAULT NULL,\\n  `UnitPrice` decimal(10,2) NOT NULL,\\n  PRIMARY KEY (`TrackId`),\\n  KEY `IFK_TrackAlbumId` (`AlbumId`),\\n  KEY `IFK_TrackGenreId` (`GenreId`),\\n  KEY `IFK_TrackMediaTypeId` (`MediaTypeId`),\\n  CONSTRAINT `FK_TrackAlbumId` FOREIGN KEY (`AlbumId`) REFERENCES `Album` (`AlbumId`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_TrackGenreId` FOREIGN KEY (`GenreId`) REFERENCES `Genre` (`GenreId`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `FK_TrackMediaTypeId` FOREIGN KEY (`MediaTypeId`) REFERENCES `MediaType` (`MediaTypeId`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de cita con las columnas de, id de artículo citado, id de artículo citado",
      "output": "('cites', 'CREATE TABLE `cites` (\\n  `cited_paper_id` varchar(40) NOT NULL  `citing_paper_id` varchar(40) NOT NULL,\\n  PRIMARY KEY (`cited_paper_id`,`citing_paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de contenido con las columnas de, ID de papel, ID de palabra citada",
      "output": "('content', 'CREATE TABLE `content` (\\n  `paper_id` varchar(40) NOT NULL  `word_cited_id` varchar(40) NOT NULL,\\n  PRIMARY KEY (`paper_id`,`word_cited_id`),\\n  CONSTRAINT `content_ibfk_1` FOREIGN KEY (`paper_id`) REFERENCES `paper` (`paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de papel con las columnas de, identificación de papel, etiqueta de clase",
      "output": "('paper', 'CREATE TABLE `paper` (\\n  `paper_id` varchar(40) NOT NULL  `class_label` varchar(255) NOT NULL,\\n  PRIMARY KEY (`paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de GASTOS con las columnas de, GASTO DE, HOGAR SI, AÑO, MES, CÓDIGO DEL PRODUCTO, COSTO, REGALO, ES CAPACITACIÓN",
      "output": "('EXPENDITURES', \"CREATE TABLE `EXPENDITURES` (\\n  `EXPENDITURE_ID` varchar(11) NOT NULL  `HOUSEHOLD_ID` varchar(10) NOT NULL,\\n  `YEAR` int(11) NOT NULL,\\n  `MONTH` int(11) NOT NULL,\\n  `PRODUCT_CODE` varchar(6) NOT NULL,\\n  `COST` double NOT NULL,\\n  `GIFT` int(11) NOT NULL,\\n  `IS_TRAINING` int(255) NOT NULL DEFAULT 1 COMMENT 'Designed split to trainin and testing set',\\n  PRIMARY KEY (`EXPENDITURE_ID`) USING BTREE,\\n  KEY `HOUSEHOLD_ID` (`HOUSEHOLD_ID`),\\n  CONSTRAINT `EXPENDITURES_ibfk_1` FOREIGN KEY (`HOUSEHOLD_ID`) REFERENCES `HOUSEHOLDS` (`HOUSEHOLD_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\")"
    },
    {
      "input": "Una tabla de HOGARES con las columnas de, ID DEL HOGAR, AÑO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO MEDIA, REF DE EDAD",
      "output": "('HOUSEHOLDS', 'CREATE TABLE `HOUSEHOLDS` (\\n  `HOUSEHOLD_ID` varchar(10) NOT NULL  `YEAR` int(11) NOT NULL,\\n  `INCOME_RANK` double NOT NULL,\\n  `INCOME_RANK_1` double NOT NULL,\\n  `INCOME_RANK_2` double NOT NULL,\\n  `INCOME_RANK_3` double NOT NULL,\\n  `INCOME_RANK_4` double NOT NULL,\\n  `INCOME_RANK_5` double NOT NULL,\\n  `INCOME_RANK_MEAN` double NOT NULL,\\n  `AGE_REF` int(11) NOT NULL,\\n  PRIMARY KEY (`HOUSEHOLD_ID`) USING BTREE,\\n  KEY `HOUSEHOLD_ID_idx` (`HOUSEHOLD_ID`,`YEAR`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de LOS MIEMBROS DEL HOGAR con las columnas de, DNI, AÑO, CIVIL, SEXO, EDAD, ESTADO LABORAL",
      "output": "('HOUSEHOLD_MEMBERS', 'CREATE TABLE `HOUSEHOLD_MEMBERS` (\\n  `HOUSEHOLD_ID` varchar(10) NOT NULL  `YEAR` int(11) NOT NULL,\\n  `MARITAL` varchar(1) NOT NULL,\\n  `SEX` varchar(1) NOT NULL,\\n  `AGE` int(11) NOT NULL,\\n  `WORK_STATUS` varchar(2) DEFAULT NULL,\\n  KEY `HOUSEHOLD_ID` (`HOUSEHOLD_ID`),\\n  CONSTRAINT `HOUSEHOLD_MEMBERS_ibfk_1` FOREIGN KEY (`HOUSEHOLD_ID`) REFERENCES `HOUSEHOLDS` (`HOUSEHOLD_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Datos con las columnas de, Nombre del país, Código del país, Nombre del indicador, Código del indicador",
      "output": "('Data', 'CREATE TABLE `Data` (\\n  `Country Name` varchar(255) DEFAULT NULL  `Country Code` varchar(255) NOT NULL,\\n  `Indicator Name` varchar(255) DEFAULT NULL,\\n  `Indicator Code` varchar(255) NOT NULL,\\n  `1960` double DEFAULT NULL,\\n  `1961` double DEFAULT NULL,\\n  `1962` double DEFAULT NULL,\\n  `1963` double DEFAULT NULL,\\n  `1964` double DEFAULT NULL,\\n  `1965` double DEFAULT NULL,\\n  `1966` double DEFAULT NULL,\\n  `1967` double DEFAULT NULL,\\n  `1968` double DEFAULT NULL,\\n  `1969` double DEFAULT NULL,\\n  `1970` double DEFAULT NULL,\\n  `1971` double DEFAULT NULL,\\n  `1972` double DEFAULT NULL,\\n  `1973` double DEFAULT NULL,\\n  `1974` double DEFAULT NULL,\\n  `1975` double DEFAULT NULL,\\n  `1976` double DEFAULT NULL,\\n  `1977` double DEFAULT NULL,\\n  `1978` double DEFAULT NULL,\\n  `1979` double DEFAULT NULL,\\n  `1980` double DEFAULT NULL,\\n  `1981` double DEFAULT NULL,\\n  `1982` double DEFAULT NULL,\\n  `1983` double DEFAULT NULL,\\n  `1984` double DEFAULT NULL,\\n  `1985` double DEFAULT NULL,\\n  `1986` double DEFAULT NULL,\\n  `1987` double DEFAULT NULL,\\n  `1988` double DEFAULT NULL,\\n  `1989` double DEFAULT NULL,\\n  `1990` double DEFAULT NULL,\\n  `1991` double DEFAULT NULL,\\n  `1992` double DEFAULT NULL,\\n  `1993` double DEFAULT NULL,\\n  `1994` double DEFAULT NULL,\\n  `1995` double DEFAULT NULL,\\n  `1996` double DEFAULT NULL,\\n  `1997` double DEFAULT NULL,\\n  `1998` double DEFAULT NULL,\\n  `1999` double DEFAULT NULL,\\n  `2000` double DEFAULT NULL,\\n  `2001` double DEFAULT NULL,\\n  `2002` double DEFAULT NULL,\\n  `2003` double DEFAULT NULL,\\n  `2004` double DEFAULT NULL,\\n  `2005` double DEFAULT NULL,\\n  `2006` double DEFAULT NULL,\\n  `2007` double DEFAULT NULL,\\n  `2008` double DEFAULT NULL,\\n  `2009` double DEFAULT NULL,\\n  `2010` double DEFAULT NULL,\\n  `2011` double DEFAULT NULL,\\n  PRIMARY KEY (`Country Code`,`Indicator Code`),\\n  KEY `Indicator Code` (`Indicator Code`),\\n  KEY `Country Code` (`Country Code`),\\n  CONSTRAINT `Data_ibfk_1` FOREIGN KEY (`Indicator Code`) REFERENCES `Metadata - Indicators` (`INDICATOR_CODE`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `Data_ibfk_2` FOREIGN KEY (`Country Code`) REFERENCES `Metadata - Countries` (`Country Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, Código de país,",
      "output": "('target', 'CREATE TABLE `target` (\\n  `Country Code` varchar(255) NOT NULL  `2012` double DEFAULT NULL,\\n  PRIMARY KEY (`Country Code`),\\n  KEY `Country Code` (`Country Code`),\\n  CONSTRAINT `target_ibfk_1` FOREIGN KEY (`Country Code`) REFERENCES `Metadata - Countries` (`Country Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cervezas con las columnas de, id, id de cervecería, abv, ibu, nombre, estilo, onzas",
      "output": "('beers', 'CREATE TABLE `beers` (\\n  `id` int(11) NOT NULL  `brewery_id` int(11) NOT NULL,\\n  `abv` float DEFAULT NULL,\\n  `ibu` decimal(5,1) DEFAULT NULL,\\n  `name` varchar(255) NOT NULL,\\n  `style` varchar(255) DEFAULT NULL,\\n  `ounces` decimal(5,1) NOT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `brewery_id` (`brewery_id`),\\n  CONSTRAINT `beers_ibfk_1` FOREIGN KEY (`brewery_id`) REFERENCES `breweries` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de cervecerías con las columnas de, id, nombre, ciudad, estado",
      "output": "('breweries', 'CREATE TABLE `breweries` (\\n  `id` int(11) NOT NULL  `name` varchar(255) DEFAULT NULL,\\n  `city` varchar(255) DEFAULT NULL,\\n  `state` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de categoría con las columnas de, categoría no, categoría desc, código de categoría",
      "output": "('category', 'CREATE TABLE `category` (\\n  `category_no` int(11) NOT NULL  `category_desc` varchar(31) NOT NULL,\\n  `category_code` char(2) NOT NULL,\\n  PRIMARY KEY (`category_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cobrar con las columnas de, n.° de cargo, n.° de miembro, n.° de proveedor, n.° de categoría, dt de cargo, monto de cargo, n.° de estado de cuenta, código de cargo",
      "output": "('charge', 'CREATE TABLE `charge` (\\n  `charge_no` int(11) NOT NULL  `member_no` int(11) NOT NULL,\\n  `provider_no` int(11) NOT NULL,\\n  `category_no` int(11) NOT NULL,\\n  `charge_dt` datetime NOT NULL,\\n  `charge_amt` decimal(19,4) NOT NULL,\\n  `statement_no` int(11) NOT NULL,\\n  `charge_code` char(2) NOT NULL,\\n  PRIMARY KEY (`charge_no`),\\n  KEY `charge_category_no` (`category_no`),\\n  KEY `charge_statement_no` (`statement_no`),\\n  KEY `charge_statement_no_2` (`statement_no`),\\n  KEY `charge_statement_no_3` (`statement_no`),\\n  KEY `charge_member_no` (`member_no`),\\n  KEY `charge_statement_no_4` (`statement_no`),\\n  KEY `charge_member_no_2` (`member_no`),\\n  KEY `charge_statement_no_5` (`statement_no`),\\n  KEY `charge_member_no_3` (`member_no`),\\n  KEY `charge_provider_no` (`provider_no`),\\n  CONSTRAINT `charge_ibfk_1` FOREIGN KEY (`category_no`) REFERENCES `category` (`category_no`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `charge_ibfk_2` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `charge_ibfk_3` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `charge_ibfk_4` FOREIGN KEY (`provider_no`) REFERENCES `provider` (`provider_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de corporación con las columnas de, corp no, nombre de corp, calle, ciudad, provincia estatal, país, código de correo, teléfono no, expr dt, región no, código de corp",
      "output": "('corporation', 'CREATE TABLE `corporation` (\\n  `corp_no` int(11) NOT NULL  `corp_name` varchar(31) NOT NULL,\\n  `street` varchar(15) NOT NULL,\\n  `city` varchar(15) NOT NULL,\\n  `state_prov` char(2) NOT NULL,\\n  `country` char(2) NOT NULL,\\n  `mail_code` char(10) NOT NULL,\\n  `phone_no` char(13) NOT NULL,\\n  `expr_dt` datetime NOT NULL,\\n  `region_no` int(11) NOT NULL,\\n  `corp_code` char(2) NOT NULL,\\n  PRIMARY KEY (`corp_no`),\\n  KEY `corporation_region_no` (`region_no`),\\n  CONSTRAINT `corporation_ibfk_1` FOREIGN KEY (`region_no`) REFERENCES `region` (`region_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de miembro con las columnas de, número de miembro, apellido, primer nombre, inicial del segundo nombre, calle, ciudad, provincia estatal, país, código de correo, número de teléfono, fotografía, edición dt, expr dt, región no, corp no, saldo anterior, saldo actual, código de miembro",
      "output": "('member', 'CREATE TABLE `member` (\\n  `member_no` int(11) NOT NULL  `lastname` varchar(15) NOT NULL,\\n  `firstname` varchar(15) NOT NULL,\\n  `middleinitial` char(1) DEFAULT NULL,\\n  `street` varchar(15) NOT NULL,\\n  `city` varchar(15) NOT NULL,\\n  `state_prov` char(2) NOT NULL,\\n  `country` char(2) NOT NULL,\\n  `mail_code` char(10) NOT NULL,\\n  `phone_no` char(13) DEFAULT NULL,\\n  `photograph` longblob DEFAULT NULL,\\n  `issue_dt` datetime NOT NULL,\\n  `expr_dt` datetime NOT NULL,\\n  `region_no` int(11) NOT NULL,\\n  `corp_no` int(11) DEFAULT NULL,\\n  `prev_balance` decimal(19,4) DEFAULT NULL,\\n  `curr_balance` decimal(19,4) DEFAULT NULL,\\n  `member_code` char(2) NOT NULL,\\n  PRIMARY KEY (`member_no`),\\n  KEY `member_region_no` (`region_no`),\\n  KEY `member_corp_no` (`corp_no`),\\n  CONSTRAINT `member_ibfk_1` FOREIGN KEY (`region_no`) REFERENCES `region` (`region_no`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `member_ibfk_2` FOREIGN KEY (`corp_no`) REFERENCES `corporation` (`corp_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de pago con las columnas de, nº de pago, nº de miembro, dt de pago, importe de pago, nº de estado de cuenta, código de pago",
      "output": "('payment', 'CREATE TABLE `payment` (\\n  `payment_no` int(11) NOT NULL  `member_no` int(11) NOT NULL,\\n  `payment_dt` datetime NOT NULL,\\n  `payment_amt` decimal(19,4) NOT NULL,\\n  `statement_no` int(11) DEFAULT NULL,\\n  `payment_code` char(2) NOT NULL,\\n  PRIMARY KEY (`payment_no`),\\n  KEY `payment_statement_no` (`statement_no`),\\n  KEY `payment_member_no` (`member_no`),\\n  CONSTRAINT `payment_ibfk_1` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de proveedor con las columnas de, n.° de proveedor, nombre del proveedor, calle, ciudad, provincia estatal, código de correo, país, n.° de teléfono, dt de emisión, dt de expansión, n.° de región, código de proveedor",
      "output": "('provider', 'CREATE TABLE `provider` (\\n  `provider_no` int(11) NOT NULL  `provider_name` varchar(15) NOT NULL,\\n  `street` varchar(15) NOT NULL,\\n  `city` varchar(15) NOT NULL,\\n  `state_prov` char(2) NOT NULL,\\n  `mail_code` char(10) NOT NULL,\\n  `country` char(2) NOT NULL,\\n  `phone_no` char(13) NOT NULL,\\n  `issue_dt` datetime NOT NULL,\\n  `expr_dt` datetime NOT NULL,\\n  `region_no` int(11) NOT NULL,\\n  `provider_code` char(2) NOT NULL,\\n  PRIMARY KEY (`provider_no`),\\n  KEY `provider_region_no` (`region_no`),\\n  CONSTRAINT `provider_ibfk_1` FOREIGN KEY (`region_no`) REFERENCES `region` (`region_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de región con las columnas de, número de región, nombre de la región, calle, ciudad, provincia, país, código de correo, número de teléfono, código de región",
      "output": "('region', 'CREATE TABLE `region` (\\n  `region_no` int(11) NOT NULL  `region_name` varchar(15) NOT NULL,\\n  `street` varchar(15) NOT NULL,\\n  `city` varchar(15) NOT NULL,\\n  `state_prov` char(2) NOT NULL,\\n  `country` char(2) NOT NULL,\\n  `mail_code` char(10) NOT NULL,\\n  `phone_no` char(13) NOT NULL,\\n  `region_code` char(2) NOT NULL,\\n  PRIMARY KEY (`region_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de declaración con las columnas de, nº de extracto, nº de miembro, dt de extracto, dt de vencimiento, importe de extracto, código de extracto",
      "output": "('statement', 'CREATE TABLE `statement` (\\n  `statement_no` int(11) NOT NULL  `member_no` int(11) NOT NULL,\\n  `statement_dt` datetime NOT NULL,\\n  `due_dt` datetime NOT NULL,\\n  `statement_amt` decimal(19,4) NOT NULL,\\n  `statement_code` char(2) NOT NULL,\\n  PRIMARY KEY (`statement_no`),\\n  KEY `statement_member_no` (`member_no`),\\n  CONSTRAINT `statement_ibfk_1` FOREIGN KEY (`member_no`) REFERENCES `member` (`member_no`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de estado con las columnas de, código de estado, descripción de estado",
      "output": "('status', 'CREATE TABLE `status` (\\n  `status_code` char(2) NOT NULL  `status_desc` varchar(31) NOT NULL,\\n  PRIMARY KEY (`status_code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de oraciones con las columnas de, identificación, clase",
      "output": "('sentences', 'CREATE TABLE `sentences` (\\n  `id` int(11) NOT NULL  `class` char(3) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de términos con las columnas de, id oración, id término, término",
      "output": "('terms', 'CREATE TABLE `terms` (\\n  `id_sentence` int(11) NOT NULL  `id_term` int(11) NOT NULL,\\n  `term` varchar(7) DEFAULT NULL,\\n  PRIMARY KEY (`id_sentence`,`id_term`),\\n  CONSTRAINT `terms_ibfk_1` FOREIGN KEY (`id_sentence`) REFERENCES `sentences` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de incidentes con las columnas de, número de caso, fecha, ubicación, estados del sujeto, arma del sujeto, sujetos, recuento de sujetos, oficiales, recuento de oficiales, disposición del gran jurado, URL de formularios del fiscal general, URL de resumen, texto de resumen, latitud, longitud",
      "output": "('incidents', 'CREATE TABLE `incidents` (\\n  `case_number` varchar(255) NOT NULL  `date` date NOT NULL,\\n  `location` varchar(255) NOT NULL,\\n  `subject_statuses` varchar(255) NOT NULL,\\n  `subject_weapon` varchar(255) NOT NULL,\\n  `subjects` varchar(255) NOT NULL,\\n  `subject_count` int(11) NOT NULL,\\n  `officers` varchar(2550) NOT NULL,\\n  `officer_count` int(11) NOT NULL,\\n  `grand_jury_disposition` varchar(255) DEFAULT NULL,\\n  `attorney_general_forms_url` varchar(255) DEFAULT NULL,\\n  `summary_url` varchar(255) DEFAULT NULL,\\n  `summary_text` varchar(2550) DEFAULT NULL,\\n  `latitude` double DEFAULT NULL,\\n  `longitude` double DEFAULT NULL,\\n  PRIMARY KEY (`case_number`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de oficiales con las columnas de, número de caso, raza, sexo, apellido, nombre, nombre completo",
      "output": "('officers', 'CREATE TABLE `officers` (\\n  `case_number` varchar(255) NOT NULL  `race` char(1) DEFAULT NULL,\\n  `gender` char(1) NOT NULL,\\n  `last_name` varchar(255) NOT NULL,\\n  `first_name` varchar(255) DEFAULT NULL,\\n  `full_name` varchar(255) NOT NULL,\\n  KEY `case_number` (`case_number`),\\n  CONSTRAINT `officers_ibfk_1` FOREIGN KEY (`case_number`) REFERENCES `incidents` (`case_number`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de asignaturas con las columnas de, número de caso, raza, sexo, apellido, nombre, nombre completo",
      "output": "('subjects', 'CREATE TABLE `subjects` (\\n  `case_number` varchar(255) NOT NULL  `race` char(1) NOT NULL,\\n  `gender` char(1) NOT NULL,\\n  `last_name` varchar(255) NOT NULL,\\n  `first_name` varchar(255) DEFAULT NULL,\\n  `full_name` varchar(255) NOT NULL,\\n  KEY `case_number` (`case_number`),\\n  CONSTRAINT `subjects_ibfk_1` FOREIGN KEY (`case_number`) REFERENCES `incidents` (`case_number`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de tía con las columnas de, nombre nombre",
      "output": "('aunt', \"CREATE TABLE `aunt` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `aunt_name1` (`name1`) USING BTREE,\\n  KEY `aunt_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `aunt_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `aunt_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermano con las columnas de, nombre nombre",
      "output": "('brother', \"CREATE TABLE `brother` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `brother_name1` (`name1`) USING BTREE,\\n  KEY `brother_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `brother_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `brother_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hija con las columnas de, nombre nombre",
      "output": "('daughter', \"CREATE TABLE `daughter` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `daughter_name1` (`name1`) USING BTREE,\\n  KEY `daughter_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `daughter_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `daughter_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de dunoor con las columnas de, nombre nombre",
      "output": "('dunur', \"CREATE TABLE `dunur` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `dunur_name1` (`name1`) USING BTREE,\\n  KEY `dunur_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `dunur_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `dunur_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('father', \"CREATE TABLE `father` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `father_name1` (`name1`) USING BTREE,\\n  KEY `father_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `father_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `father_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband', \"CREATE TABLE `husband` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband_name1` (`name1`) USING BTREE,\\n  KEY `husband_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `husband_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `husband_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband2', \"CREATE TABLE `husband2` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband2_name1` (`name1`) USING BTREE,\\n  KEY `husband2_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `husband2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `husband2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de madre con las columnas de, nombre nombre",
      "output": "('mother', \"CREATE TABLE `mother` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `mother_name1` (`name1`) USING BTREE,\\n  KEY `mother_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `mother_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `mother_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrino con las columnas de, nombre nombre",
      "output": "('nephew', \"CREATE TABLE `nephew` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `nephew_name1` (`name1`) USING BTREE,\\n  KEY `nephew_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `nephew_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `nephew_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrina con las columnas de, nombre nombre",
      "output": "('niece', \"CREATE TABLE `niece` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `niece_name1` (`name1`) USING BTREE,\\n  KEY `niece_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `niece_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `niece_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de persona con las columnas de, nombre",
      "output": "('person', 'CREATE TABLE `person` (\\n  `name` varchar(50) NOT NULL  PRIMARY KEY (`name`),\\n  KEY `person_name` (`name`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hermana con las columnas de, nombre nombre",
      "output": "('sister', \"CREATE TABLE `sister` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `sister_name1` (`name1`) USING BTREE,\\n  KEY `sister_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `sister_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `sister_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de son con las columnas de, nombre nombre",
      "output": "('son', \"CREATE TABLE `son` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `son_name1` (`name1`) USING BTREE,\\n  KEY `son_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `son_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `son_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, nombre, nombre, es dunur",
      "output": "('target', \"CREATE TABLE `target` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  `is_dunur` bigint(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `target_name1` (`name1`) USING BTREE,\\n  KEY `target_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `target_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `target_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tío con las columnas de, nombre nombre",
      "output": "('uncle', \"CREATE TABLE `uncle` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `uncle_name1` (`name1`) USING BTREE,\\n  KEY `uncle_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `uncle_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `uncle_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposa con las columnas de, nombre nombre",
      "output": "('wife', \"CREATE TABLE `wife` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `wife_name1` (`name1`) USING BTREE,\\n  KEY `wife_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `wife_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `wife_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposa con las columnas de, nombre nombre",
      "output": "('wife2', \"CREATE TABLE `wife2` (\\n  `name1` varchar(50) NOT NULL DEFAULT ''  `name2` varchar(50) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `wife2_name1` (`name1`) USING BTREE,\\n  KEY `wife2_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `wife2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `wife2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermano con las columnas de, nombre nombre",
      "output": "('brother', 'CREATE TABLE `brother` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `brother_name1` (`name1`),\\n  KEY `brother_name2` (`name2`),\\n  CONSTRAINT `brother_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `brother_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hija con las columnas de, nombre nombre",
      "output": "('daughter', 'CREATE TABLE `daughter` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `daughter_name1` (`name1`),\\n  KEY `daughter_name2` (`name2`),\\n  CONSTRAINT `daughter_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `daughter_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de elti con las columnas de, nombre nombre",
      "output": "('elti', 'CREATE TABLE `elti` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `elti_name1` (`name1`),\\n  KEY `elti_name2` (`name2`),\\n  CONSTRAINT `elti_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `elti_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('father', 'CREATE TABLE `father` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `father_name1` (`name1`),\\n  KEY `father_name2` (`name2`),\\n  CONSTRAINT `father_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `father_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband', 'CREATE TABLE `husband` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband_name1` (`name1`),\\n  KEY `husband_name2` (`name2`),\\n  CONSTRAINT `husband_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `husband_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de madre con las columnas de, nombre nombre",
      "output": "('mother', 'CREATE TABLE `mother` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `mother_name1` (`name1`),\\n  KEY `mother_name2` (`name2`),\\n  CONSTRAINT `mother_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `mother_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de persona con las columnas de, nombre",
      "output": "('person', 'CREATE TABLE `person` (\\n  `name` varchar(50) NOT NULL  PRIMARY KEY (`name`),\\n  KEY `person_name` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hermana con las columnas de, nombre nombre",
      "output": "('sister', 'CREATE TABLE `sister` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `sister_name1` (`name1`),\\n  KEY `sister_name2` (`name2`),\\n  CONSTRAINT `sister_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `sister_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de son con las columnas de, nombre nombre",
      "output": "('son', 'CREATE TABLE `son` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `son_name1` (`name1`),\\n  KEY `son_name2` (`name2`),\\n  CONSTRAINT `son_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `son_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, nombre, nombre, es elti",
      "output": "('target', 'CREATE TABLE `target` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  `is_elti` bigint(20) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `target_name1` (`name1`),\\n  KEY `target_name2` (`name2`),\\n  CONSTRAINT `target_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `target_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de esposa con las columnas de, nombre nombre",
      "output": "('wife', 'CREATE TABLE `wife` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `wife_name1` (`name1`),\\n  KEY `wife_name2` (`name2`),\\n  CONSTRAINT `wife_name1_fkey` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `wife_name2_fkey` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de circuitos con las columnas de, ID de circuito, referencia de circuito, nombre, ubicación, país, lat, lng, alt, url",
      "output": "('circuits', \"CREATE TABLE `circuits` (\\n  `circuitId` int(11) NOT NULL AUTO_INCREMENT  `circuitRef` varchar(255) NOT NULL DEFAULT '',\\n  `name` varchar(255) NOT NULL DEFAULT '',\\n  `location` varchar(255) DEFAULT NULL,\\n  `country` varchar(255) DEFAULT NULL,\\n  `lat` float DEFAULT NULL,\\n  `lng` float DEFAULT NULL,\\n  `alt` int(11) DEFAULT NULL,\\n  `url` varchar(255) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`circuitId`),\\n  UNIQUE KEY `url` (`url`)\\n) ENGINE=InnoDB AUTO_INCREMENT=74 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Resultados del constructor con las columnas de, Id. de resultados del constructor, Id. de la carrera, Id. del constructor, puntos, estado",
      "output": "('constructorResults', 'CREATE TABLE `constructorResults` (\\n  `constructorResultsId` int(11) NOT NULL AUTO_INCREMENT  `raceId` int(11) NOT NULL DEFAULT 0,\\n  `constructorId` int(11) NOT NULL DEFAULT 0,\\n  `points` float DEFAULT NULL,\\n  `status` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`constructorResultsId`),\\n  KEY `raceId` (`raceId`),\\n  KEY `constructorId` (`constructorId`),\\n  CONSTRAINT `constructorResults_ibfk_1` FOREIGN KEY (`raceId`) REFERENCES `races` (`raceId`),\\n  CONSTRAINT `constructorResults_ibfk_2` FOREIGN KEY (`constructorId`) REFERENCES `constructors` (`constructorId`)\\n) ENGINE=InnoDB AUTO_INCREMENT=15580 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Clasificación de constructores con las columnas de, Id. de posiciones del constructor, Id. de carrera, Id. de constructor, puntos, posición, Texto de posición, victorias",
      "output": "('constructorStandings', 'CREATE TABLE `constructorStandings` (\\n  `constructorStandingsId` int(11) NOT NULL AUTO_INCREMENT  `raceId` int(11) NOT NULL DEFAULT 0,\\n  `constructorId` int(11) NOT NULL DEFAULT 0,\\n  `points` float NOT NULL DEFAULT 0,\\n  `position` int(11) DEFAULT NULL,\\n  `positionText` varchar(255) DEFAULT NULL,\\n  `wins` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`constructorStandingsId`),\\n  KEY `raceId` (`raceId`),\\n  KEY `constructorId` (`constructorId`),\\n  CONSTRAINT `constructorStandings_ibfk_1` FOREIGN KEY (`raceId`) REFERENCES `races` (`raceId`),\\n  CONSTRAINT `constructorStandings_ibfk_2` FOREIGN KEY (`constructorId`) REFERENCES `constructors` (`constructorId`)\\n) ENGINE=InnoDB AUTO_INCREMENT=26873 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de constructores con las columnas de, Id del constructor, Ref del constructor, nombre, nacionalidad, url",
      "output": "('constructors', \"CREATE TABLE `constructors` (\\n  `constructorId` int(11) NOT NULL AUTO_INCREMENT  `constructorRef` varchar(255) NOT NULL DEFAULT '',\\n  `name` varchar(255) NOT NULL DEFAULT '',\\n  `nationality` varchar(255) DEFAULT NULL,\\n  `url` varchar(255) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`constructorId`),\\n  UNIQUE KEY `name` (`name`)\\n) ENGINE=InnoDB AUTO_INCREMENT=211 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Clasificación de pilotos con las columnas de, Id. de clasificación del conductor, Id. de carrera, Id. de conductor, puntos, posición, texto de posición, victorias",
      "output": "('driverStandings', 'CREATE TABLE `driverStandings` (\\n  `driverStandingsId` int(11) NOT NULL AUTO_INCREMENT  `raceId` int(11) NOT NULL DEFAULT 0,\\n  `driverId` int(11) NOT NULL DEFAULT 0,\\n  `points` float NOT NULL DEFAULT 0,\\n  `position` int(11) DEFAULT NULL,\\n  `positionText` varchar(255) DEFAULT NULL,\\n  `wins` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`driverStandingsId`),\\n  KEY `raceId` (`raceId`),\\n  KEY `driverId` (`driverId`),\\n  CONSTRAINT `driverStandings_ibfk_1` FOREIGN KEY (`raceId`) REFERENCES `races` (`raceId`),\\n  CONSTRAINT `driverStandings_ibfk_2` FOREIGN KEY (`driverId`) REFERENCES `drivers` (`driverId`)\\n) ENGINE=InnoDB AUTO_INCREMENT=68461 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de conductores con las columnas de, Id del conductor, Ref del conductor, número, código, nombre, apellido, fecha de nacimiento, nacionalidad, url",
      "output": "('drivers', \"CREATE TABLE `drivers` (\\n  `driverId` int(11) NOT NULL AUTO_INCREMENT  `driverRef` varchar(255) NOT NULL DEFAULT '',\\n  `number` int(11) DEFAULT NULL,\\n  `code` varchar(3) DEFAULT NULL,\\n  `forename` varchar(255) NOT NULL DEFAULT '',\\n  `surname` varchar(255) NOT NULL DEFAULT '',\\n  `dob` date DEFAULT NULL,\\n  `nationality` varchar(255) DEFAULT NULL,\\n  `url` varchar(255) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`driverId`),\\n  UNIQUE KEY `url` (`url`)\\n) ENGINE=InnoDB AUTO_INCREMENT=842 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tiempos de vuelta con las columnas de, ID de carrera, ID de conductor, vuelta, posición, tiempo, milisegundos",
      "output": "('lapTimes', 'CREATE TABLE `lapTimes` (\\n  `raceId` int(11) NOT NULL  `driverId` int(11) NOT NULL,\\n  `lap` int(11) NOT NULL,\\n  `position` int(11) DEFAULT NULL,\\n  `time` varchar(255) DEFAULT NULL,\\n  `milliseconds` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`raceId`,`driverId`,`lap`),\\n  KEY `raceId` (`raceId`),\\n  KEY `driverId` (`driverId`),\\n  CONSTRAINT `lapTimes_ibfk_1` FOREIGN KEY (`driverId`) REFERENCES `drivers` (`driverId`),\\n  CONSTRAINT `lapTimes_ibfk_2` FOREIGN KEY (`raceId`) REFERENCES `races` (`raceId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de paradas en boxes con las columnas de, ID de carrera, ID de conductor, parada, vuelta, tiempo, duración, milisegundos",
      "output": "('pitStops', 'CREATE TABLE `pitStops` (\\n  `raceId` int(11) NOT NULL  `driverId` int(11) NOT NULL,\\n  `stop` int(11) NOT NULL,\\n  `lap` int(11) NOT NULL,\\n  `time` time NOT NULL,\\n  `duration` varchar(255) DEFAULT NULL,\\n  `milliseconds` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`raceId`,`driverId`,`stop`),\\n  KEY `raceId` (`raceId`),\\n  KEY `driverId` (`driverId`),\\n  CONSTRAINT `pitStops_ibfk_1` FOREIGN KEY (`raceId`) REFERENCES `races` (`raceId`),\\n  CONSTRAINT `pitStops_ibfk_2` FOREIGN KEY (`driverId`) REFERENCES `drivers` (`driverId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Calificación con las columnas de, id de calificación, id de carrera, id de piloto, id de constructor, número, posición, q, q, q",
      "output": "('qualifying', 'CREATE TABLE `qualifying` (\\n  `qualifyId` int(11) NOT NULL AUTO_INCREMENT  `raceId` int(11) NOT NULL DEFAULT 0,\\n  `driverId` int(11) NOT NULL DEFAULT 0,\\n  `constructorId` int(11) NOT NULL DEFAULT 0,\\n  `number` int(11) NOT NULL DEFAULT 0,\\n  `position` int(11) DEFAULT NULL,\\n  `q1` varchar(255) DEFAULT NULL,\\n  `q2` varchar(255) DEFAULT NULL,\\n  `q3` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`qualifyId`),\\n  KEY `constructorId` (`constructorId`),\\n  KEY `driverId` (`driverId`),\\n  KEY `raceId` (`raceId`),\\n  CONSTRAINT `qualifying_ibfk_1` FOREIGN KEY (`constructorId`) REFERENCES `constructors` (`constructorId`),\\n  CONSTRAINT `qualifying_ibfk_2` FOREIGN KEY (`driverId`) REFERENCES `drivers` (`driverId`),\\n  CONSTRAINT `qualifying_ibfk_3` FOREIGN KEY (`raceId`) REFERENCES `races` (`raceId`)\\n) ENGINE=InnoDB AUTO_INCREMENT=7420 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Razas con las columnas de, ID de carrera, año, ronda, ID de circuito, nombre, fecha, hora, URL",
      "output": "('races', \"CREATE TABLE `races` (\\n  `raceId` int(11) NOT NULL AUTO_INCREMENT  `year` int(11) NOT NULL DEFAULT 0,\\n  `round` int(11) NOT NULL DEFAULT 0,\\n  `circuitId` int(11) NOT NULL DEFAULT 0,\\n  `name` varchar(255) NOT NULL DEFAULT '',\\n  `date` date NOT NULL DEFAULT '0000-00-00',\\n  `time` time DEFAULT NULL,\\n  `url` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`raceId`),\\n  UNIQUE KEY `url` (`url`),\\n  KEY `circuitId` (`circuitId`),\\n  KEY `year` (`year`),\\n  CONSTRAINT `races_ibfk_1` FOREIGN KEY (`circuitId`) REFERENCES `circuits` (`circuitId`),\\n  CONSTRAINT `races_ibfk_2` FOREIGN KEY (`year`) REFERENCES `seasons` (`year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=989 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de resultados con las columnas de, Id. de resultado, Id. de carrera, Id. de piloto, Id. de constructor, número, cuadrícula, posición, Texto de posición, Orden de posición, puntos, vueltas, tiempo, milisegundos, Vuelta más rápida, clasificación, Tiempo de vuelta más rápido, Velocidad de vuelta más rápida, Id. de estado",
      "output": "('results', \"CREATE TABLE `results` (\\n  `resultId` int(11) NOT NULL AUTO_INCREMENT  `raceId` int(11) NOT NULL DEFAULT 0,\\n  `driverId` int(11) NOT NULL DEFAULT 0,\\n  `constructorId` int(11) NOT NULL DEFAULT 0,\\n  `number` int(11) DEFAULT NULL,\\n  `grid` int(11) NOT NULL DEFAULT 0,\\n  `position` int(11) DEFAULT NULL,\\n  `positionText` varchar(255) NOT NULL DEFAULT '',\\n  `positionOrder` int(11) NOT NULL DEFAULT 0,\\n  `points` float NOT NULL DEFAULT 0,\\n  `laps` int(11) NOT NULL DEFAULT 0,\\n  `time` varchar(255) DEFAULT NULL,\\n  `milliseconds` int(11) DEFAULT NULL,\\n  `fastestLap` int(11) DEFAULT NULL,\\n  `rank` int(11) DEFAULT 0,\\n  `fastestLapTime` varchar(255) DEFAULT NULL,\\n  `fastestLapSpeed` varchar(255) DEFAULT NULL,\\n  `statusId` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`resultId`),\\n  KEY `constructorId` (`constructorId`),\\n  KEY `driverId` (`driverId`),\\n  KEY `statusId` (`statusId`),\\n  KEY `raceId` (`raceId`),\\n  CONSTRAINT `results_ibfk_1` FOREIGN KEY (`constructorId`) REFERENCES `constructors` (`constructorId`),\\n  CONSTRAINT `results_ibfk_2` FOREIGN KEY (`driverId`) REFERENCES `drivers` (`driverId`),\\n  CONSTRAINT `results_ibfk_3` FOREIGN KEY (`statusId`) REFERENCES `status` (`statusId`),\\n  CONSTRAINT `results_ibfk_4` FOREIGN KEY (`raceId`) REFERENCES `races` (`raceId`)\\n) ENGINE=InnoDB AUTO_INCREMENT=23662 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de estaciones con las columnas de, año, URL",
      "output": "('seasons', \"CREATE TABLE `seasons` (\\n  `year` int(11) NOT NULL DEFAULT 0  `url` varchar(255) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`year`),\\n  UNIQUE KEY `url` (`url`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de estado con las columnas de, ID de estado, estado",
      "output": "('status', \"CREATE TABLE `status` (\\n  `statusId` int(11) NOT NULL AUTO_INCREMENT  `status` varchar(255) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`statusId`)\\n) ENGINE=InnoDB AUTO_INCREMENT=137 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, Id. de destino, Id. de carrera, Id. de conductor, ganar",
      "output": "('target', 'CREATE TABLE `target` (\\n  `targetId` int(11) NOT NULL  `raceId` int(11) NOT NULL,\\n  `driverId` int(11) NOT NULL,\\n  `win` int(11) NOT NULL,\\n  PRIMARY KEY (`targetId`) USING BTREE,\\n  KEY `raceId` (`raceId`),\\n  KEY `driverId` (`driverId`),\\n  CONSTRAINT `target_ibfk_1` FOREIGN KEY (`raceId`) REFERENCES `races` (`raceId`),\\n  CONSTRAINT `target_ibfk_2` FOREIGN KEY (`driverId`) REFERENCES `drivers` (`driverId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de casos con las columnas de, Identificación del caso, Identificador del paciente, Código del seguro de salud, Fecha de ingreso, Fecha de alta, Duración de la hospitalización, Intervalo de edad del paciente, Género del paciente, Diagnóstico básico, Lista de diagnósticos secundarios, Grupo D R G, PSC",
      "output": "('pripady', 'CREATE TABLE `pripady` (\\n  `Identifikace_pripadu` int(11) NOT NULL  `Identifikator_pacienta` int(11) NOT NULL,\\n  `Kod_zdravotni_pojistovny` int(11) NOT NULL,\\n  `Datum_prijeti` date NOT NULL,\\n  `Datum_propusteni` date NOT NULL,\\n  `Delka_hospitalizace` int(11) NOT NULL,\\n  `Vekovy_Interval_Pacienta` varchar(255) NOT NULL,\\n  `Pohlavi_pacienta` char(1) NOT NULL,\\n  `Zakladni_diagnoza` varchar(255) NOT NULL,\\n  `Seznam_vedlejsich_diagnoz` varchar(255) NOT NULL,\\n  `DRG_skupina` int(11) NOT NULL,\\n  `PSC` char(5) DEFAULT NULL,\\n  PRIMARY KEY (`Identifikace_pripadu`),\\n  KEY `pripady__identifikator_pacienta_indx` (`Identifikator_pacienta`),\\n  KEY `pripady__datum_prijeti_indx` (`Datum_prijeti`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de actuaciones con las columnas de, Identificación de caso, Fecha de ejecución, Tipo de artículo, Código de artículo, Número, Puntos",
      "output": "('vykony', 'CREATE TABLE `vykony` (\\n  `Identifikace_pripadu` int(11) NOT NULL  `Datum_provedeni_vykonu` date NOT NULL,\\n  `Typ_polozky` int(11) NOT NULL,\\n  `Kod_polozky` int(11) NOT NULL,\\n  `Pocet` int(11) NOT NULL,\\n  `Body` int(11) NOT NULL,\\n  PRIMARY KEY (`Identifikace_pripadu`,`Datum_provedeni_vykonu`,`Kod_polozky`),\\n  KEY `vykony_Identifikace_pripadu` (`Identifikace_pripadu`) USING BTREE,\\n  CONSTRAINT `vykony_ibfk_1` FOREIGN KEY (`Identifikace_pripadu`) REFERENCES `pripady` (`Identifikace_pripadu`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de sopas con las columnas de, Identificación del caso, Fecha de ejecución, Tipo de artículo, Código de artículo, Número, Precio",
      "output": "('zup', 'CREATE TABLE `zup` (\\n  `Identifikace_pripadu` int(11) NOT NULL  `Datum_provedeni_vykonu` date NOT NULL,\\n  `Typ_polozky` int(11) DEFAULT NULL,\\n  `Kod_polozky` int(11) NOT NULL,\\n  `Pocet` decimal(10,2) DEFAULT NULL,\\n  `Cena` decimal(10,2) DEFAULT NULL,\\n  PRIMARY KEY (`Identifikace_pripadu`,`Datum_provedeni_vykonu`,`Kod_polozky`),\\n  KEY `zup_Identifikace_pripadu` (`Identifikace_pripadu`) USING BTREE,\\n  CONSTRAINT `zup_ibfk_1` FOREIGN KEY (`Identifikace_pripadu`) REFERENCES `pripady` (`Identifikace_pripadu`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de bordes con las columnas de, yo hice",
      "output": "('edges', 'CREATE TABLE `edges` (\\n  `id1` int(11) NOT NULL  `id2` int(11) NOT NULL,\\n  PRIMARY KEY (`id1`,`id2`),\\n  KEY `edges_field2_fkey` (`id2`),\\n  CONSTRAINT `edges_field1_fkey` FOREIGN KEY (`id1`) REFERENCES `feat` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `edges_field2_fkey` FOREIGN KEY (`id2`) REFERENCES `feat` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Con con las columnas de, id, cumpleaños, cumpleaños, cumpleaños, cumpleaños, cumpleaños, cumpleaños, cumpleaños, cumpleaños, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación , educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación , educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación , educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, e educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, educación, primer nombre, primer nombre, primer nombre, primer nombre, primer nombre, primer nombre, nombre de pila, nombre de pila, nombre de pila, nombre de pila, género, género, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, ciudad natal, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, idiomas, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido , apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, apellido, último nombre, lugar, lugar, lugar, lugar, lugar, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación n, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, ubicación, nombre, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo, trabajo Trabajo trabajo",
      "output": "('feat', 'CREATE TABLE `feat` (\\n  `id` int(11) NOT NULL  `birthday1` int(11) DEFAULT NULL,\\n  `birthday2` int(11) DEFAULT NULL,\\n  `birthday3` int(11) DEFAULT NULL,\\n  `birthday4` int(11) DEFAULT NULL,\\n  `birthday5` int(11) DEFAULT NULL,\\n  `birthday6` int(11) DEFAULT NULL,\\n  `birthday7` int(11) DEFAULT NULL,\\n  `birthday8` int(11) DEFAULT NULL,\\n  `education1` int(11) DEFAULT NULL,\\n  `education2` int(11) DEFAULT NULL,\\n  `education3` int(11) DEFAULT NULL,\\n  `education4` int(11) DEFAULT NULL,\\n  `education5` int(11) DEFAULT NULL,\\n  `education6` int(11) DEFAULT NULL,\\n  `education7` int(11) DEFAULT NULL,\\n  `education8` int(11) DEFAULT NULL,\\n  `education9` int(11) DEFAULT NULL,\\n  `education10` int(11) DEFAULT NULL,\\n  `education11` int(11) DEFAULT NULL,\\n  `education12` int(11) DEFAULT NULL,\\n  `education13` int(11) DEFAULT NULL,\\n  `education14` int(11) DEFAULT NULL,\\n  `education15` int(11) DEFAULT NULL,\\n  `education16` int(11) DEFAULT NULL,\\n  `education17` int(11) DEFAULT NULL,\\n  `education18` int(11) DEFAULT NULL,\\n  `education19` int(11) DEFAULT NULL,\\n  `education20` int(11) DEFAULT NULL,\\n  `education21` int(11) DEFAULT NULL,\\n  `education22` int(11) DEFAULT NULL,\\n  `education23` int(11) DEFAULT NULL,\\n  `education24` int(11) DEFAULT NULL,\\n  `education25` int(11) DEFAULT NULL,\\n  `education26` int(11) DEFAULT NULL,\\n  `education27` int(11) DEFAULT NULL,\\n  `education28` int(11) DEFAULT NULL,\\n  `education29` int(11) DEFAULT NULL,\\n  `education30` int(11) DEFAULT NULL,\\n  `education31` int(11) DEFAULT NULL,\\n  `education32` int(11) DEFAULT NULL,\\n  `education33` int(11) DEFAULT NULL,\\n  `education34` int(11) DEFAULT NULL,\\n  `education35` int(11) DEFAULT NULL,\\n  `education36` int(11) DEFAULT NULL,\\n  `education37` int(11) DEFAULT NULL,\\n  `education38` int(11) DEFAULT NULL,\\n  `education39` int(11) DEFAULT NULL,\\n  `education40` int(11) DEFAULT NULL,\\n  `education41` int(11) DEFAULT NULL,\\n  `education42` int(11) DEFAULT NULL,\\n  `education43` int(11) DEFAULT NULL,\\n  `education44` int(11) DEFAULT NULL,\\n  `education45` int(11) DEFAULT NULL,\\n  `education46` int(11) DEFAULT NULL,\\n  `education47` int(11) DEFAULT NULL,\\n  `education48` int(11) DEFAULT NULL,\\n  `education49` int(11) DEFAULT NULL,\\n  `education50` int(11) DEFAULT NULL,\\n  `education51` int(11) DEFAULT NULL,\\n  `education52` int(11) DEFAULT NULL,\\n  `education53` int(11) DEFAULT NULL,\\n  `education54` int(11) DEFAULT NULL,\\n  `education55` int(11) DEFAULT NULL,\\n  `education56` int(11) DEFAULT NULL,\\n  `education57` int(11) DEFAULT NULL,\\n  `education58` int(11) DEFAULT NULL,\\n  `education59` int(11) DEFAULT NULL,\\n  `education60` int(11) DEFAULT NULL,\\n  `education61` int(11) DEFAULT NULL,\\n  `education62` int(11) DEFAULT NULL,\\n  `education63` int(11) DEFAULT NULL,\\n  `education64` int(11) DEFAULT NULL,\\n  `education65` int(11) DEFAULT NULL,\\n  `education66` int(11) DEFAULT NULL,\\n  `education67` int(11) DEFAULT NULL,\\n  `education68` int(11) DEFAULT NULL,\\n  `education69` int(11) DEFAULT NULL,\\n  `education70` int(11) DEFAULT NULL,\\n  `education71` int(11) DEFAULT NULL,\\n  `education72` int(11) DEFAULT NULL,\\n  `education73` int(11) DEFAULT NULL,\\n  `education74` int(11) DEFAULT NULL,\\n  `education75` int(11) DEFAULT NULL,\\n  `education76` int(11) DEFAULT NULL,\\n  `education77` int(11) DEFAULT NULL,\\n  `education78` int(11) DEFAULT NULL,\\n  `education79` int(11) DEFAULT NULL,\\n  `education80` int(11) DEFAULT NULL,\\n  `education81` int(11) DEFAULT NULL,\\n  `education82` int(11) DEFAULT NULL,\\n  `education83` int(11) DEFAULT NULL,\\n  `education84` int(11) DEFAULT NULL,\\n  `education85` int(11) DEFAULT NULL,\\n  `education86` int(11) DEFAULT NULL,\\n  `education87` int(11) DEFAULT NULL,\\n  `education88` int(11) DEFAULT NULL,\\n  `education89` int(11) DEFAULT NULL,\\n  `education90` int(11) DEFAULT NULL,\\n  `education91` int(11) DEFAULT NULL,\\n  `education92` int(11) DEFAULT NULL,\\n  `education93` int(11) DEFAULT NULL,\\n  `education94` int(11) DEFAULT NULL,\\n  `education95` int(11) DEFAULT NULL,\\n  `education96` int(11) DEFAULT NULL,\\n  `education97` int(11) DEFAULT NULL,\\n  `education98` int(11) DEFAULT NULL,\\n  `education99` int(11) DEFAULT NULL,\\n  `first_name1` int(11) DEFAULT NULL,\\n  `first_name2` int(11) DEFAULT NULL,\\n  `first_name3` int(11) DEFAULT NULL,\\n  `first_name4` int(11) DEFAULT NULL,\\n  `first_name5` int(11) DEFAULT NULL,\\n  `first_name6` int(11) DEFAULT NULL,\\n  `first_name7` int(11) DEFAULT NULL,\\n  `first_name8` int(11) DEFAULT NULL,\\n  `first_name9` int(11) DEFAULT NULL,\\n  `first_name10` int(11) DEFAULT NULL,\\n  `gender1` int(11) DEFAULT NULL,\\n  `gender2` int(11) DEFAULT NULL,\\n  `hometown1` int(11) DEFAULT NULL,\\n  `hometown2` int(11) DEFAULT NULL,\\n  `hometown3` int(11) DEFAULT NULL,\\n  `hometown4` int(11) DEFAULT NULL,\\n  `hometown5` int(11) DEFAULT NULL,\\n  `hometown6` int(11) DEFAULT NULL,\\n  `hometown7` int(11) DEFAULT NULL,\\n  `hometown8` int(11) DEFAULT NULL,\\n  `hometown9` int(11) DEFAULT NULL,\\n  `hometown10` int(11) DEFAULT NULL,\\n  `hometown11` int(11) DEFAULT NULL,\\n  `languages1` int(11) DEFAULT NULL,\\n  `languages2` int(11) DEFAULT NULL,\\n  `languages3` int(11) DEFAULT NULL,\\n  `languages4` int(11) DEFAULT NULL,\\n  `languages5` int(11) DEFAULT NULL,\\n  `languages6` int(11) DEFAULT NULL,\\n  `languages7` int(11) DEFAULT NULL,\\n  `languages8` int(11) DEFAULT NULL,\\n  `languages9` int(11) DEFAULT NULL,\\n  `languages10` int(11) DEFAULT NULL,\\n  `languages11` int(11) DEFAULT NULL,\\n  `languages12` int(11) DEFAULT NULL,\\n  `last_name1` int(11) DEFAULT NULL,\\n  `last_name2` int(11) DEFAULT NULL,\\n  `last_name3` int(11) DEFAULT NULL,\\n  `last_name4` int(11) DEFAULT NULL,\\n  `last_name5` int(11) DEFAULT NULL,\\n  `last_name6` int(11) DEFAULT NULL,\\n  `last_name7` int(11) DEFAULT NULL,\\n  `last_name8` int(11) DEFAULT NULL,\\n  `last_name9` int(11) DEFAULT NULL,\\n  `last_name10` int(11) DEFAULT NULL,\\n  `last_name11` int(11) DEFAULT NULL,\\n  `last_name12` int(11) DEFAULT NULL,\\n  `last_name13` int(11) DEFAULT NULL,\\n  `last_name14` int(11) DEFAULT NULL,\\n  `last_name15` int(11) DEFAULT NULL,\\n  `last_name16` int(11) DEFAULT NULL,\\n  `last_name17` int(11) DEFAULT NULL,\\n  `last_name18` int(11) DEFAULT NULL,\\n  `last_name19` int(11) DEFAULT NULL,\\n  `last_name20` int(11) DEFAULT NULL,\\n  `last_name21` int(11) DEFAULT NULL,\\n  `last_name22` int(11) DEFAULT NULL,\\n  `last_name23` int(11) DEFAULT NULL,\\n  `last_name24` int(11) DEFAULT NULL,\\n  `last_name25` int(11) DEFAULT NULL,\\n  `last_name26` int(11) DEFAULT NULL,\\n  `last_name27` int(11) DEFAULT NULL,\\n  `last_name28` int(11) DEFAULT NULL,\\n  `last_name29` int(11) DEFAULT NULL,\\n  `last_name30` int(11) DEFAULT NULL,\\n  `locale1` int(11) DEFAULT NULL,\\n  `locale2` int(11) DEFAULT NULL,\\n  `locale3` int(11) DEFAULT NULL,\\n  `locale4` int(11) DEFAULT NULL,\\n  `locale5` int(11) DEFAULT NULL,\\n  `location1` int(11) DEFAULT NULL,\\n  `location2` int(11) DEFAULT NULL,\\n  `location3` int(11) DEFAULT NULL,\\n  `location4` int(11) DEFAULT NULL,\\n  `location5` int(11) DEFAULT NULL,\\n  `location6` int(11) DEFAULT NULL,\\n  `location7` int(11) DEFAULT NULL,\\n  `location8` int(11) DEFAULT NULL,\\n  `location9` int(11) DEFAULT NULL,\\n  `location10` int(11) DEFAULT NULL,\\n  `location11` int(11) DEFAULT NULL,\\n  `location12` int(11) DEFAULT NULL,\\n  `location13` int(11) DEFAULT NULL,\\n  `location14` int(11) DEFAULT NULL,\\n  `location15` int(11) DEFAULT NULL,\\n  `location16` int(11) DEFAULT NULL,\\n  `name1` int(11) DEFAULT NULL,\\n  `work1` int(11) DEFAULT NULL,\\n  `work2` int(11) DEFAULT NULL,\\n  `work3` int(11) DEFAULT NULL,\\n  `work4` int(11) DEFAULT NULL,\\n  `work5` int(11) DEFAULT NULL,\\n  `work6` int(11) DEFAULT NULL,\\n  `work7` int(11) DEFAULT NULL,\\n  `work8` int(11) DEFAULT NULL,\\n  `work9` int(11) DEFAULT NULL,\\n  `work10` int(11) DEFAULT NULL,\\n  `work11` int(11) DEFAULT NULL,\\n  `work12` int(11) DEFAULT NULL,\\n  `work13` int(11) DEFAULT NULL,\\n  `work14` int(11) DEFAULT NULL,\\n  `work15` int(11) DEFAULT NULL,\\n  `work16` int(11) DEFAULT NULL,\\n  `work17` int(11) DEFAULT NULL,\\n  `work18` int(11) DEFAULT NULL,\\n  `work19` int(11) DEFAULT NULL,\\n  `work20` int(11) DEFAULT NULL,\\n  `work21` int(11) DEFAULT NULL,\\n  `work22` int(11) DEFAULT NULL,\\n  `work23` int(11) DEFAULT NULL,\\n  `work24` int(11) DEFAULT NULL,\\n  `work25` int(11) DEFAULT NULL,\\n  `work26` int(11) DEFAULT NULL,\\n  `work27` int(11) DEFAULT NULL,\\n  `work28` int(11) DEFAULT NULL,\\n  `work29` int(11) DEFAULT NULL,\\n  `work30` int(11) DEFAULT NULL,\\n  `work31` int(11) DEFAULT NULL,\\n  `work32` int(11) DEFAULT NULL,\\n  `work33` int(11) DEFAULT NULL,\\n  `work34` int(11) DEFAULT NULL,\\n  `work35` int(11) DEFAULT NULL,\\n  `work36` int(11) DEFAULT NULL,\\n  `work37` int(11) DEFAULT NULL,\\n  `work38` int(11) DEFAULT NULL,\\n  `work39` int(11) DEFAULT NULL,\\n  `work40` int(11) DEFAULT NULL,\\n  `work41` int(11) DEFAULT NULL,\\n  `work42` int(11) DEFAULT NULL,\\n  `work43` int(11) DEFAULT NULL,\\n  `work44` int(11) DEFAULT NULL,\\n  `work45` int(11) DEFAULT NULL,\\n  `work46` int(11) DEFAULT NULL,\\n  `work47` int(11) DEFAULT NULL,\\n  `work48` int(11) DEFAULT NULL,\\n  `work49` int(11) DEFAULT NULL,\\n  `work50` int(11) DEFAULT NULL,\\n  `work51` int(11) DEFAULT NULL,\\n  `work52` int(11) DEFAULT NULL,\\n  `work53` int(11) DEFAULT NULL,\\n  `work54` int(11) DEFAULT NULL,\\n  `work55` int(11) DEFAULT NULL,\\n  `work56` int(11) DEFAULT NULL,\\n  `work57` int(11) DEFAULT NULL,\\n  `work58` int(11) DEFAULT NULL,\\n  `work59` int(11) DEFAULT NULL,\\n  `work60` int(11) DEFAULT NULL,\\n  `work61` int(11) DEFAULT NULL,\\n  `work62` int(11) DEFAULT NULL,\\n  `work63` int(11) DEFAULT NULL,\\n  `work64` int(11) DEFAULT NULL,\\n  `work65` int(11) DEFAULT NULL,\\n  `work66` int(11) DEFAULT NULL,\\n  `work67` int(11) DEFAULT NULL,\\n  `work68` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `feat_field1_key` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cuentas con las columnas de, id, id de distrito, frecuencia, fecha",
      "output": "('accounts', 'CREATE TABLE `accounts` (\\n  `id` int(11) NOT NULL  `district_id` int(11) DEFAULT NULL,\\n  `frequency` char(30) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `id` (`id`),\\n  KEY `district_id` (`district_id`),\\n  CONSTRAINT `accounts_ibfk_1` FOREIGN KEY (`district_id`) REFERENCES `districts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de tarjetas con las columnas de, id, disp id, tipo, emitido",
      "output": "('cards', 'CREATE TABLE `cards` (\\n  `id` int(11) NOT NULL  `disp_id` int(11) DEFAULT NULL,\\n  `type` char(20) DEFAULT NULL,\\n  `issued` date DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `disp_id` (`disp_id`),\\n  CONSTRAINT `cards_ibfk_1` FOREIGN KEY (`disp_id`) REFERENCES `disps` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de clientela con las columnas de, es, número de nacimiento, distrito es, ID de clave",
      "output": "('clients', 'CREATE TABLE `clients` (\\n  `id` int(11) NOT NULL  `birth_number` char(10) DEFAULT NULL,\\n  `district_id` int(11) DEFAULT NULL,\\n  `tkey_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `district_id` (`district_id`),\\n  CONSTRAINT `clients_ibfk_1` FOREIGN KEY (`district_id`) REFERENCES `districts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de disipar con las columnas de, id, id de cliente, id de cuenta, tipo",
      "output": "('disps', 'CREATE TABLE `disps` (\\n  `id` int(11) NOT NULL  `client_id` int(11) DEFAULT NULL,\\n  `account_id` int(11) DEFAULT NULL,\\n  `type` char(20) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `id` (`id`),\\n  KEY `client_id` (`client_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `disps_ibfk_1` FOREIGN KEY (`client_id`) REFERENCES `clients` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `disps_ibfk_2` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de distritos con las columnas deA, A, A, A, A, A, A, A, A, A, A, A, A",
      "output": "('districts', 'CREATE TABLE `districts` (\\n  `id` int(11) NOT NULL  `A2` char(30) DEFAULT NULL,\\n  `A3` char(30) DEFAULT NULL,\\n  `A4` int(11) DEFAULT NULL,\\n  `A5` int(11) DEFAULT NULL,\\n  `A6` int(11) DEFAULT NULL,\\n  `A7` int(11) DEFAULT NULL,\\n  `A8` int(11) DEFAULT NULL,\\n  `A9` int(11) DEFAULT NULL,\\n  `A10` decimal(10,0) DEFAULT NULL,\\n  `A11` int(11) DEFAULT NULL,\\n  `A12` decimal(10,0) DEFAULT NULL,\\n  `A13` decimal(10,0) DEFAULT NULL,\\n  `A14` int(11) DEFAULT NULL,\\n  `A15` int(11) DEFAULT NULL,\\n  `A16` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `id` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de prestamos con las columnas de, id, id de cuenta, fecha, cantidad, duración, pagos, estado",
      "output": "('loans', 'CREATE TABLE `loans` (\\n  `id` int(11) NOT NULL  `account_id` int(11) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `amount` decimal(10,0) DEFAULT NULL,\\n  `duration` int(11) DEFAULT NULL,\\n  `payments` decimal(10,0) DEFAULT NULL,\\n  `status` char(10) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `loans_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de pedidos con las columnas de, id, id de cuenta, banco a, cuenta a, cantidad, símbolo k",
      "output": "('orders', 'CREATE TABLE `orders` (\\n  `id` int(11) NOT NULL  `account_id` int(11) DEFAULT NULL,\\n  `bank_to` char(20) DEFAULT NULL,\\n  `account_to` char(20) DEFAULT NULL,\\n  `amount` decimal(10,0) DEFAULT NULL,\\n  `k_symbol` char(20) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `orders_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de llaves con las columnas de, id, buen cliente",
      "output": "('tkeys', 'CREATE TABLE `tkeys` (\\n  `id` int(11) NOT NULL  `goodClient` tinyint(1) DEFAULT 0,\\n  PRIMARY KEY (`id`),\\n  KEY `id` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de trans con las columnas de, id, id de cuenta, fecha, tipo, operación, monto, saldo, símbolo k, banco, cuenta",
      "output": "('trans', 'CREATE TABLE `trans` (\\n  `id` int(11) NOT NULL  `account_id` int(11) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `type` char(20) DEFAULT NULL,\\n  `operation` char(20) DEFAULT NULL,\\n  `amount` decimal(10,0) DEFAULT NULL,\\n  `balance` decimal(10,0) DEFAULT NULL,\\n  `k_symbol` char(20) DEFAULT NULL,\\n  `bank` char(20) DEFAULT NULL,\\n  `account` char(20) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `trans_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Cuenta de préstamo con las columnas de, ID de préstamo, ID de cuenta",
      "output": "('Loan_Acc', 'CREATE TABLE `Loan_Acc` (\\n  `loan_id` int(11) NOT NULL  `account_id` int(10) unsigned NOT NULL,\\n  PRIMARY KEY (`loan_id`,`account_id`),\\n  KEY `FK_rel1_1` (`account_id`),\\n  KEY `FK_rel1_2` (`loan_id`),\\n  CONSTRAINT `FK_rel1_1` FOREIGN KEY (`account_id`) REFERENCES `acc` (`account_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_rel1_2` FOREIGN KEY (`loan_id`) REFERENCES `loan` (`loan_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Orden de préstamo con las columnas de, ID de pedido, ID de préstamo",
      "output": "('Loan_Order', 'CREATE TABLE `Loan_Order` (\\n  `order_id` int(10) unsigned NOT NULL  `loan_id` int(11) NOT NULL,\\n  PRIMARY KEY (`order_id`,`loan_id`),\\n  KEY `FK_rel2_2` (`order_id`),\\n  KEY `FK_rel2_1` (`loan_id`),\\n  CONSTRAINT `FK_rel2_1` FOREIGN KEY (`order_id`) REFERENCES `order` (`order_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_rel2_2` FOREIGN KEY (`loan_id`) REFERENCES `loan` (`loan_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Préstamo Trans con las columnas de, id de transacción, id de préstamo",
      "output": "('Loan_Trans', 'CREATE TABLE `Loan_Trans` (\\n  `transaction_id` int(10) unsigned NOT NULL DEFAULT 0  `loan_id` int(11) NOT NULL,\\n  PRIMARY KEY (`transaction_id`,`loan_id`),\\n  KEY `FK_rel5_1` (`transaction_id`),\\n  KEY `FK_rel5_2` (`loan_id`),\\n  CONSTRAINT `FK_rel5_1` FOREIGN KEY (`transaction_id`) REFERENCES `trans` (`transaction_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_rel5_2` FOREIGN KEY (`loan_id`) REFERENCES `loan` (`loan_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de cuenta con las columnas de, ID de cuenta, frecuencia",
      "output": "('acc', \"CREATE TABLE `acc` (\\n  `account_id` int(10) unsigned NOT NULL  `frequency` varchar(255) DEFAULT NULL COMMENT 'Type: Ordinal"
    },
    {
      "input": "Una tabla de préstamo con las columnas de, identificación del préstamo, monto, duración, pagos, estado",
      "output": "('loan', \"CREATE TABLE `loan` (\\n  `loan_id` int(10) NOT NULL  `amount` int(10) DEFAULT NULL COMMENT 'Type: Numeric"
    },
    {
      "input": "Una tabla de ordenar con las columnas de, ID de pedido, banco a, cantidad, símbolo k",
      "output": "('order', \"CREATE TABLE `order` (\\n  `order_id` int(10) unsigned NOT NULL  `bank_to` varchar(255) DEFAULT NULL COMMENT 'Type: Categorical"
    },
    {
      "input": "Una tabla de trans con las columnas de, id de transacción, tipo, operación, monto, saldo",
      "output": "('trans', 'CREATE TABLE `trans` (\\n  `transaction_id` int(10) unsigned NOT NULL AUTO_INCREMENT  `type` varchar(45) NOT NULL,\\n  `operation` varchar(45) NOT NULL,\\n  `amount2` int(10) unsigned NOT NULL,\\n  `balance` int(10) unsigned NOT NULL,\\n  PRIMARY KEY (`transaction_id`),\\n  KEY `type_in` (`type`) USING BTREE,\\n  KEY `operation_in` (`operation`) USING BTREE,\\n  KEY `amount2_in` (`amount2`) USING BTREE,\\n  KEY `balance_in` (`balance`) USING BTREE\\n) ENGINE=InnoDB AUTO_INCREMENT=3682968 DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de ir k con las columnas de, Código de minorista, Número de producto, Fecha, Cantidad",
      "output": "('go_1k', 'CREATE TABLE `go_1k` (\\n  `Retailer code` int(11) NOT NULL  `Product number` int(11) NOT NULL,\\n  `Date` date NOT NULL,\\n  `Quantity` int(11) NOT NULL,\\n  PRIMARY KEY (`Retailer code`,`Product number`,`Date`) USING BTREE,\\n  KEY `Product number` (`Product number`) USING BTREE,\\n  KEY `Retailer code` (`Retailer code`,`Product number`) USING BTREE,\\n  CONSTRAINT `go_1k_ibfk_1` FOREIGN KEY (`Retailer code`) REFERENCES `go_retailers` (`Retailer code`),\\n  CONSTRAINT `go_1k_ibfk_2` FOREIGN KEY (`Product number`) REFERENCES `go_products` (`Product number`),\\n  CONSTRAINT `go_1k_ibfk_3` FOREIGN KEY (`Retailer code`, `Product number`) REFERENCES `go_daily_sales` (`Retailer code`, `Product number`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de ir a las ventas diarias con las columnas de, Código de minorista, Número de producto, Código de método de pedido, Fecha, Cantidad, Precio unitario, Precio de venta unitario",
      "output": "('go_daily_sales', 'CREATE TABLE `go_daily_sales` (\\n  `Retailer code` int(11) NOT NULL  `Product number` int(11) NOT NULL,\\n  `Order method code` int(11) NOT NULL,\\n  `Date` date NOT NULL,\\n  `Quantity` int(11) NOT NULL,\\n  `Unit price` decimal(10,2) NOT NULL,\\n  `Unit sale price` decimal(10,2) NOT NULL,\\n  KEY `Order method code` (`Order method code`) USING BTREE,\\n  KEY `Retailer code` (`Retailer code`,`Product number`) USING BTREE,\\n  KEY `Product number` (`Product number`) USING BTREE,\\n  CONSTRAINT `go_daily_sales_ibfk_3` FOREIGN KEY (`Order method code`) REFERENCES `go_methods` (`Order method code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de ir métodos con las columnas de, Código de método de pedido, Tipo de método de pedido",
      "output": "('go_methods', 'CREATE TABLE `go_methods` (\\n  `Order method code` int(11) NOT NULL  `Order method type` varchar(255) NOT NULL,\\n  PRIMARY KEY (`Order method code`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de ir productos con las columnas de, número de producto, línea de producto, tipo de producto, producto, marca del producto, color del producto, costo unitario, precio unitario",
      "output": "('go_products', 'CREATE TABLE `go_products` (\\n  `Product number` int(11) NOT NULL  `Product line` varchar(255) NOT NULL,\\n  `Product type` varchar(255) NOT NULL,\\n  `Product` varchar(255) NOT NULL,\\n  `Product brand` varchar(255) NOT NULL,\\n  `Product color` varchar(255) NOT NULL,\\n  `Unit cost` decimal(10,2) NOT NULL,\\n  `Unit price` decimal(10,2) NOT NULL,\\n  PRIMARY KEY (`Product number`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de ir a los minoristas con las columnas de, Código de minorista, Nombre de minorista, Tipo, País",
      "output": "('go_retailers', 'CREATE TABLE `go_retailers` (\\n  `Retailer code` int(11) NOT NULL  `Retailer name` varchar(255) NOT NULL,\\n  `Type` varchar(255) NOT NULL,\\n  `Country` varchar(255) NOT NULL,\\n  PRIMARY KEY (`Retailer code`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de premios con las columnas de, título del premio, fecha de vigencia del premio, fecha de vencimiento del premio, monto del premio, instrumento del premio, código de la organización, oficial del programa, narración abstracta, fecha mínima de la carta amd, fecha máxima de la carta amd, cantidad arra, id del premio",
      "output": "('awards', 'CREATE TABLE `awards` (\\n  `award_title` varchar(300) DEFAULT NULL  `award_effective_date` varchar(20) DEFAULT NULL,\\n  `award_expiration_date` varchar(20) DEFAULT NULL,\\n  `award_amount` int(11) DEFAULT NULL,\\n  `award_instrument` varchar(50) DEFAULT NULL,\\n  `organisation_code` int(11) DEFAULT NULL,\\n  `program_officer` varchar(50) DEFAULT NULL,\\n  `abstract_narration` varchar(3000) DEFAULT NULL,\\n  `min_amd_letter_date` varchar(20) DEFAULT NULL,\\n  `max_amd_letter_date` varchar(20) DEFAULT NULL,\\n  `arra_amount` int(11) DEFAULT NULL,\\n  `award_id` int(11) NOT NULL,\\n  PRIMARY KEY (`award_id`) USING BTREE,\\n  KEY `organisation_code` (`organisation_code`) USING BTREE,\\n  CONSTRAINT `awards_ibfk_1` FOREIGN KEY (`organisation_code`) REFERENCES `organization` (`code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de info de foa con las columnas de, nombre clave",
      "output": "('foa_info', 'CREATE TABLE `foa_info` (\\n  `code` int(11) NOT NULL  `name` varchar(30) DEFAULT NULL,\\n  PRIMARY KEY (`code`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premios foa info con las columnas de, ID de premio, código",
      "output": "('foa_info_awards', 'CREATE TABLE `foa_info_awards` (\\n  `award_id` int(11) NOT NULL  `code` int(11) NOT NULL,\\n  PRIMARY KEY (`award_id`,`code`) USING BTREE,\\n  KEY `code` (`code`) USING BTREE,\\n  CONSTRAINT `foa_info_awards_ibfk_1` FOREIGN KEY (`code`) REFERENCES `foa_info` (`code`),\\n  CONSTRAINT `foa_info_awards_ibfk_2` FOREIGN KEY (`award_id`) REFERENCES `awards` (`award_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de institución con las columnas de, nombre, nombre de la ciudad, código postal, contacto, dirección, nombre del país, nombre del estado, código del estado",
      "output": "('institution', 'CREATE TABLE `institution` (\\n  `name` varchar(100) NOT NULL  `city_name` varchar(50) DEFAULT NULL,\\n  `zipcode` varchar(50) NOT NULL,\\n  `contact` int(11) DEFAULT NULL,\\n  `address` varchar(100) DEFAULT NULL,\\n  `country_name` varchar(30) DEFAULT NULL,\\n  `state_name` varchar(30) DEFAULT NULL,\\n  `state_code` varchar(10) DEFAULT NULL,\\n  PRIMARY KEY (`name`,`zipcode`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premios de la institución con las columnas de, ID de premio, nombre, código postal",
      "output": "('institution_awards', 'CREATE TABLE `institution_awards` (\\n  `award_id` int(11) NOT NULL  `name` varchar(100) NOT NULL,\\n  `zipcode` varchar(50) NOT NULL,\\n  PRIMARY KEY (`award_id`,`name`,`zipcode`) USING BTREE,\\n  KEY `name` (`name`,`zipcode`) USING BTREE,\\n  CONSTRAINT `institution_awards_ibfk_1` FOREIGN KEY (`award_id`) REFERENCES `awards` (`award_id`),\\n  CONSTRAINT `institution_awards_ibfk_2` FOREIGN KEY (`name`, `zipcode`) REFERENCES `institution` (`name`, `zipcode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de investigador con las columnas de, ID de correo electrónico, nombre, apellido",
      "output": "('investigator', 'CREATE TABLE `investigator` (\\n  `email_id` varchar(50) NOT NULL  `first_name` varchar(30) DEFAULT NULL,\\n  `last_name` varchar(30) DEFAULT NULL,\\n  PRIMARY KEY (`email_id`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premios de investigador con las columnas de, ID de premio, ID de correo electrónico, fecha de inicio, fecha de finalización, código de función",
      "output": "('investigator_awards', 'CREATE TABLE `investigator_awards` (\\n  `award_id` int(11) NOT NULL  `email_id` varchar(50) NOT NULL,\\n  `start_date` varchar(20) DEFAULT NULL,\\n  `end_date` varchar(20) DEFAULT NULL,\\n  `role_code` varchar(30) DEFAULT NULL,\\n  PRIMARY KEY (`award_id`,`email_id`) USING BTREE,\\n  KEY `email_id` (`email_id`) USING BTREE,\\n  CONSTRAINT `investigator_awards_ibfk_1` FOREIGN KEY (`award_id`) REFERENCES `awards` (`award_id`),\\n  CONSTRAINT `investigator_awards_ibfk_2` FOREIGN KEY (`email_id`) REFERENCES `investigator` (`email_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de organización con las columnas de, código, división, dirección",
      "output": "('organization', 'CREATE TABLE `organization` (\\n  `code` int(11) NOT NULL  `division` varchar(100) DEFAULT NULL,\\n  `directorate` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`code`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de elemento del programa con las columnas de, código, texto",
      "output": "('program_element', 'CREATE TABLE `program_element` (\\n  `code` varchar(20) NOT NULL  `text` varchar(150) DEFAULT NULL,\\n  PRIMARY KEY (`code`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premios de elementos del programa con las columnas de, ID de premio, código",
      "output": "('program_element_awards', 'CREATE TABLE `program_element_awards` (\\n  `award_id` int(11) NOT NULL  `code` varchar(20) NOT NULL,\\n  PRIMARY KEY (`award_id`,`code`) USING BTREE,\\n  KEY `code` (`code`) USING BTREE,\\n  CONSTRAINT `program_element_awards_ibfk_1` FOREIGN KEY (`code`) REFERENCES `program_element` (`code`),\\n  CONSTRAINT `program_element_awards_ibfk_2` FOREIGN KEY (`award_id`) REFERENCES `awards` (`award_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de referencia del programa con las columnas de, código, texto",
      "output": "('program_reference', 'CREATE TABLE `program_reference` (\\n  `code` varchar(20) NOT NULL  `text` varchar(150) DEFAULT NULL,\\n  PRIMARY KEY (`code`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premios de referencia del programa con las columnas de, ID de premio, código",
      "output": "('program_reference_awards', 'CREATE TABLE `program_reference_awards` (\\n  `award_id` int(11) NOT NULL  `code` varchar(20) NOT NULL,\\n  PRIMARY KEY (`award_id`,`code`) USING BTREE,\\n  KEY `code` (`code`) USING BTREE,\\n  CONSTRAINT `program_reference_awards_ibfk_1` FOREIGN KEY (`code`) REFERENCES `program_reference` (`code`),\\n  CONSTRAINT `program_reference_awards_ibfk_2` FOREIGN KEY (`award_id`) REFERENCES `awards` (`award_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de biografía con las columnas de, fibros, actividad, b id",
      "output": "('Bio', 'CREATE TABLE `Bio` (\\n  `fibros` varchar(45) NOT NULL  `activity` varchar(45) NOT NULL,\\n  `b_id` int(10) unsigned NOT NULL AUTO_INCREMENT,\\n  PRIMARY KEY (`b_id`),\\n  KEY `Hepatitis_fibros` (`fibros`),\\n  KEY `Hepatitis_activity` (`activity`)\\n) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=latin1 AVG_ROW_LENGTH=512')"
    },
    {
      "input": "Una tabla de enviar con las columnas de, m id, sexo, edad, Tipo",
      "output": "('dispat', \"CREATE TABLE `dispat` (\\n  `m_id` int(10) unsigned NOT NULL DEFAULT 0  `sex` varchar(45) DEFAULT NULL COMMENT 'Type: Categorical"
    },
    {
      "input": "Una tabla de indis con las columnas de, tengo, gpt, alb, tbil, dbil, che, ttt, ztt, tcho, tp, en id",
      "output": "('indis', 'CREATE TABLE `indis` (\\n  `got` varchar(10) DEFAULT NULL  `gpt` varchar(10) DEFAULT NULL,\\n  `alb` varchar(45) DEFAULT NULL,\\n  `tbil` varchar(45) DEFAULT NULL,\\n  `dbil` varchar(45) DEFAULT NULL,\\n  `che` varchar(45) DEFAULT NULL,\\n  `ttt` varchar(45) DEFAULT NULL,\\n  `ztt` varchar(45) DEFAULT NULL,\\n  `tcho` varchar(45) DEFAULT NULL,\\n  `tp` varchar(45) DEFAULT NULL,\\n  `in_id` int(10) unsigned NOT NULL AUTO_INCREMENT,\\n  PRIMARY KEY (`in_id`),\\n  KEY `indis_got` (`got`),\\n  KEY `indis_gpt` (`gpt`),\\n  KEY `indis_alb` (`alb`),\\n  KEY `indis_tbil` (`tbil`),\\n  KEY `indis_dbil` (`dbil`),\\n  KEY `indis_che` (`che`),\\n  KEY `indis_ttt` (`ttt`),\\n  KEY `indis_ztt` (`ztt`),\\n  KEY `indis_tcho` (`tcho`),\\n  KEY `indis_tp` (`tp`)\\n) ENGINE=InnoDB AUTO_INCREMENT=5692 DEFAULT CHARSET=latin1 AVG_ROW_LENGTH=50')"
    },
    {
      "input": "Una tabla de inf con las columnas de, dur, una identificación",
      "output": "('inf', 'CREATE TABLE `inf` (\\n  `dur` varchar(45) DEFAULT NULL  `a_id` int(10) unsigned NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`a_id`),\\n  KEY `inf_dur` (`dur`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 AVG_ROW_LENGTH=83')"
    },
    {
      "input": "Una tabla de real con las columnas de, identificación de oferta, identificación media",
      "output": "('rel11', 'CREATE TABLE `rel11` (\\n  `b_id` int(10) unsigned NOT NULL DEFAULT 0  `m_id` int(10) unsigned NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`b_id`,`m_id`),\\n  KEY `FK_rel11_2` (`m_id`),\\n  CONSTRAINT `FK_rel11_1` FOREIGN KEY (`b_id`) REFERENCES `Bio` (`b_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_rel11_2` FOREIGN KEY (`m_id`) REFERENCES `dispat` (`m_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 AVG_ROW_LENGTH=63')"
    },
    {
      "input": "Una tabla de real con las columnas de, en identificación, identificación media",
      "output": "('rel12', 'CREATE TABLE `rel12` (\\n  `in_id` int(10) unsigned NOT NULL DEFAULT 0  `m_id` int(10) unsigned NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`in_id`,`m_id`),\\n  KEY `FK_rel12_1` (`m_id`),\\n  CONSTRAINT `FK_rel12_1` FOREIGN KEY (`m_id`) REFERENCES `dispat` (`m_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_rel12_2` FOREIGN KEY (`in_id`) REFERENCES `indis` (`in_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 AVG_ROW_LENGTH=42')"
    },
    {
      "input": "Una tabla de real con las columnas de, identificación de ayuda, identificación media",
      "output": "('rel13', 'CREATE TABLE `rel13` (\\n  `a_id` int(10) unsigned NOT NULL DEFAULT 0  `m_id` int(10) unsigned NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`a_id`,`m_id`),\\n  KEY `FK_rel13_1` (`m_id`),\\n  CONSTRAINT `FK_rel13_1` FOREIGN KEY (`m_id`) REFERENCES `dispat` (`m_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_rel13_2` FOREIGN KEY (`a_id`) REFERENCES `inf` (`a_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 AVG_ROW_LENGTH=83')"
    },
    {
      "input": "Una tabla de Entrenadores de premios con las columnas de, ID de entrenador, premio, año, ID de LG, nota",
      "output": "('AwardsCoaches', 'CREATE TABLE `AwardsCoaches` (\\n  `coachID` varchar(255) DEFAULT NULL  `award` varchar(255) DEFAULT NULL,\\n  `year` int(11) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  KEY `AwardsCoaches_coachID` (`coachID`) USING BTREE,\\n  CONSTRAINT `AwardsCoaches_ibfk_1` FOREIGN KEY (`coachID`) REFERENCES `Coaches` (`coachID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premios varios con las columnas de, nombre, ID, premio, año, lg Id, nota",
      "output": "('AwardsMisc', 'CREATE TABLE `AwardsMisc` (\\n  `name` varchar(255) NOT NULL  `ID` varchar(255) DEFAULT NULL,\\n  `award` varchar(255) DEFAULT NULL,\\n  `year` int(11) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`name`),\\n  KEY `ID` (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Premios Jugadores con las columnas de, ID de jugador, premio, año, ID de LG, nota, pos",
      "output": "('AwardsPlayers', 'CREATE TABLE `AwardsPlayers` (\\n  `playerID` varchar(255) NOT NULL  `award` varchar(255) NOT NULL,\\n  `year` int(11) NOT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  `pos` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`award`,`year`),\\n  CONSTRAINT `AwardsPlayers_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Entrenadores con las columnas de, ID de entrenador, año, ID de tm, ID de LG, período, notas, g, w, l, t, publicación, publicación, publicación, publicación",
      "output": "('Coaches', 'CREATE TABLE `Coaches` (\\n  `coachID` varchar(255) NOT NULL  `year` int(11) NOT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `stint` int(11) NOT NULL,\\n  `notes` varchar(255) DEFAULT NULL,\\n  `g` int(11) DEFAULT NULL,\\n  `w` int(11) DEFAULT NULL,\\n  `l` int(11) DEFAULT NULL,\\n  `t` int(11) DEFAULT NULL,\\n  `postg` varchar(255) DEFAULT NULL,\\n  `postw` varchar(255) DEFAULT NULL,\\n  `postl` varchar(255) DEFAULT NULL,\\n  `postt` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`coachID`,`year`,`tmID`,`stint`),\\n  KEY `Coaches_coachID` (`coachID`) USING BTREE,\\n  KEY `Coaches_year_tmID` (`year`,`tmID`) USING BTREE,\\n  CONSTRAINT `Coaches_ibfk_1` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Bloqueos combinados con las columnas de, año, mes, fecha, tm Id, opp Id, R/P, Idgoalie, Idgoalie",
      "output": "('CombinedShutouts', 'CREATE TABLE `CombinedShutouts` (\\n  `year` int(11) DEFAULT NULL  `month` int(11) DEFAULT NULL,\\n  `date` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `oppID` varchar(255) DEFAULT NULL,\\n  `R/P` varchar(255) DEFAULT NULL,\\n  `IDgoalie1` varchar(255) DEFAULT NULL,\\n  `IDgoalie2` varchar(255) DEFAULT NULL,\\n  KEY `CombinedShutouts_IDgoalie1` (`IDgoalie1`) USING BTREE,\\n  KEY `CombinedShutouts_IDgoalie2` (`IDgoalie2`) USING BTREE,\\n  CONSTRAINT `CombinedShutouts_ibfk_1` FOREIGN KEY (`IDgoalie1`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `CombinedShutouts_ibfk_2` FOREIGN KEY (`IDgoalie2`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de porteros con las columnas de, Id. de jugador, año, período, Id. de tm, Id. de lg, GP, Min, W, L, T/OL, ENG, SHO, GA, SA, Post G P, Post Min, Post W, Post L, Post T, Post E N G, Post S H O, Post G A, Post S A",
      "output": "('Goalies', 'CREATE TABLE `Goalies` (\\n  `playerID` varchar(255) NOT NULL  `year` int(11) NOT NULL,\\n  `stint` int(11) NOT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `GP` varchar(255) DEFAULT NULL,\\n  `Min` varchar(255) DEFAULT NULL,\\n  `W` varchar(255) DEFAULT NULL,\\n  `L` varchar(255) DEFAULT NULL,\\n  `T/OL` varchar(255) DEFAULT NULL,\\n  `ENG` varchar(255) DEFAULT NULL,\\n  `SHO` varchar(255) DEFAULT NULL,\\n  `GA` varchar(255) DEFAULT NULL,\\n  `SA` varchar(255) DEFAULT NULL,\\n  `PostGP` varchar(255) DEFAULT NULL,\\n  `PostMin` varchar(255) DEFAULT NULL,\\n  `PostW` varchar(255) DEFAULT NULL,\\n  `PostL` varchar(255) DEFAULT NULL,\\n  `PostT` varchar(255) DEFAULT NULL,\\n  `PostENG` varchar(255) DEFAULT NULL,\\n  `PostSHO` varchar(255) DEFAULT NULL,\\n  `PostGA` varchar(255) DEFAULT NULL,\\n  `PostSA` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`year`,`stint`),\\n  KEY `Goalies_year_tmID` (`year`,`tmID`) USING BTREE,\\n  CONSTRAINT `Goalies_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `Goalies_ibfk_2` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Porteros S C con las columnas de, Id. de jugador, año, Id. de tm, Id. de lg, GP, Min, W, L, T, SHO, GA",
      "output": "('GoaliesSC', 'CREATE TABLE `GoaliesSC` (\\n  `playerID` varchar(255) NOT NULL  `year` int(11) NOT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `Min` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `T` int(11) DEFAULT NULL,\\n  `SHO` int(11) DEFAULT NULL,\\n  `GA` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`year`),\\n  KEY `GoaliesSC_year_tmID` (`year`,`tmID`) USING BTREE,\\n  CONSTRAINT `GoaliesSC_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `GoaliesSC_ibfk_2` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tiroteo de porteros con las columnas de, ID de jugador, año, período, ID de tm, W, L, SA, GA",
      "output": "('GoaliesShootout', 'CREATE TABLE `GoaliesShootout` (\\n  `playerID` varchar(255) DEFAULT NULL  `year` int(11) DEFAULT NULL,\\n  `stint` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `SA` int(11) DEFAULT NULL,\\n  `GA` int(11) DEFAULT NULL,\\n  KEY `GoaliesShootout_playerID` (`playerID`) USING BTREE,\\n  KEY `GoaliesShootout_year_tmID` (`year`,`tmID`) USING BTREE,\\n  CONSTRAINT `GoaliesShootout_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `GoaliesShootout_ibfk_2` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de TRIBUNAL con las columnas de, año, hof Id, nombre, categoría",
      "output": "('HOF', 'CREATE TABLE `HOF` (\\n  `year` int(11) DEFAULT NULL  `hofID` varchar(255) NOT NULL,\\n  `name` varchar(255) DEFAULT NULL,\\n  `category` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`hofID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Maestro con las columnas de, Id. de jugador, Id. de entrenador, Id. de hof, nombre, apellido, nota de nombre, nombre dado, nombre Nick, altura, peso, captura de tiro, Id. de leyendas, Id. de ihdb, Id. de href, primer N H L, último N H L, primer W H A, last W H A, pos, año de nacimiento, lun de nacimiento, día de nacimiento, país de nacimiento, estado de nacimiento, ciudad de nacimiento, año de defunción, lun de defunción, día de defunción, país de defunción, estado de defunción, ciudad de defunción",
      "output": "('Master', 'CREATE TABLE `Master` (\\n  `playerID` varchar(255) DEFAULT NULL  `coachID` varchar(255) DEFAULT NULL,\\n  `hofID` varchar(255) DEFAULT NULL,\\n  `firstName` varchar(255) DEFAULT NULL,\\n  `lastName` varchar(255) NOT NULL,\\n  `nameNote` varchar(255) DEFAULT NULL,\\n  `nameGiven` varchar(255) DEFAULT NULL,\\n  `nameNick` varchar(255) DEFAULT NULL,\\n  `height` varchar(255) DEFAULT NULL,\\n  `weight` varchar(255) DEFAULT NULL,\\n  `shootCatch` varchar(255) DEFAULT NULL,\\n  `legendsID` varchar(255) DEFAULT NULL,\\n  `ihdbID` varchar(255) DEFAULT NULL,\\n  `hrefID` varchar(255) DEFAULT NULL,\\n  `firstNHL` varchar(255) DEFAULT NULL,\\n  `lastNHL` varchar(255) DEFAULT NULL,\\n  `firstWHA` varchar(255) DEFAULT NULL,\\n  `lastWHA` varchar(255) DEFAULT NULL,\\n  `pos` varchar(255) DEFAULT NULL,\\n  `birthYear` varchar(255) DEFAULT NULL,\\n  `birthMon` varchar(255) DEFAULT NULL,\\n  `birthDay` varchar(255) DEFAULT NULL,\\n  `birthCountry` varchar(255) DEFAULT NULL,\\n  `birthState` varchar(255) DEFAULT NULL,\\n  `birthCity` varchar(255) DEFAULT NULL,\\n  `deathYear` varchar(255) DEFAULT NULL,\\n  `deathMon` varchar(255) DEFAULT NULL,\\n  `deathDay` varchar(255) DEFAULT NULL,\\n  `deathCountry` varchar(255) DEFAULT NULL,\\n  `deathState` varchar(255) DEFAULT NULL,\\n  `deathCity` varchar(255) DEFAULT NULL,\\n  KEY `Master_coachID` (`coachID`) USING BTREE,\\n  KEY `Master_hofID` (`hofID`) USING BTREE,\\n  KEY `Master_playerID` (`playerID`) USING BTREE,\\n  CONSTRAINT `Master_ibfk_1` FOREIGN KEY (`coachID`) REFERENCES `Coaches` (`coachID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Puntuación con las columnas de, ID de jugador, año, período, ID de tm, ID de lg, pos, GP, G, A, Pts, PIM, +/, PPG, PPA, SHG, SHA, GWG, GTG, SOG, Post G P, Post G, Post A, Publicar Ptos, Publicar P I M, Publicar+/ , Publicar P P G, Publicar P P A, Publicar S H G, Publicar S H A, Publicar G W G, Publicar S O G",
      "output": "('Scoring', 'CREATE TABLE `Scoring` (\\n  `playerID` varchar(255) DEFAULT NULL  `year` int(11) DEFAULT NULL,\\n  `stint` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `pos` varchar(255) DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `A` int(11) DEFAULT NULL,\\n  `Pts` int(11) DEFAULT NULL,\\n  `PIM` int(11) DEFAULT NULL,\\n  `+/-` varchar(255) DEFAULT NULL,\\n  `PPG` varchar(255) DEFAULT NULL,\\n  `PPA` varchar(255) DEFAULT NULL,\\n  `SHG` varchar(255) DEFAULT NULL,\\n  `SHA` varchar(255) DEFAULT NULL,\\n  `GWG` varchar(255) DEFAULT NULL,\\n  `GTG` varchar(255) DEFAULT NULL,\\n  `SOG` varchar(255) DEFAULT NULL,\\n  `PostGP` varchar(255) DEFAULT NULL,\\n  `PostG` varchar(255) DEFAULT NULL,\\n  `PostA` varchar(255) DEFAULT NULL,\\n  `PostPts` varchar(255) DEFAULT NULL,\\n  `PostPIM` varchar(255) DEFAULT NULL,\\n  `Post+/-` varchar(255) DEFAULT NULL,\\n  `PostPPG` varchar(255) DEFAULT NULL,\\n  `PostPPA` varchar(255) DEFAULT NULL,\\n  `PostSHG` varchar(255) DEFAULT NULL,\\n  `PostSHA` varchar(255) DEFAULT NULL,\\n  `PostGWG` varchar(255) DEFAULT NULL,\\n  `PostSOG` varchar(255) DEFAULT NULL,\\n  KEY `Scoring_playerID` (`playerID`) USING BTREE,\\n  KEY `Scoring_year_tmID` (`year`,`tmID`) USING BTREE,\\n  CONSTRAINT `Scoring_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `Scoring_ibfk_2` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Puntuación S C con las columnas de, Id. de jugador, año, Id. de tm, Id. de lg, pos., GP, G, A, Pts, PIM",
      "output": "('ScoringSC', 'CREATE TABLE `ScoringSC` (\\n  `playerID` varchar(255) DEFAULT NULL  `year` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `lgID` varchar(255) DEFAULT NULL,\\n  `pos` varchar(255) DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `A` int(11) DEFAULT NULL,\\n  `Pts` int(11) DEFAULT NULL,\\n  `PIM` int(11) DEFAULT NULL,\\n  KEY `ScoringSC_playerID` (`playerID`) USING BTREE,\\n  KEY `ScoringSC_year_tmID` (`year`,`tmID`) USING BTREE,\\n  CONSTRAINT `ScoringSC_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ScoringSC_ibfk_2` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tiroteo de puntuación con las columnas de, ID de jugador, año, período, ID de tm, S, G, GDG",
      "output": "('ScoringShootout', 'CREATE TABLE `ScoringShootout` (\\n  `playerID` varchar(255) DEFAULT NULL  `year` int(11) DEFAULT NULL,\\n  `stint` int(11) DEFAULT NULL,\\n  `tmID` varchar(255) DEFAULT NULL,\\n  `S` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `GDG` int(11) DEFAULT NULL,\\n  KEY `ScoringShootout_playerID` (`playerID`) USING BTREE,\\n  KEY `ScoringShootout_year_tmID` (`year`,`tmID`) USING BTREE,\\n  CONSTRAINT `ScoringShootout_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ScoringShootout_ibfk_2` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Puntaje Sup con las columnas de, ID de jugador, año, PPA, SHA",
      "output": "('ScoringSup', 'CREATE TABLE `ScoringSup` (\\n  `playerID` varchar(255) DEFAULT NULL  `year` int(11) DEFAULT NULL,\\n  `PPA` varchar(255) DEFAULT NULL,\\n  `SHA` varchar(255) DEFAULT NULL,\\n  KEY `ScoringSup_playerID` (`playerID`) USING BTREE,\\n  CONSTRAINT `ScoringSup_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `Master` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Publicación de la serie con las columnas de, año, ronda, serie, tm Id Winner, lg Id Winner, tm Id Loser, lg Id Loser, W, L, T, Goals Winner, Goals Loser, nota",
      "output": "('SeriesPost', 'CREATE TABLE `SeriesPost` (\\n  `year` int(11) DEFAULT NULL  `round` varchar(255) DEFAULT NULL,\\n  `series` varchar(255) DEFAULT NULL,\\n  `tmIDWinner` varchar(255) DEFAULT NULL,\\n  `lgIDWinner` varchar(255) DEFAULT NULL,\\n  `tmIDLoser` varchar(255) DEFAULT NULL,\\n  `lgIDLoser` varchar(255) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `T` int(11) DEFAULT NULL,\\n  `GoalsWinner` int(11) DEFAULT NULL,\\n  `GoalsLoser` int(11) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL,\\n  KEY `SeriesPost_year_tmIDWinner` (`year`,`tmIDWinner`) USING BTREE,\\n  KEY `SeriesPost_year_tmIDLoser` (`year`,`tmIDLoser`) USING BTREE,\\n  CONSTRAINT `SeriesPost_ibfk_1` FOREIGN KEY (`year`, `tmIDWinner`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `SeriesPost_ibfk_2` FOREIGN KEY (`year`, `tmIDLoser`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Divisiones de equipo con las columnas de, año, lg Id, tm Id, h W, h L, h T, h O T L, r W, r L, r T, r O T L, Sep W, Sep L, Sep T, Sep O L, Oct W, Oct L , Oct T, Oct O L, Nov W, Nov L, Nov T, Nov O L, Dec W, Dec L, Dec T, Dec O L, Ene W, Jan L, Jan T, Jan O L, Feb W, Feb L, Feb T, Feb O L, Mar Mi, Mar L, Mar T, Mar O L, Abr Mi, Abr L, Abr T, Abr O L",
      "output": "('TeamSplits', 'CREATE TABLE `TeamSplits` (\\n  `year` int(11) NOT NULL  `lgID` varchar(255) DEFAULT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `hW` int(11) DEFAULT NULL,\\n  `hL` int(11) DEFAULT NULL,\\n  `hT` int(11) DEFAULT NULL,\\n  `hOTL` varchar(255) DEFAULT NULL,\\n  `rW` int(11) DEFAULT NULL,\\n  `rL` int(11) DEFAULT NULL,\\n  `rT` int(11) DEFAULT NULL,\\n  `rOTL` varchar(255) DEFAULT NULL,\\n  `SepW` varchar(255) DEFAULT NULL,\\n  `SepL` varchar(255) DEFAULT NULL,\\n  `SepT` varchar(255) DEFAULT NULL,\\n  `SepOL` varchar(255) DEFAULT NULL,\\n  `OctW` varchar(255) DEFAULT NULL,\\n  `OctL` varchar(255) DEFAULT NULL,\\n  `OctT` varchar(255) DEFAULT NULL,\\n  `OctOL` varchar(255) DEFAULT NULL,\\n  `NovW` varchar(255) DEFAULT NULL,\\n  `NovL` varchar(255) DEFAULT NULL,\\n  `NovT` varchar(255) DEFAULT NULL,\\n  `NovOL` varchar(255) DEFAULT NULL,\\n  `DecW` varchar(255) DEFAULT NULL,\\n  `DecL` varchar(255) DEFAULT NULL,\\n  `DecT` varchar(255) DEFAULT NULL,\\n  `DecOL` varchar(255) DEFAULT NULL,\\n  `JanW` int(11) DEFAULT NULL,\\n  `JanL` int(11) DEFAULT NULL,\\n  `JanT` int(11) DEFAULT NULL,\\n  `JanOL` varchar(255) DEFAULT NULL,\\n  `FebW` int(11) DEFAULT NULL,\\n  `FebL` int(11) DEFAULT NULL,\\n  `FebT` int(11) DEFAULT NULL,\\n  `FebOL` varchar(255) DEFAULT NULL,\\n  `MarW` varchar(255) DEFAULT NULL,\\n  `MarL` varchar(255) DEFAULT NULL,\\n  `MarT` varchar(255) DEFAULT NULL,\\n  `MarOL` varchar(255) DEFAULT NULL,\\n  `AprW` varchar(255) DEFAULT NULL,\\n  `AprL` varchar(255) DEFAULT NULL,\\n  `AprT` varchar(255) DEFAULT NULL,\\n  `AprOL` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`year`,`tmID`),\\n  KEY `TeamSplits_year` (`year`) USING BTREE,\\n  CONSTRAINT `TeamSplits_ibfk_1` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de equipo contra equipo con las columnas de, año, lg Id, tm Id, opp Id, W, L, T, OTL",
      "output": "('TeamVsTeam', 'CREATE TABLE `TeamVsTeam` (\\n  `year` int(11) NOT NULL  `lgID` varchar(255) DEFAULT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `oppID` varchar(255) NOT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `T` int(11) DEFAULT NULL,\\n  `OTL` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`year`,`tmID`,`oppID`),\\n  KEY `TeamVsTeam_year` (`year`) USING BTREE,\\n  KEY `TeamVsTeam_oppID_year` (`oppID`,`year`) USING BTREE,\\n  CONSTRAINT `TeamVsTeam_ibfk_1` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `TeamVsTeam_ibfk_2` FOREIGN KEY (`oppID`, `year`) REFERENCES `Teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de equipos con las columnas de, año, lg Id, tm Id, franch Id, conf Id, div Id, rank, playoff, G, W, L, T, OTL, Pts, So W, So L, GF, GA, name, PIM, Bench Minor , PPG, PPC, SHA, PKG, PKC, SHF",
      "output": "('Teams', 'CREATE TABLE `Teams` (\\n  `year` int(11) NOT NULL  `lgID` varchar(255) DEFAULT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `franchID` varchar(255) DEFAULT NULL,\\n  `confID` varchar(255) DEFAULT NULL,\\n  `divID` varchar(255) DEFAULT NULL,\\n  `rank` int(11) DEFAULT NULL,\\n  `playoff` varchar(255) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `T` int(11) DEFAULT NULL,\\n  `OTL` varchar(255) DEFAULT NULL,\\n  `Pts` int(11) DEFAULT NULL,\\n  `SoW` varchar(255) DEFAULT NULL,\\n  `SoL` varchar(255) DEFAULT NULL,\\n  `GF` int(11) DEFAULT NULL,\\n  `GA` int(11) DEFAULT NULL,\\n  `name` varchar(255) DEFAULT NULL,\\n  `PIM` varchar(255) DEFAULT NULL,\\n  `BenchMinor` varchar(255) DEFAULT NULL,\\n  `PPG` varchar(255) DEFAULT NULL,\\n  `PPC` varchar(255) DEFAULT NULL,\\n  `SHA` varchar(255) DEFAULT NULL,\\n  `PKG` varchar(255) DEFAULT NULL,\\n  `PKC` varchar(255) DEFAULT NULL,\\n  `SHF` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`year`,`tmID`),\\n  KEY `Teams_tmID` (`tmID`) USING BTREE,\\n  KEY `Teams_year` (`year`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Mitad de equipos con las columnas de, año, lg Id, tm Id, mitad, rango, G, W, L, T, GF, GA",
      "output": "('TeamsHalf', 'CREATE TABLE `TeamsHalf` (\\n  `year` int(11) NOT NULL  `lgID` varchar(255) DEFAULT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `half` int(11) NOT NULL,\\n  `rank` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `T` int(11) DEFAULT NULL,\\n  `GF` int(11) DEFAULT NULL,\\n  `GA` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`year`,`tmID`,`half`),\\n  KEY `TeamsHalf_tmID` (`tmID`) USING BTREE,\\n  KEY `TeamsHalf_year` (`year`) USING BTREE,\\n  CONSTRAINT `TeamsHalf_ibfk_1` FOREIGN KEY (`tmID`, `year`) REFERENCES `Teams` (`tmID`, `year`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Publicación de equipos con las columnas de, año, lg Id, tm Id, G, W, L, T, GF, GA, PIM, Bench Minor, PPG, PPC, SHA, PKG, PKC, SHF",
      "output": "('TeamsPost', 'CREATE TABLE `TeamsPost` (\\n  `year` int(11) NOT NULL  `lgID` varchar(255) DEFAULT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `T` int(11) DEFAULT NULL,\\n  `GF` int(11) DEFAULT NULL,\\n  `GA` int(11) DEFAULT NULL,\\n  `PIM` varchar(255) DEFAULT NULL,\\n  `BenchMinor` varchar(255) DEFAULT NULL,\\n  `PPG` varchar(255) DEFAULT NULL,\\n  `PPC` varchar(255) DEFAULT NULL,\\n  `SHA` varchar(255) DEFAULT NULL,\\n  `PKG` varchar(255) DEFAULT NULL,\\n  `PKC` varchar(255) DEFAULT NULL,\\n  `SHF` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`year`,`tmID`),\\n  KEY `TeamsPost_year` (`year`) USING BTREE,\\n  CONSTRAINT `TeamsPost_ibfk_1` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Equipos SC con las columnas de, año, lg Id, tm Id, G, W, L, T, GF, GA, PIM",
      "output": "('TeamsSC', 'CREATE TABLE `TeamsSC` (\\n  `year` int(11) NOT NULL  `lgID` varchar(255) DEFAULT NULL,\\n  `tmID` varchar(255) NOT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `T` int(11) DEFAULT NULL,\\n  `GF` int(11) DEFAULT NULL,\\n  `GA` int(11) DEFAULT NULL,\\n  `PIM` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`year`,`tmID`),\\n  KEY `TeamsSC_year` (`year`) USING BTREE,\\n  CONSTRAINT `TeamsSC_ibfk_1` FOREIGN KEY (`year`, `tmID`) REFERENCES `Teams` (`year`, `tmID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de abreviatura con las columnas de, Tipo, Código, Nombre completo",
      "output": "('abbrev', 'CREATE TABLE `abbrev` (\\n  `Type` varchar(255) NOT NULL  `Code` varchar(255) NOT NULL,\\n  `Fullname` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Type`,`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de borrador de la temporada del jugador original con las columnas de, ID de élite, nombre del jugador, fecha de nacimiento, año de nacimiento, mes de nacimiento, día de nacimiento, lugar de nacimiento, nación, información de altura, altura, información de peso, peso, información de posición, posición, lanzamientos, año de draft, ronda de draft, general, general por , Temporada, Equipo, Liga, Tipo de juego, GP, G, A, P, PIM, Plus Minus",
      "output": "('original_player_season_draftdata', 'CREATE TABLE `original_player_season_draftdata` (\\n  `eliteId` int(11) DEFAULT NULL  `PlayerName` text DEFAULT NULL,\\n  `BirthDate` text DEFAULT NULL,\\n  `BirthYear` int(11) DEFAULT NULL,\\n  `BirthMonth` int(11) DEFAULT NULL,\\n  `BirthDay` int(11) DEFAULT NULL,\\n  `Birthplace` text DEFAULT NULL,\\n  `Nation` text DEFAULT NULL,\\n  `Height_info` text DEFAULT NULL,\\n  `Height` int(11) DEFAULT NULL,\\n  `Weight_info` text DEFAULT NULL,\\n  `Weight` int(11) DEFAULT NULL,\\n  `Position_info` text DEFAULT NULL,\\n  `Position` text DEFAULT NULL,\\n  `Shoots` text DEFAULT NULL,\\n  `DraftYear` int(11) DEFAULT NULL,\\n  `DraftRound` int(11) DEFAULT NULL,\\n  `Overall` int(11) DEFAULT NULL,\\n  `OverallBy` text DEFAULT NULL,\\n  `Season` text DEFAULT NULL,\\n  `Team` text DEFAULT NULL,\\n  `League` text DEFAULT NULL,\\n  `GameType` text DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `A` int(11) DEFAULT NULL,\\n  `P` int(11) DEFAULT NULL,\\n  `PIM` int(11) DEFAULT NULL,\\n  `PlusMinus` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de jugador original temporada hockey redactado con las columnas de, ID de élite, nombre del jugador, fecha de nacimiento, año de nacimiento, mes de nacimiento, día de nacimiento, lugar de nacimiento, nación, información de altura, altura, información de peso, peso, información de posición, posición, lanzamientos, año de draft, ronda de draft, general, general por , Temporada, Equipo, Liga, Tipo de juego, GP, G, A, P, PIM, Plus Minus",
      "output": "('original_player_season_hockey_drafted', 'CREATE TABLE `original_player_season_hockey_drafted` (\\n  `eliteId` int(11) DEFAULT NULL  `PlayerName` text DEFAULT NULL,\\n  `BirthDate` text DEFAULT NULL,\\n  `BirthYear` int(11) DEFAULT NULL,\\n  `BirthMonth` int(11) DEFAULT NULL,\\n  `BirthDay` int(11) DEFAULT NULL,\\n  `Birthplace` text DEFAULT NULL,\\n  `Nation` text DEFAULT NULL,\\n  `Height_info` text DEFAULT NULL,\\n  `Height` int(11) DEFAULT NULL,\\n  `Weight_info` text DEFAULT NULL,\\n  `Weight` int(11) DEFAULT NULL,\\n  `Position_info` text DEFAULT NULL,\\n  `Position` text DEFAULT NULL,\\n  `Shoots` text DEFAULT NULL,\\n  `DraftYear` int(11) DEFAULT NULL,\\n  `DraftRound` int(11) DEFAULT NULL,\\n  `Overall` int(11) DEFAULT NULL,\\n  `OverallBy` text DEFAULT NULL,\\n  `Season` text DEFAULT NULL,\\n  `Team` text DEFAULT NULL,\\n  `League` text DEFAULT NULL,\\n  `GameType` text DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `A` int(11) DEFAULT NULL,\\n  `P` int(11) DEFAULT NULL,\\n  `PIM` int(11) DEFAULT NULL,\\n  `PlusMinus` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ha calificado con las columnas de, ID de usuario, ID de artículo, calificación",
      "output": "('HasRated', 'CREATE TABLE `HasRated` (\\n  `user_id` int(11) NOT NULL DEFAULT 0  `item_id` int(11) NOT NULL DEFAULT 0,\\n  `rating` varchar(45) NOT NULL,\\n  PRIMARY KEY (`user_id`,`item_id`),\\n  KEY `fk_u2base_1` (`item_id`),\\n  CONSTRAINT `fk_u2base_1` FOREIGN KEY (`item_id`) REFERENCES `Movie` (`item_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_u2base_2` FOREIGN KEY (`user_id`) REFERENCES `User` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Película con las columnas de, ID de artículo, Acción, Drama, Terror",
      "output": "('Movie', 'CREATE TABLE `Movie` (\\n  `item_id` int(11) NOT NULL  `Action` varchar(5) NOT NULL,\\n  `Drama` varchar(5) NOT NULL,\\n  `Horror` varchar(5) NOT NULL,\\n  PRIMARY KEY (`item_id`),\\n  KEY `Action_in` (`Action`),\\n  KEY `Drama_in` (`Drama`),\\n  KEY `Horror_in` (`Horror`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Usuario con las columnas de, ID de usuario, Edad, Sexo",
      "output": "('User', 'CREATE TABLE `User` (\\n  `user_id` int(11) NOT NULL DEFAULT 0  `Age` varchar(5) DEFAULT NULL,\\n  `Gender` varchar(5) DEFAULT NULL,\\n  PRIMARY KEY (`user_id`),\\n  KEY `index` (`Age`,`Gender`),\\n  KEY `gender_in` (`Gender`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de cuello con las columnas de, id, archivo de rey blanco, rango de rey blanco, archivo de torre blanca, rango de torre blanca, archivo de rey negro, rango de rey negro, clase",
      "output": "('krk', 'CREATE TABLE `krk` (\\n  `id` int(11) NOT NULL  `white_king_file` int(11) DEFAULT NULL,\\n  `white_king_rank` int(11) DEFAULT NULL,\\n  `white_rook_file` int(11) DEFAULT NULL,\\n  `white_rook_rank` int(11) DEFAULT NULL,\\n  `black_king_file` int(11) DEFAULT NULL,\\n  `black_king_rank` int(11) DEFAULT NULL,\\n  `class` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de circuito con las columnas de, nombre",
      "output": "('circuit', \"CREATE TABLE `circuit` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `circuit_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de agujero del circuito con las columnas de, nombre",
      "output": "('circuit_hole', \"CREATE TABLE `circuit_hole` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `circuit_hole_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de cont cargado con las columnas de, nombre",
      "output": "('cont_loaded', \"CREATE TABLE `cont_loaded` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `cont_loaded_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de elemento con las columnas de, nombre",
      "output": "('element', \"CREATE TABLE `element` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de igual con las columnas de, nombre nombre",
      "output": "('equal', \"CREATE TABLE `equal` (\\n  `name1` varchar(5) NOT NULL DEFAULT ''  `name2` varchar(5) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `name1` (`name1`),\\n  KEY `name2` (`name2`),\\n  CONSTRAINT `equal_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `equal_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de fijado con las columnas de, nombre",
      "output": "('fixed', \"CREATE TABLE `fixed` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `fixed_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de libre con las columnas de, nombre",
      "output": "('free', \"CREATE TABLE `free` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `free_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de medio circuito con las columnas de, nombre",
      "output": "('half_circuit', \"CREATE TABLE `half_circuit` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `half_circuit_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de agujero de medio circuito con las columnas de, nombre",
      "output": "('half_circuit_hole', \"CREATE TABLE `half_circuit_hole` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `half_circuit_hole_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Embarcacion con las columnas de, nombre",
      "output": "('llong', \"CREATE TABLE `llong` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `llong_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de largo para el agujero con las columnas de, nombre",
      "output": "('long_for_hole', \"CREATE TABLE `long_for_hole` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `long_for_hole_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de malla con las columnas de, nombre, número",
      "output": "('mesh', \"CREATE TABLE `mesh` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  `num` varchar(5) DEFAULT NULL,\\n  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  KEY `num` (`num`),\\n  CONSTRAINT `mesh_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `mesh_ibfk_2` FOREIGN KEY (`num`) REFERENCES `nnumber` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de prueba de malla con las columnas de, nombre, número",
      "output": "('mesh_test', \"CREATE TABLE `mesh_test` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  `num` varchar(5) DEFAULT NULL,\\n  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  KEY `num` (`num`),\\n  CONSTRAINT `mesh_test_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de prueba de malla negativa con las columnas de, nombre, número",
      "output": "('mesh_test_Neg', 'CREATE TABLE `mesh_test_Neg` (\\n  `name` varchar(5) DEFAULT NULL  `num` varchar(5) DEFAULT NULL,\\n  KEY `name` (`name`),\\n  KEY `num` (`num`),\\n  CONSTRAINT `mesh_test_Neg_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de vecino xy con las columnas de, nombre nombre",
      "output": "('neighbour_xy', \"CREATE TABLE `neighbour_xy` (\\n  `name1` varchar(5) NOT NULL DEFAULT ''  `name2` varchar(5) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `name1` (`name1`),\\n  KEY `name2` (`name2`),\\n  CONSTRAINT `neighbour_xy_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `neighbour_xy_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de vecino yz con las columnas de, nombre nombre",
      "output": "('neighbour_yz', 'CREATE TABLE `neighbour_yz` (\\n  `name1` varchar(5) NOT NULL  `name2` varchar(5) NOT NULL,\\n  KEY `name1` (`name1`),\\n  KEY `name2` (`name2`),\\n  CONSTRAINT `neighbour_yz_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `neighbour_yz_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de vecino zx con las columnas de, nombre nombre",
      "output": "('neighbour_zx', \"CREATE TABLE `neighbour_zx` (\\n  `name1` varchar(5) NOT NULL DEFAULT ''  `name2` varchar(5) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `name1` (`name1`),\\n  KEY `name2` (`name2`),\\n  CONSTRAINT `neighbour_zx_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `neighbour_zx_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de número con las columnas de, nombre",
      "output": "('nnumber', \"CREATE TABLE `nnumber` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sin carga con las columnas de, nombre",
      "output": "('noload', \"CREATE TABLE `noload` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `noload_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de no importante con las columnas de, nombre",
      "output": "('notimportant', \"CREATE TABLE `notimportant` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `notimportant_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de un lado fijo con las columnas de, nombre",
      "output": "('one_side_fixed', \"CREATE TABLE `one_side_fixed` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `one_side_fixed_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de un lado cargado con las columnas de, nombre",
      "output": "('one_side_loaded', \"CREATE TABLE `one_side_loaded` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `one_side_loaded_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de opuesto con las columnas de, nombre nombre",
      "output": "('opposite', \"CREATE TABLE `opposite` (\\n  `name1` varchar(5) NOT NULL DEFAULT ''  `name2` varchar(5) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `name1` (`name1`),\\n  KEY `name2` (`name2`),\\n  CONSTRAINT `opposite_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `opposite_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de cuarto de circuito con las columnas de, nombre",
      "output": "('quarter_circuit', \"CREATE TABLE `quarter_circuit` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `quarter_circuit_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de abreviatura de agujero con las columnas de, nombre",
      "output": "('short_for_hole', \"CREATE TABLE `short_for_hole` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `short_for_hole_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de corto con las columnas de, nombre",
      "output": "('sshort', \"CREATE TABLE `sshort` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `sshort_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de dos lados fijos con las columnas de, nombre",
      "output": "('two_side_fixed', \"CREATE TABLE `two_side_fixed` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `two_side_fixed_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de dos lados cargados con las columnas de, nombre",
      "output": "('two_side_loaded', \"CREATE TABLE `two_side_loaded` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `two_side_loaded_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de habitual con las columnas de, nombre",
      "output": "('usual', \"CREATE TABLE `usual` (\\n  `name` varchar(5) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `usual_ibfk_1` FOREIGN KEY (`name`) REFERENCES `element` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de fronteras con las columnas de, País, País, Longitud",
      "output": "('borders', \"CREATE TABLE `borders` (\\n  `Country1` varchar(4) NOT NULL DEFAULT ''  `Country2` varchar(4) NOT NULL DEFAULT '',\\n  `Length` float DEFAULT NULL,\\n  PRIMARY KEY (`Country1`,`Country2`),\\n  KEY `ix_city_Country2` (`Country2`) USING BTREE,\\n  KEY `ix_city_Country1` (`Country1`) USING BTREE,\\n  CONSTRAINT `borders_ibfk_1` FOREIGN KEY (`Country1`) REFERENCES `country` (`Code`),\\n  CONSTRAINT `borders_ibfk_2` FOREIGN KEY (`Country2`) REFERENCES `country` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ciudad con las columnas de, Nombre, País, Provincia, Población, Longitud, Latitud",
      "output": "('city', \"CREATE TABLE `city` (\\n  `Name` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  `Population` int(11) DEFAULT NULL,\\n  `Longitude` float DEFAULT NULL,\\n  `Latitude` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`,`Province`),\\n  KEY `ix_city_Country` (`Country`) USING BTREE,\\n  KEY `ix_city_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `city_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `city_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de continente con las columnas de, Nombre, Área",
      "output": "('continent', \"CREATE TABLE `continent` (\\n  `Name` varchar(20) NOT NULL DEFAULT ''  `Area` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de país con las columnas de, Nombre, Código, Capital, Provincia, Área, Población",
      "output": "('country', \"CREATE TABLE `country` (\\n  `Name` varchar(35) NOT NULL  `Code` varchar(4) NOT NULL DEFAULT '',\\n  `Capital` varchar(35) DEFAULT NULL,\\n  `Province` varchar(35) DEFAULT NULL,\\n  `Area` float DEFAULT NULL,\\n  `Population` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Code`),\\n  UNIQUE KEY `ix_county_Name` (`Name`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Desierto con las columnas de, Nombre, Área, Longitud, Latitud",
      "output": "('desert', \"CREATE TABLE `desert` (\\n  `Name` varchar(35) NOT NULL DEFAULT ''  `Area` float DEFAULT NULL,\\n  `Longitude` float DEFAULT NULL,\\n  `Latitude` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de economía con las columnas de, País, PIB, Agricultura, Servicio, Industria, Inflación",
      "output": "('economy', \"CREATE TABLE `economy` (\\n  `Country` varchar(4) NOT NULL DEFAULT ''  `GDP` float DEFAULT NULL,\\n  `Agriculture` float DEFAULT NULL,\\n  `Service` float DEFAULT NULL,\\n  `Industry` float DEFAULT NULL,\\n  `Inflation` float DEFAULT NULL,\\n  PRIMARY KEY (`Country`),\\n  CONSTRAINT `economy_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de engloba con las columnas de, País, Continente, Porcentaje",
      "output": "('encompasses', 'CREATE TABLE `encompasses` (\\n  `Country` varchar(4) NOT NULL  `Continent` varchar(20) NOT NULL,\\n  `Percentage` float DEFAULT NULL,\\n  PRIMARY KEY (`Country`,`Continent`),\\n  KEY `ix_encompasses_Continent` (`Continent`) USING BTREE,\\n  CONSTRAINT `encompasses_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `encompasses_ibfk_2` FOREIGN KEY (`Continent`) REFERENCES `continent` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de grupo étnico con las columnas de, País, Nombre, Porcentaje",
      "output": "('ethnicGroup', \"CREATE TABLE `ethnicGroup` (\\n  `Country` varchar(4) NOT NULL DEFAULT ''  `Name` varchar(50) NOT NULL DEFAULT '',\\n  `Percentage` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`,`Country`),\\n  KEY `ix_ethnicGroup_Country` (`Country`) USING BTREE,\\n  CONSTRAINT `ethnicGroup_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de geodesierto con las columnas de, Desierto, País, Provincia",
      "output": "('geo_desert', \"CREATE TABLE `geo_desert` (\\n  `Desert` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Province`,`Country`,`Desert`),\\n  KEY `ix_geo_desert_Country` (`Country`) USING BTREE,\\n  KEY `ix_geo_desert_Desert` (`Desert`) USING BTREE,\\n  KEY `ix_geo_desert_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `geo_desert_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_desert_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_desert_ibfk_3` FOREIGN KEY (`Desert`) REFERENCES `desert` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de estuario geo con las columnas de, Río, País, Provincia",
      "output": "('geo_estuary', \"CREATE TABLE `geo_estuary` (\\n  `River` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Province`,`Country`,`River`),\\n  KEY `ix_geo_estuary_Country` (`Country`) USING BTREE,\\n  KEY `ix_geo_estuary_River` (`River`) USING BTREE,\\n  KEY `ix_geo_estuary_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `geo_estuary_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_estuary_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_estuary_ibfk_3` FOREIGN KEY (`River`) REFERENCES `river` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de isla geográfica con las columnas de, Isla, País, Provincia",
      "output": "('geo_island', \"CREATE TABLE `geo_island` (\\n  `Island` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Province`,`Country`,`Island`),\\n  KEY `ix_geo_island_Country` (`Country`) USING BTREE,\\n  KEY `ix_geo_island_Island` (`Island`) USING BTREE,\\n  KEY `ix_geo_island_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `geo_island_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_island_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_island_ibfk_3` FOREIGN KEY (`Island`) REFERENCES `island` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de lago geo con las columnas de, Lago, País, Provincia",
      "output": "('geo_lake', \"CREATE TABLE `geo_lake` (\\n  `Lake` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Province`,`Country`,`Lake`),\\n  KEY `ix_geo_lake_Country` (`Country`) USING BTREE,\\n  KEY `ix_geo_lake_Lake` (`Lake`) USING BTREE,\\n  KEY `ix_geo_lake_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `geo_lake_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_lake_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_lake_ibfk_3` FOREIGN KEY (`Lake`) REFERENCES `lake` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de geo montaña con las columnas de, Montaña, País, Provincia",
      "output": "('geo_mountain', \"CREATE TABLE `geo_mountain` (\\n  `Mountain` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Province`,`Country`,`Mountain`),\\n  KEY `ix_geo_mountain_Country` (`Country`) USING BTREE,\\n  KEY `ix_geo_mountain_Mountain` (`Mountain`) USING BTREE,\\n  KEY `ix_geo_mountain_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `geo_mountain_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_mountain_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_mountain_ibfk_3` FOREIGN KEY (`Mountain`) REFERENCES `mountain` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de río geo con las columnas de, Río, País, Provincia",
      "output": "('geo_river', \"CREATE TABLE `geo_river` (\\n  `River` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Province`,`Country`,`River`),\\n  KEY `ix_geo_river_Country` (`Country`) USING BTREE,\\n  KEY `ix_geo_river_River` (`River`) USING BTREE,\\n  KEY `ix_geo_river_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `geo_river_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_river_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_river_ibfk_3` FOREIGN KEY (`River`) REFERENCES `river` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de geo sea con las columnas de, Mar, País, Provincia",
      "output": "('geo_sea', \"CREATE TABLE `geo_sea` (\\n  `Sea` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Province`,`Country`,`Sea`),\\n  KEY `ix_geo_sea_Country` (`Country`) USING BTREE,\\n  KEY `ix_geo_sea_Sea` (`Sea`) USING BTREE,\\n  KEY `ix_geo_sea_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `geo_sea_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_sea_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_sea_ibfk_3` FOREIGN KEY (`Sea`) REFERENCES `sea` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de fuente geográfica con las columnas de, Río, País, Provincia",
      "output": "('geo_source', \"CREATE TABLE `geo_source` (\\n  `River` varchar(35) NOT NULL DEFAULT ''  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Province` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Province`,`Country`,`River`),\\n  KEY `ix_geo_source_Country` (`Country`) USING BTREE,\\n  KEY `ix_geo_source_River` (`River`) USING BTREE,\\n  KEY `ix_geo_source_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `geo_source_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_source_ibfk_2` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `geo_source_ibfk_3` FOREIGN KEY (`River`) REFERENCES `river` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de es miembro con las columnas de, País, Organización, Tipo",
      "output": "('isMember', \"CREATE TABLE `isMember` (\\n  `Country` varchar(4) NOT NULL DEFAULT ''  `Organization` varchar(12) NOT NULL DEFAULT '',\\n  `Type` varchar(35) DEFAULT 'member',\\n  PRIMARY KEY (`Country`,`Organization`),\\n  KEY `ix_isMember_Organization` (`Organization`) USING BTREE,\\n  CONSTRAINT `isMember_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `isMember_ibfk_2` FOREIGN KEY (`Organization`) REFERENCES `organization` (`Abbreviation`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de isla con las columnas de, Nombre, Islas, Área, Altura, Tipo, Longitud, Latitud",
      "output": "('island', \"CREATE TABLE `island` (\\n  `Name` varchar(35) NOT NULL DEFAULT ''  `Islands` varchar(35) DEFAULT NULL,\\n  `Area` float DEFAULT NULL,\\n  `Height` float DEFAULT NULL,\\n  `Type` varchar(10) DEFAULT NULL,\\n  `Longitude` float DEFAULT NULL,\\n  `Latitude` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`),\\n  KEY `ix_island_Islands` (`Islands`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de isla en con las columnas de, isla, mar, lago, río",
      "output": "('islandIn', 'CREATE TABLE `islandIn` (\\n  `Island` varchar(35) DEFAULT NULL  `Sea` varchar(35) DEFAULT NULL,\\n  `Lake` varchar(35) DEFAULT NULL,\\n  `River` varchar(35) DEFAULT NULL,\\n  KEY `ix_islandIn_Lake` (`Lake`) USING BTREE,\\n  KEY `ix_islandIn_River` (`River`) USING BTREE,\\n  KEY `ix_islandIn_Sea` (`Sea`) USING BTREE,\\n  KEY `ix_islandIn_Island` (`Island`) USING BTREE,\\n  CONSTRAINT `islandIn_ibfk_1` FOREIGN KEY (`Lake`) REFERENCES `lake` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `islandIn_ibfk_2` FOREIGN KEY (`River`) REFERENCES `river` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `islandIn_ibfk_3` FOREIGN KEY (`Sea`) REFERENCES `sea` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `islandIn_ibfk_4` FOREIGN KEY (`Island`) REFERENCES `island` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de lago con las columnas de, Nombre, Área, Profundidad, Altitud, Tipo, Río, Longitud, Latitud",
      "output": "('lake', \"CREATE TABLE `lake` (\\n  `Name` varchar(35) NOT NULL DEFAULT ''  `Area` float DEFAULT NULL,\\n  `Depth` float DEFAULT NULL,\\n  `Altitude` float DEFAULT NULL,\\n  `Type` varchar(10) DEFAULT NULL,\\n  `River` varchar(35) DEFAULT NULL,\\n  `Longitude` float DEFAULT NULL,\\n  `Latitude` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de idioma con las columnas de, País, Nombre, Porcentaje",
      "output": "('language', \"CREATE TABLE `language` (\\n  `Country` varchar(4) NOT NULL DEFAULT ''  `Name` varchar(50) NOT NULL DEFAULT '',\\n  `Percentage` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`,`Country`),\\n  KEY `ix_language_Country` (`Country`) USING BTREE,\\n  CONSTRAINT `language_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de situado con las columnas de, Ciudad, Provincia, País, Río, Lago, Mar",
      "output": "('located', 'CREATE TABLE `located` (\\n  `City` varchar(35) DEFAULT NULL  `Province` varchar(35) DEFAULT NULL,\\n  `Country` varchar(4) DEFAULT NULL,\\n  `River` varchar(35) DEFAULT NULL,\\n  `Lake` varchar(35) DEFAULT NULL,\\n  `Sea` varchar(35) DEFAULT NULL,\\n  KEY `ix_located_Country` (`Country`) USING BTREE,\\n  KEY `ix_located_River` (`River`) USING BTREE,\\n  KEY `ix_located_Lake` (`Lake`) USING BTREE,\\n  KEY `ix_located_Sea` (`Sea`) USING BTREE,\\n  KEY `ix_located_City` (`City`,`Province`) USING BTREE,\\n  KEY `ix_located_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `located_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `located_ibfk_2` FOREIGN KEY (`City`, `Province`) REFERENCES `city` (`Name`, `Province`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `located_ibfk_3` FOREIGN KEY (`River`) REFERENCES `river` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `located_ibfk_4` FOREIGN KEY (`Lake`) REFERENCES `lake` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `located_ibfk_5` FOREIGN KEY (`Sea`) REFERENCES `sea` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `located_ibfk_6` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de localizado en con las columnas de, Ciudad, Provincia, País, Isla",
      "output": "('locatedOn', \"CREATE TABLE `locatedOn` (\\n  `City` varchar(35) NOT NULL DEFAULT ''  `Province` varchar(35) NOT NULL DEFAULT '',\\n  `Country` varchar(4) NOT NULL DEFAULT '',\\n  `Island` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`City`,`Province`,`Country`,`Island`),\\n  KEY `ix_locatedOn_Country` (`Country`) USING BTREE,\\n  KEY `ix_locatedOn_Island` (`Island`) USING BTREE,\\n  KEY `ix_locatedOn_Province` (`Province`) USING BTREE,\\n  KEY `Province` (`Province`,`Country`),\\n  CONSTRAINT `locatedOn_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `locatedOn_ibfk_2` FOREIGN KEY (`Island`) REFERENCES `island` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `locatedOn_ibfk_3` FOREIGN KEY (`City`, `Province`) REFERENCES `city` (`Name`, `Province`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `locatedOn_ibfk_4` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de se fusiona con con las columnas de, Sea, Sea",
      "output": "('mergesWith', \"CREATE TABLE `mergesWith` (\\n  `Sea1` varchar(35) NOT NULL DEFAULT ''  `Sea2` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Sea1`,`Sea2`),\\n  KEY `ix_mergeWith_Sea2` (`Sea2`) USING BTREE,\\n  CONSTRAINT `mergesWith_ibfk_1` FOREIGN KEY (`Sea1`) REFERENCES `sea` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `mergesWith_ibfk_2` FOREIGN KEY (`Sea2`) REFERENCES `sea` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de montaña con las columnas de, Nombre, Montañas, Altura, Tipo, Longitud, Latitud",
      "output": "('mountain', \"CREATE TABLE `mountain` (\\n  `Name` varchar(35) NOT NULL DEFAULT ''  `Mountains` varchar(35) DEFAULT NULL,\\n  `Height` float DEFAULT NULL,\\n  `Type` varchar(10) DEFAULT NULL,\\n  `Longitude` float DEFAULT NULL,\\n  `Latitude` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`),\\n  KEY `ix_mountain_Mountains` (`Mountains`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de montaña en la isla con las columnas de, montaña, isla",
      "output": "('mountainOnIsland', \"CREATE TABLE `mountainOnIsland` (\\n  `Mountain` varchar(35) NOT NULL DEFAULT ''  `Island` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Mountain`,`Island`),\\n  KEY `ix_mountainOnIsland_Island` (`Island`) USING BTREE,\\n  CONSTRAINT `mountainOnIsland_ibfk_1` FOREIGN KEY (`Island`) REFERENCES `island` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `mountainOnIsland_ibfk_2` FOREIGN KEY (`Mountain`) REFERENCES `mountain` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de organización con las columnas de, Abreviatura, Nombre, Ciudad, País, Provincia, Establecido",
      "output": "('organization', 'CREATE TABLE `organization` (\\n  `Abbreviation` varchar(12) NOT NULL  `Name` varchar(80) NOT NULL,\\n  `City` varchar(35) DEFAULT NULL,\\n  `Country` varchar(4) DEFAULT NULL,\\n  `Province` varchar(35) DEFAULT NULL,\\n  `Established` date DEFAULT NULL,\\n  PRIMARY KEY (`Abbreviation`),\\n  UNIQUE KEY `ix_organization_OrgNameUnique` (`Name`) USING BTREE,\\n  KEY `ix_organization_Country` (`Country`) USING BTREE,\\n  KEY `ix_organization_City` (`City`,`Province`) USING BTREE,\\n  KEY `ix_organization_Province` (`Province`,`Country`) USING BTREE,\\n  CONSTRAINT `organization_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `organization_ibfk_2` FOREIGN KEY (`City`, `Province`) REFERENCES `city` (`Name`, `Province`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `organization_ibfk_3` FOREIGN KEY (`Province`, `Country`) REFERENCES `province` (`Name`, `Country`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de política con las columnas de, País, Independencia, Dependiente, Gobierno",
      "output": "('politics', \"CREATE TABLE `politics` (\\n  `Country` varchar(4) NOT NULL DEFAULT ''  `Independence` date DEFAULT NULL,\\n  `Dependent` varchar(4) DEFAULT NULL,\\n  `Government` varchar(120) DEFAULT NULL,\\n  PRIMARY KEY (`Country`),\\n  KEY `ix_politics_Dependent` (`Dependent`) USING BTREE,\\n  CONSTRAINT `politics_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `politics_ibfk_2` FOREIGN KEY (`Dependent`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de población con las columnas de, País, Crecimiento Poblacional, Mortalidad Infantil",
      "output": "('population', \"CREATE TABLE `population` (\\n  `Country` varchar(4) NOT NULL DEFAULT ''  `Population_Growth` float DEFAULT NULL,\\n  `Infant_Mortality` float DEFAULT NULL,\\n  PRIMARY KEY (`Country`),\\n  CONSTRAINT `population_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de provincia con las columnas de, Nombre, País, Población, Área, Capital, Cap Prov",
      "output": "('province', 'CREATE TABLE `province` (\\n  `Name` varchar(35) NOT NULL  `Country` varchar(4) NOT NULL,\\n  `Population` int(11) DEFAULT NULL,\\n  `Area` float DEFAULT NULL,\\n  `Capital` varchar(35) DEFAULT NULL,\\n  `CapProv` varchar(35) DEFAULT NULL,\\n  PRIMARY KEY (`Name`,`Country`),\\n  KEY `ix_province_Country` (`Country`) USING BTREE,\\n  CONSTRAINT `province_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de religión con las columnas de, País, Nombre, Porcentaje",
      "output": "('religion', \"CREATE TABLE `religion` (\\n  `Country` varchar(4) NOT NULL DEFAULT ''  `Name` varchar(50) NOT NULL DEFAULT '',\\n  `Percentage` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`,`Country`),\\n  KEY `ix_religion_Country` (`Country`) USING BTREE,\\n  CONSTRAINT `religion_ibfk_1` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de río con las columnas de, Nombre, Río, Lago, Mar, Longitud, Longitud de origen, Latitud de origen, Montañas, Altitud de origen, Longitud de estuario, Latitud de estuario",
      "output": "('river', \"CREATE TABLE `river` (\\n  `Name` varchar(35) NOT NULL DEFAULT ''  `River` varchar(35) DEFAULT NULL,\\n  `Lake` varchar(35) DEFAULT NULL,\\n  `Sea` varchar(35) DEFAULT NULL,\\n  `Length` float DEFAULT NULL,\\n  `SourceLongitude` float DEFAULT NULL,\\n  `SourceLatitude` float DEFAULT NULL,\\n  `Mountains` varchar(35) DEFAULT NULL,\\n  `SourceAltitude` float DEFAULT NULL,\\n  `EstuaryLongitude` float DEFAULT NULL,\\n  `EstuaryLatitude` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`),\\n  KEY `ix_river_Lake` (`Lake`) USING BTREE,\\n  KEY `ix_river_River` (`River`) USING BTREE,\\n  KEY `ix_river_Sea` (`Sea`) USING BTREE,\\n  KEY `ix_river_Mountains` (`Mountains`) USING BTREE,\\n  CONSTRAINT `river_ibfk_1` FOREIGN KEY (`Lake`) REFERENCES `lake` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sea con las columnas de, Nombre, Profundidad",
      "output": "('sea', \"CREATE TABLE `sea` (\\n  `Name` varchar(35) NOT NULL DEFAULT ''  `Depth` float DEFAULT NULL,\\n  PRIMARY KEY (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, país, objetivo",
      "output": "('target', 'CREATE TABLE `target` (\\n  `Country` varchar(4) NOT NULL  `Target` varchar(13) DEFAULT NULL,\\n  PRIMARY KEY (`Country`),\\n  CONSTRAINT `target_Country_fkey` FOREIGN KEY (`Country`) REFERENCES `country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Fronteras con las columnas de, Nombre nombre",
      "output": "('Borders', \"CREATE TABLE `Borders` (\\n  `Name1` varchar(35) NOT NULL DEFAULT ''  `Name2` varchar(35) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Name1`,`Name2`),\\n  KEY `country1_idx` (`Name1`),\\n  KEY `countr2_idx` (`Name2`),\\n  CONSTRAINT `countr2` FOREIGN KEY (`Name2`) REFERENCES `Country` (`Name`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `country1` FOREIGN KEY (`Name1`) REFERENCES `Country` (`Name`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de País con las columnas de, Nombre, Continente, Área Discreta, Población Discreta",
      "output": "('Country', 'CREATE TABLE `Country` (\\n  `Name` varchar(35) NOT NULL  `Continent` varchar(20) NOT NULL,\\n  `DiscreteArea` varchar(35) CHARACTER SET latin1 NOT NULL,\\n  `DiscretePopulation` varchar(35) CHARACTER SET latin1 NOT NULL,\\n  PRIMARY KEY (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Ciudad con las columnas de, ID de la ciudad, Población, Longitud, Latitud",
      "output": "('City', \"CREATE TABLE `City` (\\n  `City_id` varchar(64) NOT NULL DEFAULT ''  `Population` int(11) DEFAULT NULL,\\n  `Longitude` float DEFAULT NULL,\\n  `Latitude` float DEFAULT NULL,\\n  PRIMARY KEY (`City_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Continente con las columnas de, Nombre, Área",
      "output": "('Continent', \"CREATE TABLE `Continent` (\\n  `Name` varchar(20) NOT NULL DEFAULT ''  `Area` varchar(35) DEFAULT NULL,\\n  PRIMARY KEY (`Name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de País con las columnas de, Código, Área, Población",
      "output": "('Country', \"CREATE TABLE `Country` (\\n  `Code` varchar(4) NOT NULL DEFAULT ''  `Area` varchar(35) DEFAULT NULL,\\n  `Population` varchar(35) DEFAULT NULL,\\n  PRIMARY KEY (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Provincia con las columnas de, Prov id, Población, Área",
      "output": "('Province', \"CREATE TABLE `Province` (\\n  `Prov_id` varchar(64) NOT NULL DEFAULT ''  `Population` varchar(35) DEFAULT NULL,\\n  `Area` varchar(35) DEFAULT NULL,\\n  PRIMARY KEY (`Prov_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de fronteras con las columnas de, País, País, Longitud",
      "output": "('borders', \"CREATE TABLE `borders` (\\n  `Country1` varchar(4) NOT NULL DEFAULT ''  `Country2` varchar(4) NOT NULL DEFAULT '',\\n  `Length` varchar(35) DEFAULT NULL,\\n  PRIMARY KEY (`Country1`,`Country2`),\\n  KEY `fk_borders_c1_idx` (`Country1`),\\n  KEY `fk_borders_c2_idx` (`Country2`),\\n  CONSTRAINT `fk_borders_c1` FOREIGN KEY (`Country1`) REFERENCES `Country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_borders_c2` FOREIGN KEY (`Country2`) REFERENCES `Country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Capitán País con las columnas de, País, Capital",
      "output": "('capt_Country', 'CREATE TABLE `capt_Country` (\\n  `Country` varchar(4) NOT NULL  `Capital` varchar(64) NOT NULL,\\n  PRIMARY KEY (`Country`,`Capital`),\\n  KEY `fk_capt_Country_Coun_idx` (`Country`),\\n  KEY `fk_capt_Country_Capt_idx` (`Capital`),\\n  CONSTRAINT `fk_capt_Country_Capt` FOREIGN KEY (`Capital`) REFERENCES `City` (`City_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_capt_Country_Coun` FOREIGN KEY (`Country`) REFERENCES `Country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Capitán Prov. con las columnas de, Provincia, Capital",
      "output": "('capt_Prov', 'CREATE TABLE `capt_Prov` (\\n  `Province` varchar(64) NOT NULL  `Capital` varchar(64) NOT NULL,\\n  PRIMARY KEY (`Province`,`Capital`),\\n  KEY `fk_capt_Prov_prov_idx` (`Province`),\\n  KEY `fk_capt_Prov_capt_idx` (`Capital`),\\n  CONSTRAINT `fk_capt_Prov_capt` FOREIGN KEY (`Capital`) REFERENCES `City` (`City_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_capt_Prov_prov` FOREIGN KEY (`Province`) REFERENCES `Province` (`Prov_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de ciudad en provincia con las columnas de, Ciudad, Provincia",
      "output": "('cityInProv', 'CREATE TABLE `cityInProv` (\\n  `City` varchar(64) NOT NULL  `Province` varchar(64) NOT NULL,\\n  PRIMARY KEY (`City`,`Province`),\\n  KEY `fk_cityInProv_city_idx` (`City`),\\n  KEY `fk_cityInProv_prov_idx` (`Province`),\\n  CONSTRAINT `fk_cityInProv_city` FOREIGN KEY (`City`) REFERENCES `City` (`City_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_cityInProv_prov` FOREIGN KEY (`Province`) REFERENCES `Province` (`Prov_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de pais de provincia con las columnas de, Provincia, País",
      "output": "('countryOfProv', 'CREATE TABLE `countryOfProv` (\\n  `Province` varchar(64) NOT NULL  `Country` varchar(4) NOT NULL,\\n  PRIMARY KEY (`Province`,`Country`),\\n  KEY `fk_countryOfProv_prov_idx` (`Province`),\\n  KEY `fk_countryOfProv_coun_idx` (`Country`),\\n  CONSTRAINT `fk_countryOfProv_coun` FOREIGN KEY (`Country`) REFERENCES `Country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_countryOfProv_prov` FOREIGN KEY (`Province`) REFERENCES `Province` (`Prov_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de engloba con las columnas de, País, Continente, Porcentaje",
      "output": "('encompasses', 'CREATE TABLE `encompasses` (\\n  `Country` varchar(4) NOT NULL  `Continent` varchar(20) NOT NULL,\\n  `Percentage` varchar(35) DEFAULT NULL,\\n  PRIMARY KEY (`Continent`,`Country`),\\n  KEY `fk_encompasses_coun_idx` (`Country`),\\n  KEY `fk_encompasses_cont_idx` (`Continent`),\\n  CONSTRAINT `fk_encompasses_cont` FOREIGN KEY (`Continent`) REFERENCES `Continent` (`Name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_encompasses_coun` FOREIGN KEY (`Country`) REFERENCES `Country` (`Code`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de tía con las columnas de, nombre nombre",
      "output": "('aunt', \"CREATE TABLE `aunt` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `aunt_name1` (`name1`),\\n  KEY `aunt_name2` (`name2`),\\n  CONSTRAINT `aunt_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `aunt_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tía con las columnas de, nombre nombre",
      "output": "('aunt1', \"CREATE TABLE `aunt1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `aunt1_name1` (`name1`),\\n  KEY `aunt1_name2` (`name2`),\\n  CONSTRAINT `aunt1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `aunt1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tía con las columnas de, nombre nombre",
      "output": "('aunt2', \"CREATE TABLE `aunt2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `aunt2_name1` (`name1`),\\n  KEY `aunt2_name2` (`name2`),\\n  CONSTRAINT `aunt2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `aunt2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tía con las columnas de, nombre nombre",
      "output": "('aunt3', \"CREATE TABLE `aunt3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `aunt3_name1` (`name1`),\\n  KEY `aunt3_name2` (`name2`),\\n  CONSTRAINT `aunt3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `aunt3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tía con las columnas de, nombre nombre",
      "output": "('aunt4', \"CREATE TABLE `aunt4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `aunt4_name1` (`name1`),\\n  KEY `aunt4_name2` (`name2`),\\n  CONSTRAINT `aunt4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `aunt4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tía con las columnas de, nombre nombre",
      "output": "('aunt5', \"CREATE TABLE `aunt5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `aunt5_name1` (`name1`),\\n  KEY `aunt5_name2` (`name2`),\\n  CONSTRAINT `aunt5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `aunt5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermano con las columnas de, nombre nombre",
      "output": "('brother', \"CREATE TABLE `brother` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `brother_name1` (`name1`),\\n  KEY `brother_name2` (`name2`),\\n  CONSTRAINT `brother_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `brother_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermano con las columnas de, nombre nombre",
      "output": "('brother1', \"CREATE TABLE `brother1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `brother1_name1` (`name1`),\\n  KEY `brother1_name2` (`name2`),\\n  CONSTRAINT `brother1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `brother1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermano con las columnas de, nombre nombre",
      "output": "('brother2', \"CREATE TABLE `brother2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `brother2_name1` (`name1`),\\n  KEY `brother2_name2` (`name2`),\\n  CONSTRAINT `brother2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `brother2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermano con las columnas de, nombre nombre",
      "output": "('brother3', \"CREATE TABLE `brother3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `brother3_name1` (`name1`),\\n  KEY `brother3_name2` (`name2`),\\n  CONSTRAINT `brother3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `brother3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermano con las columnas de, nombre nombre",
      "output": "('brother4', \"CREATE TABLE `brother4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `brother4_name1` (`name1`),\\n  KEY `brother4_name2` (`name2`),\\n  CONSTRAINT `brother4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `brother4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermano con las columnas de, nombre nombre",
      "output": "('brother5', \"CREATE TABLE `brother5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `brother5_name1` (`name1`),\\n  KEY `brother5_name2` (`name2`),\\n  CONSTRAINT `brother5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `brother5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hija con las columnas de, nombre nombre",
      "output": "('daughter', \"CREATE TABLE `daughter` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `daughter_name1` (`name1`),\\n  KEY `daughter_name2` (`name2`),\\n  CONSTRAINT `daughter_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `daughter_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hija con las columnas de, nombre nombre",
      "output": "('daughter1', \"CREATE TABLE `daughter1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `daughter1_name1` (`name1`),\\n  KEY `daughter1_name2` (`name2`),\\n  CONSTRAINT `daughter1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `daughter1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hija con las columnas de, nombre nombre",
      "output": "('daughter2', \"CREATE TABLE `daughter2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `daughter2_name1` (`name1`),\\n  KEY `daughter2_name2` (`name2`),\\n  CONSTRAINT `daughter2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `daughter2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hija con las columnas de, nombre nombre",
      "output": "('daughter3', \"CREATE TABLE `daughter3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `daughter3_name1` (`name1`),\\n  KEY `daughter3_name2` (`name2`),\\n  CONSTRAINT `daughter3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `daughter3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hija con las columnas de, nombre nombre",
      "output": "('daughter4', \"CREATE TABLE `daughter4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `daughter4_name1` (`name1`),\\n  KEY `daughter4_name2` (`name2`),\\n  CONSTRAINT `daughter4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `daughter4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hija con las columnas de, nombre nombre",
      "output": "('daughter5', \"CREATE TABLE `daughter5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `daughter5_name1` (`name1`),\\n  KEY `daughter5_name2` (`name2`),\\n  CONSTRAINT `daughter5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `daughter5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('father', \"CREATE TABLE `father` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `father_name1` (`name1`),\\n  KEY `father_name2` (`name2`),\\n  CONSTRAINT `father_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `father_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('father1', \"CREATE TABLE `father1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `father1_name1` (`name1`),\\n  KEY `father1_name2` (`name2`),\\n  CONSTRAINT `father1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `father1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('father2', \"CREATE TABLE `father2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `father2_name1` (`name1`),\\n  KEY `father2_name2` (`name2`),\\n  CONSTRAINT `father2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `father2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('father3', \"CREATE TABLE `father3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `father3_name1` (`name1`),\\n  KEY `father3_name2` (`name2`),\\n  CONSTRAINT `father3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `father3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('father4', \"CREATE TABLE `father4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `father4_name1` (`name1`),\\n  KEY `father4_name2` (`name2`),\\n  CONSTRAINT `father4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `father4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('father5', \"CREATE TABLE `father5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `father5_name1` (`name1`),\\n  KEY `father5_name2` (`name2`),\\n  CONSTRAINT `father5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `father5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband', \"CREATE TABLE `husband` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband_name1` (`name1`),\\n  KEY `husband_name2` (`name2`),\\n  CONSTRAINT `husband_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `husband_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband1', \"CREATE TABLE `husband1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband1_name1` (`name1`),\\n  KEY `husband1_name2` (`name2`),\\n  CONSTRAINT `husband1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `husband1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband2', \"CREATE TABLE `husband2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband2_name1` (`name1`),\\n  KEY `husband2_name2` (`name2`),\\n  CONSTRAINT `husband2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `husband2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband3', \"CREATE TABLE `husband3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband3_name1` (`name1`),\\n  KEY `husband3_name2` (`name2`),\\n  CONSTRAINT `husband3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `husband3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband4', \"CREATE TABLE `husband4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband4_name1` (`name1`),\\n  KEY `husband4_name2` (`name2`),\\n  CONSTRAINT `husband4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `husband4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposo con las columnas de, nombre nombre",
      "output": "('husband5', \"CREATE TABLE `husband5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `husband5_name1` (`name1`),\\n  KEY `husband5_name2` (`name2`),\\n  CONSTRAINT `husband5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `husband5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de madre con las columnas de, nombre nombre",
      "output": "('mother', \"CREATE TABLE `mother` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `mother_name1` (`name1`),\\n  KEY `mother_name2` (`name2`),\\n  CONSTRAINT `mother_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `mother_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de madre con las columnas de, nombre nombre",
      "output": "('mother1', \"CREATE TABLE `mother1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `mother1_name1` (`name1`),\\n  KEY `mother1_name2` (`name2`),\\n  CONSTRAINT `mother1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `mother1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de madre con las columnas de, nombre nombre",
      "output": "('mother2', \"CREATE TABLE `mother2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `mother2_name1` (`name1`),\\n  KEY `mother2_name2` (`name2`),\\n  CONSTRAINT `mother2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `mother2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de madre con las columnas de, nombre nombre",
      "output": "('mother3', \"CREATE TABLE `mother3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `mother3_name1` (`name1`),\\n  KEY `mother3_name2` (`name2`),\\n  CONSTRAINT `mother3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `mother3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de madre con las columnas de, nombre nombre",
      "output": "('mother4', \"CREATE TABLE `mother4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `mother4_name1` (`name1`),\\n  KEY `mother4_name2` (`name2`),\\n  CONSTRAINT `mother4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `mother4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de madre con las columnas de, nombre nombre",
      "output": "('mother5', \"CREATE TABLE `mother5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `mother5_name1` (`name1`),\\n  KEY `mother5_name2` (`name2`),\\n  CONSTRAINT `mother5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `mother5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrino con las columnas de, nombre nombre",
      "output": "('nephew', \"CREATE TABLE `nephew` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `nephew_name1` (`name1`),\\n  KEY `nephew_name2` (`name2`),\\n  CONSTRAINT `nephew_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `nephew_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrino con las columnas de, nombre nombre",
      "output": "('nephew1', \"CREATE TABLE `nephew1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `nephew1_name1` (`name1`),\\n  KEY `nephew1_name2` (`name2`),\\n  CONSTRAINT `nephew1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `nephew1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrino con las columnas de, nombre nombre",
      "output": "('nephew2', \"CREATE TABLE `nephew2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `nephew2_name1` (`name1`),\\n  KEY `nephew2_name2` (`name2`),\\n  CONSTRAINT `nephew2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `nephew2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrino con las columnas de, nombre nombre",
      "output": "('nephew3', \"CREATE TABLE `nephew3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `nephew3_name1` (`name1`),\\n  KEY `nephew3_name2` (`name2`),\\n  CONSTRAINT `nephew3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `nephew3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrino con las columnas de, nombre nombre",
      "output": "('nephew4', \"CREATE TABLE `nephew4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `nephew4_name1` (`name1`),\\n  KEY `nephew4_name2` (`name2`),\\n  CONSTRAINT `nephew4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `nephew4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrino con las columnas de, nombre nombre",
      "output": "('nephew5', \"CREATE TABLE `nephew5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `nephew5_name1` (`name1`),\\n  KEY `nephew5_name2` (`name2`),\\n  CONSTRAINT `nephew5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `nephew5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrina con las columnas de, nombre nombre",
      "output": "('niece', \"CREATE TABLE `niece` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `niece_name1` (`name1`),\\n  KEY `niece_name2` (`name2`),\\n  CONSTRAINT `niece_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `niece_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrina con las columnas de, nombre nombre",
      "output": "('niece1', \"CREATE TABLE `niece1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `niece1_name1` (`name1`),\\n  KEY `niece1_name2` (`name2`),\\n  CONSTRAINT `niece1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `niece1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrina con las columnas de, nombre nombre",
      "output": "('niece2', \"CREATE TABLE `niece2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `niece2_name1` (`name1`),\\n  KEY `niece2_name2` (`name2`),\\n  CONSTRAINT `niece2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `niece2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrina con las columnas de, nombre nombre",
      "output": "('niece3', \"CREATE TABLE `niece3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `niece3_name1` (`name1`),\\n  KEY `niece3_name2` (`name2`),\\n  CONSTRAINT `niece3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `niece3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrina con las columnas de, nombre nombre",
      "output": "('niece4', \"CREATE TABLE `niece4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `niece4_name1` (`name1`),\\n  KEY `niece4_name2` (`name2`),\\n  CONSTRAINT `niece4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `niece4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sobrina con las columnas de, nombre nombre",
      "output": "('niece5', \"CREATE TABLE `niece5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `niece5_name1` (`name1`),\\n  KEY `niece5_name2` (`name2`),\\n  CONSTRAINT `niece5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `niece5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de persona con las columnas de, nombre",
      "output": "('person', 'CREATE TABLE `person` (\\n  `name` varchar(10) NOT NULL  PRIMARY KEY (`name`),\\n  KEY `person_name` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hermana con las columnas de, nombre nombre",
      "output": "('sister', \"CREATE TABLE `sister` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `sister_name1` (`name1`),\\n  KEY `sister_name2` (`name2`),\\n  CONSTRAINT `sister_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `sister_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermana con las columnas de, nombre nombre",
      "output": "('sister1', \"CREATE TABLE `sister1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `sister1_name1` (`name1`),\\n  KEY `sister1_name2` (`name2`),\\n  CONSTRAINT `sister1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `sister1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermana con las columnas de, nombre nombre",
      "output": "('sister2', \"CREATE TABLE `sister2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `sister2_name1` (`name1`),\\n  KEY `sister2_name2` (`name2`),\\n  CONSTRAINT `sister2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `sister2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermana con las columnas de, nombre nombre",
      "output": "('sister3', \"CREATE TABLE `sister3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `sister3_name1` (`name1`),\\n  KEY `sister3_name2` (`name2`),\\n  CONSTRAINT `sister3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `sister3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermana con las columnas de, nombre nombre",
      "output": "('sister4', \"CREATE TABLE `sister4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `sister4_name1` (`name1`),\\n  KEY `sister4_name2` (`name2`),\\n  CONSTRAINT `sister4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `sister4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de hermana con las columnas de, nombre nombre",
      "output": "('sister5', \"CREATE TABLE `sister5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `sister5_name1` (`name1`),\\n  KEY `sister5_name2` (`name2`),\\n  CONSTRAINT `sister5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `sister5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de son con las columnas de, nombre nombre",
      "output": "('son', \"CREATE TABLE `son` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `son_name1` (`name1`),\\n  KEY `son_name2` (`name2`),\\n  CONSTRAINT `son_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `son_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de son con las columnas de, nombre nombre",
      "output": "('son1', \"CREATE TABLE `son1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `son1_name1` (`name1`),\\n  KEY `son1_name2` (`name2`),\\n  CONSTRAINT `son1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `son1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de son con las columnas de, nombre nombre",
      "output": "('son2', \"CREATE TABLE `son2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `son2_name1` (`name1`),\\n  KEY `son2_name2` (`name2`),\\n  CONSTRAINT `son2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `son2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de son con las columnas de, nombre nombre",
      "output": "('son3', \"CREATE TABLE `son3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `son3_name1` (`name1`),\\n  KEY `son3_name2` (`name2`),\\n  CONSTRAINT `son3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `son3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de son con las columnas de, nombre nombre",
      "output": "('son4', \"CREATE TABLE `son4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `son4_name1` (`name1`),\\n  KEY `son4_name2` (`name2`),\\n  CONSTRAINT `son4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `son4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de son con las columnas de, nombre nombre",
      "output": "('son5', \"CREATE TABLE `son5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `son5_name1` (`name1`),\\n  KEY `son5_name2` (`name2`),\\n  CONSTRAINT `son5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `son5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tío con las columnas de, nombre nombre",
      "output": "('uncle', \"CREATE TABLE `uncle` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `uncle_name1` (`name1`),\\n  KEY `uncle_name2` (`name2`),\\n  CONSTRAINT `uncle_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `uncle_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tío con las columnas de, nombre nombre",
      "output": "('uncle1', \"CREATE TABLE `uncle1` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `uncle1_name1` (`name1`),\\n  KEY `uncle1_name2` (`name2`),\\n  CONSTRAINT `uncle1_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `uncle1_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tío con las columnas de, nombre nombre",
      "output": "('uncle2', \"CREATE TABLE `uncle2` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `uncle2_name1` (`name1`),\\n  KEY `uncle2_name2` (`name2`),\\n  CONSTRAINT `uncle2_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `uncle2_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tío con las columnas de, nombre nombre",
      "output": "('uncle3', \"CREATE TABLE `uncle3` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `uncle3_name1` (`name1`),\\n  KEY `uncle3_name2` (`name2`),\\n  CONSTRAINT `uncle3_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `uncle3_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tío con las columnas de, nombre nombre",
      "output": "('uncle4', \"CREATE TABLE `uncle4` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `uncle4_name1` (`name1`),\\n  KEY `uncle4_name2` (`name2`),\\n  CONSTRAINT `uncle4_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `uncle4_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tío con las columnas de, nombre nombre",
      "output": "('uncle5', \"CREATE TABLE `uncle5` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `uncle5_name1` (`name1`),\\n  KEY `uncle5_name2` (`name2`),\\n  CONSTRAINT `uncle5_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `uncle5_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de esposa con las columnas de, nombre nombre",
      "output": "('wife', \"CREATE TABLE `wife` (\\n  `name1` varchar(10) NOT NULL DEFAULT ''  `name2` varchar(10) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `wife_name1` (`name1`),\\n  KEY `wife_name2` (`name2`),\\n  CONSTRAINT `wife_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`),\\n  CONSTRAINT `wife_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de conformación con las columnas de, nombre de conformación, nombre de molécula, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f , f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f , f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f , f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f , f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f , f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f , f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f",
      "output": "('conformation', 'CREATE TABLE `conformation` (\\n  `conformation_name` varchar(255) NOT NULL  `molecule_name` varchar(255) DEFAULT NULL,\\n  `f1` int(11) DEFAULT NULL,\\n  `f2` int(11) DEFAULT NULL,\\n  `f3` int(11) DEFAULT NULL,\\n  `f4` int(11) DEFAULT NULL,\\n  `f5` int(11) DEFAULT NULL,\\n  `f6` int(11) DEFAULT NULL,\\n  `f7` int(11) DEFAULT NULL,\\n  `f8` int(11) DEFAULT NULL,\\n  `f9` int(11) DEFAULT NULL,\\n  `f10` int(11) DEFAULT NULL,\\n  `f11` int(11) DEFAULT NULL,\\n  `f12` int(11) DEFAULT NULL,\\n  `f13` int(11) DEFAULT NULL,\\n  `f14` int(11) DEFAULT NULL,\\n  `f15` int(11) DEFAULT NULL,\\n  `f16` int(11) DEFAULT NULL,\\n  `f17` int(11) DEFAULT NULL,\\n  `f18` int(11) DEFAULT NULL,\\n  `f19` int(11) DEFAULT NULL,\\n  `f20` int(11) DEFAULT NULL,\\n  `f21` int(11) DEFAULT NULL,\\n  `f22` int(11) DEFAULT NULL,\\n  `f23` int(11) DEFAULT NULL,\\n  `f24` int(11) DEFAULT NULL,\\n  `f25` int(11) DEFAULT NULL,\\n  `f26` int(11) DEFAULT NULL,\\n  `f27` int(11) DEFAULT NULL,\\n  `f28` int(11) DEFAULT NULL,\\n  `f29` int(11) DEFAULT NULL,\\n  `f30` int(11) DEFAULT NULL,\\n  `f31` int(11) DEFAULT NULL,\\n  `f32` int(11) DEFAULT NULL,\\n  `f33` int(11) DEFAULT NULL,\\n  `f34` int(11) DEFAULT NULL,\\n  `f35` int(11) DEFAULT NULL,\\n  `f36` int(11) DEFAULT NULL,\\n  `f37` int(11) DEFAULT NULL,\\n  `f38` int(11) DEFAULT NULL,\\n  `f39` int(11) DEFAULT NULL,\\n  `f40` int(11) DEFAULT NULL,\\n  `f41` int(11) DEFAULT NULL,\\n  `f42` int(11) DEFAULT NULL,\\n  `f43` int(11) DEFAULT NULL,\\n  `f44` int(11) DEFAULT NULL,\\n  `f45` int(11) DEFAULT NULL,\\n  `f46` int(11) DEFAULT NULL,\\n  `f47` int(11) DEFAULT NULL,\\n  `f48` int(11) DEFAULT NULL,\\n  `f49` int(11) DEFAULT NULL,\\n  `f50` int(11) DEFAULT NULL,\\n  `f51` int(11) DEFAULT NULL,\\n  `f52` int(11) DEFAULT NULL,\\n  `f53` int(11) DEFAULT NULL,\\n  `f54` int(11) DEFAULT NULL,\\n  `f55` int(11) DEFAULT NULL,\\n  `f56` int(11) DEFAULT NULL,\\n  `f57` int(11) DEFAULT NULL,\\n  `f58` int(11) DEFAULT NULL,\\n  `f59` int(11) DEFAULT NULL,\\n  `f60` int(11) DEFAULT NULL,\\n  `f61` int(11) DEFAULT NULL,\\n  `f62` int(11) DEFAULT NULL,\\n  `f63` int(11) DEFAULT NULL,\\n  `f64` int(11) DEFAULT NULL,\\n  `f65` int(11) DEFAULT NULL,\\n  `f66` int(11) DEFAULT NULL,\\n  `f67` int(11) DEFAULT NULL,\\n  `f68` int(11) DEFAULT NULL,\\n  `f69` int(11) DEFAULT NULL,\\n  `f70` int(11) DEFAULT NULL,\\n  `f71` int(11) DEFAULT NULL,\\n  `f72` int(11) DEFAULT NULL,\\n  `f73` int(11) DEFAULT NULL,\\n  `f74` int(11) DEFAULT NULL,\\n  `f75` int(11) DEFAULT NULL,\\n  `f76` int(11) DEFAULT NULL,\\n  `f77` int(11) DEFAULT NULL,\\n  `f78` int(11) DEFAULT NULL,\\n  `f79` int(11) DEFAULT NULL,\\n  `f80` int(11) DEFAULT NULL,\\n  `f81` int(11) DEFAULT NULL,\\n  `f82` int(11) DEFAULT NULL,\\n  `f83` int(11) DEFAULT NULL,\\n  `f84` int(11) DEFAULT NULL,\\n  `f85` int(11) DEFAULT NULL,\\n  `f86` int(11) DEFAULT NULL,\\n  `f87` int(11) DEFAULT NULL,\\n  `f88` int(11) DEFAULT NULL,\\n  `f89` int(11) DEFAULT NULL,\\n  `f90` int(11) DEFAULT NULL,\\n  `f91` int(11) DEFAULT NULL,\\n  `f92` int(11) DEFAULT NULL,\\n  `f93` int(11) DEFAULT NULL,\\n  `f94` int(11) DEFAULT NULL,\\n  `f95` int(11) DEFAULT NULL,\\n  `f96` int(11) DEFAULT NULL,\\n  `f97` int(11) DEFAULT NULL,\\n  `f98` int(11) DEFAULT NULL,\\n  `f99` int(11) DEFAULT NULL,\\n  `f100` int(11) DEFAULT NULL,\\n  `f101` int(11) DEFAULT NULL,\\n  `f102` int(11) DEFAULT NULL,\\n  `f103` int(11) DEFAULT NULL,\\n  `f104` int(11) DEFAULT NULL,\\n  `f105` int(11) DEFAULT NULL,\\n  `f106` int(11) DEFAULT NULL,\\n  `f107` int(11) DEFAULT NULL,\\n  `f108` int(11) DEFAULT NULL,\\n  `f109` int(11) DEFAULT NULL,\\n  `f110` int(11) DEFAULT NULL,\\n  `f111` int(11) DEFAULT NULL,\\n  `f112` int(11) DEFAULT NULL,\\n  `f113` int(11) DEFAULT NULL,\\n  `f114` int(11) DEFAULT NULL,\\n  `f115` int(11) DEFAULT NULL,\\n  `f116` int(11) DEFAULT NULL,\\n  `f117` int(11) DEFAULT NULL,\\n  `f118` int(11) DEFAULT NULL,\\n  `f119` int(11) DEFAULT NULL,\\n  `f120` int(11) DEFAULT NULL,\\n  `f121` int(11) DEFAULT NULL,\\n  `f122` int(11) DEFAULT NULL,\\n  `f123` int(11) DEFAULT NULL,\\n  `f124` int(11) DEFAULT NULL,\\n  `f125` int(11) DEFAULT NULL,\\n  `f126` int(11) DEFAULT NULL,\\n  `f127` int(11) DEFAULT NULL,\\n  `f128` int(11) DEFAULT NULL,\\n  `f129` int(11) DEFAULT NULL,\\n  `f130` int(11) DEFAULT NULL,\\n  `f131` int(11) DEFAULT NULL,\\n  `f132` int(11) DEFAULT NULL,\\n  `f133` int(11) DEFAULT NULL,\\n  `f134` int(11) DEFAULT NULL,\\n  `f135` int(11) DEFAULT NULL,\\n  `f136` int(11) DEFAULT NULL,\\n  `f137` int(11) DEFAULT NULL,\\n  `f138` int(11) DEFAULT NULL,\\n  `f139` int(11) DEFAULT NULL,\\n  `f140` int(11) DEFAULT NULL,\\n  `f141` int(11) DEFAULT NULL,\\n  `f142` int(11) DEFAULT NULL,\\n  `f143` int(11) DEFAULT NULL,\\n  `f144` int(11) DEFAULT NULL,\\n  `f145` int(11) DEFAULT NULL,\\n  `f146` int(11) DEFAULT NULL,\\n  `f147` int(11) DEFAULT NULL,\\n  `f148` int(11) DEFAULT NULL,\\n  `f149` int(11) DEFAULT NULL,\\n  `f150` int(11) DEFAULT NULL,\\n  `f151` int(11) DEFAULT NULL,\\n  `f152` int(11) DEFAULT NULL,\\n  `f153` int(11) DEFAULT NULL,\\n  `f154` int(11) DEFAULT NULL,\\n  `f155` int(11) DEFAULT NULL,\\n  `f156` int(11) DEFAULT NULL,\\n  `f157` int(11) DEFAULT NULL,\\n  `f158` int(11) DEFAULT NULL,\\n  `f159` int(11) DEFAULT NULL,\\n  `f160` int(11) DEFAULT NULL,\\n  `f161` int(11) DEFAULT NULL,\\n  `f162` int(11) DEFAULT NULL,\\n  `f163` int(11) DEFAULT NULL,\\n  `f164` int(11) DEFAULT NULL,\\n  `f165` int(11) DEFAULT NULL,\\n  `f166` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`conformation_name`),\\n  KEY `molecule_name` (`molecule_name`),\\n  CONSTRAINT `conformation_ibfk_1` FOREIGN KEY (`molecule_name`) REFERENCES `molecule` (`molecule_name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de molécula con las columnas de, nombre de molécula, clase",
      "output": "('molecule', 'CREATE TABLE `molecule` (\\n  `molecule_name` varchar(255) NOT NULL  `class` int(0) DEFAULT NULL,\\n  PRIMARY KEY (`molecule_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de molécula con las columnas de, nombre de molécula, clase",
      "output": "('molecule', 'CREATE TABLE `molecule` (\\n  `molecule_name` varchar(255) NOT NULL  `class` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`molecule_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Comportamiento con las columnas de, ID del juego, ID del equipo, ID del jugador, minutos, goles de campo realizados, intentos de goles de campo, puntos realizados, intentos de puntos, tiros libres realizados, intentos de tiros libres, más menos, rebotes ofensivos, rebotes defensivos, rebotes totales, asistencias, faltas personales , robos, pérdidas de balón, tiros bloqueados, bloqueos en contra, puntos, titular",
      "output": "('Actions', 'CREATE TABLE `Actions` (\\n  `GameId` int(11) NOT NULL  `TeamId` int(11) DEFAULT NULL,\\n  `PlayerId` int(11) NOT NULL,\\n  `Minutes` int(11) DEFAULT NULL,\\n  `FieldGoalsMade` int(11) DEFAULT NULL,\\n  `FieldGoalAttempts` int(11) DEFAULT NULL,\\n  `3PointsMade` int(11) DEFAULT NULL,\\n  `3PointAttempts` int(11) DEFAULT NULL,\\n  `FreeThrowsMade` int(11) DEFAULT NULL,\\n  `FreeThrowAttempts` int(11) DEFAULT NULL,\\n  `PlusMinus` int(11) DEFAULT NULL,\\n  `OffensiveRebounds` int(11) DEFAULT NULL,\\n  `DefensiveRebounds` int(11) DEFAULT NULL,\\n  `TotalRebounds` int(11) DEFAULT NULL,\\n  `Assists` int(11) DEFAULT NULL,\\n  `PersonalFouls` int(11) DEFAULT NULL,\\n  `Steals` int(11) DEFAULT NULL,\\n  `Turnovers` int(11) DEFAULT NULL,\\n  `BlockedShots` int(11) DEFAULT NULL,\\n  `BlocksAgainst` int(11) DEFAULT NULL,\\n  `Points` int(11) DEFAULT NULL,\\n  `Starter` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`GameId`,`PlayerId`),\\n  KEY `GameId_idx` (`GameId`),\\n  KEY `PlayerId_idx` (`PlayerId`),\\n  KEY `TeamId_idx` (`TeamId`),\\n  CONSTRAINT `GameId` FOREIGN KEY (`GameId`) REFERENCES `Game` (`GameId`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `playerId-A` FOREIGN KEY (`PlayerId`) REFERENCES `Player` (`PlayerId`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `teamId_A` FOREIGN KEY (`TeamId`) REFERENCES `Team` (`TeamId`) ON DELETE NO ACTION ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Juego con las columnas de, Id. del juego, Id. del equipo, Id. del equipo, Resultado del equipo, URL, Fecha",
      "output": "('Game', 'CREATE TABLE `Game` (\\n  `GameId` int(11) NOT NULL  `Team1Id` int(11) DEFAULT NULL,\\n  `Team2Id` int(11) DEFAULT NULL,\\n  `ResultOfTeam1` int(11) DEFAULT NULL,\\n  `URL` varchar(80) DEFAULT NULL,\\n  `Date` date DEFAULT NULL,\\n  PRIMARY KEY (`GameId`),\\n  KEY `Team1Id_idx` (`Team1Id`),\\n  KEY `Team2Id_idx` (`Team2Id`),\\n  CONSTRAINT `Team1Id` FOREIGN KEY (`Team1Id`) REFERENCES `Team` (`TeamId`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `Team2Id` FOREIGN KEY (`Team2Id`) REFERENCES `Team` (`TeamId`) ON DELETE NO ACTION ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Jugador con las columnas de, ID del jugador, Nombre del jugador",
      "output": "('Player', \"CREATE TABLE `Player` (\\n  `PlayerId` int(11) NOT NULL COMMENT '\\t'  `PlayerName` varchar(30) DEFAULT NULL,\\n  PRIMARY KEY (`PlayerId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Equipo con las columnas de, ID del equipo, Nombre del equipo",
      "output": "('Team', 'CREATE TABLE `Team` (\\n  `TeamId` int(11) NOT NULL  `TeamName` varchar(45) DEFAULT NULL,\\n  PRIMARY KEY (`TeamId`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de se unió al draft todos los jugadores originales con las columnas de, ID, edad, draft g, mp, draft fg, fga, p, pa, draft ft, fta, orb, draft trb, draft ast, draft stl, draft blk, draft tov, draft pf, draft pts, fg per, p por, pies por, mp por, pts por, trb por, ast por, temporada, peso, altura, posición, brotes, nacido, año borrador, pk, honor amature, universidad, datos sin procesar, carrera g, carrera por, carrera ws, carrera ws",
      "output": "('joined_drafted_all_players_original', 'CREATE TABLE `joined_drafted_all_players_original` (\\n  `ID` int(11) DEFAULT NULL  `age` int(11) DEFAULT NULL,\\n  `draft_g` int(11) DEFAULT NULL,\\n  `mp` int(11) DEFAULT NULL,\\n  `draft_fg` int(11) DEFAULT NULL,\\n  `fga` int(11) DEFAULT NULL,\\n  `3p` int(11) DEFAULT NULL,\\n  `3pa` int(11) DEFAULT NULL,\\n  `draft_ft` int(11) DEFAULT NULL,\\n  `fta` int(11) DEFAULT NULL,\\n  `orb` int(11) DEFAULT NULL,\\n  `draft_trb` int(11) DEFAULT NULL,\\n  `draft_ast` int(11) DEFAULT NULL,\\n  `draft_stl` int(11) DEFAULT NULL,\\n  `draft_blk` int(11) DEFAULT NULL,\\n  `draft_tov` int(11) DEFAULT NULL,\\n  `draft_pf` int(11) DEFAULT NULL,\\n  `draft_pts` int(11) DEFAULT NULL,\\n  `fg_per` double DEFAULT NULL,\\n  `3p_per` int(11) DEFAULT NULL,\\n  `ft_per` double DEFAULT NULL,\\n  `mp_per` double DEFAULT NULL,\\n  `pts_per` double DEFAULT NULL,\\n  `trb_per` double DEFAULT NULL,\\n  `ast_per` double DEFAULT NULL,\\n  `season` text DEFAULT NULL,\\n  `weight` int(11) DEFAULT NULL,\\n  `height` int(11) DEFAULT NULL,\\n  `position` text DEFAULT NULL,\\n  `shoots` text DEFAULT NULL,\\n  `born` text DEFAULT NULL,\\n  `draft_year` int(11) DEFAULT NULL,\\n  `pk` int(11) DEFAULT NULL,\\n  `amature_honor` int(11) DEFAULT NULL,\\n  `college` text DEFAULT NULL,\\n  `raw_data` int(11) DEFAULT NULL,\\n  `career_g` int(11) DEFAULT NULL,\\n  `career_per` double DEFAULT NULL,\\n  `career_ws` double DEFAULT NULL,\\n  `career_ws48` double DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resultados compactos temporada regular con las columnas de, temporada, daynum, steam, wscore, steam, score, wloc, numot",
      "output": "('regular_season_compact_results', 'CREATE TABLE `regular_season_compact_results` (\\n  `season` int(11) NOT NULL  `daynum` int(11) NOT NULL,\\n  `wteam` int(11) NOT NULL,\\n  `wscore` int(11) DEFAULT NULL,\\n  `lteam` int(11) NOT NULL,\\n  `lscore` int(11) DEFAULT NULL,\\n  `wloc` varchar(255) DEFAULT NULL,\\n  `numot` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`season`,`daynum`,`wteam`,`lteam`),\\n  KEY `regular_compact_season` (`season`) USING BTREE,\\n  KEY `regular_compact_wteam` (`wteam`) USING BTREE,\\n  KEY `regular_compact_lteam` (`lteam`) USING BTREE,\\n  CONSTRAINT `regular_season_compact_results_ibfk_1` FOREIGN KEY (`season`) REFERENCES `seasons` (`season`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `regular_season_compact_results_ibfk_2` FOREIGN KEY (`wteam`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `regular_season_compact_results_ibfk_3` FOREIGN KEY (`lteam`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de resultados detallados de la temporada regular con las columnas de, temporada, daynum, wteam, wscore, lteam, lscore, wloc, numot, wfgm, wfga, wfgm, wfga, wftm, wfta, wor, wdr, wast, omc, wstl, wblk, wpf, lfgm, lfga, lfgm, lfga , lftm, lfta, lor, ldr, último, lto, lstl, lblk, lpf",
      "output": "('regular_season_detailed_results', 'CREATE TABLE `regular_season_detailed_results` (\\n  `season` int(11) NOT NULL  `daynum` int(11) NOT NULL,\\n  `wteam` int(11) NOT NULL,\\n  `wscore` int(11) NOT NULL,\\n  `lteam` int(11) NOT NULL,\\n  `lscore` int(11) NOT NULL,\\n  `wloc` varchar(255) DEFAULT NULL,\\n  `numot` int(11) DEFAULT NULL,\\n  `wfgm` int(11) DEFAULT NULL,\\n  `wfga` int(11) DEFAULT NULL,\\n  `wfgm3` int(11) DEFAULT NULL,\\n  `wfga3` int(11) DEFAULT NULL,\\n  `wftm` int(11) DEFAULT NULL,\\n  `wfta` int(11) DEFAULT NULL,\\n  `wor` int(11) DEFAULT NULL,\\n  `wdr` int(11) DEFAULT NULL,\\n  `wast` int(11) DEFAULT NULL,\\n  `wto` int(11) DEFAULT NULL,\\n  `wstl` int(11) DEFAULT NULL,\\n  `wblk` int(11) DEFAULT NULL,\\n  `wpf` int(11) DEFAULT NULL,\\n  `lfgm` int(11) DEFAULT NULL,\\n  `lfga` int(11) DEFAULT NULL,\\n  `lfgm3` int(11) DEFAULT NULL,\\n  `lfga3` int(11) DEFAULT NULL,\\n  `lftm` int(11) DEFAULT NULL,\\n  `lfta` int(11) DEFAULT NULL,\\n  `lor` int(11) DEFAULT NULL,\\n  `ldr` int(11) DEFAULT NULL,\\n  `last` int(11) DEFAULT NULL,\\n  `lto` int(11) DEFAULT NULL,\\n  `lstl` int(11) DEFAULT NULL,\\n  `lblk` int(11) DEFAULT NULL,\\n  `lpf` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`season`,`daynum`,`wteam`,`lteam`),\\n  KEY `regular_detailed_season` (`season`) USING BTREE,\\n  KEY `regular_detailed_wteam` (`wteam`) USING BTREE,\\n  KEY `regular_detailed_lscore` (`lscore`) USING BTREE,\\n  KEY `regular_detailed_lteam` (`lteam`) USING BTREE,\\n  CONSTRAINT `regular_season_detailed_results_ibfk_1` FOREIGN KEY (`season`) REFERENCES `seasons` (`season`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `regular_season_detailed_results_ibfk_2` FOREIGN KEY (`wteam`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `regular_season_detailed_results_ibfk_3` FOREIGN KEY (`lteam`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de estaciones con las columnas de, estación, día cero, región W, región X, región Y, región Z",
      "output": "('seasons', 'CREATE TABLE `seasons` (\\n  `season` int(11) NOT NULL  `dayzero` datetime DEFAULT NULL,\\n  `regionW` varchar(255) DEFAULT NULL,\\n  `regionX` varchar(255) DEFAULT NULL,\\n  `regionY` varchar(255) DEFAULT NULL,\\n  `regionZ` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`season`),\\n  KEY `seasons_season` (`season`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, id, temporada, id de equipo, id de equipo, pred, id de equipo gana, id de equipo gana",
      "output": "('target', 'CREATE TABLE `target` (\\n  `id` varchar(255) NOT NULL  `season` int(4) DEFAULT NULL,\\n  `team_id1` int(4) DEFAULT NULL,\\n  `team_id2` int(4) DEFAULT NULL,\\n  `pred` float DEFAULT NULL,\\n  `team_id1_wins` int(1) DEFAULT NULL,\\n  `team_id2_wins` int(1) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `target_team_id1` (`team_id1`) USING BTREE,\\n  KEY `target_team_id2` (`team_id2`) USING BTREE,\\n  CONSTRAINT `target_ibfk_1` FOREIGN KEY (`team_id1`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `target_ibfk_2` FOREIGN KEY (`team_id2`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de equipos con las columnas de, id del equipo, nombre del equipo",
      "output": "('teams', 'CREATE TABLE `teams` (\\n  `team_id` int(11) NOT NULL  `team_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`team_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de resultados compactos del torneo con las columnas de, temporada, daynum, steam, wscore, steam, score, wloc, numot",
      "output": "('tourney_compact_results', 'CREATE TABLE `tourney_compact_results` (\\n  `season` int(11) NOT NULL  `daynum` int(11) NOT NULL,\\n  `wteam` int(11) NOT NULL,\\n  `wscore` int(11) DEFAULT NULL,\\n  `lteam` int(11) NOT NULL,\\n  `lscore` int(11) DEFAULT NULL,\\n  `wloc` varchar(255) DEFAULT NULL,\\n  `numot` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`season`,`daynum`,`wteam`,`lteam`),\\n  KEY `compact_season` (`season`) USING BTREE,\\n  KEY `compact_wteam` (`wteam`) USING BTREE,\\n  KEY `compact_lteam` (`lteam`) USING BTREE,\\n  CONSTRAINT `tourney_compact_results_ibfk_1` FOREIGN KEY (`season`) REFERENCES `seasons` (`season`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tourney_compact_results_ibfk_2` FOREIGN KEY (`wteam`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tourney_compact_results_ibfk_3` FOREIGN KEY (`lteam`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de resultados detallados del torneo con las columnas de, temporada, daynum, wteam, wscore, lteam, lscore, wloc, numot, wfgm, wfga, wfgm, wfga, wftm, wfta, wor, wdr, wast, omc, wstl, wblk, wpf, lfgm, lfga, lfgm, lfga , lftm, lfta, lor, ldr, último, lto, lstl, lblk, lpf",
      "output": "('tourney_detailed_results', 'CREATE TABLE `tourney_detailed_results` (\\n  `season` int(11) NOT NULL  `daynum` int(11) NOT NULL,\\n  `wteam` int(11) NOT NULL,\\n  `wscore` int(11) DEFAULT NULL,\\n  `lteam` int(11) NOT NULL,\\n  `lscore` int(11) DEFAULT NULL,\\n  `wloc` varchar(255) DEFAULT NULL,\\n  `numot` int(11) DEFAULT NULL,\\n  `wfgm` int(11) DEFAULT NULL,\\n  `wfga` int(11) DEFAULT NULL,\\n  `wfgm3` int(11) DEFAULT NULL,\\n  `wfga3` int(11) DEFAULT NULL,\\n  `wftm` int(11) DEFAULT NULL,\\n  `wfta` int(11) DEFAULT NULL,\\n  `wor` int(11) DEFAULT NULL,\\n  `wdr` int(11) DEFAULT NULL,\\n  `wast` int(11) DEFAULT NULL,\\n  `wto` int(11) DEFAULT NULL,\\n  `wstl` int(11) DEFAULT NULL,\\n  `wblk` int(11) DEFAULT NULL,\\n  `wpf` int(11) DEFAULT NULL,\\n  `lfgm` int(11) DEFAULT NULL,\\n  `lfga` int(11) DEFAULT NULL,\\n  `lfgm3` int(11) DEFAULT NULL,\\n  `lfga3` int(11) DEFAULT NULL,\\n  `lftm` int(11) DEFAULT NULL,\\n  `lfta` int(11) DEFAULT NULL,\\n  `lor` int(11) DEFAULT NULL,\\n  `ldr` int(11) DEFAULT NULL,\\n  `last` int(11) DEFAULT NULL,\\n  `lto` int(11) DEFAULT NULL,\\n  `lstl` int(11) DEFAULT NULL,\\n  `lblk` int(11) DEFAULT NULL,\\n  `lpf` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`season`,`daynum`,`wteam`,`lteam`),\\n  KEY `detailed_season` (`season`) USING BTREE,\\n  KEY `detailed_wteam` (`wteam`) USING BTREE,\\n  KEY `detailed_lteam` (`lteam`) USING BTREE,\\n  CONSTRAINT `tourney_detailed_results_ibfk_1` FOREIGN KEY (`season`) REFERENCES `seasons` (`season`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tourney_detailed_results_ibfk_2` FOREIGN KEY (`wteam`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tourney_detailed_results_ibfk_3` FOREIGN KEY (`lteam`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de semillas de torneo con las columnas de, temporada, semilla, equipo",
      "output": "('tourney_seeds', 'CREATE TABLE `tourney_seeds` (\\n  `season` int(11) NOT NULL  `seed` varchar(255) NOT NULL,\\n  `team` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`season`,`seed`),\\n  KEY `seads_season` (`season`) USING BTREE,\\n  KEY `seads_team` (`team`) USING BTREE,\\n  CONSTRAINT `tourney_seeds_ibfk_1` FOREIGN KEY (`season`) REFERENCES `seasons` (`season`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tourney_seeds_ibfk_2` FOREIGN KEY (`team`) REFERENCES `teams` (`team_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tragamonedas de torneo con las columnas de, temporada, tragamonedas, semilla fuerte, semilla débil",
      "output": "('tourney_slots', 'CREATE TABLE `tourney_slots` (\\n  `season` int(11) NOT NULL  `slot` varchar(255) NOT NULL,\\n  `strongseed` varchar(255) DEFAULT NULL,\\n  `weakseed` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`slot`,`season`),\\n  KEY `slots_season` (`season`) USING BTREE,\\n  CONSTRAINT `tourney_slots_ibfk_1` FOREIGN KEY (`season`) REFERENCES `seasons` (`season`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de algoritmo con las columnas de, nombre, función, descripción, clase de algoritmo",
      "output": "('algorithm', \"CREATE TABLE `algorithm` (\\n  `name` varchar(128) NOT NULL DEFAULT ''  `function` text DEFAULT NULL,\\n  `description` mediumtext DEFAULT NULL,\\n  `algorithm_class` varchar(32) DEFAULT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de calidad del algoritmo con las columnas de, ID de implementación, calidad, calidad Implementación, etiqueta, valor",
      "output": "('algorithm_quality', \"CREATE TABLE `algorithm_quality` (\\n  `implementation_id` int(16) NOT NULL  `quality` varchar(128) NOT NULL DEFAULT '',\\n  `qualityImplementation` varchar(64) DEFAULT NULL,\\n  `label` varchar(128) NOT NULL,\\n  `value` varchar(128) DEFAULT NULL,\\n  PRIMARY KEY (`implementation_id`,`quality`,`label`),\\n  KEY `algorithm_quality_quality` (`quality`),\\n  CONSTRAINT `algorithm_quality_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `algorithm_quality_ibfk_2` FOREIGN KEY (`quality`) REFERENCES `quality` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de configuración del algoritmo con las columnas de, sid, padre, ID de implementación, algoritmo, rol, es predeterminado, estructura del algoritmo, cadena de configuración",
      "output": "('algorithm_setup', \"CREATE TABLE `algorithm_setup` (\\n  `sid` int(10) unsigned NOT NULL AUTO_INCREMENT  `parent` int(10) unsigned NOT NULL,\\n  `implementation_id` int(16) NOT NULL,\\n  `algorithm` varchar(128) DEFAULT NULL,\\n  `role` varchar(64) NOT NULL DEFAULT 'Learner',\\n  `isDefault` enum('true','false') DEFAULT 'false',\\n  `algorithm_structure` varchar(64) DEFAULT NULL,\\n  `setup_string` text DEFAULT NULL,\\n  PRIMARY KEY (`sid`),\\n  KEY `algorithm_setup_algorithm_isDefault_sid` (`algorithm`,`isDefault`,`sid`),\\n  KEY `algorithm_setup_algorithm` (`algorithm`),\\n  KEY `algorithm_setup_implementation_id` (`implementation_id`),\\n  KEY `algorithm_setup_isDefault` (`isDefault`),\\n  KEY `algorithm_setup_parent` (`parent`),\\n  KEY `algorithm_setup_role` (`role`),\\n  KEY `algorithm_setup_role_parent` (`role`,`parent`),\\n  KEY `algorithm_setup_role_sid` (`role`,`sid`),\\n  CONSTRAINT `algorithm_setup_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `algorithm_setup_ibfk_2` FOREIGN KEY (`algorithm`) REFERENCES `algorithm` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=6436 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de referencia bibliografica con las columnas de, id, id de implementación, cita, url",
      "output": "('bibliographical_reference', 'CREATE TABLE `bibliographical_reference` (\\n  `id` int(10) NOT NULL AUTO_INCREMENT  `implementation_id` int(16) NOT NULL,\\n  `citation` mediumtext NOT NULL,\\n  `url` varchar(128) NOT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `bibliographical_reference_implementation_id` (`implementation_id`),\\n  CONSTRAINT `bibliographical_reference_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de función de datos con las columnas de, hizo, índice, nombre, tipo de datos, valores nominales, es objetivo, es identificador de fila, es ignorar, Número de valores distintos, Número de valores únicos, Número de valores perdidos, Número de valores enteros, Número de valores reales, Número de Valores nominales, número de valores, valor máximo, valor mínimo, valor medio, desviación estándar, distribución de clases",
      "output": "('data_feature', \"CREATE TABLE `data_feature` (\\n  `did` int(10) unsigned NOT NULL  `index` int(10) NOT NULL DEFAULT 0,\\n  `name` varchar(64) NOT NULL,\\n  `data_type` varchar(64) DEFAULT NULL,\\n  `nominal_values` text DEFAULT NULL,\\n  `is_target` enum('true','false') NOT NULL DEFAULT 'false',\\n  `is_row_identifier` enum('true','false') NOT NULL DEFAULT 'false',\\n  `is_ignore` enum('true','false') NOT NULL DEFAULT 'false',\\n  `NumberOfDistinctValues` int(11) DEFAULT NULL,\\n  `NumberOfUniqueValues` int(11) DEFAULT NULL,\\n  `NumberOfMissingValues` int(11) NOT NULL,\\n  `NumberOfIntegerValues` int(11) DEFAULT NULL,\\n  `NumberOfRealValues` int(11) DEFAULT NULL,\\n  `NumberOfNominalValues` varchar(512) NOT NULL,\\n  `NumberOfValues` int(11) NOT NULL,\\n  `MaximumValue` int(11) NOT NULL,\\n  `MinimumValue` int(11) NOT NULL,\\n  `MeanValue` int(11) NOT NULL,\\n  `StandardDeviation` int(11) NOT NULL,\\n  `ClassDistribution` text DEFAULT NULL,\\n  PRIMARY KEY (`did`,`index`),\\n  CONSTRAINT `data_feature_ibfk_1` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de calidad de datos con las columnas de, datos, calidad, ID de implementación, etiqueta, valor, descripción",
      "output": "('data_quality', \"CREATE TABLE `data_quality` (\\n  `data` int(10) unsigned NOT NULL DEFAULT 0  `quality` varchar(128) NOT NULL DEFAULT '',\\n  `implementation_id` int(16) NOT NULL,\\n  `label` varchar(128) NOT NULL,\\n  `value` varchar(128) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  PRIMARY KEY (`data`,`quality`,`label`),\\n  KEY `data_quality_implementation_id` (`implementation_id`),\\n  KEY `data_quality_quality` (`quality`),\\n  CONSTRAINT `data_quality_ibfk_1` FOREIGN KEY (`quality`) REFERENCES `quality` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `data_quality_ibfk_2` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de conjunto de datos con las columnas de, hizo, cargador, fuente, nombre, versión, etiqueta de versión, descripción, formato, creador, colaborador, fecha de recopilación, fecha de carga, idioma, licencia, cita, colección, URL, es original, ID de archivo, atributo de destino predeterminado, ID de fila atributo, ignorar atributo, url de papel, visibilidad, id de datos original, url de datos original, procesado, error, mensaje de error, estado, actualizar comentario, última actualización",
      "output": "('dataset', \"CREATE TABLE `dataset` (\\n  `did` int(10) unsigned NOT NULL AUTO_INCREMENT  `uploader` int(10) DEFAULT NULL,\\n  `source` int(10) unsigned DEFAULT NULL,\\n  `name` varchar(128) NOT NULL,\\n  `version` varchar(64) NOT NULL,\\n  `version_label` varchar(128) DEFAULT NULL,\\n  `description` text NOT NULL,\\n  `format` varchar(64) NOT NULL DEFAULT 'arff',\\n  `creator` text DEFAULT NULL,\\n  `contributor` text DEFAULT NULL,\\n  `collection_date` varchar(128) DEFAULT NULL,\\n  `upload_date` datetime NOT NULL,\\n  `language` varchar(128) DEFAULT NULL,\\n  `licence` varchar(64) NOT NULL DEFAULT 'Public',\\n  `citation` text DEFAULT NULL,\\n  `collection` varchar(64) DEFAULT NULL,\\n  `url` mediumtext NOT NULL,\\n  `isOriginal` enum('true','false') DEFAULT NULL,\\n  `file_id` int(10) DEFAULT NULL,\\n  `default_target_attribute` varchar(128) DEFAULT NULL,\\n  `row_id_attribute` varchar(128) DEFAULT NULL,\\n  `ignore_attribute` varchar(128) DEFAULT NULL,\\n  `paper_url` mediumtext DEFAULT NULL,\\n  `visibility` varchar(128) NOT NULL DEFAULT 'public',\\n  `original_data_id` int(10) DEFAULT NULL,\\n  `original_data_url` mediumtext DEFAULT NULL,\\n  `processed` datetime DEFAULT NULL,\\n  `error` enum('true','false') NOT NULL DEFAULT 'false',\\n  `error_message` text DEFAULT NULL,\\n  `status` enum('in_preparation','active','deactivated') NOT NULL DEFAULT 'in_preparation',\\n  `update_comment` text DEFAULT NULL,\\n  `last_update` datetime DEFAULT NULL,\\n  PRIMARY KEY (`did`),\\n  KEY `dataset_name` (`name`),\\n  KEY `dataset_name_did_version_version_label` (`name`,`did`,`version`,`version_label`)\\n) ENGINE=InnoDB AUTO_INCREMENT=23511 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de descargas con las columnas de, hizo, tipo de conocimiento, id de conocimiento, id de usuario, conteo, tiempo",
      "output": "('downloads', 'CREATE TABLE `downloads` (\\n  `did` int(16) unsigned NOT NULL AUTO_INCREMENT  `knowledge_type` varchar(1) NOT NULL,\\n  `knowledge_id` int(10) NOT NULL,\\n  `user_id` mediumint(8) NOT NULL,\\n  `count` smallint(6) NOT NULL DEFAULT 1,\\n  `time` timestamp NOT NULL DEFAULT current_timestamp(),\\n  PRIMARY KEY (`knowledge_type`,`knowledge_id`,`user_id`),\\n  KEY `downloads_did` (`did`),\\n  CONSTRAINT `downloads_ibfk_1` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`)\\n) ENGINE=InnoDB AUTO_INCREMENT=12567 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de votos negativos con las columnas de, hizo, tipo de conocimiento, id de conocimiento, id de usuario, motivo, hora, original",
      "output": "('downvotes', 'CREATE TABLE `downvotes` (\\n  `did` int(16) unsigned NOT NULL AUTO_INCREMENT  `knowledge_type` varchar(1) NOT NULL,\\n  `knowledge_id` int(10) NOT NULL,\\n  `user_id` mediumint(8) NOT NULL,\\n  `reason` int(11) NOT NULL,\\n  `time` timestamp NOT NULL DEFAULT current_timestamp(),\\n  `original` tinyint(4) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`knowledge_type`,`knowledge_id`,`user_id`),\\n  KEY `downvotes_did` (`did`),\\n  CONSTRAINT `downvotes_ibfk_1` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`)\\n) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de procedimiento de estimación con las columnas de, id, ttid, nombre, tipo, repeticiones, pliegues, porcentaje, muestreo estratificado, conjunto de pruebas personalizado, fecha",
      "output": "('estimation_procedure', \"CREATE TABLE `estimation_procedure` (\\n  `id` int(8) NOT NULL AUTO_INCREMENT  `ttid` int(11) NOT NULL,\\n  `name` varchar(128) NOT NULL,\\n  `type` varchar(64) NOT NULL,\\n  `repeats` int(8) DEFAULT NULL,\\n  `folds` int(8) DEFAULT NULL,\\n  `percentage` int(8) DEFAULT NULL,\\n  `stratified_sampling` enum('true','false') DEFAULT NULL,\\n  `custom_testset` enum('true','false') NOT NULL DEFAULT 'false',\\n  `date` timestamp NOT NULL DEFAULT current_timestamp(),\\n  PRIMARY KEY (`id`),\\n  KEY `estimation_procedure_ttid` (`ttid`),\\n  KEY `estimation_procedure__type` (`type`) USING BTREE,\\n  CONSTRAINT `estimation_procedure_ibfk_1` FOREIGN KEY (`ttid`) REFERENCES `task_type` (`ttid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `estimation_procedure_ibfk_2` FOREIGN KEY (`type`) REFERENCES `estimation_procedure_type` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tipo de procedimiento de estimación con las columnas de, nombre, descripción",
      "output": "('estimation_procedure_type', 'CREATE TABLE `estimation_procedure_type` (\\n  `name` varchar(64) NOT NULL  `description` mediumtext NOT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de evaluación con las columnas de, hizo, fuente, ID de implementación, función, etiqueta, valor, stdev",
      "output": "('evaluation', 'CREATE TABLE `evaluation` (\\n  `did` int(10) unsigned NOT NULL DEFAULT 0  `source` int(10) unsigned NOT NULL,\\n  `implementation_id` int(16) NOT NULL,\\n  `function` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\\n  `label` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\\n  `value` double NOT NULL,\\n  `stdev` double DEFAULT NULL,\\n  UNIQUE KEY `did` (`did`,`function`,`label`),\\n  KEY `function` (`function`,`source`,`label`(32)),\\n  KEY `func` (`function`),\\n  KEY `implementation_id` (`implementation_id`),\\n  CONSTRAINT `evaluation_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`),\\n  CONSTRAINT `evaluation_ibfk_2` FOREIGN KEY (`function`) REFERENCES `math_function` (`name`),\\n  CONSTRAINT `evaluation_ibfk_3` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci')"
    },
    {
      "input": "Una tabla de implementación con las columnas de, id, nombre completo, cargador, nombre, versión, versión externa, creador, colaborador, fecha de carga, licencia, idioma, descripción, descripción completa, notas de instalación, dependencias, implementos, id de archivo binario, id de archivo fuente, visibilidad, cita",
      "output": "('implementation', \"CREATE TABLE `implementation` (\\n  `id` int(16) NOT NULL AUTO_INCREMENT  `fullName` varchar(1024) NOT NULL,\\n  `uploader` int(10) DEFAULT NULL,\\n  `name` varchar(1024) NOT NULL,\\n  `version` int(16) NOT NULL,\\n  `external_version` varchar(128) NOT NULL,\\n  `creator` varchar(128) DEFAULT NULL,\\n  `contributor` text DEFAULT NULL,\\n  `uploadDate` datetime NOT NULL,\\n  `licence` varchar(64) DEFAULT NULL,\\n  `language` varchar(128) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  `fullDescription` text DEFAULT NULL,\\n  `installationNotes` text DEFAULT NULL,\\n  `dependencies` text DEFAULT NULL,\\n  `implements` varchar(128) DEFAULT NULL,\\n  `binary_file_id` int(10) DEFAULT NULL,\\n  `source_file_id` int(10) DEFAULT NULL,\\n  `visibility` varchar(128) NOT NULL DEFAULT 'public',\\n  `citation` text DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `implementation_uploader` (`uploader`),\\n  KEY `implementation_id_external_version` (`id`,`external_version`),\\n  KEY `implementation_name` (`name`(255)) USING BTREE\\n) ENGINE=InnoDB AUTO_INCREMENT=4052 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de componente de implementación con las columnas de, padre, hijo, identificador",
      "output": "('implementation_component', 'CREATE TABLE `implementation_component` (\\n  `parent` int(16) NOT NULL  `child` int(16) NOT NULL,\\n  `identifier` varchar(1024) DEFAULT NULL,\\n  PRIMARY KEY (`parent`,`child`),\\n  KEY `implementation_component_child` (`child`),\\n  CONSTRAINT `implementation_component_ibfk_1` FOREIGN KEY (`parent`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `implementation_component_ibfk_2` FOREIGN KEY (`child`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de aporte con las columnas de, id, nombre completo, id de implementación, nombre, descripción, tipo de datos, valor predeterminado, rango recomendado",
      "output": "('input', 'CREATE TABLE `input` (\\n  `id` int(10) NOT NULL AUTO_INCREMENT  `fullName` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\\n  `implementation_id` int(16) NOT NULL,\\n  `name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `description` text CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `dataType` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `defaultValue` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `recommendedRange` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `input_implementation_id` (`implementation_id`),\\n  CONSTRAINT `input_ibfk_1` FOREIGN KEY (`implementation_id`) REFERENCES `implementation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=33477 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de función matemática con las columnas de, nombre, tipo de función, mín., máx., unidad, mayor es mejor, descripción, código fuente, fecha",
      "output": "('math_function', \"CREATE TABLE `math_function` (\\n  `name` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL  `functionType` varchar(128) NOT NULL DEFAULT 'EvaluationFunction',\\n  `min` varchar(64) NOT NULL,\\n  `max` varchar(64) NOT NULL,\\n  `unit` varchar(64) NOT NULL,\\n  `higherIsBetter` varchar(16) DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  `source_code` text NOT NULL,\\n  `date` timestamp NOT NULL DEFAULT current_timestamp(),\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de calidad con las columnas de, nombre, tipo, fórmula, descripción, tipo de datos, min, max, unidad, prioridad, showonline, fecha",
      "output": "('quality', \"CREATE TABLE `quality` (\\n  `name` varchar(128) NOT NULL  `type` varchar(128) NOT NULL DEFAULT 'DataProperty',\\n  `formula` text DEFAULT NULL,\\n  `description` text DEFAULT NULL,\\n  `datatype` varchar(128) NOT NULL DEFAULT 'undefined',\\n  `min` float DEFAULT NULL,\\n  `max` float DEFAULT NULL,\\n  `unit` varchar(32) DEFAULT NULL,\\n  `priority` int(11) NOT NULL DEFAULT 9999,\\n  `showonline` enum('true','false') NOT NULL,\\n  `date` timestamp NOT NULL DEFAULT current_timestamp(),\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de correr con las columnas de, deshacerse, cargador, principal, configuración, ID de tarea, hora de inicio, estado, prioridad, error, advertencia, mensaje de error, procesado, experimento, corredor, máquina, visibilidad",
      "output": "('run', \"CREATE TABLE `run` (\\n  `rid` int(10) unsigned NOT NULL AUTO_INCREMENT  `uploader` int(10) DEFAULT NULL,\\n  `parent` int(10) unsigned DEFAULT NULL,\\n  `setup` int(10) unsigned NOT NULL DEFAULT 0,\\n  `task_id` int(10) DEFAULT NULL,\\n  `start_time` datetime DEFAULT NULL,\\n  `status` varchar(64) NOT NULL,\\n  `priority` tinyint(8) NOT NULL DEFAULT 10,\\n  `error` varchar(512) DEFAULT NULL,\\n  `warning` varchar(512) DEFAULT NULL,\\n  `error_message` text DEFAULT NULL,\\n  `processed` datetime DEFAULT NULL,\\n  `experiment` int(10) unsigned DEFAULT NULL,\\n  `runner` varchar(16) DEFAULT NULL,\\n  `machine` varchar(64) DEFAULT NULL,\\n  `visibility` varchar(128) NOT NULL DEFAULT 'public',\\n  PRIMARY KEY (`rid`),\\n  KEY `run_setup_task_id` (`setup`,`task_id`),\\n  KEY `run_setup_uploader` (`setup`,`uploader`),\\n  KEY `run_task_id_uploader` (`task_id`,`uploader`),\\n  KEY `run_task_id_uploader_start_time` (`task_id`,`uploader`,`start_time`),\\n  CONSTRAINT `run_ibfk_1` FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=594069 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de archivo de ejecución con las columnas de, hizo, fuente, campo, nombre, formato, ID de archivo",
      "output": "('runfile', 'CREATE TABLE `runfile` (\\n  `did` int(16) unsigned NOT NULL AUTO_INCREMENT  `source` int(16) NOT NULL,\\n  `field` varchar(128) NOT NULL,\\n  `name` varchar(128) NOT NULL,\\n  `format` varchar(128) NOT NULL,\\n  `file_id` int(16) NOT NULL,\\n  PRIMARY KEY (`did`),\\n  KEY `runfile_source_field` (`source`,`field`),\\n  CONSTRAINT `runfile_ibfk_1` FOREIGN KEY (`did`) REFERENCES `dataset` (`did`)\\n) ENGINE=InnoDB AUTO_INCREMENT=22104 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de calendario con las columnas de, sid, ID de tarea, experimento, activo, última asignación, ttid, dependencias, cadena de configuración",
      "output": "('schedule', \"CREATE TABLE `schedule` (\\n  `sid` int(8) NOT NULL  `task_id` int(8) NOT NULL,\\n  `experiment` varchar(128) NOT NULL DEFAULT '',\\n  `active` enum('true','false') NOT NULL DEFAULT 'true',\\n  `last_assigned` datetime DEFAULT NULL,\\n  `ttid` int(11) NOT NULL,\\n  `dependencies` varchar(128) NOT NULL,\\n  `setup_string` mediumtext NOT NULL,\\n  PRIMARY KEY (`sid`,`task_id`),\\n  KEY `schedule_dependencies_active_ttid_last_assigned` (`dependencies`,`active`,`ttid`,`last_assigned`),\\n  KEY `schedule_sid_task_id_active` (`sid`,`task_id`,`active`),\\n  KEY `schedule_sid_task_id_active_last_assigned` (`sid`,`task_id`,`active`,`last_assigned`),\\n  KEY `schedule_task_id` (`task_id`),\\n  KEY `schedule_ttid` (`ttid`),\\n  CONSTRAINT `schedule_ibfk_1` FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `schedule_ibfk_2` FOREIGN KEY (`ttid`) REFERENCES `task_type` (`ttid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de diferencias de configuración con las columnas de, sid A, sid B, ID de tarea, tamaño de tarea, diferencias",
      "output": "('setup_differences', 'CREATE TABLE `setup_differences` (\\n  `sidA` int(10) unsigned NOT NULL  `sidB` int(10) unsigned NOT NULL,\\n  `task_id` int(10) NOT NULL,\\n  `task_size` int(10) NOT NULL,\\n  `differences` int(10) NOT NULL,\\n  PRIMARY KEY (`sidA`,`sidB`,`task_id`),\\n  KEY `setup_differences_sidB` (`sidB`),\\n  KEY `setup_differences_task_id` (`task_id`),\\n  CONSTRAINT `setup_differences_ibfk_1` FOREIGN KEY (`sidA`) REFERENCES `algorithm_setup` (`sid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `setup_differences_ibfk_2` FOREIGN KEY (`sidB`) REFERENCES `algorithm_setup` (`sid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `setup_differences_ibfk_3` FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tarea con las columnas de, ID de tarea, ttid, creador, fecha de creación",
      "output": "('task', 'CREATE TABLE `task` (\\n  `task_id` int(10) NOT NULL AUTO_INCREMENT  `ttid` int(10) NOT NULL,\\n  `creator` int(10) DEFAULT NULL,\\n  `creation_date` datetime DEFAULT NULL,\\n  PRIMARY KEY (`task_id`),\\n  KEY `task_ttid` (`ttid`),\\n  CONSTRAINT `task_ibfk_1` FOREIGN KEY (`ttid`) REFERENCES `task_type` (`ttid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=52949 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de entradas de tareas con las columnas de, ID de tarea, entrada, valor",
      "output": "('task_inputs', 'CREATE TABLE `task_inputs` (\\n  `task_id` int(10) NOT NULL  `input` varchar(64) NOT NULL,\\n  `value` mediumtext NOT NULL,\\n  PRIMARY KEY (`task_id`,`input`),\\n  UNIQUE KEY `task_inputs_task_id_input_value` (`task_id`,`input`,`value`(16)) USING BTREE,\\n  CONSTRAINT `task_inputs_ibfk_1` FOREIGN KEY (`task_id`) REFERENCES `task` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipos de tarea io con las columnas de, nombre, descripción",
      "output": "('task_io_types', 'CREATE TABLE `task_io_types` (\\n  `name` varchar(64) NOT NULL  `description` text NOT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipo de tarea con las columnas de, ttid, nombre, descripción, creador, colaboradores, fecha de creación",
      "output": "('task_type', 'CREATE TABLE `task_type` (\\n  `ttid` int(10) NOT NULL AUTO_INCREMENT  `name` varchar(128) NOT NULL,\\n  `description` mediumtext NOT NULL,\\n  `creator` varchar(128) NOT NULL,\\n  `contributors` mediumtext DEFAULT NULL,\\n  `creationDate` datetime NOT NULL,\\n  PRIMARY KEY (`ttid`)\\n) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipo de tarea de entrada y salida con las columnas de, ttid, nombre, tipo, io, requisito, descripción, orden, plantilla api, búsqueda de plantilla",
      "output": "('task_type_inout', \"CREATE TABLE `task_type_inout` (\\n  `ttid` int(10) NOT NULL  `name` varchar(64) NOT NULL,\\n  `type` varchar(64) NOT NULL,\\n  `io` enum('input','output') NOT NULL,\\n  `requirement` enum('required','optional','hidden') NOT NULL,\\n  `description` varchar(256) NOT NULL,\\n  `order` int(8) NOT NULL,\\n  `template_api` text DEFAULT NULL,\\n  `template_search` text DEFAULT NULL,\\n  PRIMARY KEY (`ttid`,`name`,`type`),\\n  KEY `task_type_inout_type` (`type`),\\n  CONSTRAINT `task_type_inout_ibfk_1` FOREIGN KEY (`ttid`) REFERENCES `task_type` (`ttid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `task_type_inout_ibfk_2` FOREIGN KEY (`type`) REFERENCES `task_io_types` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de rastro con las columnas de, ejecutar id, repetir, plegar, iteración, cadena de configuración, evaluación, seleccionado",
      "output": "('trace', \"CREATE TABLE `trace` (\\n  `run_id` int(10) unsigned NOT NULL  `repeat` int(11) NOT NULL,\\n  `fold` int(11) NOT NULL,\\n  `iteration` int(11) NOT NULL,\\n  `setup_string` mediumtext NOT NULL,\\n  `evaluation` varchar(265) NOT NULL,\\n  `selected` enum('true','false') NOT NULL,\\n  PRIMARY KEY (`run_id`,`repeat`,`fold`,`iteration`),\\n  CONSTRAINT `trace_ibfk_1` FOREIGN KEY (`run_id`) REFERENCES `run` (`rid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de activo con las columnas de, Argentina",
      "output": "('active', \"CREATE TABLE `active` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  PRIMARY KEY (`Arg0`),\\n  KEY `active_Arg0` (`Arg0`) USING BTREE,\\n  CONSTRAINT `active_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de postestactive con las columnas de, Argentina",
      "output": "('postestactive', \"CREATE TABLE `postestactive` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  PRIMARY KEY (`Arg0`),\\n  KEY `postestactive_Arg0` (`Arg0`) USING BTREE,\\n  CONSTRAINT `postestactive_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de postestactive  Neg con las columnas de, Argentina",
      "output": "('postestactive_Neg', \"CREATE TABLE `postestactive_Neg` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  PRIMARY KEY (`Arg0`),\\n  KEY `postestactive_Neg_Arg0` (`Arg0`) USING BTREE,\\n  CONSTRAINT `postestactive_Neg_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de activo con las columnas de, id de medicamento, está activo",
      "output": "('pte_active', \"CREATE TABLE `pte_active` (\\n  `drug_id` varchar(80) NOT NULL  `is_active` varchar(80) DEFAULT 'F',\\n  KEY `pte_active_drug_id` (`drug_id`) USING BTREE,\\n  KEY `pte_active_is_active` (`is_active`) USING BTREE,\\n  CONSTRAINT `pte_active_ibfk_2` FOREIGN KEY (`is_active`) REFERENCES `pte_number` (`Binary`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `pte_active_ibfk_3` FOREIGN KEY (`drug_id`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de alcohol pte con las columnas de, argumento, conjunto",
      "output": "('pte_alcohol', \"CREATE TABLE `pte_alcohol` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_alcohol_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_alcohol_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_alcohol_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de haluro de pte alquilo con las columnas de, argumento, conjunto",
      "output": "('pte_alkyl_halide', \"CREATE TABLE `pte_alkyl_halide` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_alkyl_halide_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_alkyl_halide_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_alkyl_halide_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte ames con las columnas de, Argentina",
      "output": "('pte_ames', \"CREATE TABLE `pte_ames` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  PRIMARY KEY (`Arg0`),\\n  KEY `pte_ames_Arg0` (`Arg0`) USING BTREE,\\n  CONSTRAINT `pte_ames_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte amina con las columnas de, argumento, conjunto",
      "output": "('pte_amine', \"CREATE TABLE `pte_amine` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_amine_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_amine_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_amine_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de cajero automático pte con las columnas de, id de fármaco, id de átomo, tipo de átomo, Arg, Arg",
      "output": "('pte_atm', 'CREATE TABLE `pte_atm` (\\n  `drug_id` varchar(80) DEFAULT NULL  `atom_id` varchar(80) NOT NULL,\\n  `atom_type` varchar(80) DEFAULT NULL,\\n  `Arg3` varchar(80) DEFAULT NULL,\\n  `Arg4` decimal(18,3) DEFAULT 0.000,\\n  PRIMARY KEY (`atom_id`),\\n  KEY `pte_atm_drug_id` (`drug_id`) USING BTREE,\\n  KEY `pte_atm_atom_id` (`atom_id`) USING BTREE,\\n  CONSTRAINT `pte_atm_ibfk_1` FOREIGN KEY (`drug_id`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de recuento de bonos pte atm con las columnas de, id de átomo, Cnt",
      "output": "('pte_atm_bond_count', \"CREATE TABLE `pte_atm_bond_count` (\\n  `atom_id` varchar(80) NOT NULL DEFAULT ''  `Cnt` int(11) DEFAULT 0,\\n  PRIMARY KEY (`atom_id`),\\n  KEY `pte_atm_bond_count_Arg0` (`atom_id`) USING BTREE,\\n  KEY `pte_atm_bond_count_Cnt` (`Cnt`) USING BTREE,\\n  CONSTRAINT `pte_atm_bond_count_ibfk_1` FOREIGN KEY (`atom_id`) REFERENCES `pte_atm` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de conteo de cajeros automáticos pte con las columnas de, Arg, Cnt",
      "output": "('pte_atm_count', \"CREATE TABLE `pte_atm_count` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Cnt` int(11) DEFAULT 0,\\n  PRIMARY KEY (`Arg0`),\\n  KEY `pte_atm_count_Cnt` (`Cnt`) USING BTREE,\\n  KEY `pte_atm_count_Arg0` (`Arg0`) USING BTREE,\\n  CONSTRAINT `pte_atm_count_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de carga máxima del cajero automático pte con las columnas de, Arg, MX",
      "output": "('pte_atm_max_charge', \"CREATE TABLE `pte_atm_max_charge` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Mx` decimal(18,3) DEFAULT 0.000,\\n  PRIMARY KEY (`Arg0`),\\n  KEY `pte_atm_max_charge_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_atm_max_charge_Mx` (`Mx`) USING BTREE,\\n  CONSTRAINT `pte_atm_max_charge_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de cargo mínimo de atm pte con las columnas de, Argentina, Manganeso",
      "output": "('pte_atm_min_charge', \"CREATE TABLE `pte_atm_min_charge` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Mn` decimal(18,3) DEFAULT 0.000,\\n  PRIMARY KEY (`Arg0`),\\n  KEY `pte_atm_min_charge_Mn` (`Mn`) USING BTREE,\\n  KEY `pte_atm_min_charge_Arg0` (`Arg0`) USING BTREE,\\n  CONSTRAINT `pte_atm_min_charge_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de bono pte con las columnas de, id de fármaco, átomo de, átomo es, Arg",
      "output": "('pte_bond', 'CREATE TABLE `pte_bond` (\\n  `drug_id` varchar(80) DEFAULT NULL  `atom_id1` varchar(80) NOT NULL,\\n  `atom_id2` varchar(80) NOT NULL,\\n  `Arg3` varchar(80) DEFAULT NULL,\\n  PRIMARY KEY (`atom_id1`,`atom_id2`),\\n  KEY `pte_bond_drug_id` (`drug_id`) USING BTREE,\\n  KEY `pte_bond_atom_id1` (`atom_id1`) USING BTREE,\\n  KEY `pte_bond_atom_id2` (`atom_id2`) USING BTREE,\\n  CONSTRAINT `pte_bond_ibfk_1` FOREIGN KEY (`atom_id1`) REFERENCES `pte_atm` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `pte_bond_ibfk_2` FOREIGN KEY (`atom_id2`) REFERENCES `pte_atm` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `pte_bond_ibfk_3` FOREIGN KEY (`drug_id`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de recuento de bonos pte con las columnas de, Arg, Cnt",
      "output": "('pte_bond_count', \"CREATE TABLE `pte_bond_count` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Cnt` int(11) DEFAULT 0,\\n  PRIMARY KEY (`Arg0`),\\n  KEY `pte_bond_count_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_bond_count_Cnt` (`Cnt`) USING BTREE,\\n  CONSTRAINT `pte_bond_count_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de droga pte con las columnas de, identificación de drogas",
      "output": "('pte_drug', 'CREATE TABLE `pte_drug` (\\n  `drug_id` varchar(80) NOT NULL  PRIMARY KEY (`drug_id`),\\n  KEY `pte_drug_drug_id` (`drug_id`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de pasta de éster con las columnas de, argumento, conjunto",
      "output": "('pte_ester', \"CREATE TABLE `pte_ester` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_ester_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_ester_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_ester_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte éter con las columnas de, argumento, conjunto",
      "output": "('pte_ether', \"CREATE TABLE `pte_ether` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_ether_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_ether_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_ether_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte cinco anillo con las columnas de, argumento, conjunto",
      "output": "('pte_five_ring', \"CREATE TABLE `pte_five_ring` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_five_ring_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_five_ring_Arg1` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_five_ring_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte tiene propiedad con las columnas de, Arg, Arg, Arg",
      "output": "('pte_has_property', 'CREATE TABLE `pte_has_property` (\\n  `Arg0` varchar(80) NOT NULL  `Arg1` varchar(80) NOT NULL,\\n  `Arg2` varchar(80) NOT NULL,\\n  KEY `pte_has_property_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_has_property_Arg1` (`Arg1`) USING BTREE,\\n  KEY `pte_has_property_Arg2` (`Arg2`) USING BTREE,\\n  CONSTRAINT `pte_has_property_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de pte imine con las columnas de, argumento, conjunto",
      "output": "('pte_imine', \"CREATE TABLE `pte_imine` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_imine_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_imine_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_imine_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ind pte con las columnas de, Arg, Arg, Arg",
      "output": "('pte_ind', 'CREATE TABLE `pte_ind` (\\n  `Arg0` varchar(80) NOT NULL  `Arg1` varchar(80) NOT NULL,\\n  `Arg2` varchar(80) NOT NULL,\\n  PRIMARY KEY (`Arg0`,`Arg1`),\\n  KEY `pte_ind_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_ind_Arg1` (`Arg1`) USING BTREE,\\n  KEY `pte_ind_Arg2` (`Arg2`) USING BTREE,\\n  CONSTRAINT `pte_ind_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cetona pte con las columnas de, argumento, conjunto",
      "output": "('pte_ketone', \"CREATE TABLE `pte_ketone` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_ketone_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_ketone_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_ketone_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte metoxi con las columnas de, argumento, conjunto",
      "output": "('pte_methoxy', \"CREATE TABLE `pte_methoxy` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_methoxy_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_methoxy_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_methoxy_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte metilo con las columnas de, argumento, conjunto",
      "output": "('pte_methyl', \"CREATE TABLE `pte_methyl` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_methyl_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_methyl_Arg1` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_methyl_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte mutagénico con las columnas de, Argentina",
      "output": "('pte_mutagenic', \"CREATE TABLE `pte_mutagenic` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  PRIMARY KEY (`Arg0`),\\n  KEY `pte_mutagenic_Arg0` (`Arg0`) USING BTREE,\\n  CONSTRAINT `pte_mutagenic_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte nitro con las columnas de, argumento, conjunto",
      "output": "('pte_nitro', \"CREATE TABLE `pte_nitro` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_nitro_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_nitro_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_nitro_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de anillo pte non ar c con las columnas de, argumento, conjunto",
      "output": "('pte_non_ar_5c_ring', \"CREATE TABLE `pte_non_ar_5c_ring` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_non_ar_5c_ring_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_non_ar_5c_ring_Arg1` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_non_ar_5c_ring_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de anillo pte non ar c con las columnas de, argumento, conjunto",
      "output": "('pte_non_ar_6c_ring', \"CREATE TABLE `pte_non_ar_6c_ring` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_non_ar_6c_ring_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_non_ar_6c_ring_Arg1` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_non_ar_6c_ring_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de anillo pte non ar hetero con las columnas de, argumento, conjunto",
      "output": "('pte_non_ar_hetero_5_ring', \"CREATE TABLE `pte_non_ar_hetero_5_ring` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_non_ar_hetero_5_ring_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_non_ar_hetero_5_ring_Arg1` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_non_ar_hetero_5_ring_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de anillo pte non ar hetero con las columnas de, argumento, conjunto",
      "output": "('pte_non_ar_hetero_6_ring', \"CREATE TABLE `pte_non_ar_hetero_6_ring` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_non_ar_hetero_6_ring_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_non_ar_hetero_6_ring_Arg1` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_non_ar_hetero_6_ring_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de numero de pte con las columnas de, Binario",
      "output": "('pte_number', 'CREATE TABLE `pte_number` (\\n  `Binary` varchar(5) NOT NULL  PRIMARY KEY (`Binary`),\\n  KEY `pte_number_Binary` (`Binary`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de pte fenol con las columnas de, argumento, conjunto",
      "output": "('pte_phenol', \"CREATE TABLE `pte_phenol` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_phenol_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_phenol_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_phenol_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte seis anillo con las columnas de, argumento, conjunto",
      "output": "('pte_six_ring', \"CREATE TABLE `pte_six_ring` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_six_ring_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_six_ring_Arg1` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_six_ring_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sulfuro de pte con las columnas de, argumento, conjunto",
      "output": "('pte_sulfide', \"CREATE TABLE `pte_sulfide` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_sulfide_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_sulfide_Arg1` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_sulfide_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de πτε σύλφο con las columnas de, argumento, conjunto",
      "output": "('pte_sulfo', \"CREATE TABLE `pte_sulfo` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Arg0`,`Set`),\\n  KEY `pte_sulfo_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_sulfo_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_sulfo_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte testactivo con las columnas de, argumento, conjunto",
      "output": "('pte_testactive', \"CREATE TABLE `pte_testactive` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Set` varchar(80) DEFAULT 'F',\\n  PRIMARY KEY (`Arg0`),\\n  KEY `pte_testactive_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_testactive_Set` (`Set`) USING BTREE,\\n  CONSTRAINT `pte_testactive_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de pte testactive negativo con las columnas de, argumento, binario",
      "output": "('pte_testactive_Neg', \"CREATE TABLE `pte_testactive_Neg` (\\n  `Arg0` varchar(80) NOT NULL DEFAULT ''  `Binary` varchar(5) DEFAULT 'F',\\n  PRIMARY KEY (`Arg0`),\\n  KEY `pte_testactive_Neg_Arg0` (`Arg0`) USING BTREE,\\n  KEY `pte_testactive_Neg_Binary` (`Binary`) USING BTREE,\\n  CONSTRAINT `pte_testactive_Neg_ibfk_1` FOREIGN KEY (`Arg0`) REFERENCES `pte_drug` (`drug_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de años con las columnas de, argumento, argumento",
      "output": "('age', 'CREATE TABLE `age` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `age_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `age_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de IMC con las columnas de, argumento, argumento",
      "output": "('bmi', 'CREATE TABLE `bmi` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `bmi_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `bmi_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de diastólica con las columnas de, argumento, argumento",
      "output": "('diastolic', 'CREATE TABLE `diastolic` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `diastolic_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `diastolic_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de número de embarazo con las columnas de, argumento, argumento",
      "output": "('numPreg', 'CREATE TABLE `numPreg` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `numPreg_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `numPreg_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de árbol genealógico con las columnas de, argumento, argumento",
      "output": "('pedigree', 'CREATE TABLE `pedigree` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `pedigree_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `pedigree_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de pimas con las columnas de, argumento, argumento",
      "output": "('pima', 'CREATE TABLE `pima` (\\n  `arg1` varchar(4) NOT NULL  `arg2` varchar(1) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `pima_arg1` (`arg1`) USING BTREE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de plasma con las columnas de, argumento, argumento",
      "output": "('plasma', 'CREATE TABLE `plasma` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `plasma_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `plasma_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de suero con las columnas de, argumento, argumento",
      "output": "('serum', 'CREATE TABLE `serum` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `serum_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `serum_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de tríceps con las columnas de, argumento, argumento",
      "output": "('tricepts', 'CREATE TABLE `tricepts` (\\n  `arg1` varchar(4) NOT NULL  `arg2` decimal(18,3) DEFAULT NULL,\\n  PRIMARY KEY (`arg1`),\\n  KEY `tricepts_arg1` (`arg1`) USING BTREE,\\n  CONSTRAINT `tricepts_ibfk_1` FOREIGN KEY (`arg1`) REFERENCES `pima` (`arg1`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Comportamiento con las columnas de, Id. del jugador, Id. del partido, Id. del equipo, Primer gol, Gol de la victoria, Shotson Targetincgoals, Paradas realizadas, Tiempo jugado, Id. de posición, Inicios, Sustituto activado, Sustituto desactivado, Goles, Tiros fuera de la portería, Tiros bloqueados, Penaltis lanzados, Goles de penalti , Penaltis guardados, Penaltis fuera del arco, Penaltis no marcados, Goles de tiro libre directo, Tiro libre directo al arco, Tiro libre directo desviado, Tiro libre directo tapado, Goles desde dentro del área, Disparos en contra desde dentro del área, Disparos fuera desde dentro del área, Disparos bloqueados desde dentro del área, Goles desde Fuera del área, Remates a puerta Fuera del área, Remates desviados Fuera del área, Remates tapados Fuera del área, Goles de cabeza, Remates de cabeza al arco, Remates de cabeza fuera del arco, Remates tapados de cabeza, Goles con la zurda, Remates a la portería con la zurda, Remates con la zurda Fuera del arco, Pie izquierdo Bloqueo, Goles con el pie derecho, Pie derecho Tiros al arco, Pie derecho Tiros fuera del arco, Pie derecho Bloqueo, Otros goles, Otros tiros al arco, Otros tiros fuera del arco, Otros tiros bloqueados, Tiros despejados L , Disparos despejados fuera de línea área interior, Disparos despejados fuera de línea área exterior, Goles de juego abierto, Goles de córner, Goles de saque de banda, Goles de tiro libre directo, Goles de jugada preparada, Goles de penalti, Intentos de juego abierto a puerta, Intentos de córner a puerta, Intentos de lanzamiento a puerta, Intentos de tiro libre directo a puerta, Intentos desde fijar el objetivo del juego, Intentos desde los penales al objetivo, Intentos desde el objetivo del playoff abierto, Intentos desde los córners hacia el objetivo, Intentos desde los lanzamientos desde el objetivo, Intentos desde el objetivo del saque libre directo, Intentos desde Establecer el objetivo del playoff, Intentos desde los penales fuera del objetivo, Goles como sustitución, Total de pases exitosos todos, Total de pases fallidos todos, Asistencias, Pases clave, Total de pases exitosos Excl Centros de esquina, Total de pases fallidos Excl. Centros de esquina, Pases exitosos Mitad propia, Pases fallidos Mitad propia, Pases exitosos Mitad opositora, Pases fallidos Mitad opositora, Pases exitosos Tercero defensivo, Pases fallidos Tercero defensivo, Pases exitosos medio etercero, Pases fallidos Tercero central, Pases exitosos Tercero final, Pases fallidos Tercero final, Pases cortos exitosos, Pases cortos fallidos, Pases largos exitosos, Pases largos fallidos, Flick Ons exitosos, Flick Ons fallidos, Centros exitosos Corners, Centros fallidos Corners, Corners tomadosinclshortcorners, Corners Encajados, Córners exitosos al área, Córners fallidos al área, Córners en corto, Lanzamiento al jugador propio, Lanzamiento al jugador contrario, Regates exitosos, Regates fallidos, Centros exitosos a la izquierda, Centros fallidos a la izquierda, Centros exitosos a la izquierda, Centros fallidos a la izquierda, Córners exitosos a la izquierda , Córners fallidos a la izquierda, Centros exitosos de esquina a la derecha, Centros fallidos de esquina a la derecha, Centros exitosos a la derecha, Centros fallidos a la derecha, Córners exitosos a la derecha, Córners fallidos a la derecha, Pases largos exitosos, Pases largos fallidos, Despidos exitosos, Despidos fallidos, Pase al hueco, Cro exitoso sses Córners en el aire, Centros fallidos Córners en el aire, Centros aéreos exitosos, Centros aéreos fallidos, Centros abiertos exitosos, Centros abiertos fallidos, Toques, Córner con asistencia de gol, Tiro libre con asistencia de gol, Saque de banda con asistencia de gol, Saque de gol con asistencia de gol, Asistencia de gol para balón parado, Córner clave, Tiro libre clave, Tiro clave Entrada, Saque de meta clave, Piezas clave a balón parado, Duelswon, Duelslost, Aerial Duelswon, Aerial Duelslost, Ground Duelswon, Ground Duelst, Tackles ganados, Tackles perdidos, Last Man Tackle, Despejes totales, Despejes de cabeza, Otros despejes, Despejes fuera de la línea, Bloqueos , Intercepciones, Recuperaciones, Total de faltas concedidas, Faltas concedidasdexchballspens, Total de faltas ganadas, Faltas ganadas en área de peligroincpens, Faltas ganadas en área de peligro, Faltas ganadas de penalti, Balonmano concedido, Penaltis concedidos, Fuera de juego, Tarjetas amarillas, Tarjetas rojas, Goles encajados, Goles encajados dentro del área, Goles encajados fuera del área, atajadas desde dentro del área, atajadas desde fuera del área, atajadas de penalti, recepciones, golpes, dr ops, Centros no reclamados, G K Distribución, G K Distribución exitosa, G K Distribución fallida, Hojas limpias, Hoja limpia del equipo, Error que conduce al gol, Error que conduce al intento, Desafío perdido, Tiros encajados, Tiros encajados dentro del área, Tiros encajados fuera del área, Posición en formación, Pérdidas de balón , Desposeído, Grandes oportunidades, Grandes oportunidades enfrentadas, Pase adelante, Pase atrás, Pase a la izquierda, Pase a la derecha, Toque de pelota fallido, Toque de pelota exitoso, Take Ons Overrun, Touchesopenplayfinalthird, Touchesopenplayoppbox, Touchesopenplayoppsixyards, Team, Team, tiro eff, pases eff, efecto de placaje, efecto de regate",
      "output": "('Actions', 'CREATE TABLE `Actions` (\\n  `PlayerID` int(11) NOT NULL  `MatchID` int(11) NOT NULL,\\n  `TeamID` int(11) DEFAULT NULL,\\n  `FirstGoal` int(11) DEFAULT NULL,\\n  `WinningGoal` int(11) DEFAULT NULL,\\n  `ShotsonTargetincgoals` int(11) DEFAULT NULL,\\n  `SavesMade` int(11) DEFAULT NULL,\\n  `TimePlayed` int(11) DEFAULT NULL,\\n  `PositionID` int(11) DEFAULT NULL,\\n  `Starts` int(11) DEFAULT NULL,\\n  `SubstituteOn` int(11) DEFAULT NULL,\\n  `SubstituteOff` int(11) DEFAULT NULL,\\n  `Goals` int(11) DEFAULT NULL,\\n  `ShotsOffTargetincwoodwork` int(11) DEFAULT NULL,\\n  `BlockedShots` int(11) DEFAULT NULL,\\n  `PenaltiesTaken` int(11) DEFAULT NULL,\\n  `PenaltyGoals` int(11) DEFAULT NULL,\\n  `PenaltiesSaved` int(11) DEFAULT NULL,\\n  `PenaltiesOffTarget` int(11) DEFAULT NULL,\\n  `PenaltiesNotScored` int(11) DEFAULT NULL,\\n  `DirectFreekickGoals` int(11) DEFAULT NULL,\\n  `DirectFreekickOnTarget` int(11) DEFAULT NULL,\\n  `DirectFreekickOffTarget` int(11) DEFAULT NULL,\\n  `BlockedDirectFreekick` int(11) DEFAULT NULL,\\n  `GoalsfromInsideBox` int(11) DEFAULT NULL,\\n  `ShotsOnfromInsideBox` int(11) DEFAULT NULL,\\n  `ShotsOfffromInsideBox` int(11) DEFAULT NULL,\\n  `BlockedShotsfromInsideBox` int(11) DEFAULT NULL,\\n  `GoalsfromOutsideBox` int(11) DEFAULT NULL,\\n  `ShotsOnTargetOutsideBox` int(11) DEFAULT NULL,\\n  `ShotsOffTargetOutsideBox` int(11) DEFAULT NULL,\\n  `BlockedShotsOutsideBox` int(11) DEFAULT NULL,\\n  `HeadedGoals` int(11) DEFAULT NULL,\\n  `HeadedShotsOnTarget` int(11) DEFAULT NULL,\\n  `HeadedShotsOffTarget` int(11) DEFAULT NULL,\\n  `HeadedBlockedShots` int(11) DEFAULT NULL,\\n  `LeftFootGoals` int(11) DEFAULT NULL,\\n  `LeftFootShotsOnTarget` int(11) DEFAULT NULL,\\n  `LeftFootShotsOffTarget` int(11) DEFAULT NULL,\\n  `LeftFootBlockedShots` int(11) DEFAULT NULL,\\n  `RightFootGoals` int(11) DEFAULT NULL,\\n  `RightFootShotsOnTarget` int(11) DEFAULT NULL,\\n  `RightFootShotsOffTarget` int(11) DEFAULT NULL,\\n  `RightFootBlockedShots` int(11) DEFAULT NULL,\\n  `OtherGoals` int(11) DEFAULT NULL,\\n  `OtherShotsOnTarget` int(11) DEFAULT NULL,\\n  `OtherShotsOffTarget` int(11) DEFAULT NULL,\\n  `OtherBlockedShots` int(11) DEFAULT NULL,\\n  `ShotsClearedoffLine` int(11) DEFAULT NULL,\\n  `ShotsClearedoffLineInsideArea` int(11) DEFAULT NULL,\\n  `ShotsClearedoffLineOutsideArea` int(11) DEFAULT NULL,\\n  `GoalsOpenPlay` int(11) DEFAULT NULL,\\n  `GoalsfromCorners` int(11) DEFAULT NULL,\\n  `GoalsfromThrows` int(11) DEFAULT NULL,\\n  `GoalsfromDirectFreeKick` int(11) DEFAULT NULL,\\n  `GoalsfromSetPlay` int(11) DEFAULT NULL,\\n  `Goalsfrompenalties` int(11) DEFAULT NULL,\\n  `AttemptsOpenPlayontarget` int(11) DEFAULT NULL,\\n  `AttemptsfromCornersontarget` int(11) DEFAULT NULL,\\n  `AttemptsfromThrowsontarget` int(11) DEFAULT NULL,\\n  `AttemptsfromDirectFreeKickontarget` int(11) DEFAULT NULL,\\n  `AttemptsfromSetPlayontarget` int(11) DEFAULT NULL,\\n  `AttemptsfromPenaltiesontarget` int(11) DEFAULT NULL,\\n  `AttemptsOpenPlayofftarget` int(11) DEFAULT NULL,\\n  `AttemptsfromCornersofftarget` int(11) DEFAULT NULL,\\n  `AttemptsfromThrowsofftarget` int(11) DEFAULT NULL,\\n  `AttemptsfromDirectFreeKickofftarget` int(11) DEFAULT NULL,\\n  `AttemptsfromSetPlayofftarget` int(11) DEFAULT NULL,\\n  `AttemptsfromPenaltiesofftarget` int(11) DEFAULT NULL,\\n  `Goalsasasubstitute` int(11) DEFAULT NULL,\\n  `TotalSuccessfulPassesAll` int(11) DEFAULT NULL,\\n  `TotalUnsuccessfulPassesAll` int(11) DEFAULT NULL,\\n  `Assists` int(11) DEFAULT NULL,\\n  `KeyPasses` int(11) DEFAULT NULL,\\n  `TotalSuccessfulPassesExclCrossesCorners` int(11) DEFAULT NULL,\\n  `TotalUnsuccessfulPassesExclCrossesCorners` int(11) DEFAULT NULL,\\n  `SuccessfulPassesOwnHalf` int(11) DEFAULT NULL,\\n  `UnsuccessfulPassesOwnHalf` int(11) DEFAULT NULL,\\n  `SuccessfulPassesOppositionHalf` int(11) DEFAULT NULL,\\n  `UnsuccessfulPassesOppositionHalf` int(11) DEFAULT NULL,\\n  `SuccessfulPassesDefensivethird` int(11) DEFAULT NULL,\\n  `UnsuccessfulPassesDefensivethird` int(11) DEFAULT NULL,\\n  `SuccessfulPassesMiddlethird` int(11) DEFAULT NULL,\\n  `UnsuccessfulPassesMiddlethird` int(11) DEFAULT NULL,\\n  `SuccessfulPassesFinalthird` int(11) DEFAULT NULL,\\n  `UnsuccessfulPassesFinalthird` int(11) DEFAULT NULL,\\n  `SuccessfulShortPasses` int(11) DEFAULT NULL,\\n  `UnsuccessfulShortPasses` int(11) DEFAULT NULL,\\n  `SuccessfulLongPasses` int(11) DEFAULT NULL,\\n  `UnsuccessfulLongPasses` int(11) DEFAULT NULL,\\n  `SuccessfulFlickOns` int(11) DEFAULT NULL,\\n  `UnsuccessfulFlickOns` int(11) DEFAULT NULL,\\n  `SuccessfulCrossesCorners` int(11) DEFAULT NULL,\\n  `UnsuccessfulCrossesCorners` int(11) DEFAULT NULL,\\n  `CornersTakeninclshortcorners` int(11) DEFAULT NULL,\\n  `CornersConceded` int(11) DEFAULT NULL,\\n  `SuccessfulCornersintoBox` int(11) DEFAULT NULL,\\n  `UnsuccessfulCornersintoBox` int(11) DEFAULT NULL,\\n  `ShortCorners` int(11) DEFAULT NULL,\\n  `ThrowInstoOwnPlayer` int(11) DEFAULT NULL,\\n  `ThrowInstoOppositionPlayer` int(11) DEFAULT NULL,\\n  `SuccessfulDribbles` int(11) DEFAULT NULL,\\n  `UnsuccessfulDribbles` int(11) DEFAULT NULL,\\n  `SuccessfulCrossesCornersLeft` int(11) DEFAULT NULL,\\n  `UnsuccessfulCrossesCornersLeft` int(11) DEFAULT NULL,\\n  `SuccessfulCrossesLeft` int(11) DEFAULT NULL,\\n  `UnsuccessfulCrossesLeft` int(11) DEFAULT NULL,\\n  `SuccessfulCornersLeft` int(11) DEFAULT NULL,\\n  `UnsuccessfulCornersLeft` int(11) DEFAULT NULL,\\n  `SuccessfulCrossesCornersRight` int(11) DEFAULT NULL,\\n  `UnsuccessfulCrossesCornersRight` int(11) DEFAULT NULL,\\n  `SuccessfulCrossesRight` int(11) DEFAULT NULL,\\n  `UnsuccessfulCrossesRight` int(11) DEFAULT NULL,\\n  `SuccessfulCornersRight` int(11) DEFAULT NULL,\\n  `UnsuccessfulCornersRight` int(11) DEFAULT NULL,\\n  `SuccessfulLongBalls` int(11) DEFAULT NULL,\\n  `UnsuccessfulLongBalls` int(11) DEFAULT NULL,\\n  `SuccessfulLayOffs` int(11) DEFAULT NULL,\\n  `UnsuccessfulLayOffs` int(11) DEFAULT NULL,\\n  `ThroughBall` int(11) DEFAULT NULL,\\n  `SuccessfulCrossesCornersintheair` int(11) DEFAULT NULL,\\n  `UnsuccessfulCrossesCornersintheair` int(11) DEFAULT NULL,\\n  `Successfulcrossesintheair` int(11) DEFAULT NULL,\\n  `Unsuccessfulcrossesintheair` int(11) DEFAULT NULL,\\n  `Successfulopenplaycrosses` int(11) DEFAULT NULL,\\n  `Unsuccessfulopenplaycrosses` int(11) DEFAULT NULL,\\n  `Touches` int(11) DEFAULT NULL,\\n  `GoalAssistCorner` int(11) DEFAULT NULL,\\n  `GoalAssistFreeKick` int(11) DEFAULT NULL,\\n  `GoalAssistThrowIn` int(11) DEFAULT NULL,\\n  `GoalAssistGoalKick` int(11) DEFAULT NULL,\\n  `GoalAssistSetPiece` int(11) DEFAULT NULL,\\n  `KeyCorner` int(11) DEFAULT NULL,\\n  `KeyFreeKick` int(11) DEFAULT NULL,\\n  `KeyThrowIn` int(11) DEFAULT NULL,\\n  `KeyGoalKick` int(11) DEFAULT NULL,\\n  `KeySetPieces` int(11) DEFAULT NULL,\\n  `Duelswon` int(11) DEFAULT NULL,\\n  `Duelslost` int(11) DEFAULT NULL,\\n  `AerialDuelswon` int(11) DEFAULT NULL,\\n  `AerialDuelslost` int(11) DEFAULT NULL,\\n  `GroundDuelswon` int(11) DEFAULT NULL,\\n  `GroundDuelslost` int(11) DEFAULT NULL,\\n  `TacklesWon` int(11) DEFAULT NULL,\\n  `TacklesLost` int(11) DEFAULT NULL,\\n  `LastManTackle` int(11) DEFAULT NULL,\\n  `TotalClearances` int(11) DEFAULT NULL,\\n  `HeadedClearances` int(11) DEFAULT NULL,\\n  `OtherClearances` int(11) DEFAULT NULL,\\n  `ClearancesOfftheLine` int(11) DEFAULT NULL,\\n  `Blocks` int(11) DEFAULT NULL,\\n  `Interceptions` int(11) DEFAULT NULL,\\n  `Recoveries` int(11) DEFAULT NULL,\\n  `TotalFoulsConceded` int(11) DEFAULT NULL,\\n  `FoulsConcededexchandballspens` int(11) DEFAULT NULL,\\n  `TotalFoulsWon` int(11) DEFAULT NULL,\\n  `FoulsWoninDangerAreaincpens` int(11) DEFAULT NULL,\\n  `FoulsWonnotindangerarea` int(11) DEFAULT NULL,\\n  `FoulWonPenalty` int(11) DEFAULT NULL,\\n  `HandballsConceded` int(11) DEFAULT NULL,\\n  `PenaltiesConceded` int(11) DEFAULT NULL,\\n  `Offsides` int(11) DEFAULT NULL,\\n  `YellowCards` int(11) DEFAULT NULL,\\n  `RedCards` int(11) DEFAULT NULL,\\n  `GoalsConceded` int(11) DEFAULT NULL,\\n  `GoalsConcededInsideBox` int(11) DEFAULT NULL,\\n  `GoalsConcededOutsideBox` int(11) DEFAULT NULL,\\n  `SavesMadefromInsideBox` int(11) DEFAULT NULL,\\n  `SavesMadefromOutsideBox` int(11) DEFAULT NULL,\\n  `SavesfromPenalty` int(11) DEFAULT NULL,\\n  `Catches` int(11) DEFAULT NULL,\\n  `Punches` int(11) DEFAULT NULL,\\n  `Drops` int(11) DEFAULT NULL,\\n  `CrossesnotClaimed` int(11) DEFAULT NULL,\\n  `GKDistribution` int(11) DEFAULT NULL,\\n  `GKSuccessfulDistribution` int(11) DEFAULT NULL,\\n  `GKUnsuccessfulDistribution` int(11) DEFAULT NULL,\\n  `CleanSheets` int(11) DEFAULT NULL,\\n  `TeamCleansheet` int(11) DEFAULT NULL,\\n  `ErrorleadingtoGoal` int(11) DEFAULT NULL,\\n  `Errorleadingtoattempt` int(11) DEFAULT NULL,\\n  `ChallengeLost` int(11) DEFAULT NULL,\\n  `ShotsOnConceded` int(11) DEFAULT NULL,\\n  `ShotsOnConcededInsideBox` int(11) DEFAULT NULL,\\n  `ShotsOnConcededOutsideBox` int(11) DEFAULT NULL,\\n  `PositioninFormation` int(11) DEFAULT NULL,\\n  `Turnovers` int(11) DEFAULT NULL,\\n  `Dispossessed` int(11) DEFAULT NULL,\\n  `BigChances` int(11) DEFAULT NULL,\\n  `BigChancesFaced` int(11) DEFAULT NULL,\\n  `PassForward` int(11) DEFAULT NULL,\\n  `PassBackward` int(11) DEFAULT NULL,\\n  `PassLeft` int(11) DEFAULT NULL,\\n  `PassRight` int(11) DEFAULT NULL,\\n  `UnsuccessfulBallTouch` int(11) DEFAULT NULL,\\n  `SuccessfulBallTouch` int(11) DEFAULT NULL,\\n  `TakeOnsOverrun` int(11) DEFAULT NULL,\\n  `Touchesopenplayfinalthird` int(11) DEFAULT NULL,\\n  `Touchesopenplayoppbox` int(11) DEFAULT NULL,\\n  `Touchesopenplayoppsixyards` int(11) DEFAULT NULL,\\n  `Team1` varchar(40) DEFAULT NULL,\\n  `Team2` varchar(40) DEFAULT NULL,\\n  `shot_eff` float(7,6) DEFAULT NULL,\\n  `passes_eff` float(7,6) DEFAULT NULL,\\n  `tackle_eff` float(7,6) DEFAULT NULL,\\n  `dribble_eff` float(7,6) DEFAULT NULL,\\n  PRIMARY KEY (`PlayerID`,`MatchID`),\\n  KEY `playerId_DA_idx` (`PlayerID`),\\n  KEY `matchId_DA_idx` (`MatchID`),\\n  KEY `teamId_DA_idx` (`TeamID`),\\n  CONSTRAINT `matchId_A` FOREIGN KEY (`MatchID`) REFERENCES `Matches` (`MatchID`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `playerId_DA` FOREIGN KEY (`PlayerID`) REFERENCES `Players` (`PlayerID`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `teamId_DA` FOREIGN KEY (`TeamID`) REFERENCES `Teams` (`TeamID`) ON DELETE NO ACTION ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Partidos con las columnas de, ID del partido, ID del equipo local, ID del equipo visitante, Formación del equipo local, Formación del equipo visitante, Resultado del equipo local, Fecha",
      "output": "('Matches', 'CREATE TABLE `Matches` (\\n  `MatchID` int(11) NOT NULL  `TeamHomeID` int(11) DEFAULT NULL,\\n  `TeamAwayID` int(11) DEFAULT NULL,\\n  `TeamHomeFormation` int(11) DEFAULT NULL,\\n  `TeamAwayFormation` int(11) DEFAULT NULL,\\n  `ResultOfTeamHome` int(11) DEFAULT NULL,\\n  `Date` datetime DEFAULT NULL,\\n  PRIMARY KEY (`MatchID`),\\n  KEY `TeamHome_M_idx` (`TeamHomeID`),\\n  KEY `TeamAway_M_idx` (`TeamAwayID`),\\n  CONSTRAINT `TeamAway_M` FOREIGN KEY (`TeamAwayID`) REFERENCES `Teams` (`TeamID`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `TeamHome_M` FOREIGN KEY (`TeamHomeID`) REFERENCES `Teams` (`TeamID`) ON DELETE NO ACTION ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de jugadores con las columnas de, ID del jugador, Nombre",
      "output": "('Players', \"CREATE TABLE `Players` (\\n  `PlayerID` int(11) NOT NULL  `Name` varchar(100) NOT NULL COMMENT 'Players from Premier League',\\n  PRIMARY KEY (`PlayerID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de equipos con las columnas de, ID del equipo, Nombre",
      "output": "('Teams', 'CREATE TABLE `Teams` (\\n  `TeamID` int(11) NOT NULL  `Name` varchar(40) NOT NULL,\\n  PRIMARY KEY (`TeamID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de cita con las columnas de, citando la identificación del artículo, citando la identificación del artículo",
      "output": "('cites', 'CREATE TABLE `cites` (\\n  `citing_paper_id` int(11) NOT NULL  `cites_paper_id` int(11) NOT NULL,\\n  PRIMARY KEY (`citing_paper_id`,`cites_paper_id`),\\n  KEY `cites_paper_id` (`cites_paper_id`),\\n  CONSTRAINT `cites_ibfk_1` FOREIGN KEY (`cites_paper_id`) REFERENCES `paper` (`paper_id`),\\n  CONSTRAINT `cites_ibfk_2` FOREIGN KEY (`cites_paper_id`) REFERENCES `paper` (`paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de contenido con las columnas de, identificación de papel, palabra, tf idf",
      "output": "('content', 'CREATE TABLE `content` (\\n  `paper_id` int(11) NOT NULL  `word` varchar(255) NOT NULL,\\n  `tf_idf` double NOT NULL,\\n  PRIMARY KEY (`paper_id`,`word`),\\n  CONSTRAINT `content_ibfk_1` FOREIGN KEY (`paper_id`) REFERENCES `paper` (`paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de papel con las columnas de, identificación de papel, etiqueta de clase",
      "output": "('paper', 'CREATE TABLE `paper` (\\n  `paper_id` int(11) NOT NULL  `class_label` int(11) NOT NULL,\\n  PRIMARY KEY (`paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de molécula con las columnas de, ID de molécula, actividad",
      "output": "('molecule', 'CREATE TABLE `molecule` (\\n  `molecule_id` int(11) NOT NULL DEFAULT 0  `activity` float DEFAULT NULL,\\n  PRIMARY KEY (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de posición con las columnas de, id de molécula, posición, flex, h aceptador, h doner, pi aceptador, pi doner, polar, polarizable, sigma, tamaño",
      "output": "('position', 'CREATE TABLE `position` (\\n  `molecule_id` int(11) NOT NULL DEFAULT 0  `position` int(11) NOT NULL DEFAULT 0,\\n  `flex` float DEFAULT NULL,\\n  `h_acceptor` float DEFAULT NULL,\\n  `h_doner` float DEFAULT NULL,\\n  `pi_acceptor` float DEFAULT NULL,\\n  `pi_doner` float DEFAULT NULL,\\n  `polar` float DEFAULT NULL,\\n  `polarisable` float DEFAULT NULL,\\n  `sigma` float DEFAULT NULL,\\n  `size` float DEFAULT NULL,\\n  PRIMARY KEY (`molecule_id`,`position`),\\n  KEY `molecule_id` (`molecule_id`),\\n  CONSTRAINT `position_ibfk_1` FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Clientes con las columnas de, DNI, SEXO, ESTADO CIVIL, GEOIDE, NÚMERO DE EDUCACIÓN, OCUPACIÓN, DATOS, DATOS, DATOS, NOM, NOM, NOM, edad",
      "output": "('Customers', 'CREATE TABLE `Customers` (\\n  `ID` int(11) NOT NULL  `SEX` varchar(255) DEFAULT NULL,\\n  `MARITAL_STATUS` varchar(255) DEFAULT NULL,\\n  `GEOID` int(11) DEFAULT NULL,\\n  `EDUCATIONNUM` int(11) DEFAULT NULL,\\n  `OCCUPATION` varchar(255) DEFAULT NULL,\\n  `DATA1` float DEFAULT NULL,\\n  `DATA2` float DEFAULT NULL,\\n  `DATA3` float DEFAULT NULL,\\n  `NOM1` varchar(255) DEFAULT NULL,\\n  `NOM2` varchar(255) DEFAULT NULL,\\n  `NOM3` varchar(255) DEFAULT NULL,\\n  `age` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ID`),\\n  KEY `Customers_GEOID` (`GEOID`),\\n  CONSTRAINT `Customers_ibfk_1` FOREIGN KEY (`GEOID`) REFERENCES `Demog` (`GEOID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de demográfico con las columnas de, GEOIDE, HABITANTES K, INGRESO K, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ, A SÍ , UN SÍ, UN SÍ, UN SÍ, UN SÍ",
      "output": "('Demog', 'CREATE TABLE `Demog` (\\n  `GEOID` int(11) NOT NULL  `INHABITANTS_K` float DEFAULT NULL,\\n  `INCOME_K` decimal(10,2) DEFAULT NULL,\\n  `A_VAR1` float DEFAULT NULL,\\n  `A_VAR2` float DEFAULT NULL,\\n  `A_VAR3` float DEFAULT NULL,\\n  `A_VAR4` float DEFAULT NULL,\\n  `A_VAR5` float DEFAULT NULL,\\n  `A_VAR6` float DEFAULT NULL,\\n  `A_VAR7` float DEFAULT NULL,\\n  `A_VAR8` float DEFAULT NULL,\\n  `A_VAR9` float DEFAULT NULL,\\n  `A_VAR10` float DEFAULT NULL,\\n  `A_VAR11` float DEFAULT NULL,\\n  `A_VAR12` float DEFAULT NULL,\\n  `A_VAR13` float DEFAULT NULL,\\n  `A_VAR14` float DEFAULT NULL,\\n  `A_VAR15` float DEFAULT NULL,\\n  `A_VAR16` float DEFAULT NULL,\\n  `A_VAR17` float DEFAULT NULL,\\n  `A_VAR18` float DEFAULT NULL,\\n  PRIMARY KEY (`GEOID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Correos con las columnas de, REFID, Índice Kx, FECHA REF, RESPUESTA",
      "output": "('Mailings1_2', 'CREATE TABLE `Mailings1_2` (\\n  `REFID` int(11) NOT NULL  `KxIndex` int(11) DEFAULT NULL,\\n  `REF_DATE` datetime DEFAULT NULL,\\n  `RESPONSE` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`REFID`),\\n  KEY `Mailings1_2_REFID` (`REFID`),\\n  CONSTRAINT `Mailings1_2_ibfk_1` FOREIGN KEY (`REFID`) REFERENCES `Customers` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Ventas con las columnas de, EVENTO, REFID, FECHA DEL EVENTO, IMPORTE",
      "output": "('Sales', 'CREATE TABLE `Sales` (\\n  `EVENTID` int(11) NOT NULL  `REFID` int(11) DEFAULT NULL,\\n  `EVENT_DATE` datetime DEFAULT NULL,\\n  `AMOUNT` float DEFAULT NULL,\\n  PRIMARY KEY (`EVENTID`),\\n  KEY `Sales_REFID` (`REFID`),\\n  CONSTRAINT `Sales_ibfk_1` FOREIGN KEY (`REFID`) REFERENCES `Customers` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de correos con las columnas de, REFID, REF FECHA, RESPUESTA",
      "output": "('mailings3', 'CREATE TABLE `mailings3` (\\n  `REFID` int(11) NOT NULL  `REF_DATE` datetime DEFAULT NULL,\\n  `RESPONSE` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`REFID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de clase con las columnas de, cls",
      "output": "('class', 'CREATE TABLE `class` (\\n  `cls` varchar(8) NOT NULL  PRIMARY KEY (`cls`),\\n  KEY `cls` (`cls`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de culpa con las columnas dehecho, cumplido",
      "output": "('fault', 'CREATE TABLE `fault` (\\n  `tm` int(11) NOT NULL  `tf` varchar(1) NOT NULL,\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `tf` (`tf`),\\n  CONSTRAINT `fault_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fault_ibfk_2` FOREIGN KEY (`tf`) REFERENCES `trfl` (`tf`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de prueba de falla con las columnas dehecho, cumplido",
      "output": "('fault_test', 'CREATE TABLE `fault_test` (\\n  `tm` int(11) NOT NULL  `tf` varchar(1) NOT NULL,\\n  PRIMARY KEY (`tm`),\\n  KEY `tf` (`tf`),\\n  KEY `tm` (`tm`),\\n  CONSTRAINT `fault_test_ibfk_1` FOREIGN KEY (`tf`) REFERENCES `trfl` (`tf`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fault_test_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de fase de misión gmt con las columnas de, tm, estado",
      "output": "('gmt_mission_phase', 'CREATE TABLE `gmt_mission_phase` (\\n  `tm` int(11) NOT NULL  `state` varchar(50) NOT NULL,\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  CONSTRAINT `gmt_mission_phase_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de éxito con las columnas de, tm, tm",
      "output": "('succ', 'CREATE TABLE `succ` (\\n  `tm1` int(11) NOT NULL  `tm2` int(11) NOT NULL,\\n  PRIMARY KEY (`tm1`,`tm2`),\\n  KEY `tm1` (`tm1`),\\n  KEY `tm2` (`tm2`),\\n  CONSTRAINT `succ_ibfk_1` FOREIGN KEY (`tm1`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `succ_ibfk_2` FOREIGN KEY (`tm2`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de tiempo con las columnas de, tm",
      "output": "('time', 'CREATE TABLE `time` (\\n  `tm` int(11) NOT NULL  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de relé de tiempo con las columnas de, tm, clase",
      "output": "('tm001_eod_relay', \"CREATE TABLE `tm001_eod_relay` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm001_eod_relay_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm001_eod_relay_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm battov temperatura con las columnas de, tm, clase",
      "output": "('tm002_battov_temp', \"CREATE TABLE `tm002_battov_temp` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm002_battov_temp_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm002_battov_temp_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm eoc señalado con las columnas de, tm, clase",
      "output": "('tm004_eoc_signaled', \"CREATE TABLE `tm004_eoc_signaled` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm004_eoc_signaled_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm004_eoc_signaled_ibfk_2` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm007_switch', \"CREATE TABLE `tm007_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm007_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm007_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm009_switch', \"CREATE TABLE `tm009_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm009_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm009_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de anulación de tm eod con las columnas de, tm, clase",
      "output": "('tm011_eod_override', \"CREATE TABLE `tm011_eod_override` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm011_eod_override_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm011_eod_override_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm013_switch', \"CREATE TABLE `tm013_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm013_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm013_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm eod señalado con las columnas de, tm, clase",
      "output": "('tm015_eod_signaled', \"CREATE TABLE `tm015_eod_signaled` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm015_eod_signaled_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm015_eod_signaled_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm017_switch', \"CREATE TABLE `tm017_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm017_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm017_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm018_switch', \"CREATE TABLE `tm018_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm018_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm018_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm eoc deshabilitado con las columnas de, tm, clase",
      "output": "('tm021_eoc_disabled', \"CREATE TABLE `tm021_eoc_disabled` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm021_eoc_disabled_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm021_eoc_disabled_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm022_switch', \"CREATE TABLE `tm022_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm022_switch_ibfk_1` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm022_switch_ibfk_2` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm ovt deshabilitado con las columnas de, tm, clase",
      "output": "('tm029_ovt_disabled', \"CREATE TABLE `tm029_ovt_disabled` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm029_ovt_disabled_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm029_ovt_disabled_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm031_switch', \"CREATE TABLE `tm031_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm031_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm031_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm038_switch', \"CREATE TABLE `tm038_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm038_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm038_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tiempo deshabilitado con las columnas de, tm, clase",
      "output": "('tm039_eod_disabled', \"CREATE TABLE `tm039_eod_disabled` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm039_eod_disabled_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm039_eod_disabled_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm040_switch', \"CREATE TABLE `tm040_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm040_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm040_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm042_switch', \"CREATE TABLE `tm042_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm042_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm042_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de interruptor tm con las columnas de, tm, clase",
      "output": "('tm043_switch', \"CREATE TABLE `tm043_switch` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm043_switch_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm043_switch_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm suministrar un con las columnas de, tm, clase",
      "output": "('tm054_supply_1a', \"CREATE TABLE `tm054_supply_1a` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm054_supply_1a_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm054_supply_1a_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm suministro b con las columnas de, tm, clase",
      "output": "('tm055_supply_1b', \"CREATE TABLE `tm055_supply_1b` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm055_supply_1b_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm055_supply_1b_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de suministro de tm c con las columnas de, tm, clase",
      "output": "('tm057_supply_2c', \"CREATE TABLE `tm057_supply_2c` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm057_supply_2c_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm057_supply_2c_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm asr o interruptor con las columnas de, tm, clase",
      "output": "('tm058_asr_or_switch_10', \"CREATE TABLE `tm058_asr_or_switch_10` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm058_asr_or_switch_10_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm058_asr_or_switch_10_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de suministro de tm c con las columnas de, tm, clase",
      "output": "('tm070_supply_3c', \"CREATE TABLE `tm070_supply_3c` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm070_supply_3c_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm070_supply_3c_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tm asr o interruptor con las columnas de, tm, clase",
      "output": "('tm071_asr_or_switch_20', \"CREATE TABLE `tm071_asr_or_switch_20` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm071_asr_or_switch_20_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm071_asr_or_switch_20_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de tensión de bus tm con las columnas de, tm, clase",
      "output": "('tm211_bus_voltage', \"CREATE TABLE `tm211_bus_voltage` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm211_bus_voltage_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm211_bus_voltage_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de suministro de tm c con las columnas de, tm, clase",
      "output": "('tm220_supply_1c', 'CREATE TABLE `tm220_supply_1c` (\\n  `tm` int(11) NOT NULL  `class` varchar(8) NOT NULL,\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm220_supply_1c_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm220_supply_1c_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tm cargando con las columnas de, tm, clase",
      "output": "('tm222_charging', \"CREATE TABLE `tm222_charging` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm222_charging_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm222_charging_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de voltaje de la batería con las columnas de, tm, clase",
      "output": "('tm257_battery_voltage', \"CREATE TABLE `tm257_battery_voltage` (\\n  `tm` int(11) NOT NULL DEFAULT 0  `class` varchar(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`tm`),\\n  KEY `tm` (`tm`),\\n  KEY `class` (`class`),\\n  CONSTRAINT `tm257_battery_voltage_ibfk_1` FOREIGN KEY (`class`) REFERENCES `class` (`cls`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `tm257_battery_voltage_ibfk_2` FOREIGN KEY (`tm`) REFERENCES `time` (`tm`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de trfl con las columnas de, tf",
      "output": "('trfl', 'CREATE TABLE `trfl` (\\n  `tf` varchar(1) NOT NULL  PRIMARY KEY (`tf`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de negocios con las columnas de, identificación comercial, nombre, dirección, ciudad, código postal, latitud, longitud, número de teléfono, código fiscal, certificado comercial, fecha de solicitud, nombre del propietario, dirección del propietario, ciudad del propietario, estado del propietario, código postal del propietario",
      "output": "('businesses', 'CREATE TABLE `businesses` (\\n  `business_id` int(11) NOT NULL  `name` varchar(255) NOT NULL,\\n  `address` varchar(255) DEFAULT NULL,\\n  `city` varchar(255) DEFAULT NULL,\\n  `postal_code` varchar(255) DEFAULT NULL,\\n  `latitude` float DEFAULT NULL,\\n  `longitude` float DEFAULT NULL,\\n  `phone_number` bigint(20) DEFAULT NULL,\\n  `tax_code` varchar(255) DEFAULT NULL,\\n  `business_certificate` int(11) NOT NULL,\\n  `application_date` date DEFAULT NULL,\\n  `owner_name` varchar(255) NOT NULL,\\n  `owner_address` varchar(255) DEFAULT NULL,\\n  `owner_city` varchar(255) DEFAULT NULL,\\n  `owner_state` varchar(255) DEFAULT NULL,\\n  `owner_zip` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de inspecciones con las columnas de, ID de empresa, puntuación, fecha, tipo",
      "output": "('inspections', 'CREATE TABLE `inspections` (\\n  `business_id` int(11) NOT NULL  `score` int(11) DEFAULT NULL,\\n  `date` date NOT NULL,\\n  `type` varchar(255) NOT NULL,\\n  KEY `inspections__business_id` (`business_id`) USING BTREE,\\n  CONSTRAINT `inspections_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de violaciones con las columnas de, identificación comercial, fecha, identificación del tipo de infracción, categoría de riesgo, descripción",
      "output": "('violations', 'CREATE TABLE `violations` (\\n  `business_id` int(11) NOT NULL  `date` date NOT NULL,\\n  `violation_type_id` varchar(255) NOT NULL,\\n  `risk_category` varchar(255) NOT NULL,\\n  `description` varchar(255) NOT NULL,\\n  KEY `violations__business_id` (`business_id`) USING BTREE,\\n  CONSTRAINT `violations_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `businesses` (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Clientes con las columnas de, ID de cliente, nombre, inicial del segundo nombre, apellido",
      "output": "('Customers', 'CREATE TABLE `Customers` (\\n  `CustomerID` int(11) NOT NULL  `FirstName` varchar(40) NOT NULL,\\n  `MiddleInitial` varchar(40) DEFAULT NULL,\\n  `LastName` varchar(40) NOT NULL,\\n  PRIMARY KEY (`CustomerID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Empleados con las columnas de, ID de empleado, nombre, inicial del segundo nombre, apellido",
      "output": "('Employees', 'CREATE TABLE `Employees` (\\n  `EmployeeID` int(11) NOT NULL  `FirstName` varchar(40) NOT NULL,\\n  `MiddleInitial` varchar(40) DEFAULT NULL,\\n  `LastName` varchar(40) NOT NULL,\\n  PRIMARY KEY (`EmployeeID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de productos con las columnas de, ID de producto, nombre, precio",
      "output": "('Products', 'CREATE TABLE `Products` (\\n  `ProductID` int(11) NOT NULL  `Name` varchar(50) NOT NULL,\\n  `Price` decimal(19,4) DEFAULT NULL,\\n  PRIMARY KEY (`ProductID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Ventas con las columnas de, Id. de ventas, Id. de persona de ventas, Id. de cliente, Id. de producto, Cantidad",
      "output": "('Sales', 'CREATE TABLE `Sales` (\\n  `SalesID` int(11) NOT NULL  `SalesPersonID` int(11) NOT NULL,\\n  `CustomerID` int(11) NOT NULL,\\n  `ProductID` int(11) NOT NULL,\\n  `Quantity` int(11) NOT NULL,\\n  PRIMARY KEY (`SalesID`),\\n  KEY `SalesPersonID` (`SalesPersonID`),\\n  KEY `CustomerID` (`CustomerID`),\\n  KEY `ProductID` (`ProductID`),\\n  CONSTRAINT `Sales_ibfk_1` FOREIGN KEY (`SalesPersonID`) REFERENCES `Employees` (`EmployeeID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `Sales_ibfk_2` FOREIGN KEY (`CustomerID`) REFERENCES `Customers` (`CustomerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `Sales_ibfk_3` FOREIGN KEY (`ProductID`) REFERENCES `Products` (`ProductID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de padre con las columnas de, nombre nombre",
      "output": "('parent', 'CREATE TABLE `parent` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `parent_name1` (`name1`) USING BTREE,\\n  KEY `parent_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `parent_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `parent_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de misma generación con las columnas de, nombre nombre",
      "output": "('same_gen', 'CREATE TABLE `same_gen` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `same_gen_name1` (`name1`) USING BTREE,\\n  KEY `same_gen_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `same_gen_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `same_gen_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, nombre, nombre, objetivo",
      "output": "('target', 'CREATE TABLE `target` (\\n  `name1` varchar(50) NOT NULL  `name2` varchar(50) NOT NULL,\\n  `target` int(1) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`name1`,`name2`),\\n  KEY `target_name1` (`name1`) USING BTREE,\\n  KEY `target_name2` (`name2`) USING BTREE,\\n  CONSTRAINT `target_ibfk_1` FOREIGN KEY (`name1`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `target_ibfk_2` FOREIGN KEY (`name2`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, país, establo",
      "output": "('client', 'CREATE TABLE `client` (\\n  `client_id` int(11) NOT NULL  `kraj` varchar(255) DEFAULT NULL,\\n  `obor` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`client_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de obtenido con las columnas de, id cliente, mes año datum transakce, sluzba, kc dobito",
      "output": "('dobito', 'CREATE TABLE `dobito` (\\n  `client_id` int(11) DEFAULT NULL  `month_year_datum_transakce` date NOT NULL,\\n  `sluzba` varchar(255) NOT NULL,\\n  `kc_dobito` decimal(10,2) NOT NULL,\\n  KEY `dobito_client_id` (`client_id`) USING BTREE,\\n  CONSTRAINT `dobito_ibfk_1` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de probehnuto con las columnas de, id de cliente, mes, año, fecha de la transacción, servicio, kc en el que se hizo clic",
      "output": "('probehnuto', 'CREATE TABLE `probehnuto` (\\n  `client_id` int(11) DEFAULT NULL  `month_year_datum_transakce` date NOT NULL,\\n  `sluzba` varchar(255) DEFAULT NULL,\\n  `kc_proklikano` decimal(10,2) NOT NULL,\\n  KEY `probehnuto_client_id` (`client_id`) USING BTREE,\\n  CONSTRAINT `probehnuto_ibfk_1` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de probehnuto mimo penezenku con las columnas de, ID de cliente, Mes/Año, publicidad fuera de la billetera",
      "output": "('probehnuto_mimo_penezenku', 'CREATE TABLE `probehnuto_mimo_penezenku` (\\n  `client_id` int(11) NOT NULL  `Month/Year` date NOT NULL,\\n  `probehla_inzerce_mimo_penezenku` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`client_id`,`Month/Year`),\\n  KEY `probehnuto_mimo_penezenku_client_id` (`client_id`) USING BTREE,\\n  CONSTRAINT `probehnuto_mimo_penezenku_ibfk_1` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de capítulos con las columnas de, id, acto, escena, descripción, id de trabajo",
      "output": "('chapters', 'CREATE TABLE `chapters` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `Act` int(11) NOT NULL,\\n  `Scene` int(11) NOT NULL,\\n  `Description` text COLLATE utf8_unicode_ci NOT NULL,\\n  `work_id` int(11) NOT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `work_id` (`work_id`),\\n  CONSTRAINT `chapters_ibfk_1` FOREIGN KEY (`work_id`) REFERENCES `works` (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=19649 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci')"
    },
    {
      "input": "Una tabla de caracteres con las columnas de, id, nombre de char, abrev, descripción",
      "output": "('characters', 'CREATE TABLE `characters` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `CharName` varchar(128) COLLATE utf8_unicode_ci NOT NULL,\\n  `Abbrev` varchar(32) COLLATE utf8_unicode_ci NOT NULL,\\n  `Description` text COLLATE utf8_unicode_ci NOT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=1267 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci')"
    },
    {
      "input": "Una tabla de párrafos con las columnas de, id, número de párrafo, texto sin formato, id de carácter, id de capítulo",
      "output": "('paragraphs', 'CREATE TABLE `paragraphs` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `ParagraphNum` int(11) NOT NULL,\\n  `PlainText` text COLLATE utf8_unicode_ci NOT NULL,\\n  `character_id` int(11) NOT NULL,\\n  `chapter_id` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`id`),\\n  KEY `character_id` (`character_id`),\\n  KEY `chapter_id` (`chapter_id`),\\n  CONSTRAINT `paragraphs_ibfk_1` FOREIGN KEY (`character_id`) REFERENCES `characters` (`id`),\\n  CONSTRAINT `paragraphs_ibfk_2` FOREIGN KEY (`chapter_id`) REFERENCES `chapters` (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=666328 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci')"
    },
    {
      "input": "Una tabla de obras con las columnas de, id, Título, Título largo, Fecha, Tipo de género",
      "output": "('works', 'CREATE TABLE `works` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `Title` varchar(128) COLLATE utf8_unicode_ci NOT NULL,\\n  `LongTitle` text COLLATE utf8_unicode_ci NOT NULL,\\n  `Date` int(11) NOT NULL,\\n  `GenreType` varchar(32) COLLATE utf8_unicode_ci NOT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=44 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci')"
    },
    {
      "input": "Una tabla de cursos con las columnas de, id, nombre, id del profesor",
      "output": "('courses', 'CREATE TABLE `courses` (\\n  `id` int(10) unsigned NOT NULL  `name` varchar(32) DEFAULT NULL,\\n  `teacher_id` int(10) unsigned NOT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `teacher_id` (`teacher_id`),\\n  CONSTRAINT `courses_ibfk_1` FOREIGN KEY (`teacher_id`) REFERENCES `teachers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Los grados con las columnas de, identificación del estudiante, identificación del curso, grado",
      "output": "('grades', 'CREATE TABLE `grades` (\\n  `student_id` int(10) unsigned NOT NULL  `course_id` int(10) unsigned NOT NULL,\\n  `grade` varchar(2) DEFAULT NULL,\\n  PRIMARY KEY (`student_id`,`course_id`),\\n  KEY `student_id` (`student_id`),\\n  KEY `course_id` (`course_id`),\\n  CONSTRAINT `grades_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `grades_ibfk_2` FOREIGN KEY (`course_id`) REFERENCES `courses` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de estudiantes con las columnas de, id, nombre, correo electrónico, contraseña",
      "output": "('students', 'CREATE TABLE `students` (\\n  `id` int(10) unsigned NOT NULL  `name` varchar(32) DEFAULT NULL,\\n  `email` varchar(32) DEFAULT NULL,\\n  `password` varchar(16) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de maestros con las columnas de, identificación, nombre",
      "output": "('teachers', 'CREATE TABLE `teachers` (\\n  `id` int(10) unsigned NOT NULL  `name` varchar(32) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de bool con las columnas de, nombre",
      "output": "('bool', \"CREATE TABLE `bool` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de desactivado con las columnas de, nombre",
      "output": "('disabled', \"CREATE TABLE `disabled` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `disabled_ibfk_1` FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de conseguir con las columnas de, nombre, órgano",
      "output": "('enlist', 'CREATE TABLE `enlist` (\\n  `name` varchar(50) NOT NULL  `organ` varchar(50) NOT NULL,\\n  KEY `name` (`name`),\\n  KEY `organ` (`organ`),\\n  CONSTRAINT `enlist_ibfk_1` FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de matriculado con las columnas de, nombre, escuela, mes",
      "output": "('enrolled', 'CREATE TABLE `enrolled` (\\n  `name` varchar(50) NOT NULL  `school` varchar(50) NOT NULL,\\n  `month` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`name`,`school`),\\n  KEY `month` (`month`),\\n  KEY `name` (`name`),\\n  KEY `school` (`school`),\\n  CONSTRAINT `enrolled_ibfk_1` FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de declarado en bancarrota con las columnas de, nombre",
      "output": "('filed_for_bankrupcy', \"CREATE TABLE `filed_for_bankrupcy` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `filed_for_bankrupcy_ibfk_1` FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ausencia más larga de la escuela con las columnas de, nombre, mes",
      "output": "('longest_absense_from_school', \"CREATE TABLE `longest_absense_from_school` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  `month` int(11) DEFAULT 0,\\n  PRIMARY KEY (`name`),\\n  KEY `month` (`month`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `longest_absense_from_school_ibfk_1` FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de masculino con las columnas de, nombre",
      "output": "('male', \"CREATE TABLE `male` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `male_ibfk_1` FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de sin deuda pendiente con las columnas de, nombre, bool",
      "output": "('no_payment_due', \"CREATE TABLE `no_payment_due` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  `bool` varchar(3) DEFAULT NULL,\\n  PRIMARY KEY (`name`),\\n  KEY `bool` (`bool`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `no_payment_due_ibfk_1` FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `no_payment_due_ibfk_2` FOREIGN KEY (`bool`) REFERENCES `bool` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de persona con las columnas de, nombre",
      "output": "('person', \"CREATE TABLE `person` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de desempleados con las columnas de, nombre",
      "output": "('unemployed', \"CREATE TABLE `unemployed` (\\n  `name` varchar(50) NOT NULL DEFAULT ''  PRIMARY KEY (`name`),\\n  KEY `name` (`name`),\\n  CONSTRAINT `unemployed_ibfk_1` FOREIGN KEY (`name`) REFERENCES `person` (`name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de aplicación todo con las columnas de, identificación de la aplicación",
      "output": "('app_all', 'CREATE TABLE `app_all` (\\n  `app_id` bigint(20) NOT NULL  PRIMARY KEY (`app_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de eventos de la aplicación con las columnas de, ID de evento, ID de aplicación, está instalado, está activo",
      "output": "('app_events', 'CREATE TABLE `app_events` (\\n  `event_id` int(11) NOT NULL  `app_id` bigint(20) NOT NULL,\\n  `is_installed` tinyint(4) NOT NULL,\\n  `is_active` tinyint(4) NOT NULL,\\n  PRIMARY KEY (`event_id`,`app_id`),\\n  KEY `event_id` (`event_id`),\\n  CONSTRAINT `app_events_ibfk_1` FOREIGN KEY (`event_id`) REFERENCES `events` (`event_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de eventos de la aplicación relevantes con las columnas de, ID de evento, ID de aplicación, está instalado, está activo",
      "output": "('app_events_relevant', 'CREATE TABLE `app_events_relevant` (\\n  `event_id` int(11) NOT NULL  `app_id` bigint(20) NOT NULL,\\n  `is_installed` tinyint(4) DEFAULT NULL,\\n  `is_active` tinyint(4) DEFAULT NULL,\\n  PRIMARY KEY (`event_id`,`app_id`),\\n  KEY `event_id` (`event_id`),\\n  KEY `app_id` (`app_id`),\\n  CONSTRAINT `app_events_relevant_ibfk_1` FOREIGN KEY (`event_id`) REFERENCES `events_relevant` (`event_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `app_events_relevant_ibfk_2` FOREIGN KEY (`app_id`) REFERENCES `app_all` (`app_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de etiquetas de aplicaciones con las columnas de, ID de aplicación, ID de etiqueta",
      "output": "('app_labels', 'CREATE TABLE `app_labels` (\\n  `app_id` bigint(20) NOT NULL  `label_id` int(11) NOT NULL,\\n  KEY `label_id` (`label_id`),\\n  KEY `app_id` (`app_id`),\\n  CONSTRAINT `app_labels_ibfk_1` FOREIGN KEY (`label_id`) REFERENCES `label_categories` (`label_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `app_labels_ibfk_2` FOREIGN KEY (`app_id`) REFERENCES `app_all` (`app_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de eventos con las columnas de, ID de evento, ID de dispositivo, marca de tiempo, longitud, latitud",
      "output": "('events', 'CREATE TABLE `events` (\\n  `event_id` int(11) NOT NULL  `device_id` bigint(20) DEFAULT NULL,\\n  `timestamp` datetime DEFAULT NULL,\\n  `longitude` decimal(10,0) DEFAULT NULL,\\n  `latitude` decimal(10,0) DEFAULT NULL,\\n  PRIMARY KEY (`event_id`),\\n  KEY `device_id` (`device_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de eventos relevantes con las columnas de, ID de evento, ID de dispositivo, marca de tiempo, longitud, latitud",
      "output": "('events_relevant', 'CREATE TABLE `events_relevant` (\\n  `event_id` int(11) NOT NULL  `device_id` bigint(20) DEFAULT NULL,\\n  `timestamp` datetime NOT NULL,\\n  `longitude` decimal(10,0) NOT NULL,\\n  `latitude` decimal(10,0) NOT NULL,\\n  PRIMARY KEY (`event_id`),\\n  KEY `device_id` (`device_id`),\\n  CONSTRAINT `events_relevant_ibfk_1` FOREIGN KEY (`device_id`) REFERENCES `gender_age` (`device_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de género edad con las columnas de, ID de dispositivo, género, edad, grupo",
      "output": "('gender_age', 'CREATE TABLE `gender_age` (\\n  `device_id` bigint(20) NOT NULL  `gender` varchar(255) DEFAULT NULL,\\n  `age` int(11) DEFAULT NULL,\\n  `group` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`device_id`),\\n  CONSTRAINT `gender_age_ibfk_1` FOREIGN KEY (`device_id`) REFERENCES `phone_brand_device_model2` (`device_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de prueba de edad de genero con las columnas de, Identificación del dispositivo",
      "output": "('gender_age_test', 'CREATE TABLE `gender_age_test` (\\n  `device_id` bigint(20) NOT NULL  PRIMARY KEY (`device_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tren de edad de género con las columnas de, ID de dispositivo, género, edad, grupo",
      "output": "('gender_age_train', 'CREATE TABLE `gender_age_train` (\\n  `device_id` bigint(20) NOT NULL  `gender` varchar(255) DEFAULT NULL,\\n  `age` int(11) DEFAULT NULL,\\n  `group` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`device_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de categorías de etiquetas con las columnas de, ID de etiqueta, categoría",
      "output": "('label_categories', 'CREATE TABLE `label_categories` (\\n  `label_id` int(11) NOT NULL  `category` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`label_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de modelo de dispositivo de marca de teléfono con las columnas de, ID de dispositivo, marca de teléfono, modelo de dispositivo",
      "output": "('phone_brand_device_model2', 'CREATE TABLE `phone_brand_device_model2` (\\n  `device_id` bigint(20) NOT NULL  `phone_brand` varchar(255) NOT NULL,\\n  `device_model` varchar(255) NOT NULL,\\n  PRIMARY KEY (`device_id`,`phone_brand`,`device_model`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de envío de muestras con las columnas de, ID de dispositivo, F , F , F , F , F , F+, M , M , M , M , M , M+",
      "output": "('sample_submission', 'CREATE TABLE `sample_submission` (\\n  `device_id` bigint(20) NOT NULL  `F23-` float DEFAULT NULL,\\n  `F24-26` float DEFAULT NULL,\\n  `F27-28` float DEFAULT NULL,\\n  `F29-32` float DEFAULT NULL,\\n  `F33-42` float DEFAULT NULL,\\n  `F43+` float DEFAULT NULL,\\n  `M22-` float DEFAULT NULL,\\n  `M23-26` float DEFAULT NULL,\\n  `M27-28` float DEFAULT NULL,\\n  `M29-31` float DEFAULT NULL,\\n  `M32-38` float DEFAULT NULL,\\n  `M39+` float DEFAULT NULL,\\n  PRIMARY KEY (`device_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipo de evento con las columnas de, id, tipo de evento",
      "output": "('event_type', 'CREATE TABLE `event_type` (\\n  `id` int(11) NOT NULL  `event_type` varchar(255) NOT NULL,\\n  PRIMARY KEY (`id`,`event_type`),\\n  CONSTRAINT `event_type_id_fkey` FOREIGN KEY (`id`) REFERENCES `target` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de función de registro con las columnas de, id, función de registro, volumen",
      "output": "('log_feature', 'CREATE TABLE `log_feature` (\\n  `id` int(11) NOT NULL  `log_feature` varchar(255) NOT NULL,\\n  `volume` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`,`log_feature`),\\n  CONSTRAINT `log_feature_id_fkey` FOREIGN KEY (`id`) REFERENCES `target` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipo de recurso con las columnas de, id, tipo de recurso",
      "output": "('resource_type', 'CREATE TABLE `resource_type` (\\n  `id` int(11) NOT NULL  `resource_type` varchar(255) NOT NULL,\\n  PRIMARY KEY (`id`,`resource_type`),\\n  CONSTRAINT `resource_type_id_fkey` FOREIGN KEY (`id`) REFERENCES `target` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipo de gravedad con las columnas de, id, tipo de gravedad",
      "output": "('severity_type', 'CREATE TABLE `severity_type` (\\n  `id` int(11) NOT NULL  `severity_type` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  CONSTRAINT `severity_type_id_fkey` FOREIGN KEY (`id`) REFERENCES `target` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, id, ubicación, gravedad de la falla",
      "output": "('target', 'CREATE TABLE `target` (\\n  `id` int(11) NOT NULL  `location` varchar(255) DEFAULT NULL,\\n  `fault_severity` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `target_id_key` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de átomo con las columnas de, átomo y, molécula de, elemento",
      "output": "('atom', 'CREATE TABLE `atom` (\\n  `atom_id` varchar(255) NOT NULL  `molecule_id` varchar(255) DEFAULT NULL,\\n  `element` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`atom_id`),\\n  KEY `molecule_id` (`molecule_id`),\\n  KEY `atom_id` (`atom_id`),\\n  CONSTRAINT `atom_ibfk_1` FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de vínculo con las columnas de, enlace de, molécula es, tipo de enlace",
      "output": "('bond', 'CREATE TABLE `bond` (\\n  `bond_id` varchar(255) NOT NULL  `molecule_id` varchar(255) DEFAULT NULL,\\n  `bond_type` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`bond_id`),\\n  KEY `bond_id` (`bond_id`),\\n  KEY `molecule_id` (`molecule_id`),\\n  CONSTRAINT `bond_ibfk_1` FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de conectado con las columnas de, átomo ide, átomo es, enlace id",
      "output": "('connected', 'CREATE TABLE `connected` (\\n  `atom_id` varchar(255) NOT NULL  `atom_id2` varchar(255) NOT NULL,\\n  `bond_id` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`atom_id`,`atom_id2`),\\n  KEY `atom_id` (`atom_id`),\\n  KEY `atom_id2` (`atom_id2`),\\n  KEY `bond_id` (`bond_id`),\\n  CONSTRAINT `connected_ibfk_1` FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `connected_ibfk_2` FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `connected_ibfk_3` FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de molécula con las columnas de, ID de molécula, etiqueta",
      "output": "('molecule', 'CREATE TABLE `molecule` (\\n  `molecule_id` varchar(255) NOT NULL  `label` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`molecule_id`),\\n  KEY `molecule_id` (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de molécula con las columnas de, ID de molécula, actividad",
      "output": "('molecule', 'CREATE TABLE `molecule` (\\n  `molecule_id` int(11) NOT NULL DEFAULT 0  `activity` float DEFAULT NULL,\\n  PRIMARY KEY (`molecule_id`),\\n  KEY `molecule_id` (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de posición con las columnas de, id de molécula, posición, rama, flex, h acceptor, h doner, pi acceptor, pi doner, polar, polarizable, sigma, tamaño",
      "output": "('position', 'CREATE TABLE `position` (\\n  `molecule_id` int(11) NOT NULL DEFAULT 0  `position` int(11) NOT NULL DEFAULT 0,\\n  `branch` float DEFAULT NULL,\\n  `flex` float DEFAULT NULL,\\n  `h_acceptor` float DEFAULT NULL,\\n  `h_doner` float DEFAULT NULL,\\n  `pi_acceptor` float DEFAULT NULL,\\n  `pi_doner` float DEFAULT NULL,\\n  `polar` float DEFAULT NULL,\\n  `polarisable` float DEFAULT NULL,\\n  `sigma` float DEFAULT NULL,\\n  `size` float DEFAULT NULL,\\n  PRIMARY KEY (`molecule_id`,`position`),\\n  KEY `molecule_id` (`molecule_id`),\\n  CONSTRAINT `position_ibfk_1` FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de lista de materiales con las columnas de, identificación del conjunto de tubos, identificación del componente, cantidad",
      "output": "('bill_of_materials', 'CREATE TABLE `bill_of_materials` (\\n  `tube_assembly_id` varchar(255) NOT NULL  `component_id` varchar(255) NOT NULL,\\n  `quantity` int(11) DEFAULT NULL,\\n  KEY `bill_of_materials_post_tube_assembly_id_fkey` (`tube_assembly_id`),\\n  KEY `bill_of_materials_post_component_id_fkey` (`component_id`),\\n  CONSTRAINT `bill_of_materials_post_component_id_fkey` FOREIGN KEY (`component_id`) REFERENCES `components` (`component_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `bill_of_materials_post_tube_assembly_id_fkey` FOREIGN KEY (`tube_assembly_id`) REFERENCES `tube` (`tube_assembly_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Especificaciones con las columnas de, id de conjunto de tubo, especificaciones",
      "output": "('spec', 'CREATE TABLE `spec` (\\n  `tube_assembly_id` varchar(255) NOT NULL  `spec` varchar(255) NOT NULL,\\n  KEY `spec2_tube_assembly_id_fkey` (`tube_assembly_id`),\\n  CONSTRAINT `spec2_tube_assembly_id_fkey` FOREIGN KEY (`tube_assembly_id`) REFERENCES `tube` (`tube_assembly_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de asesorado por con las columnas de, p id, p id maniquí",
      "output": "('advisedBy', 'CREATE TABLE `advisedBy` (\\n  `p_id` int(11) NOT NULL DEFAULT 0  `p_id_dummy` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`p_id_dummy`,`p_id`),\\n  KEY `FK_u2base_1` (`p_id`),\\n  KEY `FK_u2base_2` (`p_id_dummy`),\\n  CONSTRAINT `FK_advisedBy_person` FOREIGN KEY (`p_id`) REFERENCES `person` (`p_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_advisedBy_person_2` FOREIGN KEY (`p_id_dummy`) REFERENCES `person` (`p_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de curso con las columnas de, id del curso, nivel del curso",
      "output": "('course', 'CREATE TABLE `course` (\\n  `course_id` int(11) NOT NULL  `courseLevel` varchar(40) DEFAULT NULL,\\n  PRIMARY KEY (`course_id`),\\n  KEY `course_courseLevel` (`courseLevel`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de persona con las columnas de, p id, profesor, estudiante, tiene Cargo, en Fase, años En Programa",
      "output": "('person', \"CREATE TABLE `person` (\\n  `p_id` int(11) NOT NULL DEFAULT 0  `professor` varchar(11) NOT NULL DEFAULT '0',\\n  `student` varchar(11) NOT NULL DEFAULT '0',\\n  `hasPosition` varchar(11) NOT NULL DEFAULT '0',\\n  `inPhase` varchar(40) DEFAULT NULL,\\n  `yearsInProgram` varchar(40) DEFAULT NULL,\\n  PRIMARY KEY (`p_id`),\\n  KEY `person_hasPosition` (`hasPosition`),\\n  KEY `person_inPhase` (`inPhase`),\\n  KEY `person_yearInProgram` (`yearsInProgram`),\\n  KEY `person_professor` (`professor`),\\n  KEY `person_student` (`student`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de enseñado por con las columnas de, id del curso, id p",
      "output": "('taughtBy', 'CREATE TABLE `taughtBy` (\\n  `course_id` int(11) NOT NULL DEFAULT 0  `p_id` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`course_id`,`p_id`),\\n  KEY `FK_2` (`course_id`),\\n  KEY `FK_1` (`p_id`),\\n  CONSTRAINT `FK_taught_course` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `FK_taught_person` FOREIGN KEY (`p_id`) REFERENCES `person` (`p_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de CLASES ATT con las columnas de, ID DE CLASE ATT, CLASE ATT",
      "output": "('ATT_CLASSES', 'CREATE TABLE `ATT_CLASSES` (\\n  `ATT_CLASS_ID` int(11) NOT NULL DEFAULT 0  `ATT_CLASS` char(50) NOT NULL,\\n  PRIMARY KEY (`ATT_CLASS_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de OBJETO DE IMG con las columnas de, IMG ID, OBJ MUESTRA ID, OBJ CLASE ID, X, Y, W, H",
      "output": "('IMG_OBJ', 'CREATE TABLE `IMG_OBJ` (\\n  `IMG_ID` bigint(20) NOT NULL DEFAULT 0  `OBJ_SAMPLE_ID` int(11) NOT NULL DEFAULT 0,\\n  `OBJ_CLASS_ID` int(11) DEFAULT NULL,\\n  `X` int(11) DEFAULT NULL,\\n  `Y` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `H` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`IMG_ID`,`OBJ_SAMPLE_ID`),\\n  KEY `OBJ_CLASS_ID` (`OBJ_CLASS_ID`),\\n  CONSTRAINT `IMG_OBJ_ibfk_1` FOREIGN KEY (`OBJ_CLASS_ID`) REFERENCES `OBJ_CLASSES` (`OBJ_CLASS_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de IMG OBJ ATT con las columnas de, IMG ID, ATT CLASE ID, OBJ MUESTRA ID",
      "output": "('IMG_OBJ_ATT', 'CREATE TABLE `IMG_OBJ_ATT` (\\n  `IMG_ID` bigint(20) NOT NULL DEFAULT 0  `ATT_CLASS_ID` int(11) NOT NULL DEFAULT 0,\\n  `OBJ_SAMPLE_ID` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`IMG_ID`,`ATT_CLASS_ID`,`OBJ_SAMPLE_ID`),\\n  KEY `ATT_CLASS_ID` (`ATT_CLASS_ID`),\\n  KEY `IMG_ID` (`IMG_ID`,`OBJ_SAMPLE_ID`),\\n  CONSTRAINT `IMG_OBJ_ATT_ibfk_1` FOREIGN KEY (`ATT_CLASS_ID`) REFERENCES `ATT_CLASSES` (`ATT_CLASS_ID`),\\n  CONSTRAINT `IMG_OBJ_ATT_ibfk_2` FOREIGN KEY (`IMG_ID`, `OBJ_SAMPLE_ID`) REFERENCES `IMG_OBJ` (`IMG_ID`, `OBJ_SAMPLE_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de IMG REL con las columnas de, IMG ID, PRED CLASS ID, OBJ MUESTRA ID, OBJ MUESTRA ID",
      "output": "('IMG_REL', 'CREATE TABLE `IMG_REL` (\\n  `IMG_ID` bigint(20) NOT NULL DEFAULT 0  `PRED_CLASS_ID` int(11) NOT NULL DEFAULT 0,\\n  `OBJ1_SAMPLE_ID` int(11) NOT NULL DEFAULT 0,\\n  `OBJ2_SAMPLE_ID` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`IMG_ID`,`PRED_CLASS_ID`,`OBJ1_SAMPLE_ID`,`OBJ2_SAMPLE_ID`),\\n  KEY `PRED_CLASS_ID` (`PRED_CLASS_ID`),\\n  KEY `IMG_ID` (`IMG_ID`,`OBJ1_SAMPLE_ID`),\\n  KEY `IMG_ID_2` (`IMG_ID`,`OBJ2_SAMPLE_ID`),\\n  CONSTRAINT `IMG_REL_ibfk_1` FOREIGN KEY (`PRED_CLASS_ID`) REFERENCES `PRED_CLASSES` (`PRED_CLASS_ID`),\\n  CONSTRAINT `IMG_REL_ibfk_2` FOREIGN KEY (`IMG_ID`, `OBJ1_SAMPLE_ID`) REFERENCES `IMG_OBJ` (`IMG_ID`, `OBJ_SAMPLE_ID`),\\n  CONSTRAINT `IMG_REL_ibfk_3` FOREIGN KEY (`IMG_ID`, `OBJ2_SAMPLE_ID`) REFERENCES `IMG_OBJ` (`IMG_ID`, `OBJ_SAMPLE_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de CLASES OBJ con las columnas de, ID DE CLASE OBJ, CLASE OBJ",
      "output": "('OBJ_CLASSES', 'CREATE TABLE `OBJ_CLASSES` (\\n  `OBJ_CLASS_ID` int(11) NOT NULL DEFAULT 0  `OBJ_CLASS` char(50) NOT NULL,\\n  PRIMARY KEY (`OBJ_CLASS_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de CLASES PREPARATORIAS con las columnas de, ID DE CLASE PRED, CLASE PRED",
      "output": "('PRED_CLASSES', 'CREATE TABLE `PRED_CLASSES` (\\n  `PRED_CLASS_ID` int(11) NOT NULL DEFAULT 0  `PRED_CLASS` char(100) NOT NULL,\\n  PRIMARY KEY (`PRED_CLASS_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de llave con las columnas de, tienda nbr, estación nbr",
      "output": "('key', 'CREATE TABLE `key` (\\n  `store_nbr` int(11) NOT NULL  `station_nbr` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`store_nbr`),\\n  UNIQUE KEY `key_store_nbr_key` (`store_nbr`),\\n  KEY `key_station_nbr_fkey` (`station_nbr`),\\n  CONSTRAINT `key_station_nbr_fkey` FOREIGN KEY (`station_nbr`) REFERENCES `station` (`station_nbr`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de estación con las columnas de, número de estación",
      "output": "('station', 'CREATE TABLE `station` (\\n  `station_nbr` int(11) NOT NULL  PRIMARY KEY (`station_nbr`),\\n  UNIQUE KEY `station_station_nbr_key` (`station_nbr`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tren con las columnas de, fecha, tienda nbr, artículo nbr, unidades",
      "output": "('train', 'CREATE TABLE `train` (\\n  `date` date NOT NULL  `store_nbr` int(11) NOT NULL,\\n  `item_nbr` int(11) NOT NULL,\\n  `units` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`store_nbr`,`date`,`item_nbr`),\\n  CONSTRAINT `train_store_nbr_fkey` FOREIGN KEY (`store_nbr`) REFERENCES `key` (`store_nbr`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de clima con las columnas de, estación nbr, fecha, tmax, tmin, tavg, salir, punto de rocío, bulbo húmedo, calor, guay, amanecer, atardecer, codesum, nevada, preciptotal, presión de gas, nivel del mar, velocidad de resultado, resultadodir, velocidad media",
      "output": "('weather', 'CREATE TABLE `weather` (\\n  `station_nbr` int(11) NOT NULL  `date` date NOT NULL,\\n  `tmax` int(11) DEFAULT NULL,\\n  `tmin` int(11) DEFAULT NULL,\\n  `tavg` int(11) DEFAULT NULL,\\n  `depart` int(11) DEFAULT NULL,\\n  `dewpoint` int(11) DEFAULT NULL,\\n  `wetbulb` int(11) DEFAULT NULL,\\n  `heat` int(11) DEFAULT NULL,\\n  `cool` int(11) DEFAULT NULL,\\n  `sunrise` time DEFAULT NULL,\\n  `sunset` time DEFAULT NULL,\\n  `codesum` varchar(255) DEFAULT NULL,\\n  `snowfall` float DEFAULT NULL,\\n  `preciptotal` float DEFAULT NULL,\\n  `stnpressure` float DEFAULT NULL,\\n  `sealevel` float DEFAULT NULL,\\n  `resultspeed` float DEFAULT NULL,\\n  `resultdir` int(11) DEFAULT NULL,\\n  `avgspeed` float DEFAULT NULL,\\n  PRIMARY KEY (`station_nbr`,`date`),\\n  CONSTRAINT `weather_station_nbr_fkey` FOREIGN KEY (`station_nbr`) REFERENCES `station` (`station_nbr`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de caracteristicas con las columnas de, Tienda, Fecha, Temperatura, Precio del combustible, Rebaja, Rebaja, Rebaja, Rebaja, Rebaja, IPC, Desempleo, Es feriado",
      "output": "('features', 'CREATE TABLE `features` (\\n  `Store` int(11) NOT NULL  `Date` date NOT NULL,\\n  `Temperature` float DEFAULT NULL,\\n  `Fuel_Price` float DEFAULT NULL,\\n  `MarkDown1` float DEFAULT NULL,\\n  `MarkDown2` float DEFAULT NULL,\\n  `MarkDown3` float DEFAULT NULL,\\n  `MarkDown4` float DEFAULT NULL,\\n  `MarkDown5` float DEFAULT NULL,\\n  `CPI` float DEFAULT NULL,\\n  `Unemployment` float DEFAULT NULL,\\n  `IsHoliday` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Store`,`Date`),\\n  KEY `Store` (`Store`),\\n  CONSTRAINT `features_ibfk_1` FOREIGN KEY (`Store`) REFERENCES `stores` (`Store`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de historias con las columnas de, Tienda, Tipo, Tamaño",
      "output": "('stores', 'CREATE TABLE `stores` (\\n  `Store` int(11) NOT NULL  `Type` varchar(255) DEFAULT NULL,\\n  `Size` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Store`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tren con las columnas de, tienda, departamento, fecha, ventas semanales, es feriado",
      "output": "('train', 'CREATE TABLE `train` (\\n  `Store` int(11) NOT NULL  `Dept` int(11) NOT NULL,\\n  `Date` date NOT NULL,\\n  `Weekly_Sales` float DEFAULT NULL,\\n  `IsHoliday` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Store`,`Dept`,`Date`),\\n  CONSTRAINT `train_ibfk_1` FOREIGN KEY (`Store`) REFERENCES `stores` (`Store`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Negocio con las columnas de, identificación comercial, dirección completa, activo, categorías, ciudad, recuento de reseñas, nombre comercial, vecindarios, latitud, longitud, estado, estrellas",
      "output": "('Business', \"CREATE TABLE `Business` (\\n  `business_id` varchar(30) NOT NULL DEFAULT ''  `full_address` varchar(200) DEFAULT NULL,\\n  `active` varchar(10) DEFAULT NULL,\\n  `categories` varchar(200) DEFAULT NULL,\\n  `city` varchar(30) DEFAULT NULL,\\n  `review_count` int(11) DEFAULT NULL,\\n  `business_name` varchar(100) DEFAULT NULL,\\n  `neighborhoods` varchar(200) DEFAULT NULL,\\n  `latitude` double DEFAULT NULL,\\n  `longitude` double DEFAULT NULL,\\n  `state` varchar(5) DEFAULT NULL,\\n  `stars` double DEFAULT NULL,\\n  PRIMARY KEY (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de registros con las columnas de, ID de empresa, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, domingo, Domingo, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, Lunes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, martes, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, miércoles, jueves, jueves, Jue Viernes, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, jueves, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, viernes, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado, sábado",
      "output": "('Checkins', \"CREATE TABLE `Checkins` (\\n  `business_id` varchar(30) NOT NULL DEFAULT ''  `Sunday_0` int(11) DEFAULT NULL,\\n  `Sunday_1` int(11) DEFAULT NULL,\\n  `Sunday_2` int(11) DEFAULT NULL,\\n  `Sunday_3` int(11) DEFAULT NULL,\\n  `Sunday_4` int(11) DEFAULT NULL,\\n  `Sunday_5` int(11) DEFAULT NULL,\\n  `Sunday_6` int(11) DEFAULT NULL,\\n  `Sunday_7` int(11) DEFAULT NULL,\\n  `Sunday_8` int(11) DEFAULT NULL,\\n  `Sunday_9` int(11) DEFAULT NULL,\\n  `Sunday_10` int(11) DEFAULT NULL,\\n  `Sunday_11` int(11) DEFAULT NULL,\\n  `Sunday_12` int(11) DEFAULT NULL,\\n  `Sunday_13` int(11) DEFAULT NULL,\\n  `Sunday_14` int(11) DEFAULT NULL,\\n  `Sunday_15` int(11) DEFAULT NULL,\\n  `Sunday_16` int(11) DEFAULT NULL,\\n  `Sunday_17` int(11) DEFAULT NULL,\\n  `Sunday_18` int(11) DEFAULT NULL,\\n  `Sunday_19` int(11) DEFAULT NULL,\\n  `Sunday_20` int(11) DEFAULT NULL,\\n  `Sunday_21` int(11) DEFAULT NULL,\\n  `Sunday_22` int(11) DEFAULT NULL,\\n  `Sunday_23` int(11) DEFAULT NULL,\\n  `Monday_0` int(11) DEFAULT NULL,\\n  `Monday_1` int(11) DEFAULT NULL,\\n  `Monday_2` int(11) DEFAULT NULL,\\n  `Monday_3` int(11) DEFAULT NULL,\\n  `Monday_4` int(11) DEFAULT NULL,\\n  `Monday_5` int(11) DEFAULT NULL,\\n  `Monday_6` int(11) DEFAULT NULL,\\n  `Monday_7` int(11) DEFAULT NULL,\\n  `Monday_8` int(11) DEFAULT NULL,\\n  `Monday_9` int(11) DEFAULT NULL,\\n  `Monday_10` int(11) DEFAULT NULL,\\n  `Monday_11` int(11) DEFAULT NULL,\\n  `Monday_12` int(11) DEFAULT NULL,\\n  `Monday_13` int(11) DEFAULT NULL,\\n  `Monday_14` int(11) DEFAULT NULL,\\n  `Monday_15` int(11) DEFAULT NULL,\\n  `Monday_16` int(11) DEFAULT NULL,\\n  `Monday_17` int(11) DEFAULT NULL,\\n  `Monday_18` int(11) DEFAULT NULL,\\n  `Monday_19` int(11) DEFAULT NULL,\\n  `Monday_20` int(11) DEFAULT NULL,\\n  `Monday_21` int(11) DEFAULT NULL,\\n  `Monday_22` int(11) DEFAULT NULL,\\n  `Monday_23` int(11) DEFAULT NULL,\\n  `Tuesday_0` int(11) DEFAULT NULL,\\n  `Tuesday_1` int(11) DEFAULT NULL,\\n  `Tuesday_2` int(11) DEFAULT NULL,\\n  `Tuesday_3` int(11) DEFAULT NULL,\\n  `Tuesday_4` int(11) DEFAULT NULL,\\n  `Tuesday_5` int(11) DEFAULT NULL,\\n  `Tuesday_6` int(11) DEFAULT NULL,\\n  `Tuesday_7` int(11) DEFAULT NULL,\\n  `Tuesday_8` int(11) DEFAULT NULL,\\n  `Tuesday_9` int(11) DEFAULT NULL,\\n  `Tuesday_10` int(11) DEFAULT NULL,\\n  `Tuesday_11` int(11) DEFAULT NULL,\\n  `Tuesday_12` int(11) DEFAULT NULL,\\n  `Tuesday_13` int(11) DEFAULT NULL,\\n  `Tuesday_14` int(11) DEFAULT NULL,\\n  `Tuesday_15` int(11) DEFAULT NULL,\\n  `Tuesday_16` int(11) DEFAULT NULL,\\n  `Tuesday_17` int(11) DEFAULT NULL,\\n  `Tuesday_18` int(11) DEFAULT NULL,\\n  `Tuesday_19` int(11) DEFAULT NULL,\\n  `Tuesday_20` int(11) DEFAULT NULL,\\n  `Tuesday_21` int(11) DEFAULT NULL,\\n  `Tuesday_22` int(11) DEFAULT NULL,\\n  `Tuesday_23` int(11) DEFAULT NULL,\\n  `Wednesday_0` int(11) DEFAULT NULL,\\n  `Wednesday_1` int(11) DEFAULT NULL,\\n  `Wednesday_2` int(11) DEFAULT NULL,\\n  `Wednesday_3` int(11) DEFAULT NULL,\\n  `Wednesday_4` int(11) DEFAULT NULL,\\n  `Wednesday_5` int(11) DEFAULT NULL,\\n  `Wednesday_6` int(11) DEFAULT NULL,\\n  `Wednesday_7` int(11) DEFAULT NULL,\\n  `Wednesday_8` int(11) DEFAULT NULL,\\n  `Wednesday_9` int(11) DEFAULT NULL,\\n  `Wednesday_10` int(11) DEFAULT NULL,\\n  `Wednesday_11` int(11) DEFAULT NULL,\\n  `Wednesday_12` int(11) DEFAULT NULL,\\n  `Wednesday_13` int(11) DEFAULT NULL,\\n  `Wednesday_14` int(11) DEFAULT NULL,\\n  `Wednesday_15` int(11) DEFAULT NULL,\\n  `Wednesday_16` int(11) DEFAULT NULL,\\n  `Wednesday_17` int(11) DEFAULT NULL,\\n  `Wednesday_18` int(11) DEFAULT NULL,\\n  `Wednesday_19` int(11) DEFAULT NULL,\\n  `Wednesday_20` int(11) DEFAULT NULL,\\n  `Wednesday_21` int(11) DEFAULT NULL,\\n  `Wednesday_22` int(11) DEFAULT NULL,\\n  `Wednesday_23` int(11) DEFAULT NULL,\\n  `Thursday_0` int(11) DEFAULT NULL,\\n  `Thursday_1` int(11) DEFAULT NULL,\\n  `Thursday_2` int(11) DEFAULT NULL,\\n  `Thursday_3` int(11) DEFAULT NULL,\\n  `Thursday_4` int(11) DEFAULT NULL,\\n  `Thursday_5` int(11) DEFAULT NULL,\\n  `Thursday_6` int(11) DEFAULT NULL,\\n  `Thursday_7` int(11) DEFAULT NULL,\\n  `Thursday_8` int(11) DEFAULT NULL,\\n  `Thursday_9` int(11) DEFAULT NULL,\\n  `Thursday_10` int(11) DEFAULT NULL,\\n  `Thursday_11` int(11) DEFAULT NULL,\\n  `Thursday_12` int(11) DEFAULT NULL,\\n  `Thursday_13` int(11) DEFAULT NULL,\\n  `Thursday_14` int(11) DEFAULT NULL,\\n  `Thursday_15` int(11) DEFAULT NULL,\\n  `Thursday_16` int(11) DEFAULT NULL,\\n  `Thursday_17` int(11) DEFAULT NULL,\\n  `Thursday_18` int(11) DEFAULT NULL,\\n  `Thursday_19` int(11) DEFAULT NULL,\\n  `Thursday_20` int(11) DEFAULT NULL,\\n  `Thursday_21` int(11) DEFAULT NULL,\\n  `Thursday_22` int(11) DEFAULT NULL,\\n  `Thursday_23` int(11) DEFAULT NULL,\\n  `Friday_0` int(11) DEFAULT NULL,\\n  `Friday_1` int(11) DEFAULT NULL,\\n  `Friday_2` int(11) DEFAULT NULL,\\n  `Friday_3` int(11) DEFAULT NULL,\\n  `Friday_4` int(11) DEFAULT NULL,\\n  `Friday_5` int(11) DEFAULT NULL,\\n  `Friday_6` int(11) DEFAULT NULL,\\n  `Friday_7` int(11) DEFAULT NULL,\\n  `Friday_8` int(11) DEFAULT NULL,\\n  `Friday_9` int(11) DEFAULT NULL,\\n  `Friday_10` int(11) DEFAULT NULL,\\n  `Friday_11` int(11) DEFAULT NULL,\\n  `Friday_12` int(11) DEFAULT NULL,\\n  `Friday_13` int(11) DEFAULT NULL,\\n  `Friday_14` int(11) DEFAULT NULL,\\n  `Friday_15` int(11) DEFAULT NULL,\\n  `Friday_16` int(11) DEFAULT NULL,\\n  `Friday_17` int(11) DEFAULT NULL,\\n  `Friday_18` int(11) DEFAULT NULL,\\n  `Friday_19` int(11) DEFAULT NULL,\\n  `Friday_20` int(11) DEFAULT NULL,\\n  `Friday_21` int(11) DEFAULT NULL,\\n  `Friday_22` int(11) DEFAULT NULL,\\n  `Friday_23` int(11) DEFAULT NULL,\\n  `Saturday_0` int(11) DEFAULT NULL,\\n  `Saturday_1` int(11) DEFAULT NULL,\\n  `Saturday_2` int(11) DEFAULT NULL,\\n  `Saturday_3` int(11) DEFAULT NULL,\\n  `Saturday_4` int(11) DEFAULT NULL,\\n  `Saturday_5` int(11) DEFAULT NULL,\\n  `Saturday_6` int(11) DEFAULT NULL,\\n  `Saturday_7` int(11) DEFAULT NULL,\\n  `Saturday_8` int(11) DEFAULT NULL,\\n  `Saturday_9` int(11) DEFAULT NULL,\\n  `Saturday_10` int(11) DEFAULT NULL,\\n  `Saturday_11` int(11) DEFAULT NULL,\\n  `Saturday_12` int(11) DEFAULT NULL,\\n  `Saturday_13` int(11) DEFAULT NULL,\\n  `Saturday_14` int(11) DEFAULT NULL,\\n  `Saturday_15` int(11) DEFAULT NULL,\\n  `Saturday_16` int(11) DEFAULT NULL,\\n  `Saturday_17` int(11) DEFAULT NULL,\\n  `Saturday_18` int(11) DEFAULT NULL,\\n  `Saturday_19` int(11) DEFAULT NULL,\\n  `Saturday_20` int(11) DEFAULT NULL,\\n  `Saturday_21` int(11) DEFAULT NULL,\\n  `Saturday_22` int(11) DEFAULT NULL,\\n  `Saturday_23` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`business_id`),\\n  CONSTRAINT `Checkins_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Reseñas con las columnas de, ID de revisión, ID de empresa, ID de usuario, estrellas, fecha de revisión, votos divertidos, votos útiles, votos geniales, texto de revisión",
      "output": "('Reviews', \"CREATE TABLE `Reviews` (\\n  `review_id` varchar(30) NOT NULL DEFAULT ''  `business_id` varchar(30) DEFAULT NULL,\\n  `user_id` varchar(30) DEFAULT NULL,\\n  `stars` double DEFAULT NULL,\\n  `review_date` date DEFAULT NULL,\\n  `votes_funny` int(11) DEFAULT NULL,\\n  `votes_useful` int(11) DEFAULT NULL,\\n  `votes_cool` int(11) DEFAULT NULL,\\n  `review_text` text DEFAULT NULL,\\n  PRIMARY KEY (`review_id`),\\n  KEY `business_id` (`business_id`),\\n  KEY `user_id` (`user_id`),\\n  CONSTRAINT `Reviews_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Reviews_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `Users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Usuarios con las columnas de, identificación de usuario, votos divertidos, votos útiles, votos geniales, nombre, promedio de estrellas, recuento de reseñas",
      "output": "('Users', \"CREATE TABLE `Users` (\\n  `user_id` varchar(30) NOT NULL DEFAULT ''  `votes_funny` int(11) DEFAULT NULL,\\n  `votes_useful` int(11) DEFAULT NULL,\\n  `votes_cool` int(11) DEFAULT NULL,\\n  `name` varchar(30) DEFAULT NULL,\\n  `average_stars` double DEFAULT NULL,\\n  `review_count` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Negocio con las columnas de, ID de empresa, dirección completa, activo, ciudad, recuento de reseñas, nombre de empresa, barrios, latitud, longitud, estado, estrellas",
      "output": "('Business', \"CREATE TABLE `Business` (\\n  `business_id` varchar(30) NOT NULL DEFAULT ''  `full_address` varchar(200) DEFAULT NULL,\\n  `active` varchar(10) DEFAULT NULL,\\n  `city` varchar(30) DEFAULT NULL,\\n  `review_count` int(11) DEFAULT NULL,\\n  `business_name` varchar(100) DEFAULT NULL,\\n  `neighborhoods` varchar(200) DEFAULT NULL,\\n  `latitude` double DEFAULT NULL,\\n  `longitude` double DEFAULT NULL,\\n  `state` varchar(5) DEFAULT NULL,\\n  `stars` double DEFAULT NULL,\\n  PRIMARY KEY (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Atributos comerciales con las columnas de, ID de empresa, nombre de atributo, valor de atributo",
      "output": "('Business_Attributes', 'CREATE TABLE `Business_Attributes` (\\n  `business_id` varchar(30) DEFAULT NULL  `attribute_name` varchar(255) DEFAULT NULL,\\n  `attribute_value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Atributos comerciales Acepta tarjetas de crédito con las columnas de, ID de empresa, subatributo, valor",
      "output": "('Business_Attributes_AcceptsCreditCards', 'CREATE TABLE `Business_Attributes_AcceptsCreditCards` (\\n  `business_id` varchar(30) DEFAULT NULL  `subattribute` varchar(255) DEFAULT NULL,\\n  `value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Ambiente de atributos comerciales con las columnas de, ID de empresa, subatributo, valor",
      "output": "('Business_Attributes_Ambience', 'CREATE TABLE `Business_Attributes_Ambience` (\\n  `business_id` varchar(30) DEFAULT NULL  `subattribute` varchar(255) DEFAULT NULL,\\n  `value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Atributos comerciales Restricciones dietéticas con las columnas de, ID de empresa, subatributo, valor",
      "output": "('Business_Attributes_DietaryRestrictions', 'CREATE TABLE `Business_Attributes_DietaryRestrictions` (\\n  `business_id` varchar(30) DEFAULT NULL  `subattribute` varchar(255) DEFAULT NULL,\\n  `value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Atributos comerciales buenos para con las columnas de, ID de empresa, subatributo, valor",
      "output": "('Business_Attributes_GoodFor', 'CREATE TABLE `Business_Attributes_GoodFor` (\\n  `business_id` varchar(30) DEFAULT NULL  `subattribute` varchar(255) DEFAULT NULL,\\n  `value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Atributos comerciales Tipos de cabello Especializados en con las columnas de, ID de empresa, subatributo, valor",
      "output": "('Business_Attributes_HairTypesSpecializedIn', 'CREATE TABLE `Business_Attributes_HairTypesSpecializedIn` (\\n  `business_id` varchar(30) DEFAULT NULL  `subattribute` varchar(255) DEFAULT NULL,\\n  `value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Atributos comerciales Música con las columnas de, ID de empresa, subatributo, valor",
      "output": "('Business_Attributes_Music', 'CREATE TABLE `Business_Attributes_Music` (\\n  `business_id` varchar(30) DEFAULT NULL  `subattribute` varchar(255) DEFAULT NULL,\\n  `value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Estacionamiento de atributos comerciales con las columnas de, ID de empresa, subatributo, valor",
      "output": "('Business_Attributes_Parking', 'CREATE TABLE `Business_Attributes_Parking` (\\n  `business_id` varchar(30) DEFAULT NULL  `subattribute` varchar(255) DEFAULT NULL,\\n  `value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Atributos comerciales Tipos de pago con las columnas de, ID de empresa, subatributo, valor",
      "output": "('Business_Attributes_PaymentTypes', 'CREATE TABLE `Business_Attributes_PaymentTypes` (\\n  `business_id` varchar(30) DEFAULT NULL  `subattribute` varchar(255) DEFAULT NULL,\\n  `value` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Categorías de negocios con las columnas de, ID de empresa, categoría",
      "output": "('Business_Categories', 'CREATE TABLE `Business_Categories` (\\n  `business_id` varchar(255) DEFAULT NULL  `category` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Horas de trabajo con las columnas de, identificación comercial, día de la semana, horario de apertura, horario de cierre",
      "output": "('Business_Hours', 'CREATE TABLE `Business_Hours` (\\n  `business_id` varchar(30) DEFAULT NULL  `day_of_week` varchar(12) DEFAULT NULL,\\n  `opening_time_hours` int(11) DEFAULT 0,\\n  `closing_time_hours` int(11) DEFAULT 0\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de registros con las columnas de, identificación comercial, día de la semana, hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , hora , tiempo, tiempo, tiempo",
      "output": "('Checkins', 'CREATE TABLE `Checkins` (\\n  `business_id` varchar(30) DEFAULT NULL  `day_of_week` varchar(30) DEFAULT NULL,\\n  `time_0` int(11) DEFAULT NULL,\\n  `time_1` int(11) DEFAULT NULL,\\n  `time_2` int(11) DEFAULT NULL,\\n  `time_3` int(11) DEFAULT NULL,\\n  `time_4` int(11) DEFAULT NULL,\\n  `time_5` int(11) DEFAULT NULL,\\n  `time_6` int(11) DEFAULT NULL,\\n  `time_7` int(11) DEFAULT NULL,\\n  `time_8` int(11) DEFAULT NULL,\\n  `time_9` int(11) DEFAULT NULL,\\n  `time_10` int(11) DEFAULT NULL,\\n  `time_11` int(11) DEFAULT NULL,\\n  `time_12` int(11) DEFAULT NULL,\\n  `time_13` int(11) DEFAULT NULL,\\n  `time_14` int(11) DEFAULT NULL,\\n  `time_15` int(11) DEFAULT NULL,\\n  `time_16` int(11) DEFAULT NULL,\\n  `time_17` int(11) DEFAULT NULL,\\n  `time_18` int(11) DEFAULT NULL,\\n  `time_19` int(11) DEFAULT NULL,\\n  `time_20` int(11) DEFAULT NULL,\\n  `time_21` int(11) DEFAULT NULL,\\n  `time_22` int(11) DEFAULT NULL,\\n  `time_23` int(11) DEFAULT NULL,\\n  KEY `Checkins_business_id` (`business_id`),\\n  CONSTRAINT `Checkins_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de cumplidos con las columnas de, ID de usuario, tipo de cumplido, número de cumplidos",
      "output": "('Compliments', 'CREATE TABLE `Compliments` (\\n  `user_id` varchar(255) DEFAULT NULL  `compliment_type` varchar(255) DEFAULT NULL,\\n  `number_of_compliments` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Élite con las columnas de, ID de usuario, año",
      "output": "('Elite', 'CREATE TABLE `Elite` (\\n  `user_id` varchar(255) DEFAULT NULL  `year` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Amigos con las columnas de, identificación de usuario, identificación de usuario",
      "output": "('Friends', 'CREATE TABLE `Friends` (\\n  `user_id1` varchar(255) DEFAULT NULL  `user_id2` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Reseñas con las columnas de, ID de revisión, ID de empresa, ID de usuario, estrellas, fecha de revisión, votos divertidos, votos útiles, votos geniales, texto de revisión",
      "output": "('Reviews', \"CREATE TABLE `Reviews` (\\n  `review_id` varchar(30) NOT NULL DEFAULT ''  `business_id` varchar(30) DEFAULT NULL,\\n  `user_id` varchar(30) DEFAULT NULL,\\n  `stars` double DEFAULT NULL,\\n  `review_date` date DEFAULT NULL,\\n  `votes_funny` int(11) DEFAULT NULL,\\n  `votes_useful` int(11) DEFAULT NULL,\\n  `votes_cool` int(11) DEFAULT NULL,\\n  `review_text` text DEFAULT NULL,\\n  PRIMARY KEY (`review_id`),\\n  KEY `Reviews_business_id` (`business_id`),\\n  KEY `Reviews_user_id` (`user_id`),\\n  KEY `Reviews_user_id_2` (`user_id`),\\n  CONSTRAINT `Reviews_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Puntas con las columnas de, identificación comercial, identificación de usuario, fecha año, fecha mes, fecha día, me gusta, texto de sugerencia",
      "output": "('Tips', 'CREATE TABLE `Tips` (\\n  `business_id` varchar(30) DEFAULT NULL  `user_id` varchar(30) DEFAULT NULL,\\n  `date_year` int(11) DEFAULT NULL,\\n  `date_month` int(11) DEFAULT NULL,\\n  `date_day` int(11) DEFAULT NULL,\\n  `likes` int(11) DEFAULT NULL,\\n  `tip_text` text DEFAULT NULL,\\n  KEY `Tips_business_id` (`business_id`),\\n  KEY `Tips_user_id` (`user_id`),\\n  CONSTRAINT `Tips_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Tips_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `Users` (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Usuarios con las columnas de, identificación de usuario, votos divertidos, votos útiles, votos geniales, nombre, promedio de estrellas, recuento de reseñas, fanáticos, aullando desde el año, aullando desde el mes",
      "output": "('Users', \"CREATE TABLE `Users` (\\n  `user_id` varchar(30) NOT NULL DEFAULT ''  `votes_funny` int(11) DEFAULT NULL,\\n  `votes_useful` int(11) DEFAULT NULL,\\n  `votes_cool` int(11) DEFAULT NULL,\\n  `name` varchar(30) DEFAULT NULL,\\n  `average_stars` double DEFAULT NULL,\\n  `review_count` int(11) DEFAULT NULL,\\n  `fans` int(11) DEFAULT NULL,\\n  `yelping_since_year` int(11) DEFAULT NULL,\\n  `yelping_since_month` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de Atributos con las columnas de, ID de atributo, nombre de atributo",
      "output": "('Attributes', 'CREATE TABLE `Attributes` (\\n  `attribute_id` int(11) NOT NULL AUTO_INCREMENT  `attribute_name` varchar(280) DEFAULT NULL,\\n  PRIMARY KEY (`attribute_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Negocio con las columnas de, ID de empresa, activo, ciudad, estado, estrellas, recuento de reseñas",
      "output": "('Business', 'CREATE TABLE `Business` (\\n  `business_id` int(11) NOT NULL DEFAULT 0  `active` varchar(10) DEFAULT NULL,\\n  `city` varchar(30) DEFAULT NULL,\\n  `state` varchar(5) DEFAULT NULL,\\n  `stars` double DEFAULT NULL,\\n  `review_count` varchar(10) DEFAULT NULL,\\n  PRIMARY KEY (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Atributos comerciales con las columnas de, ID de atributo, ID de empresa, valor de atributo",
      "output": "('Business_Attributes', 'CREATE TABLE `Business_Attributes` (\\n  `attribute_id` int(11) NOT NULL DEFAULT 0  `business_id` int(11) NOT NULL DEFAULT 0,\\n  `attribute_value` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`attribute_id`,`business_id`),\\n  KEY `business_id` (`business_id`),\\n  CONSTRAINT `Business_Attributes_ibfk_1` FOREIGN KEY (`attribute_id`) REFERENCES `Attributes` (`attribute_id`),\\n  CONSTRAINT `Business_Attributes_ibfk_2` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Categorías de negocios con las columnas de, id de empresa, id de categoría",
      "output": "('Business_Categories', 'CREATE TABLE `Business_Categories` (\\n  `business_id` int(11) NOT NULL DEFAULT 0  `category_id` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`business_id`,`category_id`),\\n  KEY `category_id` (`category_id`),\\n  CONSTRAINT `Business_Categories_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Business_Categories_ibfk_2` FOREIGN KEY (`category_id`) REFERENCES `Categories` (`category_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Horas de trabajo con las columnas de, id de empresa, id de día, hora de apertura, hora de cierre",
      "output": "('Business_Hours', 'CREATE TABLE `Business_Hours` (\\n  `business_id` int(11) NOT NULL DEFAULT 0  `day_id` int(11) NOT NULL DEFAULT 0,\\n  `opening_time` varchar(25) DEFAULT NULL,\\n  `closing_time` varchar(25) DEFAULT NULL,\\n  PRIMARY KEY (`business_id`,`day_id`),\\n  KEY `day_id` (`day_id`),\\n  CONSTRAINT `Business_Hours_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Business_Hours_ibfk_2` FOREIGN KEY (`day_id`) REFERENCES `Days` (`day_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Categorías con las columnas de, ID de categoría, nombre de categoría",
      "output": "('Categories', 'CREATE TABLE `Categories` (\\n  `category_id` int(11) NOT NULL AUTO_INCREMENT  `category_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`category_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=592 DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de registros con las columnas de, ID de empresa, ID de día, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, hora de etiqueta, etiqueta tiempo , tiempo de etiqueta , tiempo de etiqueta , tiempo de etiqueta , tiempo de etiqueta , tiempo de etiqueta , tiempo de etiqueta , tiempo de etiqueta , tiempo de etiqueta , tiempo de etiqueta",
      "output": "('Checkins', 'CREATE TABLE `Checkins` (\\n  `business_id` int(11) NOT NULL DEFAULT 0  `day_id` int(11) NOT NULL DEFAULT 0,\\n  `label_time_0` varchar(10) DEFAULT NULL,\\n  `label_time_1` varchar(10) DEFAULT NULL,\\n  `label_time_2` varchar(10) DEFAULT NULL,\\n  `label_time_3` varchar(10) DEFAULT NULL,\\n  `label_time_4` varchar(10) DEFAULT NULL,\\n  `label_time_5` varchar(10) DEFAULT NULL,\\n  `label_time_6` varchar(10) DEFAULT NULL,\\n  `label_time_7` varchar(10) DEFAULT NULL,\\n  `label_time_8` varchar(10) DEFAULT NULL,\\n  `label_time_9` varchar(10) DEFAULT NULL,\\n  `label_time_10` varchar(10) DEFAULT NULL,\\n  `label_time_11` varchar(10) DEFAULT NULL,\\n  `label_time_12` varchar(10) DEFAULT NULL,\\n  `label_time_13` varchar(10) DEFAULT NULL,\\n  `label_time_14` varchar(10) DEFAULT NULL,\\n  `label_time_15` varchar(10) DEFAULT NULL,\\n  `label_time_16` varchar(10) DEFAULT NULL,\\n  `label_time_17` varchar(10) DEFAULT NULL,\\n  `label_time_18` varchar(10) DEFAULT NULL,\\n  `label_time_19` varchar(10) DEFAULT NULL,\\n  `label_time_20` varchar(10) DEFAULT NULL,\\n  `label_time_21` varchar(10) DEFAULT NULL,\\n  `label_time_22` varchar(10) DEFAULT NULL,\\n  `label_time_23` varchar(10) DEFAULT NULL,\\n  PRIMARY KEY (`business_id`,`day_id`),\\n  KEY `day_id` (`day_id`),\\n  CONSTRAINT `Checkins_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Checkins_ibfk_2` FOREIGN KEY (`day_id`) REFERENCES `Days` (`day_id`),\\n  CONSTRAINT `Checkins_ibfk_3` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Checkins_ibfk_4` FOREIGN KEY (`day_id`) REFERENCES `Days` (`day_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de cumplidos con las columnas de, id de elogio, tipo de elogio",
      "output": "('Compliments', 'CREATE TABLE `Compliments` (\\n  `compliment_id` int(11) NOT NULL AUTO_INCREMENT  `compliment_type` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`compliment_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Días con las columnas de, día es, día de la semana",
      "output": "('Days', 'CREATE TABLE `Days` (\\n  `day_id` int(11) NOT NULL DEFAULT 0  `day_of_week` varchar(12) DEFAULT NULL,\\n  PRIMARY KEY (`day_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Élite con las columnas de, id de usuario, id de año",
      "output": "('Elite', 'CREATE TABLE `Elite` (\\n  `user_id` int(11) NOT NULL DEFAULT 0  `year_id` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`user_id`,`year_id`),\\n  KEY `year_id` (`year_id`),\\n  CONSTRAINT `Elite_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `Users` (`user_id`),\\n  CONSTRAINT `Elite_ibfk_2` FOREIGN KEY (`year_id`) REFERENCES `Years` (`year_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Reseñas con las columnas de, identificación comercial, identificación de usuario, estrellas de revisión, votos de revisión divertidos, votos de revisión útiles, votos de revisión geniales, duración de la revisión",
      "output": "('Reviews', 'CREATE TABLE `Reviews` (\\n  `business_id` int(11) NOT NULL DEFAULT 0  `user_id` int(11) NOT NULL DEFAULT 0,\\n  `review_stars` double DEFAULT NULL,\\n  `review_votes_funny` varchar(10) DEFAULT NULL,\\n  `review_votes_useful` varchar(10) DEFAULT NULL,\\n  `review_votes_cool` varchar(10) DEFAULT NULL,\\n  `review_length` varchar(10) DEFAULT NULL,\\n  PRIMARY KEY (`business_id`,`user_id`),\\n  KEY `user_id` (`user_id`),\\n  CONSTRAINT `Reviews_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Reviews_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `Users` (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Puntas con las columnas de, identificación comercial, identificación de usuario, Me gusta, longitud de la sugerencia",
      "output": "('Tips', 'CREATE TABLE `Tips` (\\n  `business_id` int(11) NOT NULL DEFAULT 0  `user_id` int(11) NOT NULL DEFAULT 0,\\n  `likes` int(11) DEFAULT NULL,\\n  `tip_length` varchar(10) DEFAULT NULL,\\n  PRIMARY KEY (`business_id`,`user_id`),\\n  KEY `user_id` (`user_id`),\\n  CONSTRAINT `Tips_ibfk_1` FOREIGN KEY (`business_id`) REFERENCES `Business` (`business_id`),\\n  CONSTRAINT `Tips_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `Users` (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Usuarios con las columnas de, identificación de usuario, usuario aullando desde el año, promedio de estrellas del usuario, votos divertidos del usuario, votos útiles del usuario, votos geniales del usuario, recuento de reseñas de usuarios, fanáticos de los usuarios",
      "output": "('Users', 'CREATE TABLE `Users` (\\n  `user_id` int(11) NOT NULL DEFAULT 0  `user_yelping_since_year` int(11) DEFAULT NULL,\\n  `user_average_stars` double DEFAULT NULL,\\n  `user_votes_funny` varchar(10) DEFAULT NULL,\\n  `user_votes_useful` varchar(10) DEFAULT NULL,\\n  `user_votes_cool` varchar(10) DEFAULT NULL,\\n  `user_review_count` varchar(10) DEFAULT NULL,\\n  `user_fans` varchar(10) DEFAULT NULL,\\n  PRIMARY KEY (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Felicitaciones de los usuarios con las columnas de, ID de cumplido, ID de usuario, número de cumplidos",
      "output": "('Users_Compliments', 'CREATE TABLE `Users_Compliments` (\\n  `compliment_id` int(11) NOT NULL DEFAULT 0  `user_id` int(11) NOT NULL DEFAULT 0,\\n  `number_of_compliments` varchar(10) DEFAULT NULL,\\n  PRIMARY KEY (`compliment_id`,`user_id`),\\n  KEY `user_id` (`user_id`),\\n  CONSTRAINT `Users_Compliments_ibfk_1` FOREIGN KEY (`compliment_id`) REFERENCES `Compliments` (`compliment_id`),\\n  CONSTRAINT `Users_Compliments_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `Users` (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Años con las columnas de, ID del año, año real",
      "output": "('Years', 'CREATE TABLE `Years` (\\n  `year_id` int(11) NOT NULL DEFAULT 0  `actual_year` varchar(20) DEFAULT NULL,\\n  PRIMARY KEY (`year_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de DSSTOX con las columnas de, identificación de sustancia dsstox, identificación de estructura dsstox, nivel de qc dsstox, nombre de sustancia, sustancia casrn, tipo de sustancia, nota de sustancia, estructura sonrisas, estructura inchi, estructura inchikey, fórmula de estructura, estructura molwt",
      "output": "('DSSTOX', 'CREATE TABLE `DSSTOX` (\\n  `dsstox_substance_id` varchar(255) DEFAULT NULL  `dsstox_structure_id` varchar(255) DEFAULT NULL,\\n  `dsstox_qc_level` varchar(255) DEFAULT NULL,\\n  `substance_name` varchar(255) DEFAULT NULL,\\n  `substance_casrn` varchar(255) DEFAULT NULL,\\n  `substance_type` varchar(255) DEFAULT NULL,\\n  `substance_note` text DEFAULT NULL,\\n  `structure_smiles` text DEFAULT NULL,\\n  `structure_inchi` text DEFAULT NULL,\\n  `structure_inchikey` varchar(255) DEFAULT NULL,\\n  `structure_formula` varchar(255) DEFAULT NULL,\\n  `structure_molwt` float DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hembras con las columnas de, oacd, lsoacd, todas las edades",
      "output": "('females', 'CREATE TABLE `females` (\\n  `oa11cd` varchar(10) DEFAULT NULL  `lsoa11cd` varchar(10) DEFAULT NULL,\\n  `all_ages` int(11) DEFAULT NULL,\\n  `0` int(11) DEFAULT NULL,\\n  `1` int(11) DEFAULT NULL,\\n  `2` int(11) DEFAULT NULL,\\n  `3` int(11) DEFAULT NULL,\\n  `4` int(11) DEFAULT NULL,\\n  `5` int(11) DEFAULT NULL,\\n  `6` int(11) DEFAULT NULL,\\n  `7` int(11) DEFAULT NULL,\\n  `8` int(11) DEFAULT NULL,\\n  `9` int(11) DEFAULT NULL,\\n  `10` int(11) DEFAULT NULL,\\n  `11` int(11) DEFAULT NULL,\\n  `12` int(11) DEFAULT NULL,\\n  `13` int(11) DEFAULT NULL,\\n  `14` int(11) DEFAULT NULL,\\n  `15` int(11) DEFAULT NULL,\\n  `16` int(11) DEFAULT NULL,\\n  `17` int(11) DEFAULT NULL,\\n  `18` int(11) DEFAULT NULL,\\n  `19` int(11) DEFAULT NULL,\\n  `20` int(11) DEFAULT NULL,\\n  `21` int(11) DEFAULT NULL,\\n  `22` int(11) DEFAULT NULL,\\n  `23` int(11) DEFAULT NULL,\\n  `24` int(11) DEFAULT NULL,\\n  `25` int(11) DEFAULT NULL,\\n  `26` int(11) DEFAULT NULL,\\n  `27` int(11) DEFAULT NULL,\\n  `28` int(11) DEFAULT NULL,\\n  `29` int(11) DEFAULT NULL,\\n  `30` int(11) DEFAULT NULL,\\n  `31` int(11) DEFAULT NULL,\\n  `32` int(11) DEFAULT NULL,\\n  `33` int(11) DEFAULT NULL,\\n  `34` int(11) DEFAULT NULL,\\n  `35` int(11) DEFAULT NULL,\\n  `36` int(11) DEFAULT NULL,\\n  `37` int(11) DEFAULT NULL,\\n  `38` int(11) DEFAULT NULL,\\n  `39` int(11) DEFAULT NULL,\\n  `40` int(11) DEFAULT NULL,\\n  `41` int(11) DEFAULT NULL,\\n  `42` int(11) DEFAULT NULL,\\n  `43` int(11) DEFAULT NULL,\\n  `44` int(11) DEFAULT NULL,\\n  `45` int(11) DEFAULT NULL,\\n  `46` int(11) DEFAULT NULL,\\n  `47` int(11) DEFAULT NULL,\\n  `48` int(11) DEFAULT NULL,\\n  `49` int(11) DEFAULT NULL,\\n  `50` int(11) DEFAULT NULL,\\n  `51` int(11) DEFAULT NULL,\\n  `52` int(11) DEFAULT NULL,\\n  `53` int(11) DEFAULT NULL,\\n  `54` int(11) DEFAULT NULL,\\n  `55` int(11) DEFAULT NULL,\\n  `56` int(11) DEFAULT NULL,\\n  `57` int(11) DEFAULT NULL,\\n  `58` int(11) DEFAULT NULL,\\n  `59` int(11) DEFAULT NULL,\\n  `60` int(11) DEFAULT NULL,\\n  `61` int(11) DEFAULT NULL,\\n  `62` int(11) DEFAULT NULL,\\n  `63` int(11) DEFAULT NULL,\\n  `64` int(11) DEFAULT NULL,\\n  `65` int(11) DEFAULT NULL,\\n  `66` int(11) DEFAULT NULL,\\n  `67` int(11) DEFAULT NULL,\\n  `68` int(11) DEFAULT NULL,\\n  `69` int(11) DEFAULT NULL,\\n  `70` int(11) DEFAULT NULL,\\n  `71` int(11) DEFAULT NULL,\\n  `72` int(11) DEFAULT NULL,\\n  `73` int(11) DEFAULT NULL,\\n  `74` int(11) DEFAULT NULL,\\n  `75` int(11) DEFAULT NULL,\\n  `76` int(11) DEFAULT NULL,\\n  `77` int(11) DEFAULT NULL,\\n  `78` int(11) DEFAULT NULL,\\n  `79` int(11) DEFAULT NULL,\\n  `80` int(11) DEFAULT NULL,\\n  `81` int(11) DEFAULT NULL,\\n  `82` int(11) DEFAULT NULL,\\n  `83` int(11) DEFAULT NULL,\\n  `84` int(11) DEFAULT NULL,\\n  `85` int(11) DEFAULT NULL,\\n  `86` int(11) DEFAULT NULL,\\n  `87` int(11) DEFAULT NULL,\\n  `88` int(11) DEFAULT NULL,\\n  `89` int(11) DEFAULT NULL,\\n  `90` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de machos con las columnas de, oacd, lsoacd, todas las edades",
      "output": "('males', 'CREATE TABLE `males` (\\n  `oa11cd` varchar(10) DEFAULT NULL  `lsoa11cd` varchar(10) DEFAULT NULL,\\n  `all_ages` int(11) DEFAULT NULL,\\n  `0` int(11) DEFAULT NULL,\\n  `1` int(11) DEFAULT NULL,\\n  `2` int(11) DEFAULT NULL,\\n  `3` int(11) DEFAULT NULL,\\n  `4` int(11) DEFAULT NULL,\\n  `5` int(11) DEFAULT NULL,\\n  `6` int(11) DEFAULT NULL,\\n  `7` int(11) DEFAULT NULL,\\n  `8` int(11) DEFAULT NULL,\\n  `9` int(11) DEFAULT NULL,\\n  `10` int(11) DEFAULT NULL,\\n  `11` int(11) DEFAULT NULL,\\n  `12` int(11) DEFAULT NULL,\\n  `13` int(11) DEFAULT NULL,\\n  `14` int(11) DEFAULT NULL,\\n  `15` int(11) DEFAULT NULL,\\n  `16` int(11) DEFAULT NULL,\\n  `17` int(11) DEFAULT NULL,\\n  `18` int(11) DEFAULT NULL,\\n  `19` int(11) DEFAULT NULL,\\n  `20` int(11) DEFAULT NULL,\\n  `21` int(11) DEFAULT NULL,\\n  `22` int(11) DEFAULT NULL,\\n  `23` int(11) DEFAULT NULL,\\n  `24` int(11) DEFAULT NULL,\\n  `25` int(11) DEFAULT NULL,\\n  `26` int(11) DEFAULT NULL,\\n  `27` int(11) DEFAULT NULL,\\n  `28` int(11) DEFAULT NULL,\\n  `29` int(11) DEFAULT NULL,\\n  `30` int(11) DEFAULT NULL,\\n  `31` int(11) DEFAULT NULL,\\n  `32` int(11) DEFAULT NULL,\\n  `33` int(11) DEFAULT NULL,\\n  `34` int(11) DEFAULT NULL,\\n  `35` int(11) DEFAULT NULL,\\n  `36` int(11) DEFAULT NULL,\\n  `37` int(11) DEFAULT NULL,\\n  `38` int(11) DEFAULT NULL,\\n  `39` int(11) DEFAULT NULL,\\n  `40` int(11) DEFAULT NULL,\\n  `41` int(11) DEFAULT NULL,\\n  `42` int(11) DEFAULT NULL,\\n  `43` int(11) DEFAULT NULL,\\n  `44` int(11) DEFAULT NULL,\\n  `45` int(11) DEFAULT NULL,\\n  `46` int(11) DEFAULT NULL,\\n  `47` int(11) DEFAULT NULL,\\n  `48` int(11) DEFAULT NULL,\\n  `49` int(11) DEFAULT NULL,\\n  `50` int(11) DEFAULT NULL,\\n  `51` int(11) DEFAULT NULL,\\n  `52` int(11) DEFAULT NULL,\\n  `53` int(11) DEFAULT NULL,\\n  `54` int(11) DEFAULT NULL,\\n  `55` int(11) DEFAULT NULL,\\n  `56` int(11) DEFAULT NULL,\\n  `57` int(11) DEFAULT NULL,\\n  `58` int(11) DEFAULT NULL,\\n  `59` int(11) DEFAULT NULL,\\n  `60` int(11) DEFAULT NULL,\\n  `61` int(11) DEFAULT NULL,\\n  `62` int(11) DEFAULT NULL,\\n  `63` int(11) DEFAULT NULL,\\n  `64` int(11) DEFAULT NULL,\\n  `65` int(11) DEFAULT NULL,\\n  `66` int(11) DEFAULT NULL,\\n  `67` int(11) DEFAULT NULL,\\n  `68` int(11) DEFAULT NULL,\\n  `69` int(11) DEFAULT NULL,\\n  `70` int(11) DEFAULT NULL,\\n  `71` int(11) DEFAULT NULL,\\n  `72` int(11) DEFAULT NULL,\\n  `73` int(11) DEFAULT NULL,\\n  `74` int(11) DEFAULT NULL,\\n  `75` int(11) DEFAULT NULL,\\n  `76` int(11) DEFAULT NULL,\\n  `77` int(11) DEFAULT NULL,\\n  `78` int(11) DEFAULT NULL,\\n  `79` int(11) DEFAULT NULL,\\n  `80` int(11) DEFAULT NULL,\\n  `81` int(11) DEFAULT NULL,\\n  `82` int(11) DEFAULT NULL,\\n  `83` int(11) DEFAULT NULL,\\n  `84` int(11) DEFAULT NULL,\\n  `85` int(11) DEFAULT NULL,\\n  `86` int(11) DEFAULT NULL,\\n  `87` int(11) DEFAULT NULL,\\n  `88` int(11) DEFAULT NULL,\\n  `89` int(11) DEFAULT NULL,\\n  `90` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de persona con las columnas de, oacd, lsoacd, todas las edades",
      "output": "('person', 'CREATE TABLE `person` (\\n  `oa11cd` varchar(10) DEFAULT NULL  `lsoa11cd` varchar(10) DEFAULT NULL,\\n  `all_ages` int(11) DEFAULT NULL,\\n  `0` int(11) DEFAULT NULL,\\n  `1` int(11) DEFAULT NULL,\\n  `2` int(11) DEFAULT NULL,\\n  `3` int(11) DEFAULT NULL,\\n  `4` int(11) DEFAULT NULL,\\n  `5` int(11) DEFAULT NULL,\\n  `6` int(11) DEFAULT NULL,\\n  `7` int(11) DEFAULT NULL,\\n  `8` int(11) DEFAULT NULL,\\n  `9` int(11) DEFAULT NULL,\\n  `10` int(11) DEFAULT NULL,\\n  `11` int(11) DEFAULT NULL,\\n  `12` int(11) DEFAULT NULL,\\n  `13` int(11) DEFAULT NULL,\\n  `14` int(11) DEFAULT NULL,\\n  `15` int(11) DEFAULT NULL,\\n  `16` int(11) DEFAULT NULL,\\n  `17` int(11) DEFAULT NULL,\\n  `18` int(11) DEFAULT NULL,\\n  `19` int(11) DEFAULT NULL,\\n  `20` int(11) DEFAULT NULL,\\n  `21` int(11) DEFAULT NULL,\\n  `22` int(11) DEFAULT NULL,\\n  `23` int(11) DEFAULT NULL,\\n  `24` int(11) DEFAULT NULL,\\n  `25` int(11) DEFAULT NULL,\\n  `26` int(11) DEFAULT NULL,\\n  `27` int(11) DEFAULT NULL,\\n  `28` int(11) DEFAULT NULL,\\n  `29` int(11) DEFAULT NULL,\\n  `30` int(11) DEFAULT NULL,\\n  `31` int(11) DEFAULT NULL,\\n  `32` int(11) DEFAULT NULL,\\n  `33` int(11) DEFAULT NULL,\\n  `34` int(11) DEFAULT NULL,\\n  `35` int(11) DEFAULT NULL,\\n  `36` int(11) DEFAULT NULL,\\n  `37` int(11) DEFAULT NULL,\\n  `38` int(11) DEFAULT NULL,\\n  `39` int(11) DEFAULT NULL,\\n  `40` int(11) DEFAULT NULL,\\n  `41` int(11) DEFAULT NULL,\\n  `42` int(11) DEFAULT NULL,\\n  `43` int(11) DEFAULT NULL,\\n  `44` int(11) DEFAULT NULL,\\n  `45` int(11) DEFAULT NULL,\\n  `46` int(11) DEFAULT NULL,\\n  `47` int(11) DEFAULT NULL,\\n  `48` int(11) DEFAULT NULL,\\n  `49` int(11) DEFAULT NULL,\\n  `50` int(11) DEFAULT NULL,\\n  `51` int(11) DEFAULT NULL,\\n  `52` int(11) DEFAULT NULL,\\n  `53` int(11) DEFAULT NULL,\\n  `54` int(11) DEFAULT NULL,\\n  `55` int(11) DEFAULT NULL,\\n  `56` int(11) DEFAULT NULL,\\n  `57` int(11) DEFAULT NULL,\\n  `58` int(11) DEFAULT NULL,\\n  `59` int(11) DEFAULT NULL,\\n  `60` int(11) DEFAULT NULL,\\n  `61` int(11) DEFAULT NULL,\\n  `62` int(11) DEFAULT NULL,\\n  `63` int(11) DEFAULT NULL,\\n  `64` int(11) DEFAULT NULL,\\n  `65` int(11) DEFAULT NULL,\\n  `66` int(11) DEFAULT NULL,\\n  `67` int(11) DEFAULT NULL,\\n  `68` int(11) DEFAULT NULL,\\n  `69` int(11) DEFAULT NULL,\\n  `70` int(11) DEFAULT NULL,\\n  `71` int(11) DEFAULT NULL,\\n  `72` int(11) DEFAULT NULL,\\n  `73` int(11) DEFAULT NULL,\\n  `74` int(11) DEFAULT NULL,\\n  `75` int(11) DEFAULT NULL,\\n  `76` int(11) DEFAULT NULL,\\n  `77` int(11) DEFAULT NULL,\\n  `78` int(11) DEFAULT NULL,\\n  `79` int(11) DEFAULT NULL,\\n  `80` int(11) DEFAULT NULL,\\n  `81` int(11) DEFAULT NULL,\\n  `82` int(11) DEFAULT NULL,\\n  `83` int(11) DEFAULT NULL,\\n  `84` int(11) DEFAULT NULL,\\n  `85` int(11) DEFAULT NULL,\\n  `86` int(11) DEFAULT NULL,\\n  `87` int(11) DEFAULT NULL,\\n  `88` int(11) DEFAULT NULL,\\n  `89` int(11) DEFAULT NULL,\\n  `90` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cita con las columnas de, id de artículo citado, id de artículo citado",
      "output": "('cites', 'CREATE TABLE `cites` (\\n  `cited_paper_id` varchar(255) DEFAULT NULL  `citing_paper_id` varchar(255) DEFAULT NULL,\\n  KEY `cited_paper_id` (`cited_paper_id`),\\n  KEY `citing_paper_id` (`citing_paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de contenido con las columnas de, ID de papel, ID de palabra citada, etiqueta de clase",
      "output": "('content', 'CREATE TABLE `content` (\\n  `paper_id` varchar(255) DEFAULT NULL  `word_cited_id` varchar(255) DEFAULT NULL,\\n  `class_label` varchar(255) DEFAULT NULL,\\n  KEY `paper_id` (`paper_id`),\\n  CONSTRAINT `content_ibfk_1` FOREIGN KEY (`paper_id`) REFERENCES `paper` (`paper_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de papel con las columnas de, identificación de papel, etiqueta de clase",
      "output": "('paper', 'CREATE TABLE `paper` (\\n  `paper_id` varchar(255) NOT NULL  `class_label` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`paper_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de clientes con las columnas de, ID de cliente, segmento, moneda",
      "output": "('customers', 'CREATE TABLE `customers` (\\n  `CustomerID` int(11) NOT NULL  `Segment` varchar(255) DEFAULT NULL,\\n  `Currency` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`CustomerID`),\\n  UNIQUE KEY `customer_staged_CustomerID_key` (`CustomerID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de gasolineras con las columnas de, ID de gasolinera, ID de cadena, país, segmento",
      "output": "('gasstations', 'CREATE TABLE `gasstations` (\\n  `GasStationID` int(11) NOT NULL  `ChainID` int(11) DEFAULT NULL,\\n  `Country` varchar(255) DEFAULT NULL,\\n  `Segment` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`GasStationID`),\\n  UNIQUE KEY `gasstations_GasStationID_key` (`GasStationID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de productos con las columnas de, ID de producto, Descripción",
      "output": "('products', 'CREATE TABLE `products` (\\n  `ProductID` int(11) NOT NULL  `Description` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`ProductID`),\\n  UNIQUE KEY `products_ProductID_key` (`ProductID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de actas con las columnas de, Fecha, Hora, Id. de cliente, Id. de tarjeta, Id. de gasolinera, Id. de producto, Importe, Precio",
      "output": "('transactions', 'CREATE TABLE `transactions` (\\n  `Date` date DEFAULT NULL  `Time` time DEFAULT NULL,\\n  `CustomerID` int(11) DEFAULT NULL,\\n  `CardID` int(11) DEFAULT NULL,\\n  `GasStationID` int(11) DEFAULT NULL,\\n  `ProductID` int(11) DEFAULT NULL,\\n  `Amount` int(11) DEFAULT NULL,\\n  `Price` decimal(12,2) DEFAULT NULL,\\n  KEY `transactions_large_staged_CustomerID_fkey` (`CustomerID`),\\n  KEY `transactions_large_staged_GasStationID_fkey` (`GasStationID`),\\n  KEY `transactions_large_staged_ProductID_fkey` (`ProductID`),\\n  CONSTRAINT `transactions_large_staged_CustomerID_fkey` FOREIGN KEY (`CustomerID`) REFERENCES `customers` (`CustomerID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `transactions_large_staged_GasStationID_fkey` FOREIGN KEY (`GasStationID`) REFERENCES `gasstations` (`GasStationID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `transactions_large_staged_ProductID_fkey` FOREIGN KEY (`ProductID`) REFERENCES `products` (`ProductID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de transacciones k con las columnas de, Id. de transacción, Fecha, Hora, Id. de cliente, Id. de tarjeta, Id. de gasolinera, Id. de producto, Importe, Precio",
      "output": "('transactions_1k', 'CREATE TABLE `transactions_1k` (\\n  `TransactionID` int(11) NOT NULL AUTO_INCREMENT  `Date` date DEFAULT NULL,\\n  `Time` time DEFAULT NULL,\\n  `CustomerID` int(11) DEFAULT NULL,\\n  `CardID` int(11) DEFAULT NULL,\\n  `GasStationID` int(11) DEFAULT NULL,\\n  `ProductID` int(11) DEFAULT NULL,\\n  `Amount` int(11) DEFAULT NULL,\\n  `Price` decimal(12,2) DEFAULT NULL,\\n  PRIMARY KEY (`TransactionID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=1001 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de año mes con las columnas de, ID de cliente, Fecha, Consumo",
      "output": "('yearmonth', 'CREATE TABLE `yearmonth` (\\n  `CustomerID` int(11) NOT NULL  `Date` int(11) NOT NULL,\\n  `Consumption` decimal(12,2) DEFAULT NULL,\\n  PRIMARY KEY (`CustomerID`,`Date`),\\n  CONSTRAINT `yearmonth_staged_CustomerID_fkey` FOREIGN KEY (`CustomerID`) REFERENCES `customers` (`CustomerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de clientes con las columnas de, número de cliente, nombre del cliente, apellido del contacto, nombre del contacto, teléfono, línea de dirección, línea de dirección, ciudad, estado, código postal, país, número de empleado del representante de ventas, límite de crédito",
      "output": "('customers', 'CREATE TABLE `customers` (\\n  `customerNumber` int(11) NOT NULL  `customerName` varchar(50) NOT NULL,\\n  `contactLastName` varchar(50) NOT NULL,\\n  `contactFirstName` varchar(50) NOT NULL,\\n  `phone` varchar(50) NOT NULL,\\n  `addressLine1` varchar(50) NOT NULL,\\n  `addressLine2` varchar(50) DEFAULT NULL,\\n  `city` varchar(50) NOT NULL,\\n  `state` varchar(50) DEFAULT NULL,\\n  `postalCode` varchar(15) DEFAULT NULL,\\n  `country` varchar(50) NOT NULL,\\n  `salesRepEmployeeNumber` int(11) DEFAULT NULL,\\n  `creditLimit` double DEFAULT NULL,\\n  PRIMARY KEY (`customerNumber`),\\n  KEY `salesRepEmployeeNumber` (`salesRepEmployeeNumber`),\\n  CONSTRAINT `customers_ibfk_1` FOREIGN KEY (`salesRepEmployeeNumber`) REFERENCES `employees` (`employeeNumber`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de empleados con las columnas de, número de empleado, apellido, nombre, extensión, correo electrónico, código de oficina, informe a, título del trabajo",
      "output": "('employees', 'CREATE TABLE `employees` (\\n  `employeeNumber` int(11) NOT NULL  `lastName` varchar(50) NOT NULL,\\n  `firstName` varchar(50) NOT NULL,\\n  `extension` varchar(10) NOT NULL,\\n  `email` varchar(100) NOT NULL,\\n  `officeCode` varchar(10) NOT NULL,\\n  `reportsTo` int(11) DEFAULT NULL,\\n  `jobTitle` varchar(50) NOT NULL,\\n  PRIMARY KEY (`employeeNumber`),\\n  KEY `reportsTo` (`reportsTo`),\\n  KEY `officeCode` (`officeCode`),\\n  CONSTRAINT `employees_ibfk_1` FOREIGN KEY (`reportsTo`) REFERENCES `employees` (`employeeNumber`),\\n  CONSTRAINT `employees_ibfk_2` FOREIGN KEY (`officeCode`) REFERENCES `offices` (`officeCode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de oficinas con las columnas de, código de oficina, ciudad, teléfono, línea de dirección, línea de dirección, estado, país, código postal, territorio",
      "output": "('offices', 'CREATE TABLE `offices` (\\n  `officeCode` varchar(10) NOT NULL  `city` varchar(50) NOT NULL,\\n  `phone` varchar(50) NOT NULL,\\n  `addressLine1` varchar(50) NOT NULL,\\n  `addressLine2` varchar(50) DEFAULT NULL,\\n  `state` varchar(50) DEFAULT NULL,\\n  `country` varchar(50) NOT NULL,\\n  `postalCode` varchar(15) NOT NULL,\\n  `territory` varchar(10) NOT NULL,\\n  PRIMARY KEY (`officeCode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de detalles del pedido con las columnas de, número de pedido, código de producto, cantidad pedida, precio de cada uno, número de línea de pedido",
      "output": "('orderdetails', 'CREATE TABLE `orderdetails` (\\n  `orderNumber` int(11) NOT NULL  `productCode` varchar(15) NOT NULL,\\n  `quantityOrdered` int(11) NOT NULL,\\n  `priceEach` double NOT NULL,\\n  `orderLineNumber` smallint(6) NOT NULL,\\n  PRIMARY KEY (`orderNumber`,`productCode`),\\n  KEY `productCode` (`productCode`),\\n  CONSTRAINT `orderdetails_ibfk_1` FOREIGN KEY (`orderNumber`) REFERENCES `orders` (`orderNumber`),\\n  CONSTRAINT `orderdetails_ibfk_2` FOREIGN KEY (`productCode`) REFERENCES `products` (`productCode`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de pedidos con las columnas de, número de pedido, fecha de pedido, fecha requerida, fecha de envío, estado, comentarios, número de cliente",
      "output": "('orders', 'CREATE TABLE `orders` (\\n  `orderNumber` int(11) NOT NULL  `orderDate` date NOT NULL,\\n  `requiredDate` date NOT NULL,\\n  `shippedDate` date DEFAULT NULL,\\n  `status` varchar(15) NOT NULL,\\n  `comments` text DEFAULT NULL,\\n  `customerNumber` int(11) NOT NULL,\\n  PRIMARY KEY (`orderNumber`),\\n  KEY `customerNumber` (`customerNumber`),\\n  CONSTRAINT `orders_ibfk_1` FOREIGN KEY (`customerNumber`) REFERENCES `customers` (`customerNumber`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de pagos con las columnas de, número de cliente, número de cheque, fecha de pago, monto",
      "output": "('payments', 'CREATE TABLE `payments` (\\n  `customerNumber` int(11) NOT NULL  `checkNumber` varchar(50) NOT NULL,\\n  `paymentDate` date NOT NULL,\\n  `amount` double NOT NULL,\\n  PRIMARY KEY (`customerNumber`,`checkNumber`),\\n  CONSTRAINT `payments_ibfk_1` FOREIGN KEY (`customerNumber`) REFERENCES `customers` (`customerNumber`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de líneas de productos con las columnas de, línea de producto, descripción de texto, descripción html, imagen",
      "output": "('productlines', 'CREATE TABLE `productlines` (\\n  `productLine` varchar(50) NOT NULL  `textDescription` varchar(4000) DEFAULT NULL,\\n  `htmlDescription` mediumtext DEFAULT NULL,\\n  `image` mediumblob DEFAULT NULL,\\n  PRIMARY KEY (`productLine`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de productos con las columnas de, código del producto, nombre del producto, línea del producto, escala del producto, proveedor del producto, descripción del producto, cantidad en existencia, precio de compra, MSRP",
      "output": "('products', 'CREATE TABLE `products` (\\n  `productCode` varchar(15) NOT NULL  `productName` varchar(70) NOT NULL,\\n  `productLine` varchar(50) NOT NULL,\\n  `productScale` varchar(10) NOT NULL,\\n  `productVendor` varchar(50) NOT NULL,\\n  `productDescription` text NOT NULL,\\n  `quantityInStock` smallint(6) NOT NULL,\\n  `buyPrice` double NOT NULL,\\n  `MSRP` double NOT NULL,\\n  PRIMARY KEY (`productCode`),\\n  KEY `productLine` (`productLine`),\\n  CONSTRAINT `products_ibfk_1` FOREIGN KEY (`productLine`) REFERENCES `productlines` (`productLine`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de CUENTAS con las columnas de, CLAVE ACC, CLAVE ACCTP, CLAVE PROD, CLAVE ORG, CLAVE UNIFICADA PT, FECHA DE APERTURA DE ACCH, FECHA DE CIERRE DE ACCH",
      "output": "('ACCOUNTS', 'CREATE TABLE `ACCOUNTS` (\\n  `ACC_KEY` int(255) NOT NULL  `ACCTP_KEY` int(255) DEFAULT NULL,\\n  `PROD_KEY` int(255) DEFAULT NULL,\\n  `ORG_KEY` int(255) DEFAULT NULL,\\n  `PT_UNIFIED_KEY` bigint(255) DEFAULT NULL,\\n  `ACCH_OPEN_DATE` date DEFAULT NULL,\\n  `ACCH_CLOSE_DATE` date DEFAULT NULL,\\n  PRIMARY KEY (`ACC_KEY`),\\n  KEY `ACCTP_KEY` (`ACCTP_KEY`) USING BTREE,\\n  KEY `PROD_KEY` (`PROD_KEY`) USING BTREE,\\n  KEY `ORG_KEY` (`ORG_KEY`) USING BTREE,\\n  KEY `PT_UNIFIED_KEY` (`PT_UNIFIED_KEY`) USING BTREE,\\n  CONSTRAINT `ACCOUNTS_ibfk_1` FOREIGN KEY (`ACCTP_KEY`) REFERENCES `ACCOUNT_TYPES` (`ACCTP_KEY`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ACCOUNTS_ibfk_2` FOREIGN KEY (`PROD_KEY`) REFERENCES `PRODUCTS` (`PROD_KEY`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ACCOUNTS_ibfk_3` FOREIGN KEY (`ORG_KEY`) REFERENCES `ORGANIZATIONS` (`ORG_KEY`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de TRANSACCIONES DE LA CUENTA con las columnas de, CLAVE CUENTA, CLAVE ACC, CLAVE ACCTP, CLAVE ACTRNTP, FECHA DE CONTABILIDAD CUENTA, IMPORTE DE CUENTA CZK, IMPORTE DE CUENTA FX, CÓDIGO ISO ACTUAL, INDICADOR CRDR DE CUENTA, INDICADOR DE EFECTIVO DE CUENTA, INDICADOR DE INTERÉS DE CUENTA, INDICADOR DE IMPUESTOS DE CUENTA, INDICADOR DE TARIFAS DE CUENTA, ACC OTRA CLAVE DE CUENTA, ACCTP OTRA CLAVE DE CUENTA",
      "output": "('ACCOUNT_TRANSACTIONS', 'CREATE TABLE `ACCOUNT_TRANSACTIONS` (\\n  `ACCTRN_KEY` bigint(20) NOT NULL  `ACC_KEY` int(11) DEFAULT NULL,\\n  `ACCTP_KEY` int(11) DEFAULT NULL,\\n  `ACTRNTP_KEY` int(11) DEFAULT NULL,\\n  `ACCTRN_ACCOUNTING_DATE` date DEFAULT NULL,\\n  `ACCTRN_AMOUNT_CZK` int(255) DEFAULT NULL,\\n  `ACCTRN_AMOUNT_FX` int(255) DEFAULT NULL,\\n  `CURR_ISO_CODE` varchar(255) DEFAULT NULL,\\n  `ACCTRN_CRDR_FLAG` varchar(255) DEFAULT NULL,\\n  `ACCTRN_CASH_FLAG` varchar(255) DEFAULT NULL,\\n  `ACCTRN_INTEREST_FLAG` varchar(255) DEFAULT NULL,\\n  `ACCTRN_TAX_FLAG` varchar(255) DEFAULT NULL,\\n  `ACCTRN_FEE_FLAG` varchar(255) DEFAULT NULL,\\n  `ACC_OTHER_ACCOUNT_KEY` int(255) DEFAULT NULL,\\n  `ACCTP_OTHER_ACCOUNT_KEY` int(255) DEFAULT NULL,\\n  PRIMARY KEY (`ACCTRN_KEY`),\\n  KEY `ACC_KEY` (`ACC_KEY`) USING BTREE,\\n  KEY `ACCTP_KEY` (`ACCTP_KEY`) USING BTREE,\\n  KEY `ACTRNTP_KEY` (`ACTRNTP_KEY`) USING BTREE,\\n  KEY `ACCTP_OTHER_ACCOUNT_KEY` (`ACCTP_OTHER_ACCOUNT_KEY`) USING BTREE,\\n  KEY `ACC_OTHER_ACCOUNT_KEY` (`ACC_OTHER_ACCOUNT_KEY`) USING BTREE,\\n  CONSTRAINT `ACCOUNT_TRANSACTIONS_ibfk_1` FOREIGN KEY (`ACCTP_KEY`) REFERENCES `ACCOUNT_TYPES` (`ACCTP_KEY`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `ACCOUNT_TRANSACTIONS_ibfk_2` FOREIGN KEY (`ACC_KEY`) REFERENCES `ACCOUNTS` (`ACC_KEY`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `ACCOUNT_TRANSACTIONS_ibfk_3` FOREIGN KEY (`ACTRNTP_KEY`) REFERENCES `ACCOUNT_TRANSACT_TYPES` (`ACTRNTP_KEY`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `ACCOUNT_TRANSACTIONS_ibfk_4` FOREIGN KEY (`ACCTP_OTHER_ACCOUNT_KEY`) REFERENCES `ACCOUNT_TYPES` (`ACCTP_KEY`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `ACCOUNT_TRANSACTIONS_ibfk_5` FOREIGN KEY (`ACC_OTHER_ACCOUNT_KEY`) REFERENCES `ACCOUNTS` (`ACC_KEY`) ON DELETE NO ACTION ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de TIPOS DE TRANSACCIONES DE CUENTA con las columnas de, CLAVE ACTRNTP, DESC ACTRNTP",
      "output": "('ACCOUNT_TRANSACT_TYPES', 'CREATE TABLE `ACCOUNT_TRANSACT_TYPES` (\\n  `ACTRNTP_KEY` int(11) NOT NULL  `ACTRNTP_DESC` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`ACTRNTP_KEY`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de TIPOS DE CUENTA con las columnas de, CLAVE ACCTP, DESC ACCTP",
      "output": "('ACCOUNT_TYPES', 'CREATE TABLE `ACCOUNT_TYPES` (\\n  `ACCTP_KEY` int(255) NOT NULL  `ACCTP_DESC` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`ACCTP_KEY`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ORGANIZACIONES con las columnas de, CLAVE ORG, IDENTIFICACIÓN UNIFICADA ORG, CIUDAD, CÓDIGO POSTAL",
      "output": "('ORGANIZATIONS', 'CREATE TABLE `ORGANIZATIONS` (\\n  `ORG_KEY` int(255) NOT NULL  `ORGH_UNIFIED_ID` varchar(255) DEFAULT NULL,\\n  `CITY` varchar(255) DEFAULT NULL,\\n  `ZIP` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ORG_KEY`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de FIESTAS con las columnas de, CLAVE UNIFICADA PT, CLAVE ORG, FECHA NACIMIENTO PTH, CLIENTE PTH DESDE FECHA, CLIENTE PTH DESDE FECHA ALT, ID UNIFICADA PTTP, ID UNIFICADA PSGEN",
      "output": "('PARTIES', 'CREATE TABLE `PARTIES` (\\n  `PT_UNIFIED_KEY` int(11) NOT NULL  `ORG_KEY` int(11) DEFAULT NULL,\\n  `PTH_BIRTH_DATE` varchar(255) DEFAULT NULL,\\n  `PTH_CLIENT_FROM_DATE` varchar(255) DEFAULT NULL,\\n  `PTH_CLIENT_FROM_DATE_ALT` varchar(255) DEFAULT NULL,\\n  `PTTP_UNIFIED_ID` varchar(255) DEFAULT NULL,\\n  `PSGEN_UNIFIED_ID` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`PT_UNIFIED_KEY`),\\n  KEY `ORG_KEY` (`ORG_KEY`) USING BTREE,\\n  CONSTRAINT `PARTIES_ibfk_1` FOREIGN KEY (`ORG_KEY`) REFERENCES `ORGANIZATIONS` (`ORG_KEY`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de PRODUCTOS con las columnas de, CLAVE PROD, CÓDIGO AGENDA PROD, NOMBRE AGENDA PROD",
      "output": "('PRODUCTS', 'CREATE TABLE `PRODUCTS` (\\n  `PROD_KEY` int(255) NOT NULL  `PROD_AGENDA_CODE` varchar(255) DEFAULT NULL,\\n  `PROD_AGENDA_NAME` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`PROD_KEY`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de rotación de objetivos con las columnas de, CLAVE ACC, horizonte de fecha, abandono de destino",
      "output": "('target_churn', 'CREATE TABLE `target_churn` (\\n  `ACC_KEY` int(255) NOT NULL  `date_horizon` date DEFAULT NULL,\\n  `target_churn` int(1) DEFAULT NULL,\\n  PRIMARY KEY (`ACC_KEY`),\\n  KEY `ACC_KEY` (`ACC_KEY`),\\n  CONSTRAINT `target_churn_ibfk_1` FOREIGN KEY (`ACC_KEY`) REFERENCES `ACCOUNTS` (`ACC_KEY`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de noticias con las columnas de, id, texto, etiqueta",
      "output": "('20news', 'CREATE TABLE `20news` (\\n  `id` int(11) NOT NULL  `text` mediumtext DEFAULT NULL,\\n  `label` varchar(24) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de noticias con las columnas de, id, texto, etiqueta",
      "output": "('2news', 'CREATE TABLE `2news` (\\n  `id` int(11) NOT NULL  `text` mediumtext DEFAULT NULL,\\n  `label` varchar(24) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de datos con las columnas de, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde , Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde , Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde , Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde , Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde , Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde , Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde , Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde , Dónde , Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Dónde, Var, var, var , var, var, id, venta adicional",
      "output": "('data', 'CREATE TABLE `data` (\\n  `Var1` int(11) DEFAULT NULL  `Var2` int(11) DEFAULT NULL,\\n  `Var3` int(11) DEFAULT NULL,\\n  `Var4` int(11) DEFAULT NULL,\\n  `Var5` int(11) DEFAULT NULL,\\n  `Var6` int(11) DEFAULT NULL,\\n  `Var7` int(11) DEFAULT NULL,\\n  `Var8` varchar(1) DEFAULT NULL,\\n  `Var9` int(11) DEFAULT NULL,\\n  `Var10` double DEFAULT NULL,\\n  `Var11` int(11) DEFAULT NULL,\\n  `Var12` int(11) DEFAULT NULL,\\n  `Var13` int(11) DEFAULT NULL,\\n  `Var14` int(11) DEFAULT NULL,\\n  `Var15` varchar(1) DEFAULT NULL,\\n  `Var16` double DEFAULT NULL,\\n  `Var17` int(11) DEFAULT NULL,\\n  `Var18` int(11) DEFAULT NULL,\\n  `Var19` int(11) DEFAULT NULL,\\n  `Var20` varchar(1) DEFAULT NULL,\\n  `Var21` int(11) DEFAULT NULL,\\n  `Var22` int(11) DEFAULT NULL,\\n  `Var23` int(11) DEFAULT NULL,\\n  `Var24` int(11) DEFAULT NULL,\\n  `Var25` int(11) DEFAULT NULL,\\n  `Var26` int(11) DEFAULT NULL,\\n  `Var27` int(11) DEFAULT NULL,\\n  `Var28` double DEFAULT NULL,\\n  `Var29` int(11) DEFAULT NULL,\\n  `Var30` int(11) DEFAULT NULL,\\n  `Var31` varchar(1) DEFAULT NULL,\\n  `Var32` varchar(1) DEFAULT NULL,\\n  `Var33` double DEFAULT NULL,\\n  `Var34` int(11) DEFAULT NULL,\\n  `Var35` int(11) DEFAULT NULL,\\n  `Var36` int(11) DEFAULT NULL,\\n  `Var37` int(11) DEFAULT NULL,\\n  `Var38` int(11) DEFAULT NULL,\\n  `Var39` varchar(1) DEFAULT NULL,\\n  `Var40` int(11) DEFAULT NULL,\\n  `Var41` int(11) DEFAULT NULL,\\n  `Var42` varchar(1) DEFAULT NULL,\\n  `Var43` int(11) DEFAULT NULL,\\n  `Var44` int(11) DEFAULT NULL,\\n  `Var45` double DEFAULT NULL,\\n  `Var46` int(11) DEFAULT NULL,\\n  `Var47` int(11) DEFAULT NULL,\\n  `Var48` varchar(1) DEFAULT NULL,\\n  `Var49` int(11) DEFAULT NULL,\\n  `Var50` int(11) DEFAULT NULL,\\n  `Var51` double DEFAULT NULL,\\n  `Var52` varchar(1) DEFAULT NULL,\\n  `Var53` double DEFAULT NULL,\\n  `Var54` int(11) DEFAULT NULL,\\n  `Var55` varchar(1) DEFAULT NULL,\\n  `Var56` int(11) DEFAULT NULL,\\n  `Var57` double DEFAULT NULL,\\n  `Var58` int(11) DEFAULT NULL,\\n  `Var59` double DEFAULT NULL,\\n  `Var60` int(11) DEFAULT NULL,\\n  `Var61` int(11) DEFAULT NULL,\\n  `Var62` int(11) DEFAULT NULL,\\n  `Var63` int(11) DEFAULT NULL,\\n  `Var64` double DEFAULT NULL,\\n  `Var65` int(11) DEFAULT NULL,\\n  `Var66` int(11) DEFAULT NULL,\\n  `Var67` int(11) DEFAULT NULL,\\n  `Var68` int(11) DEFAULT NULL,\\n  `Var69` double DEFAULT NULL,\\n  `Var70` int(11) DEFAULT NULL,\\n  `Var71` int(11) DEFAULT NULL,\\n  `Var72` int(11) DEFAULT NULL,\\n  `Var73` int(11) DEFAULT NULL,\\n  `Var74` int(11) DEFAULT NULL,\\n  `Var75` int(11) DEFAULT NULL,\\n  `Var76` int(11) DEFAULT NULL,\\n  `Var77` int(11) DEFAULT NULL,\\n  `Var78` int(11) DEFAULT NULL,\\n  `Var79` varchar(1) DEFAULT NULL,\\n  `Var80` int(11) DEFAULT NULL,\\n  `Var81` double DEFAULT NULL,\\n  `Var82` int(11) DEFAULT NULL,\\n  `Var83` int(11) DEFAULT NULL,\\n  `Var84` int(11) DEFAULT NULL,\\n  `Var85` int(11) DEFAULT NULL,\\n  `Var86` int(11) DEFAULT NULL,\\n  `Var87` int(11) DEFAULT NULL,\\n  `Var88` int(11) DEFAULT NULL,\\n  `Var89` int(11) DEFAULT NULL,\\n  `Var90` int(11) DEFAULT NULL,\\n  `Var91` int(11) DEFAULT NULL,\\n  `Var92` int(11) DEFAULT NULL,\\n  `Var93` int(11) DEFAULT NULL,\\n  `Var94` int(11) DEFAULT NULL,\\n  `Var95` int(11) DEFAULT NULL,\\n  `Var96` int(11) DEFAULT NULL,\\n  `Var97` int(11) DEFAULT NULL,\\n  `Var98` int(11) DEFAULT NULL,\\n  `Var99` int(11) DEFAULT NULL,\\n  `Var100` int(11) DEFAULT NULL,\\n  `Var101` int(11) DEFAULT NULL,\\n  `Var102` double DEFAULT NULL,\\n  `Var103` int(11) DEFAULT NULL,\\n  `Var104` int(11) DEFAULT NULL,\\n  `Var105` int(11) DEFAULT NULL,\\n  `Var106` int(11) DEFAULT NULL,\\n  `Var107` int(11) DEFAULT NULL,\\n  `Var108` int(11) DEFAULT NULL,\\n  `Var109` int(11) DEFAULT NULL,\\n  `Var110` int(11) DEFAULT NULL,\\n  `Var111` double DEFAULT NULL,\\n  `Var112` int(11) DEFAULT NULL,\\n  `Var113` double DEFAULT NULL,\\n  `Var114` int(11) DEFAULT NULL,\\n  `Var115` int(11) DEFAULT NULL,\\n  `Var116` int(11) DEFAULT NULL,\\n  `Var117` int(11) DEFAULT NULL,\\n  `Var118` int(11) DEFAULT NULL,\\n  `Var119` int(11) DEFAULT NULL,\\n  `Var120` int(11) DEFAULT NULL,\\n  `Var121` int(11) DEFAULT NULL,\\n  `Var122` int(11) DEFAULT NULL,\\n  `Var123` int(11) DEFAULT NULL,\\n  `Var124` int(11) DEFAULT NULL,\\n  `Var125` int(11) DEFAULT NULL,\\n  `Var126` int(11) DEFAULT NULL,\\n  `Var127` int(11) DEFAULT NULL,\\n  `Var128` int(11) DEFAULT NULL,\\n  `Var129` int(11) DEFAULT NULL,\\n  `Var130` int(11) DEFAULT NULL,\\n  `Var131` double DEFAULT NULL,\\n  `Var132` int(11) DEFAULT NULL,\\n  `Var133` int(11) DEFAULT NULL,\\n  `Var134` int(11) DEFAULT NULL,\\n  `Var135` double DEFAULT NULL,\\n  `Var136` double DEFAULT NULL,\\n  `Var137` int(11) DEFAULT NULL,\\n  `Var138` int(11) DEFAULT NULL,\\n  `Var139` int(11) DEFAULT NULL,\\n  `Var140` int(11) DEFAULT NULL,\\n  `Var141` varchar(1) DEFAULT NULL,\\n  `Var142` int(11) DEFAULT NULL,\\n  `Var143` int(11) DEFAULT NULL,\\n  `Var144` int(11) DEFAULT NULL,\\n  `Var145` int(11) DEFAULT NULL,\\n  `Var146` int(11) DEFAULT NULL,\\n  `Var147` int(11) DEFAULT NULL,\\n  `Var148` int(11) DEFAULT NULL,\\n  `Var149` int(11) DEFAULT NULL,\\n  `Var150` int(11) DEFAULT NULL,\\n  `Var151` int(11) DEFAULT NULL,\\n  `Var152` int(11) DEFAULT NULL,\\n  `Var153` int(11) DEFAULT NULL,\\n  `Var154` double DEFAULT NULL,\\n  `Var155` int(11) DEFAULT NULL,\\n  `Var156` int(11) DEFAULT NULL,\\n  `Var157` int(11) DEFAULT NULL,\\n  `Var158` int(11) DEFAULT NULL,\\n  `Var159` int(11) DEFAULT NULL,\\n  `Var160` int(11) DEFAULT NULL,\\n  `Var161` int(11) DEFAULT NULL,\\n  `Var162` double DEFAULT NULL,\\n  `Var163` int(11) DEFAULT NULL,\\n  `Var164` int(11) DEFAULT NULL,\\n  `Var165` int(11) DEFAULT NULL,\\n  `Var166` int(11) DEFAULT NULL,\\n  `Var167` varchar(1) DEFAULT NULL,\\n  `Var168` double DEFAULT NULL,\\n  `Var169` varchar(1) DEFAULT NULL,\\n  `Var170` int(11) DEFAULT NULL,\\n  `Var171` double DEFAULT NULL,\\n  `Var172` int(11) DEFAULT NULL,\\n  `Var173` int(11) DEFAULT NULL,\\n  `Var174` int(11) DEFAULT NULL,\\n  `Var175` varchar(1) DEFAULT NULL,\\n  `Var176` int(11) DEFAULT NULL,\\n  `Var177` int(11) DEFAULT NULL,\\n  `Var178` int(11) DEFAULT NULL,\\n  `Var179` int(11) DEFAULT NULL,\\n  `Var180` double DEFAULT NULL,\\n  `Var181` int(11) DEFAULT NULL,\\n  `Var182` int(11) DEFAULT NULL,\\n  `Var183` int(11) DEFAULT NULL,\\n  `Var184` int(11) DEFAULT NULL,\\n  `Var185` varchar(1) DEFAULT NULL,\\n  `Var186` int(11) DEFAULT NULL,\\n  `Var187` int(11) DEFAULT NULL,\\n  `Var188` double DEFAULT NULL,\\n  `Var189` int(11) DEFAULT NULL,\\n  `Var190` double DEFAULT NULL,\\n  `Var191` varchar(4) DEFAULT NULL,\\n  `Var192` varchar(10) DEFAULT NULL,\\n  `Var193` varchar(40) DEFAULT NULL,\\n  `Var194` varchar(4) DEFAULT NULL,\\n  `Var195` varchar(16) DEFAULT NULL,\\n  `Var196` varchar(4) DEFAULT NULL,\\n  `Var197` varchar(4) DEFAULT NULL,\\n  `Var198` varchar(7) DEFAULT NULL,\\n  `Var199` varchar(22) DEFAULT NULL,\\n  `Var200` varchar(10) DEFAULT NULL,\\n  `Var201` varchar(4) DEFAULT NULL,\\n  `Var202` varchar(4) DEFAULT NULL,\\n  `Var203` varchar(4) DEFAULT NULL,\\n  `Var204` varchar(4) DEFAULT NULL,\\n  `Var205` varchar(7) DEFAULT NULL,\\n  `Var206` varchar(7) DEFAULT NULL,\\n  `Var207` varchar(25) DEFAULT NULL,\\n  `Var208` varchar(4) DEFAULT NULL,\\n  `Var209` varchar(1) DEFAULT NULL,\\n  `Var210` varchar(4) DEFAULT NULL,\\n  `Var211` varchar(4) DEFAULT NULL,\\n  `Var212` varchar(25) DEFAULT NULL,\\n  `Var213` varchar(4) DEFAULT NULL,\\n  `Var214` varchar(10) DEFAULT NULL,\\n  `Var215` varchar(4) DEFAULT NULL,\\n  `Var216` varchar(7) DEFAULT NULL,\\n  `Var217` varchar(7) DEFAULT NULL,\\n  `Var218` varchar(4) DEFAULT NULL,\\n  `Var219` varchar(10) DEFAULT NULL,\\n  `Var220` varchar(7) DEFAULT NULL,\\n  `Var221` varchar(7) DEFAULT NULL,\\n  `Var222` varchar(7) DEFAULT NULL,\\n  `Var223` varchar(10) DEFAULT NULL,\\n  `Var224` varchar(4) DEFAULT NULL,\\n  `Var225` varchar(4) DEFAULT NULL,\\n  `Var226` varchar(4) DEFAULT NULL,\\n  `Var227` varchar(7) DEFAULT NULL,\\n  `Var228` varchar(25) DEFAULT NULL,\\n  `Var229` varchar(4) DEFAULT NULL,\\n  `Var230` varchar(1) DEFAULT NULL,\\n  `id` int(11) NOT NULL,\\n  `upsell` varchar(2) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de datos con las columnas de, edad, clase de trabajo, fnlwgt, educación, número de educación, estado civil, ocupación, relación, raza, sexo, ganancia de capital, pérdida de capital, horas por semana, país de origen, ingresos",
      "output": "('data', 'CREATE TABLE `data` (\\n  `age` int(11) DEFAULT NULL  `workclass` varchar(16) DEFAULT NULL,\\n  `fnlwgt` int(11) DEFAULT NULL,\\n  `education` varchar(12) DEFAULT NULL,\\n  `education-num` int(11) DEFAULT NULL,\\n  `marital-status` varchar(21) DEFAULT NULL,\\n  `occupation` varchar(17) DEFAULT NULL,\\n  `relationship` varchar(14) DEFAULT NULL,\\n  `race` varchar(18) DEFAULT NULL,\\n  `sex` varchar(6) DEFAULT NULL,\\n  `capital-gain` int(11) DEFAULT NULL,\\n  `capital-loss` int(11) DEFAULT NULL,\\n  `hours-per-week` int(11) DEFAULT NULL,\\n  `native-country` varchar(26) DEFAULT NULL,\\n  `income` varchar(5) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de coches con las columnas de, mpg, cilindros, desplazamiento, caballos de fuerza, peso, aceleración, año del modelo, origen",
      "output": "('auta', 'CREATE TABLE `auta` (\\n  `mpg` int(11) DEFAULT NULL  `cylinders` int(11) DEFAULT NULL,\\n  `displacement` int(11) DEFAULT NULL,\\n  `horsepower` int(11) DEFAULT NULL,\\n  `weight` int(11) DEFAULT NULL,\\n  `acceleration` float DEFAULT NULL,\\n  `model year` int(11) DEFAULT NULL,\\n  `origin` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cuenta con las columnas de, ID de cuenta, ID de distrito, frecuencia, fecha",
      "output": "('account', 'CREATE TABLE `account` (\\n  `account_id` int(11) NOT NULL  `district_id` int(11) DEFAULT NULL,\\n  `frequency` varchar(18) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  PRIMARY KEY (`account_id`),\\n  UNIQUE KEY `account_account_id_key` (`account_id`),\\n  KEY `account_ibfk_1` (`district_id`),\\n  CONSTRAINT `account_ibfk_1` FOREIGN KEY (`district_id`) REFERENCES `ctu_crossSchema2`.`district` (`district_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de préstamo con las columnas de, ID de préstamo, ID de cuenta, fecha, cantidad, duración, pagos, estado",
      "output": "('loan', 'CREATE TABLE `loan` (\\n  `loan_id` int(11) NOT NULL  `account_id` int(11) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `amount` bigint(20) DEFAULT NULL,\\n  `duration` int(11) DEFAULT NULL,\\n  `payments` decimal(6,2) DEFAULT NULL,\\n  `status` varchar(1) DEFAULT NULL,\\n  PRIMARY KEY (`loan_id`),\\n  KEY `loan_ibfk_1` (`account_id`),\\n  CONSTRAINT `loan_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ordenar con las columnas de, ID de pedido, ID de cuenta, banco a, cuenta a, monto, símbolo k",
      "output": "('order', 'CREATE TABLE `order` (\\n  `order_id` int(11) NOT NULL  `account_id` int(11) DEFAULT NULL,\\n  `bank_to` varchar(2) DEFAULT NULL,\\n  `account_to` bigint(20) DEFAULT NULL,\\n  `amount` decimal(6,1) DEFAULT NULL,\\n  `k_symbol` varchar(8) DEFAULT NULL,\\n  PRIMARY KEY (`order_id`),\\n  KEY `order_ibfk_1` (`account_id`),\\n  CONSTRAINT `order_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de trans con las columnas de, identificación trans, identificación de cuenta, fecha, tipo, operación, cantidad, saldo, símbolo k, banco, cuenta",
      "output": "('trans', 'CREATE TABLE `trans` (\\n  `trans_id` int(11) NOT NULL  `account_id` int(11) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `type` varchar(255) DEFAULT NULL,\\n  `operation` varchar(255) DEFAULT NULL,\\n  `amount` decimal(30,0) DEFAULT NULL,\\n  `balance` decimal(30,0) DEFAULT NULL,\\n  `k_symbol` varchar(255) DEFAULT NULL,\\n  `bank` varchar(255) DEFAULT NULL,\\n  `account` bigint(20) DEFAULT NULL,\\n  PRIMARY KEY (`trans_id`),\\n  KEY `trans_ibfk_1` (`account_id`),\\n  CONSTRAINT `trans_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tarjeta con las columnas de, id de tarjeta, id de disp, tipo, emitido",
      "output": "('card', 'CREATE TABLE `card` (\\n  `card_id` int(11) NOT NULL  `disp_id` int(11) DEFAULT NULL,\\n  `type` varchar(7) DEFAULT NULL,\\n  `issued` date DEFAULT NULL,\\n  PRIMARY KEY (`card_id`),\\n  KEY `card_disp_id_fkey` (`disp_id`),\\n  CONSTRAINT `card_disp_id_fkey` FOREIGN KEY (`disp_id`) REFERENCES `disp` (`disp_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, sexo, fecha de nacimiento, ID de distrito",
      "output": "('client', 'CREATE TABLE `client` (\\n  `client_id` int(11) NOT NULL  `gender` varchar(1) DEFAULT NULL,\\n  `birth_date` date DEFAULT NULL,\\n  `district_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`client_id`),\\n  UNIQUE KEY `client_client_id_key` (`client_id`),\\n  KEY `client_district_id_fkey` (`district_id`),\\n  CONSTRAINT `client_district_id_fkey` FOREIGN KEY (`district_id`) REFERENCES `district` (`district_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de disipar con las columnas de, disp id, id de cliente, id de cuenta, tipo",
      "output": "('disp', 'CREATE TABLE `disp` (\\n  `disp_id` int(11) NOT NULL  `client_id` int(11) DEFAULT NULL,\\n  `account_id` int(11) DEFAULT NULL,\\n  `type` varchar(9) DEFAULT NULL,\\n  PRIMARY KEY (`disp_id`),\\n  KEY `disp_ibfk_1` (`account_id`),\\n  KEY `disp_ibfk_2` (`client_id`),\\n  CONSTRAINT `disp_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `ctu_crossSchema1`.`account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `disp_ibfk_2` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de distrito con las columnas de, ID de distrito, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A",
      "output": "('district', 'CREATE TABLE `district` (\\n  `district_id` int(11) NOT NULL  `A2` varchar(19) NOT NULL,\\n  `A3` varchar(15) NOT NULL,\\n  `A4` int(11) NOT NULL,\\n  `A5` int(11) NOT NULL,\\n  `A6` int(11) NOT NULL,\\n  `A7` int(11) NOT NULL,\\n  `A8` int(11) NOT NULL,\\n  `A9` int(11) NOT NULL,\\n  `A10` decimal(4,1) NOT NULL,\\n  `A11` int(11) NOT NULL,\\n  `A12` decimal(4,1) DEFAULT NULL,\\n  `A13` decimal(3,2) NOT NULL,\\n  `A14` int(11) NOT NULL,\\n  `A15` int(11) DEFAULT NULL,\\n  `A16` int(11) NOT NULL,\\n  PRIMARY KEY (`district_id`),\\n  UNIQUE KEY `district_district_id_key` (`district_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de dimensión con las columnas de, ID de destino, marca de tiempo de destino, bool, char, fecha, float, double, smallint, int, bigint, decimal numérico, entero numérico, texto, hora, marca de tiempo, varchar, hora, fecha, marca de tiempo, tinyint, real, decimal decimal, entero decimal, fecha y hora, fecha y hora, año, año, texto pequeño, texto medio, texto largo, enumeración, conjunto",
      "output": "('dimension', \"CREATE TABLE `dimension` (\\n  `target_id` int(11) NOT NULL  `target_timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `bool` bit(1) DEFAULT NULL,\\n  `char` char(1) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `float` float DEFAULT NULL,\\n  `double` double DEFAULT NULL,\\n  `smallint` smallint(6) DEFAULT NULL,\\n  `int` int(11) DEFAULT NULL,\\n  `bigint` bigint(20) DEFAULT NULL,\\n  `numeric_decimal` decimal(65,30) DEFAULT NULL,\\n  `numeric_whole` decimal(65,0) DEFAULT NULL,\\n  `text` text DEFAULT NULL,\\n  `time` time DEFAULT NULL,\\n  `timestamp` timestamp NULL DEFAULT NULL,\\n  `varchar` varchar(255) DEFAULT NULL,\\n  `time2` time DEFAULT NULL,\\n  `date2` date DEFAULT NULL,\\n  `timestamp2` timestamp NULL DEFAULT NULL,\\n  `tinyint` tinyint(4) DEFAULT NULL,\\n  `real` double DEFAULT NULL,\\n  `decimal_decimal` decimal(65,2) DEFAULT NULL,\\n  `decimal_whole` decimal(65,0) DEFAULT NULL,\\n  `datetime` datetime DEFAULT NULL,\\n  `datetime2` datetime DEFAULT NULL,\\n  `year` year(4) DEFAULT NULL,\\n  `year2` year(4) DEFAULT NULL,\\n  `tinytext` tinytext DEFAULT NULL,\\n  `mediumtext` mediumtext DEFAULT NULL,\\n  `longtext` longtext DEFAULT NULL,\\n  `enum` enum('ok','great') DEFAULT NULL,\\n  `set` set('a','b','c') DEFAULT NULL,\\n  PRIMARY KEY (`target_id`,`target_timestamp`),\\n  CONSTRAINT `dimension_target_id_fkey` FOREIGN KEY (`target_id`) REFERENCES `target` (`target_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de objetivo con las columnas de, id de destino, destino, ts de destino, fecha de destino, bit, char, varchar, float, double, real, tinyint, smallint, int, bigint, numérico decimal, numérico completo, decimal decimal, decimal completo, hora, fecha, fecha y hora, marca de tiempo, año, hora, fecha, fecha y hora, año, texto, texto pequeño, texto medio, texto largo, enumeración, conjunto",
      "output": "('target', \"CREATE TABLE `target` (\\n  `target_id` int(11) NOT NULL  `target` varchar(255) NOT NULL,\\n  `target_ts` timestamp NULL DEFAULT NULL,\\n  `target_date` date DEFAULT NULL,\\n  `bit` bit(1) DEFAULT NULL,\\n  `char` char(1) DEFAULT NULL,\\n  `varchar` varchar(255) DEFAULT NULL,\\n  `float` float DEFAULT NULL,\\n  `double` double DEFAULT NULL,\\n  `real` double DEFAULT NULL,\\n  `tinyint` tinyint(4) DEFAULT NULL,\\n  `smallint` smallint(6) DEFAULT NULL,\\n  `int` int(11) DEFAULT NULL,\\n  `bigint` bigint(20) DEFAULT NULL,\\n  `numeric_decimal` decimal(65,30) DEFAULT NULL,\\n  `numeric_whole` decimal(65,0) DEFAULT NULL,\\n  `decimal_decimal` decimal(65,30) DEFAULT NULL,\\n  `decimal_whole` decimal(65,0) DEFAULT NULL,\\n  `time` time DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `datetime` datetime DEFAULT NULL,\\n  `timestamp` timestamp NULL DEFAULT NULL,\\n  `year` year(4) DEFAULT NULL,\\n  `time2` time DEFAULT NULL,\\n  `date2` date DEFAULT NULL,\\n  `datetime2` datetime DEFAULT NULL,\\n  `timestamp2` timestamp NULL DEFAULT NULL,\\n  `year2` year(4) DEFAULT NULL,\\n  `text` text DEFAULT NULL,\\n  `tinytext` tinytext DEFAULT NULL,\\n  `mediumtext` mediumtext DEFAULT NULL,\\n  `longtext` longtext DEFAULT NULL,\\n  `enum` enum('ok','bad') DEFAULT NULL,\\n  `set` set('1','2','3') DEFAULT NULL,\\n  PRIMARY KEY (`target_id`),\\n  UNIQUE KEY `target_target_id_key` (`target_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de datos con las columnas de, Edad, Sexo, Método de Pago, Futuro Cliente",
      "output": "('data', 'CREATE TABLE `data` (\\n  `Age` float DEFAULT NULL  `Gender` varchar(255) DEFAULT NULL,\\n  `Payment Method` varchar(255) DEFAULT NULL,\\n  `Future Customer` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de datos con las columnas de, nombre de secuencia, mcg, gvh, lip, chg, aac, alm, alm, clase",
      "output": "('data', 'CREATE TABLE `data` (\\n  `sequence_name` varchar(10) NOT NULL  `mcg` double DEFAULT NULL,\\n  `gvh` double DEFAULT NULL,\\n  `lip` double DEFAULT NULL,\\n  `chg` double DEFAULT NULL,\\n  `aac` double DEFAULT NULL,\\n  `alm1` double DEFAULT NULL,\\n  `alm2` double DEFAULT NULL,\\n  `class` varchar(3) DEFAULT NULL,\\n  PRIMARY KEY (`sequence_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de autores gutenberg con las columnas de, Apellido, Nombre, Nacido, Fallecido",
      "output": "('authors_gutenberg', 'CREATE TABLE `authors_gutenberg` (\\n  `Surname` varchar(255) COLLATE utf8_bin DEFAULT NULL  `Name` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `Born` int(11) DEFAULT NULL,\\n  `Died` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de autores wikipedia con las columnas de, autor, fecha nacimiento",
      "output": "('authors_wikipedia', 'CREATE TABLE `authors_wikipedia` (\\n  `author` varchar(255) COLLATE utf8_bin DEFAULT NULL  `date_birth` varchar(255) COLLATE utf8_bin DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de baldwin con las columnas de, id, título, libro, autor, contenido, url",
      "output": "('baldwin', 'CREATE TABLE `baldwin` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `title` varchar(255) COLLATE utf8_bin NOT NULL,\\n  `book` varchar(255) COLLATE utf8_bin NOT NULL,\\n  `author` varchar(255) COLLATE utf8_bin NOT NULL,\\n  `content` mediumtext COLLATE utf8_bin NOT NULL,\\n  `url` text COLLATE utf8_bin NOT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=581 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de alimentadores con las columnas de, identificación, contenido",
      "output": "('feedbooks', 'CREATE TABLE `feedbooks` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `content` longtext COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de gris global con las columnas de, identificación, contenido",
      "output": "('globalgrey', 'CREATE TABLE `globalgrey` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `content` longtext COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Google con las columnas de, identificación, contenido",
      "output": "('google', 'CREATE TABLE `google` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `content` longtext COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Gutenberg con las columnas de, id, título, libro, autor, fecha, país, contenido, url, id gutenberg",
      "output": "('gutenberg', 'CREATE TABLE `gutenberg` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `title` varchar(255) DEFAULT NULL,\\n  `book` varchar(255) DEFAULT NULL,\\n  `author` varchar(255) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `country` varchar(255) CHARACTER SET utf8mb4 DEFAULT NULL,\\n  `content` longtext DEFAULT NULL,\\n  `url` text DEFAULT NULL,\\n  `id_gutenberg` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=509 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Gutenberg aclaró con las columnas de, id, título, libro, autor, fecha, país, contenido, url, id gutenberg, claro éxito",
      "output": "('gutenberg_cleared', 'CREATE TABLE `gutenberg_cleared` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `title` varchar(255) DEFAULT NULL,\\n  `book` varchar(255) DEFAULT NULL,\\n  `author` varchar(255) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `country` varchar(255) CHARACTER SET utf8mb4 DEFAULT NULL,\\n  `content` longtext DEFAULT NULL,\\n  `url` text DEFAULT NULL,\\n  `id_gutenberg` int(11) DEFAULT NULL,\\n  `clear_success` tinyint(4) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=211 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de viejo truncado con las columnas de, id, título, contenido, url, autor, libro, fecha, continente, país",
      "output": "('old_truncated', 'CREATE TABLE `old_truncated` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `title` tinytext COLLATE utf8_bin DEFAULT NULL,\\n  `content` longtext COLLATE utf8_bin DEFAULT NULL,\\n  `url` tinytext COLLATE utf8_bin DEFAULT NULL,\\n  `author` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `book` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `date` int(11) DEFAULT NULL,\\n  `continent` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  `country` varchar(255) COLLATE utf8_bin DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=4320 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tales template con las columnas de, id, título, libro, autor, fecha, país, url, contenido",
      "output": "('tales_template', 'CREATE TABLE `tales_template` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `title` varchar(255) DEFAULT NULL,\\n  `book` varchar(255) DEFAULT NULL,\\n  `author` varchar(255) DEFAULT NULL,\\n  `date` date DEFAULT NULL,\\n  `country` varchar(255) DEFAULT NULL,\\n  `url` text DEFAULT NULL,\\n  `content` text DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de orden financiero con las columnas de, id, destino, marca de tiempo, id de pedido, id de cuenta, banco a, cuenta a, cantidad, símbolo k",
      "output": "('financial_order', 'CREATE TABLE `financial_order` (\\n  `id` int(11) DEFAULT NULL  `target` varchar(1) DEFAULT NULL,\\n  `timestamp` date DEFAULT NULL,\\n  `order_id` int(11) NOT NULL DEFAULT 0,\\n  `account_id` int(11) DEFAULT NULL,\\n  `bank_to` varchar(2) DEFAULT NULL,\\n  `account_to` int(11) DEFAULT NULL,\\n  `amount` decimal(6,1) DEFAULT NULL,\\n  `k_symbol` varchar(8) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de trans financiero con las columnas de, id, objetivo, marca de tiempo, id trans, id de cuenta, fecha, tipo, operación, cantidad, saldo, símbolo k, banco, cuenta",
      "output": "('financial_trans', 'CREATE TABLE `financial_trans` (\\n  `id` int(11) DEFAULT NULL  `target` varchar(1) DEFAULT NULL,\\n  `timestamp` date DEFAULT NULL,\\n  `trans_id` int(11) NOT NULL DEFAULT 0,\\n  `account_id` int(11) DEFAULT 0,\\n  `date` date DEFAULT NULL,\\n  `type` varchar(6) DEFAULT NULL,\\n  `operation` varchar(14) DEFAULT NULL,\\n  `amount` int(11) DEFAULT NULL,\\n  `balance` int(11) DEFAULT NULL,\\n  `k_symbol` varchar(11) DEFAULT NULL,\\n  `bank` varchar(2) DEFAULT NULL,\\n  `account` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de trenes coches con las columnas de, id, objetivo, id del coche, posición, forma, len, lados, techo, ruedas, forma de carga, número de carga",
      "output": "('trains_cars', 'CREATE TABLE `trains_cars` (\\n  `id` int(11) DEFAULT NULL  `target` varchar(4) CHARACTER SET latin1 DEFAULT NULL,\\n  `car_id` int(11) NOT NULL,\\n  `position` int(11) DEFAULT NULL,\\n  `shape` varchar(255) CHARACTER SET latin1 DEFAULT NULL,\\n  `len` varchar(255) CHARACTER SET latin1 DEFAULT NULL,\\n  `sides` varchar(255) CHARACTER SET latin1 DEFAULT NULL,\\n  `roof` varchar(255) CHARACTER SET latin1 DEFAULT NULL,\\n  `wheels` int(11) DEFAULT NULL,\\n  `load_shape` varchar(255) CHARACTER SET latin1 DEFAULT NULL,\\n  `load_num` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de lista de resultados con las columnas de, id. de función, id. de consulta, marca de tiempo, autor, nombre de función, descripción de función, ejemplo de uso, sql original, nombre de tabla, col, col, sql, mensaje de error, chi, tiempo de ejecución",
      "output": "('result_list', 'CREATE TABLE `result_list` (\\n  `feature_id` int(11) NOT NULL  `query_id` int(11) NOT NULL,\\n  `timestamp` datetime DEFAULT NULL,\\n  `author` varchar(255) DEFAULT NULL,\\n  `feature_name` varchar(255) DEFAULT NULL,\\n  `feature_description` varchar(2550) DEFAULT NULL,\\n  `example_usage` varchar(2550) DEFAULT NULL,\\n  `sql_original` varchar(2550) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `col1` varchar(255) DEFAULT NULL,\\n  `col2` varchar(255) DEFAULT NULL,\\n  `sql` varchar(2550) DEFAULT NULL,\\n  `error_message` varchar(2550) DEFAULT NULL,\\n  `chi2` decimal(10,3) DEFAULT NULL,\\n  `run_time` decimal(10,3) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de característica calculada con las columnas de, id, objetivo, agregado máximo",
      "output": "('calculated_feature', 'CREATE TABLE `calculated_feature` (\\n  `id` int(11) DEFAULT NULL  `target` varchar(4) CHARACTER SET latin1 DEFAULT NULL,\\n  `aggregate_max` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cuenta con las columnas de, ID de cuenta, ID de distrito, frecuencia, fecha",
      "output": "('account', 'CREATE TABLE `account` (\\n  `account_id` int(11) NOT NULL DEFAULT 0  `district_id` int(11) NOT NULL DEFAULT 0,\\n  `frequency` varchar(18) NOT NULL,\\n  `date` date NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tarjeta con las columnas de, id de tarjeta, id de disp, tipo, emitido",
      "output": "('card', 'CREATE TABLE `card` (\\n  `card_id` int(11) NOT NULL DEFAULT 0  `disp_id` int(11) NOT NULL,\\n  `type` varchar(7) NOT NULL,\\n  `issued` date NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, sexo, fecha de nacimiento, ID de distrito",
      "output": "('client', 'CREATE TABLE `client` (\\n  `client_id` int(11) NOT NULL  `gender` varchar(1) NOT NULL,\\n  `birth_date` date NOT NULL,\\n  `district_id` int(11) NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de disipar con las columnas de, disp id, id de cliente, id de cuenta, tipo",
      "output": "('disp', 'CREATE TABLE `disp` (\\n  `disp_id` int(11) NOT NULL  `client_id` int(11) NOT NULL,\\n  `account_id` int(11) NOT NULL,\\n  `type` varchar(9) NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de distrito con las columnas de, ID de distrito, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A",
      "output": "('district', 'CREATE TABLE `district` (\\n  `district_id` int(11) NOT NULL DEFAULT 0  `A2` varchar(19) DEFAULT NULL,\\n  `A3` varchar(15) DEFAULT NULL,\\n  `A4` int(20) DEFAULT NULL,\\n  `A5` int(11) DEFAULT NULL,\\n  `A6` int(11) DEFAULT NULL,\\n  `A7` int(11) DEFAULT NULL,\\n  `A8` int(6) DEFAULT NULL,\\n  `A9` int(11) DEFAULT NULL,\\n  `A10` decimal(4,1) DEFAULT NULL,\\n  `A11` int(11) DEFAULT NULL,\\n  `A12` decimal(4,1) DEFAULT NULL,\\n  `A13` decimal(3,2) DEFAULT NULL,\\n  `A14` int(11) DEFAULT NULL,\\n  `A15` int(5) DEFAULT NULL,\\n  `A16` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de préstamo con las columnas de, ID de préstamo, ID de cuenta, fecha, cantidad, duración, pagos, estado",
      "output": "('loan', 'CREATE TABLE `loan` (\\n  `loan_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) NOT NULL,\\n  `date` date NOT NULL,\\n  `amount` int(11) NOT NULL,\\n  `duration` int(11) NOT NULL,\\n  `payments` decimal(6,2) NOT NULL,\\n  `status` varchar(1) NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ordenar con las columnas de, ID de pedido, ID de cuenta, banco a, cuenta a, monto, símbolo k",
      "output": "('order', 'CREATE TABLE `order` (\\n  `order_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) NOT NULL,\\n  `bank_to` varchar(2) NOT NULL,\\n  `account_to` int(11) NOT NULL,\\n  `amount` decimal(6,1) NOT NULL,\\n  `k_symbol` varchar(8) NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de trans con las columnas de, identificación trans, identificación de cuenta, fecha, tipo, operación, cantidad, saldo, símbolo k, banco, cuenta",
      "output": "('trans', 'CREATE TABLE `trans` (\\n  `trans_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) NOT NULL DEFAULT 0,\\n  `date` date NOT NULL,\\n  `type` varchar(6) NOT NULL,\\n  `operation` varchar(14) DEFAULT NULL,\\n  `amount` int(11) NOT NULL,\\n  `balance` int(11) NOT NULL,\\n  `k_symbol` varchar(11) DEFAULT NULL,\\n  `bank` varchar(2) DEFAULT NULL,\\n  `account` int(11) unsigned DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de datos con las columnas de, x, y, cluster",
      "output": "('data', 'CREATE TABLE `data` (\\n  `x` float DEFAULT NULL  `y` float DEFAULT NULL,\\n  `cluster` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de diario Accidentes con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Accidents', 'CREATE TABLE `journal_Accidents` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de diario de fútbol australiano con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_AustralianFootball', 'CREATE TABLE `journal_AustralianFootball` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Diario Baloncesto masculino con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Basketball_men', 'CREATE TABLE `journal_Basketball_men` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de revista Biodegradabilidad con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Biodegradability', 'CREATE TABLE `journal_Biodegradability` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Revista C O R A con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_CORA', 'CREATE TABLE `journal_CORA` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Revista Carcinogénesis con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Carcinogenesis', 'CREATE TABLE `journal_Carcinogenesis` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de diario de ajedrez con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Chess', 'CREATE TABLE `journal_Chess` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de revista facebook con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Facebook', 'CREATE TABLE `journal_Facebook` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de revista Hepatitis std con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Hepatitis_std', 'CREATE TABLE `journal_Hepatitis_std` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de periódico mundial con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Mondial', 'CREATE TABLE `journal_Mondial` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de diario P T E con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_PTE', 'CREATE TABLE `journal_PTE` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Diario Premier League con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_PremierLeague', 'CREATE TABLE `journal_PremierLeague` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Préstamo estudiantil con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Student_loan', 'CREATE TABLE `journal_Student_loan` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Revista Genoma Visual con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_VisualGenome', 'CREATE TABLE `journal_VisualGenome` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de revista walmart con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, tipo de datos, tipo de categoría, destino, unidades de relevancia, unidades de desviación de concepto, unidades de relevancia ponderada, recuento de filas de control de calidad, recuento nulo de control de calidad, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_Walmart', 'CREATE TABLE `journal_Walmart` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` datetime DEFAULT NULL,\\n  `run_time` float DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(255) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `column_list` varchar(255) DEFAULT NULL,\\n  `propagation_path` varchar(255) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` text DEFAULT NULL,\\n  `sql_code` text DEFAULT NULL,\\n  `data_type` varchar(255) DEFAULT NULL,\\n  `category_type` varchar(255) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL,\\n  `relevance_units` float DEFAULT NULL,\\n  `concept_drift_units` float DEFAULT NULL,\\n  `weighted_relevance_units` float DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Revista Web K P con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_WebKP', 'CREATE TABLE `journal_WebKP` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de revista cc con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_ccs', 'CREATE TABLE `journal_ccs` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de revista financiera con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_financial', 'CREATE TABLE `journal_financial` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de diario ftp con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_ftp', 'CREATE TABLE `journal_ftp` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de diario de las naciones con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_nations', 'CREATE TABLE `journal_nations` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Revista Sakila con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_sakila', 'CREATE TABLE `journal_sakila` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de revista mundial con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón, código sql, objetivo, relevancia, desviación del concepto, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado",
      "output": "('journal_world', 'CREATE TABLE `journal_world` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) NOT NULL,\\n  `start_time` datetime NOT NULL,\\n  `run_time` float NOT NULL,\\n  `predictor_name` varchar(255) NOT NULL,\\n  `predictor_long_name` varchar(255) NOT NULL,\\n  `table_name` varchar(255) NOT NULL,\\n  `column_list` varchar(255) NOT NULL,\\n  `propagation_path` varchar(255) NOT NULL,\\n  `propagation_depth` int(11) NOT NULL,\\n  `date_constrain` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(255) NOT NULL,\\n  `pattern_name` varchar(255) NOT NULL,\\n  `pattern_author` varchar(255) NOT NULL,\\n  `pattern_code` text NOT NULL,\\n  `sql_code` text NOT NULL,\\n  `target` varchar(255) NOT NULL,\\n  `relevance` float NOT NULL,\\n  `concept_drift` text DEFAULT NULL,\\n  `qc_row_count` int(11) NOT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) NOT NULL,\\n  `is_duplicate` int(11) NOT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de datos con las columnas de, clase, forma del sombrero, superficie del sombrero, color del sombrero, magulladuras, olor, inserción de las branquias, espacio entre las branquias, tamaño de las branquias, color de las branquias, forma del tallo, raíz del tallo, superficie del tallo sobre el anillo, superficie del tallo debajo del anillo, tipo de velo, color del velo , número de anillo, tipo de anillo, color de impresión de esporas, población, hábitat",
      "output": "('data', 'CREATE TABLE `data` (\\n  `class` varchar(255) DEFAULT NULL  `cap-shape` varchar(255) DEFAULT NULL,\\n  `cap-surface` varchar(255) DEFAULT NULL,\\n  `cap-color` varchar(255) DEFAULT NULL,\\n  `bruises?` varchar(255) DEFAULT NULL,\\n  `odor` varchar(255) DEFAULT NULL,\\n  `gill-atachment` varchar(255) DEFAULT NULL,\\n  `gill-spacing` varchar(255) DEFAULT NULL,\\n  `gill-size` varchar(255) DEFAULT NULL,\\n  `gill-color` varchar(255) DEFAULT NULL,\\n  `stalk-shape` varchar(255) DEFAULT NULL,\\n  `stalk-root` varchar(255) DEFAULT NULL,\\n  `stalk-surface-above-ring` varchar(255) DEFAULT NULL,\\n  `stalk-surface-below-ring` varchar(255) DEFAULT NULL,\\n  `veil-type` varchar(255) DEFAULT NULL,\\n  `veil-color` varchar(255) DEFAULT NULL,\\n  `ring-number` varchar(255) DEFAULT NULL,\\n  `ring-type` varchar(255) DEFAULT NULL,\\n  `spore-print-color` varchar(255) DEFAULT NULL,\\n  `population` varchar(255) DEFAULT NULL,\\n  `habitat` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de prueba con las columnas de, clase, forma del sombrero, superficie del sombrero, color del sombrero, magulladuras, olor, inserción de las branquias, espacio entre las branquias, tamaño de las branquias, color de las branquias, forma del tallo, raíz del tallo, superficie del tallo sobre el anillo, superficie del tallo debajo del anillo, tipo de velo, color del velo , número de anillo, tipo de anillo, color de impresión de esporas, población, hábitat",
      "output": "('test', 'CREATE TABLE `test` (\\n  `class` varchar(255) DEFAULT NULL  `cap-shape` varchar(255) DEFAULT NULL,\\n  `cap-surface` varchar(255) DEFAULT NULL,\\n  `cap-color` varchar(255) DEFAULT NULL,\\n  `bruises?` varchar(255) DEFAULT NULL,\\n  `odor` varchar(255) DEFAULT NULL,\\n  `gill-atachment` varchar(255) DEFAULT NULL,\\n  `gill-spacing` varchar(255) DEFAULT NULL,\\n  `gill-size` varchar(255) DEFAULT NULL,\\n  `gill-color` varchar(255) DEFAULT NULL,\\n  `stalk-shape` varchar(255) DEFAULT NULL,\\n  `stalk-root` varchar(255) DEFAULT NULL,\\n  `stalk-surface-above-ring` varchar(255) DEFAULT NULL,\\n  `stalk-surface-below-ring` varchar(255) DEFAULT NULL,\\n  `veil-type` varchar(255) DEFAULT NULL,\\n  `veil-color` varchar(255) DEFAULT NULL,\\n  `ring-number` varchar(255) DEFAULT NULL,\\n  `ring-type` varchar(255) DEFAULT NULL,\\n  `spore-print-color` varchar(255) DEFAULT NULL,\\n  `population` varchar(255) DEFAULT NULL,\\n  `habitat` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de conjunto de datos con las columnas de, X, Y, Artificial",
      "output": "('dataset1', 'CREATE TABLE `dataset1` (\\n  `X` varchar(255) DEFAULT NULL  `Y` varchar(255) DEFAULT NULL,\\n  `Artificial` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de conjunto de datos con las columnas de, X, Y, Extraño",
      "output": "('dataset2', 'CREATE TABLE `dataset2` (\\n  `X` double DEFAULT NULL  `Y` double DEFAULT NULL,\\n  `Stranger` varchar(5) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de correo electrónico v con las columnas de, ID, recuento de enlaces, recuento de enlaces de ip, recuento de variaciones de clics, cuenta de término, verificación de término, miembro de término, signo de término, término libre, suspensión de término, recuento de palabras, etiqueta",
      "output": "('email_v2', 'CREATE TABLE `email_v2` (\\n  `Id` int(11) NOT NULL AUTO_INCREMENT  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `wordCount` int(11) DEFAULT NULL,\\n  `label` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=1034 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de jamón hillary con las columnas de, etiqueta, recuento de enlaces, recuento de enlaces IP, recuento de variaciones de clics, cuenta de término, verificación de término, miembro de término, signo de término, término libre, suspensión de término, conteo de palabras, mediana de longitud de palabras, conteo de puntuación, conteo de dígitos, todos los dominios incluidos en la lista blanca, identificación",
      "output": "('hillary_ham', 'CREATE TABLE `hillary_ham` (\\n  `label` int(11) DEFAULT NULL  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `word_count` int(11) DEFAULT NULL,\\n  `words_length_median` int(11) DEFAULT NULL,\\n  `punctuation_count` int(11) DEFAULT NULL,\\n  `digits_count` int(11) DEFAULT NULL,\\n  `all_domains_whitelisted` int(11) DEFAULT NULL,\\n  `id` int(11) NOT NULL AUTO_INCREMENT,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=5636 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de jamón hillary con las columnas de, etiqueta, conteo de enlaces, conteo de ip Link, subdominios máx., conteo de variación de clics, cuenta de término, verificación de término, miembro de término, signo de término, libre de término, suspensión de término, acceso de término, banco de término, crédito de término, identidad de término, inconveniente de término, información de término, límite de término, registro de término, hora de término, contraseña de término, término recientemente, riesgo de término, término social, seguridad de término, servicio de término, conteo de palabras, mediana de longitud de palabras, conteo de puntuación, conteo de dígitos, conteo de formularios, tiene javascript, todos dominios incluidos en la lista blanca, ID de mensaje",
      "output": "('hillary_ham2', 'CREATE TABLE `hillary_ham2` (\\n  `label` int(11) DEFAULT NULL  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `subdomains_max` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `term_access` int(11) DEFAULT NULL,\\n  `term_bank` int(11) DEFAULT NULL,\\n  `term_credit` int(11) DEFAULT NULL,\\n  `term_identity` int(11) DEFAULT NULL,\\n  `term_inconvenience` int(11) DEFAULT NULL,\\n  `term_information` int(11) DEFAULT NULL,\\n  `term_limit` int(11) DEFAULT NULL,\\n  `term_log` int(11) DEFAULT NULL,\\n  `term_hour` int(11) DEFAULT NULL,\\n  `term_password` int(11) DEFAULT NULL,\\n  `term_recently` int(11) DEFAULT NULL,\\n  `term_risk` int(11) DEFAULT NULL,\\n  `term_social` int(11) DEFAULT NULL,\\n  `term_security` int(11) DEFAULT NULL,\\n  `term_service` int(11) DEFAULT NULL,\\n  `word_count` int(11) DEFAULT NULL,\\n  `words_length_median` int(11) DEFAULT NULL,\\n  `punctuation_count` int(11) DEFAULT NULL,\\n  `digits_count` int(11) DEFAULT NULL,\\n  `form_count` int(11) DEFAULT NULL,\\n  `has_javascript` int(11) DEFAULT NULL,\\n  `all_domains_whitelisted` int(11) DEFAULT NULL,\\n  `message_id` text COLLATE utf8_bin DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de jose phishing con las columnas de, etiqueta, recuento de enlaces, recuento de enlaces IP, recuento de variaciones de clics, cuenta de término, verificación de término, miembro de término, signo de término, término libre, suspensión de término, conteo de palabras, mediana de longitud de palabras, conteo de puntuación, conteo de dígitos, todos los dominios incluidos en la lista blanca, identificación",
      "output": "('jose_phish', 'CREATE TABLE `jose_phish` (\\n  `label` int(11) DEFAULT NULL  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `word_count` int(11) DEFAULT NULL,\\n  `words_length_median` int(11) DEFAULT NULL,\\n  `punctuation_count` int(11) DEFAULT NULL,\\n  `digits_count` int(11) DEFAULT NULL,\\n  `all_domains_whitelisted` int(11) DEFAULT NULL,\\n  `id` int(11) NOT NULL AUTO_INCREMENT,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=8229 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de jose phishing con las columnas de, etiqueta, conteo de enlaces, conteo de ip Link, subdominios máx., conteo de variación de clics, cuenta de término, verificación de término, miembro de término, signo de término, libre de término, suspensión de término, acceso de término, banco de término, crédito de término, identidad de término, inconveniente de término, información de término, límite de término, registro de término, hora de término, contraseña de término, término recientemente, riesgo de término, término social, seguridad de término, servicio de término, conteo de palabras, mediana de longitud de palabras, conteo de puntuación, conteo de dígitos, conteo de formularios, tiene javascript, todos dominios incluidos en la lista blanca, ID de mensaje",
      "output": "('jose_phish2', 'CREATE TABLE `jose_phish2` (\\n  `label` int(11) DEFAULT NULL  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `subdomains_max` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `term_access` int(11) DEFAULT NULL,\\n  `term_bank` int(11) DEFAULT NULL,\\n  `term_credit` int(11) DEFAULT NULL,\\n  `term_identity` int(11) DEFAULT NULL,\\n  `term_inconvenience` int(11) DEFAULT NULL,\\n  `term_information` int(11) DEFAULT NULL,\\n  `term_limit` int(11) DEFAULT NULL,\\n  `term_log` int(11) DEFAULT NULL,\\n  `term_hour` int(11) DEFAULT NULL,\\n  `term_password` int(11) DEFAULT NULL,\\n  `term_recently` int(11) DEFAULT NULL,\\n  `term_risk` int(11) DEFAULT NULL,\\n  `term_social` int(11) DEFAULT NULL,\\n  `term_security` int(11) DEFAULT NULL,\\n  `term_service` int(11) DEFAULT NULL,\\n  `word_count` int(11) DEFAULT NULL,\\n  `words_length_median` int(11) DEFAULT NULL,\\n  `punctuation_count` int(11) DEFAULT NULL,\\n  `digits_count` int(11) DEFAULT NULL,\\n  `form_count` int(11) DEFAULT NULL,\\n  `has_javascript` int(11) DEFAULT NULL,\\n  `all_domains_whitelisted` int(11) DEFAULT NULL,\\n  `message_id` text COLLATE utf8_bin DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bandeja de entrada personal con las columnas de, etiqueta, recuento de enlaces, recuento de enlaces IP, recuento de variaciones de clics, cuenta de término, verificación de término, miembro de término, signo de término, término libre, suspensión de término, conteo de palabras, mediana de longitud de palabras, conteo de puntuación, conteo de dígitos, todos los dominios incluidos en la lista blanca, identificación",
      "output": "('personalInbox_ham', 'CREATE TABLE `personalInbox_ham` (\\n  `label` int(11) DEFAULT NULL  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `word_count` int(11) DEFAULT NULL,\\n  `words_length_median` int(11) DEFAULT NULL,\\n  `punctuation_count` int(11) DEFAULT NULL,\\n  `digits_count` int(11) DEFAULT NULL,\\n  `all_domains_whitelisted` int(11) DEFAULT NULL,\\n  `id` int(11) NOT NULL AUTO_INCREMENT,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=599 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de bandeja de entrada personal con las columnas de, etiqueta, conteo de enlaces, conteo de ip Link, subdominios máx., conteo de variación de clics, cuenta de término, verificación de término, miembro de término, signo de término, libre de término, suspensión de término, acceso de término, banco de término, crédito de término, identidad de término, inconveniente de término, información de término, límite de término, registro de término, hora de término, contraseña de término, término recientemente, riesgo de término, término social, seguridad de término, servicio de término, conteo de palabras, mediana de longitud de palabras, conteo de puntuación, conteo de dígitos, conteo de formularios, tiene javascript, todos dominios incluidos en la lista blanca, ID de mensaje",
      "output": "('personalInbox_ham2', 'CREATE TABLE `personalInbox_ham2` (\\n  `label` int(11) DEFAULT NULL  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `subdomains_max` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `term_access` int(11) DEFAULT NULL,\\n  `term_bank` int(11) DEFAULT NULL,\\n  `term_credit` int(11) DEFAULT NULL,\\n  `term_identity` int(11) DEFAULT NULL,\\n  `term_inconvenience` int(11) DEFAULT NULL,\\n  `term_information` int(11) DEFAULT NULL,\\n  `term_limit` int(11) DEFAULT NULL,\\n  `term_log` int(11) DEFAULT NULL,\\n  `term_hour` int(11) DEFAULT NULL,\\n  `term_password` int(11) DEFAULT NULL,\\n  `term_recently` int(11) DEFAULT NULL,\\n  `term_risk` int(11) DEFAULT NULL,\\n  `term_social` int(11) DEFAULT NULL,\\n  `term_security` int(11) DEFAULT NULL,\\n  `term_service` int(11) DEFAULT NULL,\\n  `word_count` int(11) DEFAULT NULL,\\n  `words_length_median` int(11) DEFAULT NULL,\\n  `punctuation_count` int(11) DEFAULT NULL,\\n  `digits_count` int(11) DEFAULT NULL,\\n  `form_count` int(11) DEFAULT NULL,\\n  `has_javascript` int(11) DEFAULT NULL,\\n  `all_domains_whitelisted` int(11) DEFAULT NULL,\\n  `message_id` text COLLATE utf8_bin DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de jamón asesino de spam con las columnas de, etiqueta, recuento de enlaces, recuento de enlaces IP, recuento de variaciones de clics, cuenta de término, verificación de término, miembro de término, signo de término, término libre, suspensión de término, conteo de palabras, mediana de longitud de palabras, conteo de puntuación, conteo de dígitos, todos los dominios incluidos en la lista blanca, identificación",
      "output": "('spamAssassin_ham', 'CREATE TABLE `spamAssassin_ham` (\\n  `label` int(11) DEFAULT NULL  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `word_count` int(11) DEFAULT NULL,\\n  `words_length_median` int(11) DEFAULT NULL,\\n  `punctuation_count` int(11) DEFAULT NULL,\\n  `digits_count` int(11) DEFAULT NULL,\\n  `all_domains_whitelisted` int(11) DEFAULT NULL,\\n  `id` int(11) NOT NULL AUTO_INCREMENT,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=1448 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de jamón asesino de spam con las columnas de, etiqueta, conteo de enlaces, conteo de ip Link, subdominios máx., conteo de variación de clics, cuenta de término, verificación de término, miembro de término, signo de término, libre de término, suspensión de término, acceso de término, banco de término, crédito de término, identidad de término, inconveniente de término, información de término, límite de término, registro de término, hora de término, contraseña de término, término recientemente, riesgo de término, término social, seguridad de término, servicio de término, conteo de palabras, mediana de longitud de palabras, conteo de puntuación, conteo de dígitos, conteo de formularios, tiene javascript, todos dominios incluidos en la lista blanca, ID de mensaje",
      "output": "('spamAssassin_ham2', 'CREATE TABLE `spamAssassin_ham2` (\\n  `label` int(11) DEFAULT NULL  `link_count` int(11) DEFAULT NULL,\\n  `ipLink_count` int(11) DEFAULT NULL,\\n  `subdomains_max` int(11) DEFAULT NULL,\\n  `clickVariation_count` int(11) DEFAULT NULL,\\n  `term_account` int(11) DEFAULT NULL,\\n  `term_verify` int(11) DEFAULT NULL,\\n  `term_member` int(11) DEFAULT NULL,\\n  `term_sign` int(11) DEFAULT NULL,\\n  `term_free` int(11) DEFAULT NULL,\\n  `term_suspension` int(11) DEFAULT NULL,\\n  `term_access` int(11) DEFAULT NULL,\\n  `term_bank` int(11) DEFAULT NULL,\\n  `term_credit` int(11) DEFAULT NULL,\\n  `term_identity` int(11) DEFAULT NULL,\\n  `term_inconvenience` int(11) DEFAULT NULL,\\n  `term_information` int(11) DEFAULT NULL,\\n  `term_limit` int(11) DEFAULT NULL,\\n  `term_log` int(11) DEFAULT NULL,\\n  `term_hour` int(11) DEFAULT NULL,\\n  `term_password` int(11) DEFAULT NULL,\\n  `term_recently` int(11) DEFAULT NULL,\\n  `term_risk` int(11) DEFAULT NULL,\\n  `term_social` int(11) DEFAULT NULL,\\n  `term_security` int(11) DEFAULT NULL,\\n  `term_service` int(11) DEFAULT NULL,\\n  `word_count` int(11) DEFAULT NULL,\\n  `words_length_median` int(11) DEFAULT NULL,\\n  `punctuation_count` int(11) DEFAULT NULL,\\n  `digits_count` int(11) DEFAULT NULL,\\n  `form_count` int(11) DEFAULT NULL,\\n  `has_javascript` int(11) DEFAULT NULL,\\n  `all_domains_whitelisted` int(11) DEFAULT NULL,\\n  `message_id` text COLLATE utf8_bin DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de datos con las columnas de, Clase, Edad, Sexo, Sobrevivió",
      "output": "('data', 'CREATE TABLE `data` (\\n  `Class` varchar(255) DEFAULT NULL  `Age` varchar(255) DEFAULT NULL,\\n  `Sex` varchar(255) DEFAULT NULL,\\n  `Survived` varchar(255) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de departamentos con las columnas de, número de departamento, nombre del departamento",
      "output": "('departments', 'CREATE TABLE `departments` (\\n  `dept_no` char(4) NOT NULL  `dept_name` varchar(40) NOT NULL,\\n  PRIMARY KEY (`dept_no`),\\n  KEY `departments_dept_name` (`dept_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC')"
    },
    {
      "input": "Una tabla de jefe del departamento con las columnas de, emp no, dept no, desde la fecha, hasta la fecha",
      "output": "('dept_emp', 'CREATE TABLE `dept_emp` (\\n  `emp_no` int(11) NOT NULL  `dept_no` char(4) NOT NULL,\\n  `from_date` date NOT NULL,\\n  `to_date` date NOT NULL,\\n  PRIMARY KEY (`emp_no`,`dept_no`),\\n  KEY `dept_emp_dept_no` (`dept_no`),\\n  KEY `dept_emp_emp_no` (`emp_no`),\\n  CONSTRAINT `dept_emp_ibfk_1` FOREIGN KEY (`emp_no`) REFERENCES `employees` (`emp_no`),\\n  CONSTRAINT `dept_emp_ibfk_2` FOREIGN KEY (`dept_no`) REFERENCES `departments` (`dept_no`),\\n  CONSTRAINT `dept_emp_ibfk_3` FOREIGN KEY (`dept_no`) REFERENCES `departments` (`dept_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de gerente de departamento con las columnas de, nro. depto., nro. emp., desde la fecha, hasta la fecha",
      "output": "('dept_manager', 'CREATE TABLE `dept_manager` (\\n  `dept_no` char(4) NOT NULL  `emp_no` int(11) NOT NULL,\\n  `from_date` date NOT NULL,\\n  `to_date` date NOT NULL,\\n  PRIMARY KEY (`emp_no`,`dept_no`),\\n  KEY `dept_manager_dept_no` (`dept_no`),\\n  KEY `dept_manager_emp_no` (`emp_no`),\\n  CONSTRAINT `dept_manager_ibfk_1` FOREIGN KEY (`emp_no`) REFERENCES `employees` (`emp_no`),\\n  CONSTRAINT `dept_manager_ibfk_2` FOREIGN KEY (`dept_no`) REFERENCES `departments` (`dept_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de empleados con las columnas de, emp no, fecha de nacimiento, nombre, apellido, sexo, fecha de contratación",
      "output": "('employees', \"CREATE TABLE `employees` (\\n  `emp_no` int(11) NOT NULL  `birth_date` date NOT NULL,\\n  `first_name` varchar(14) NOT NULL,\\n  `last_name` varchar(16) NOT NULL,\\n  `gender` enum('M','F') NOT NULL,\\n  `hire_date` date NOT NULL,\\n  PRIMARY KEY (`emp_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC\")"
    },
    {
      "input": "Una tabla de sueldos con las columnas de, emp no, salario, desde la fecha, hasta la fecha",
      "output": "('salaries', 'CREATE TABLE `salaries` (\\n  `emp_no` int(11) NOT NULL  `salary` int(11) NOT NULL,\\n  `from_date` date NOT NULL,\\n  `to_date` date NOT NULL,\\n  PRIMARY KEY (`emp_no`,`from_date`),\\n  KEY `salaries_emp_no` (`emp_no`),\\n  CONSTRAINT `salaries_ibfk_1` FOREIGN KEY (`emp_no`) REFERENCES `employees` (`emp_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de títulos con las columnas de, emp no, título, desde la fecha, hasta la fecha",
      "output": "('titles', 'CREATE TABLE `titles` (\\n  `emp_no` int(11) NOT NULL  `title` varchar(50) NOT NULL,\\n  `from_date` date NOT NULL,\\n  `to_date` date DEFAULT NULL,\\n  PRIMARY KEY (`emp_no`,`title`,`from_date`),\\n  KEY `titles_emp_no` (`emp_no`),\\n  CONSTRAINT `titles_ibfk_1` FOREIGN KEY (`emp_no`) REFERENCES `employees` (`emp_no`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC')"
    },
    {
      "input": "Una tabla de cuenta con las columnas de, ID de cuenta, ID de distrito, frecuencia, fecha",
      "output": "('account', 'CREATE TABLE `account` (\\n  `account_id` int(11) NOT NULL DEFAULT 0  `district_id` int(11) NOT NULL DEFAULT 0,\\n  `frequency` varchar(18) NOT NULL,\\n  `date` date NOT NULL,\\n  PRIMARY KEY (`account_id`),\\n  KEY `district_id` (`district_id`),\\n  CONSTRAINT `account_ibfk_1` FOREIGN KEY (`district_id`) REFERENCES `district` (`district_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de tarjeta con las columnas de, id de tarjeta, id de disp, tipo, emitido",
      "output": "('card', 'CREATE TABLE `card` (\\n  `card_id` int(11) NOT NULL DEFAULT 0  `disp_id` int(11) NOT NULL,\\n  `type` varchar(7) NOT NULL,\\n  `issued` date NOT NULL,\\n  PRIMARY KEY (`card_id`),\\n  KEY `disp_id` (`disp_id`),\\n  CONSTRAINT `card_ibfk_1` FOREIGN KEY (`disp_id`) REFERENCES `disp` (`disp_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, sexo, fecha de nacimiento, ID de distrito",
      "output": "('client', 'CREATE TABLE `client` (\\n  `client_id` int(11) NOT NULL  `gender` varchar(1) NOT NULL,\\n  `birth_date` date NOT NULL,\\n  `district_id` int(11) NOT NULL,\\n  PRIMARY KEY (`client_id`),\\n  KEY `district_id` (`district_id`),\\n  CONSTRAINT `client_ibfk_1` FOREIGN KEY (`district_id`) REFERENCES `district` (`district_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de disipar con las columnas de, disp id, id de cliente, id de cuenta, tipo",
      "output": "('disp', 'CREATE TABLE `disp` (\\n  `disp_id` int(11) NOT NULL  `client_id` int(11) NOT NULL,\\n  `account_id` int(11) NOT NULL,\\n  `type` varchar(9) NOT NULL,\\n  PRIMARY KEY (`disp_id`),\\n  KEY `client_id` (`client_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `disp_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `disp_ibfk_2` FOREIGN KEY (`client_id`) REFERENCES `client` (`client_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de distrito con las columnas de, ID de distrito, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A",
      "output": "('district', 'CREATE TABLE `district` (\\n  `district_id` int(11) NOT NULL DEFAULT 0  `A2` varchar(19) NOT NULL,\\n  `A3` varchar(15) NOT NULL,\\n  `A4` int(20) NOT NULL,\\n  `A5` int(11) NOT NULL,\\n  `A6` int(11) NOT NULL,\\n  `A7` int(11) NOT NULL,\\n  `A8` int(6) NOT NULL,\\n  `A9` int(11) NOT NULL,\\n  `A10` decimal(4,1) NOT NULL,\\n  `A11` int(11) NOT NULL,\\n  `A12` decimal(4,1) DEFAULT NULL,\\n  `A13` decimal(3,2) NOT NULL,\\n  `A14` int(11) NOT NULL,\\n  `A15` int(5) DEFAULT NULL,\\n  `A16` int(11) NOT NULL,\\n  PRIMARY KEY (`district_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de préstamo con las columnas de, ID de préstamo, ID de cuenta, fecha, cantidad, duración, pagos, estado",
      "output": "('loan', 'CREATE TABLE `loan` (\\n  `loan_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) NOT NULL,\\n  `date` date NOT NULL,\\n  `amount` int(11) NOT NULL,\\n  `duration` int(11) NOT NULL,\\n  `payments` decimal(6,2) NOT NULL,\\n  `status` varchar(1) NOT NULL,\\n  PRIMARY KEY (`loan_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `loan_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ordenar con las columnas de, ID de pedido, ID de cuenta, banco a, cuenta a, monto, símbolo k",
      "output": "('order', 'CREATE TABLE `order` (\\n  `order_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) NOT NULL,\\n  `bank_to` varchar(2) NOT NULL,\\n  `account_to` int(11) NOT NULL,\\n  `amount` decimal(6,1) NOT NULL,\\n  `k_symbol` varchar(8) NOT NULL,\\n  PRIMARY KEY (`order_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `order_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de trans con las columnas de, identificación trans, identificación de cuenta, fecha, tipo, operación, cantidad, saldo, símbolo k, banco, cuenta",
      "output": "('trans', 'CREATE TABLE `trans` (\\n  `trans_id` int(11) NOT NULL DEFAULT 0  `account_id` int(11) NOT NULL DEFAULT 0,\\n  `date` date NOT NULL,\\n  `type` varchar(6) NOT NULL,\\n  `operation` varchar(14) DEFAULT NULL,\\n  `amount` int(11) NOT NULL,\\n  `balance` int(11) NOT NULL,\\n  `k_symbol` varchar(11) DEFAULT NULL,\\n  `bank` varchar(2) DEFAULT NULL,\\n  `account` int(11) unsigned DEFAULT NULL,\\n  PRIMARY KEY (`trans_id`),\\n  KEY `account_id` (`account_id`),\\n  CONSTRAINT `trans_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de producto con las columnas de, ID de sesión, orden de secuencia, categoría a, categoría b, categoría c, categoría d",
      "output": "('product', 'CREATE TABLE `product` (\\n  `session_id` char(6) NOT NULL  `sequence_order` int(11) NOT NULL,\\n  `category_a` char(6) DEFAULT NULL,\\n  `category_b` char(6) DEFAULT NULL,\\n  `category_c` char(6) DEFAULT NULL,\\n  `category_d` char(6) DEFAULT NULL,\\n  PRIMARY KEY (`session_id`,`sequence_order`),\\n  KEY `session_id` (`session_id`),\\n  CONSTRAINT `product_ibfk_1` FOREIGN KEY (`session_id`) REFERENCES `session` (`session_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de sesión con las columnas de, ID de sesión, hora de inicio, hora de finalización, género",
      "output": "('session', 'CREATE TABLE `session` (\\n  `session_id` char(6) NOT NULL  `start_time` datetime DEFAULT NULL,\\n  `end_time` datetime DEFAULT NULL,\\n  `gender` char(6) DEFAULT NULL,\\n  PRIMARY KEY (`session_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de oferta schuze con las columnas de, punto de identificación, identificación de reunión, impresión de identificación, tipo de identificación, punto, nombre completo, nombre completo, nota, estado del punto de identificación, invitación, rj, nota, tipo de punto, identificación SD, abreviatura",
      "output": "('bod_schuze', 'CREATE TABLE `bod_schuze` (\\n  `id_bod` int(11) NOT NULL  `id_schuze` int(11) NOT NULL,\\n  `id_tisk` varchar(255) DEFAULT NULL,\\n  `id_typ` varchar(255) DEFAULT NULL,\\n  `bod` int(11) NOT NULL,\\n  `uplny_naz` text DEFAULT NULL,\\n  `uplny_kon` varchar(255) DEFAULT NULL,\\n  `poznamka` varchar(255) DEFAULT NULL,\\n  `id_bod_stav` int(11) NOT NULL,\\n  `pozvanka` varchar(255) DEFAULT NULL,\\n  `rj` varchar(255) DEFAULT NULL,\\n  `pozn2` varchar(255) DEFAULT NULL,\\n  `druh_bodu` varchar(255) DEFAULT NULL,\\n  `id_sd` varchar(255) DEFAULT NULL,\\n  `zkratka` varchar(255) DEFAULT NULL,\\n  KEY `bod_schuze_id_bod` (`id_bod`),\\n  KEY `bod_schuze_id_bod_stav` (`id_bod_stav`),\\n  KEY `bod_schuze_id_schuze` (`id_schuze`),\\n  CONSTRAINT `bod_schuze_ibfk_1` FOREIGN KEY (`id_schuze`) REFERENCES `schuze` (`id_schuze`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `bod_schuze_ibfk_2` FOREIGN KEY (`id_bod_stav`) REFERENCES `bod_stav` (`id_bod_stav`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ese personal con las columnas de, estado del punto de identificación, descripción",
      "output": "('bod_stav', 'CREATE TABLE `bod_stav` (\\n  `id_bod_stav` int(11) NOT NULL  `popis` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id_bod_stav`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de función con las columnas de, ID de función, órgano de ID, tipo de función de ID, nombre de función cz, prioridad",
      "output": "('funkce', 'CREATE TABLE `funkce` (\\n  `id_funkce` int(11) NOT NULL  `id_organ` int(11) DEFAULT NULL,\\n  `id_typ_funkce` int(11) DEFAULT NULL,\\n  `nazev_funkce_cz` text DEFAULT NULL,\\n  `priorita` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id_funkce`),\\n  KEY `funkce_id_organ` (`id_organ`),\\n  KEY `funkce_id_typ_funkce` (`id_typ_funkce`),\\n  CONSTRAINT `funkce_ibfk_1` FOREIGN KEY (`id_organ`) REFERENCES `organy` (`id_organ`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `funkce_ibfk_2` FOREIGN KEY (`id_typ_funkce`) REFERENCES `typ_funkce` (`id_typ_funkce`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hl comprobar con las columnas de, id votos, giro, modo, id h, id h",
      "output": "('hl_check', 'CREATE TABLE `hl_check` (\\n  `id_hlasovani` int(11) DEFAULT NULL  `turn` int(11) DEFAULT NULL,\\n  `mode` int(11) DEFAULT NULL,\\n  `id_h2` varchar(255) DEFAULT NULL,\\n  `id_h3` varchar(255) DEFAULT NULL,\\n  KEY `hl_check_id_hlasovani` (`id_hlasovani`),\\n  CONSTRAINT `hl_check_ibfk_1` FOREIGN KEY (`id_hlasovani`) REFERENCES `hl_hlasovani` (`id_hlasovani`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hl voto con las columnas de, voto de identificación, cuerpo de identificación, reunión, número, punto, fecha, hora, a favor, en contra, se abstuvo, no votó, registrado, quórum, tipo de voto, resultado, nombre largo, nombre corto",
      "output": "('hl_hlasovani', 'CREATE TABLE `hl_hlasovani` (\\n  `id_hlasovani` int(11) NOT NULL  `id_organ` int(11) DEFAULT NULL,\\n  `schuze` int(11) DEFAULT NULL,\\n  `cislo` int(11) DEFAULT NULL,\\n  `bod` int(11) DEFAULT NULL,\\n  `datum` date DEFAULT NULL,\\n  `cas` time DEFAULT NULL,\\n  `pro` int(11) DEFAULT NULL,\\n  `proti` int(11) DEFAULT NULL,\\n  `zdrzel` int(11) DEFAULT NULL,\\n  `nehlasoval` int(11) DEFAULT NULL,\\n  `prihlaseno` int(11) DEFAULT NULL,\\n  `kvorum` int(11) DEFAULT NULL,\\n  `druh_hlasovani` varchar(255) DEFAULT NULL,\\n  `vysledek` varchar(255) DEFAULT NULL,\\n  `nazev_dlouhy` text DEFAULT NULL,\\n  `nazev_kratky` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id_hlasovani`),\\n  KEY `hl_hlasovani_id_organ` (`id_organ`),\\n  CONSTRAINT `hl_hlasovani_ibfk_1` FOREIGN KEY (`id_organ`) REFERENCES `organy` (`id_organ`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hl miembro del parlamento con las columnas de, miembro de identificación, voto de identificación, resultado",
      "output": "('hl_poslanec', 'CREATE TABLE `hl_poslanec` (\\n  `id_poslanec` int(11) NOT NULL  `id_hlasovani` int(11) NOT NULL,\\n  `vysledek` varchar(255) DEFAULT NULL,\\n  KEY `hl_poslanec_id_poslanec` (`id_poslanec`),\\n  CONSTRAINT `hl_poslanec_ibfk_1` FOREIGN KEY (`id_poslanec`) REFERENCES `poslanec` (`id_poslanec`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hl bonos con las columnas de, id votar, girar, escribir",
      "output": "('hl_vazby', 'CREATE TABLE `hl_vazby` (\\n  `id_hlasovani` int(11) DEFAULT NULL  `turn` int(11) DEFAULT NULL,\\n  `typ` int(11) DEFAULT NULL,\\n  KEY `hl_vazby_id_hlasovani` (`id_hlasovani`),\\n  CONSTRAINT `hl_vazby_ibfk_1` FOREIGN KEY (`id_hlasovani`) REFERENCES `hl_hlasovani` (`id_hlasovani`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de enviado con las columnas de, voto de identificación, persona de identificación, moda",
      "output": "('hl_zposlanec', 'CREATE TABLE `hl_zposlanec` (\\n  `id_hlasovani` int(11) DEFAULT NULL  `id_osoba` int(11) DEFAULT NULL,\\n  `mode` int(11) DEFAULT NULL,\\n  KEY `hl_zposlanec_id_hlasovani` (`id_hlasovani`),\\n  KEY `hl_zposlanec_id_osoba` (`id_osoba`),\\n  CONSTRAINT `hl_zposlanec_ibfk_1` FOREIGN KEY (`id_hlasovani`) REFERENCES `hl_hlasovani` (`id_hlasovani`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `hl_zposlanec_ibfk_2` FOREIGN KEY (`id_osoba`) REFERENCES `osoby` (`id_osoba`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de excusas con las columnas de, id organ, id diputado, den, from, to",
      "output": "('omluvy', 'CREATE TABLE `omluvy` (\\n  `id_organ` int(11) NOT NULL  `id_poslanec` int(11) NOT NULL,\\n  `den` varchar(255) NOT NULL,\\n  `od` varchar(255) DEFAULT NULL,\\n  `do` varchar(255) DEFAULT NULL,\\n  KEY `omluvy_id_organ` (`id_organ`),\\n  KEY `omluvy_id_poslanec` (`id_poslanec`),\\n  CONSTRAINT `omluvy_ibfk_1` FOREIGN KEY (`id_organ`) REFERENCES `organy` (`id_organ`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `omluvy_ibfk_2` FOREIGN KEY (`id_poslanec`) REFERENCES `poslanec` (`id_poslanec`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de organos con las columnas de, órgano de identificación, órgano de identificación de órgano, tipo de órgano de identificación, abreviatura, nombre de órgano cz, nombre de órgano en, de órgano, a órgano, prioridad, base de órgano cl",
      "output": "('organy', 'CREATE TABLE `organy` (\\n  `id_organ` int(11) NOT NULL  `organ_id_organ` int(11) DEFAULT NULL,\\n  `id_typ_organu` int(11) DEFAULT NULL,\\n  `zkratka` varchar(255) DEFAULT NULL,\\n  `nazev_organu_cz` text DEFAULT NULL,\\n  `nazev_organu_en` text DEFAULT NULL,\\n  `od_organ` varchar(255) DEFAULT NULL,\\n  `do_organ` varchar(255) DEFAULT NULL,\\n  `priorita` varchar(255) DEFAULT NULL,\\n  `cl_organ_base` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id_organ`),\\n  KEY `organy_id_typ_organu` (`id_typ_organu`),\\n  KEY `organy_organ_id_organ` (`organ_id_organ`),\\n  CONSTRAINT `organy_ibfk_1` FOREIGN KEY (`id_typ_organu`) REFERENCES `typ_organu` (`id_typ_org`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de personas con las columnas de, id persona, antes, nombre, apellido, para, nacimiento, sexo, cambio, muerte",
      "output": "('osoby', 'CREATE TABLE `osoby` (\\n  `id_osoba` int(11) NOT NULL  `pred` varchar(255) DEFAULT NULL,\\n  `jmeno` varchar(255) DEFAULT NULL,\\n  `prijmeni` varchar(255) DEFAULT NULL,\\n  `za` varchar(255) DEFAULT NULL,\\n  `narozeni` varchar(255) DEFAULT NULL,\\n  `pohlavi` varchar(255) DEFAULT NULL,\\n  `zmena` varchar(255) DEFAULT NULL,\\n  `umrti` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id_osoba`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de pkgps con las columnas de, id diputado, dirección, sirka, delka",
      "output": "('pkgps', 'CREATE TABLE `pkgps` (\\n  `id_poslanec` int(11) DEFAULT NULL  `adresa` varchar(255) DEFAULT NULL,\\n  `sirka` float DEFAULT NULL,\\n  `delka` float DEFAULT NULL,\\n  KEY `pkgps_id_poslanec` (`id_poslanec`),\\n  CONSTRAINT `pkgps_ibfk_1` FOREIGN KEY (`id_poslanec`) REFERENCES `poslanec` (`id_poslanec`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Miembro del Parlamento con las columnas de, id diputado, id persona, id fin, id candidato, id periodos, web, calles, obec, psc, email, teléfono, fax, teléfono psp, facebook, foto",
      "output": "('poslanec', 'CREATE TABLE `poslanec` (\\n  `id_poslanec` int(11) NOT NULL  `id_osoba` int(11) DEFAULT NULL,\\n  `id_kraj` int(11) DEFAULT NULL,\\n  `id_kandidatka` int(11) DEFAULT NULL,\\n  `id_obdobi` int(11) DEFAULT NULL,\\n  `web` varchar(255) DEFAULT NULL,\\n  `ulice` varchar(255) DEFAULT NULL,\\n  `obec` varchar(255) DEFAULT NULL,\\n  `psc` varchar(255) DEFAULT NULL,\\n  `email` varchar(255) DEFAULT NULL,\\n  `telefon` varchar(255) DEFAULT NULL,\\n  `fax` varchar(255) DEFAULT NULL,\\n  `psp_telefon` varchar(255) DEFAULT NULL,\\n  `facebook` varchar(255) DEFAULT NULL,\\n  `foto` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id_poslanec`),\\n  KEY `poslanec_id_osoba` (`id_osoba`),\\n  CONSTRAINT `poslanec_ibfk_1` FOREIGN KEY (`id_osoba`) REFERENCES `osoby` (`id_osoba`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tímido con las columnas de, ID de la reunión, ID de la reunión, reunión, de la reunión a la reunión, actualizar",
      "output": "('schuze', 'CREATE TABLE `schuze` (\\n  `id_schuze` int(11) NOT NULL  `id_organ` int(11) DEFAULT NULL,\\n  `schuze` int(11) DEFAULT NULL,\\n  `od_schuze` varchar(255) DEFAULT NULL,\\n  `do_schuze` varchar(255) DEFAULT NULL,\\n  `aktualizace` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id_schuze`),\\n  KEY `schuze_id_organ` (`id_organ`),\\n  CONSTRAINT `schuze_ibfk_1` FOREIGN KEY (`id_organ`) REFERENCES `organy` (`id_organ`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de condición de reunión con las columnas de, ID de reunión, estado, tipo, texto dt, texto st, línea tm",
      "output": "('schuze_stav', 'CREATE TABLE `schuze_stav` (\\n  `id_schuze` int(11) DEFAULT NULL  `stav` int(11) DEFAULT NULL,\\n  `typ` varchar(255) DEFAULT NULL,\\n  `text_dt` varchar(255) DEFAULT NULL,\\n  `text_st` varchar(255) DEFAULT NULL,\\n  `tm_line` varchar(255) DEFAULT NULL,\\n  KEY `schuze_stav_id_schuze` (`id_schuze`),\\n  CONSTRAINT `schuze_stav_ibfk_1` FOREIGN KEY (`id_schuze`) REFERENCES `schuze` (`id_schuze`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipo de función con las columnas de, id tipo de función, id tipo org, tipo de función cz, tipo de función en, prioridad, tipo de función general",
      "output": "('typ_funkce', 'CREATE TABLE `typ_funkce` (\\n  `id_typ_funkce` int(11) NOT NULL  `id_typ_org` int(11) DEFAULT NULL,\\n  `typ_funkce_cz` varchar(255) DEFAULT NULL,\\n  `typ_funkce_en` varchar(255) DEFAULT NULL,\\n  `priorita` int(11) DEFAULT NULL,\\n  `typ_funkce_obecny` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id_typ_funkce`),\\n  KEY `typ_funkce_id_typ_org` (`id_typ_org`),\\n  CONSTRAINT `typ_funkce_ibfk_1` FOREIGN KEY (`id_typ_org`) REFERENCES `typ_organu` (`id_typ_org`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tipo de cuerpo con las columnas de, id tipo org, tipo id tipo org, nombre tipo org cz, nombre tipo org en, tipo org general, prioridad",
      "output": "('typ_organu', 'CREATE TABLE `typ_organu` (\\n  `id_typ_org` int(11) NOT NULL  `typ_id_typ_org` varchar(255) DEFAULT NULL,\\n  `nazev_typ_org_cz` varchar(255) DEFAULT NULL,\\n  `nazev_typ_org_en` varchar(255) DEFAULT NULL,\\n  `typ_org_obecny` varchar(255) DEFAULT NULL,\\n  `priorita` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id_typ_org`),\\n  KEY `typ_organu_typ_id_typ_org` (`typ_id_typ_org`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de infectado con las columnas de, id persona, id de, función cl, de o, a o, de f, a f",
      "output": "('zarazeni', 'CREATE TABLE `zarazeni` (\\n  `id_osoba` int(11) DEFAULT NULL  `id_of` int(11) DEFAULT NULL,\\n  `cl_funkce` int(11) DEFAULT NULL,\\n  `od_o` varchar(255) DEFAULT NULL,\\n  `do_o` varchar(255) DEFAULT NULL,\\n  `od_f` varchar(255) DEFAULT NULL,\\n  `do_f` varchar(255) DEFAULT NULL,\\n  KEY `zarazeni_id_osoba` (`id_osoba`),\\n  CONSTRAINT `zarazeni_ibfk_1` FOREIGN KEY (`id_osoba`) REFERENCES `osoby` (`id_osoba`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de confuso con las columnas de, voté",
      "output": "('zmatecne', 'CREATE TABLE `zmatecne` (\\n  `id_hlasovani` int(11) DEFAULT NULL  KEY `zmatecne_id_hlasovani` (`id_hlasovani`),\\n  CONSTRAINT `zmatecne_ibfk_1` FOREIGN KEY (`id_hlasovani`) REFERENCES `hl_hlasovani` (`id_hlasovani`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Clasificación con las columnas de, ID de gen, localización",
      "output": "('Classification', 'CREATE TABLE `Classification` (\\n  `GeneID` varchar(7) NOT NULL  `Localization` varchar(255) NOT NULL,\\n  PRIMARY KEY (`GeneID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de genes con las columnas de, ID de gen, esencial, clase, complejo, fenotipo, motivo, cromosoma, función, localización",
      "output": "('Genes', 'CREATE TABLE `Genes` (\\n  `GeneID` varchar(7) NOT NULL  `Essential` varchar(255) NOT NULL,\\n  `Class` varchar(100) NOT NULL,\\n  `Complex` varchar(255) DEFAULT NULL,\\n  `Phenotype` varchar(255) NOT NULL,\\n  `Motif` varchar(255) NOT NULL,\\n  `Chromosome` int(11) NOT NULL,\\n  `Function` varchar(100) NOT NULL,\\n  `Localization` varchar(255) NOT NULL,\\n  KEY `GeneID` (`GeneID`),\\n  CONSTRAINT `Genes_ibfk_1` FOREIGN KEY (`GeneID`) REFERENCES `Classification` (`GeneID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de Interacciones con las columnas de, ID de gen, ID de gen, tipo, corrección de expresión",
      "output": "('Interactions', 'CREATE TABLE `Interactions` (\\n  `GeneID1` varchar(7) NOT NULL  `GeneID2` varchar(7) NOT NULL,\\n  `Type` varchar(255) NOT NULL,\\n  `Expression_Corr` decimal(10,9) NOT NULL,\\n  PRIMARY KEY (`GeneID1`,`GeneID2`),\\n  KEY `GeneID2` (`GeneID2`),\\n  CONSTRAINT `Interactions_ibfk_1` FOREIGN KEY (`GeneID1`) REFERENCES `Classification` (`GeneID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `Interactions_ibfk_2` FOREIGN KEY (`GeneID2`) REFERENCES `Classification` (`GeneID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de actores con las columnas de, actorid, un género, una cualidad",
      "output": "('actors', \"CREATE TABLE `actors` (\\n  `actorid` mediumint(8) unsigned NOT NULL  `a_gender` enum('M','F') NOT NULL,\\n  `a_quality` int(2) NOT NULL,\\n  PRIMARY KEY (`actorid`),\\n  KEY `a_gender` (`a_gender`),\\n  KEY `a_quality` (`a_quality`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de directores con las columnas de, directorid, calidad d, ingresos medios",
      "output": "('directors', \"CREATE TABLE `directors` (\\n  `directorid` mediumint(8) unsigned NOT NULL  `d_quality` int(2) NOT NULL,\\n  `avg_revenue` int(11) NOT NULL,\\n  PRIMARY KEY (`directorid`),\\n  KEY `d_quality` (`d_quality`),\\n  KEY `avg_revenue` (`avg_revenue`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMMENT='version without Gender information of Directors.'\")"
    },
    {
      "input": "Una tabla de películas con las columnas de, movieid, año, es inglés, país, tiempo de ejecución",
      "output": "('movies', \"CREATE TABLE `movies` (\\n  `movieid` mediumint(8) unsigned NOT NULL DEFAULT 0  `year` int(11) NOT NULL,\\n  `isEnglish` enum('T','F') NOT NULL,\\n  `country` varchar(50) NOT NULL,\\n  `runningtime` int(11) NOT NULL,\\n  PRIMARY KEY (`movieid`),\\n  KEY `year` (`year`),\\n  KEY `isEnglish` (`isEnglish`),\\n  KEY `country` (`country`),\\n  KEY `runningtime` (`runningtime`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")"
    },
    {
      "input": "Una tabla de cineactores con las columnas de, movieid, actorid, número de reparto",
      "output": "('movies2actors', 'CREATE TABLE `movies2actors` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `actorid` mediumint(8) unsigned NOT NULL,\\n  `cast_num` int(11) NOT NULL,\\n  PRIMARY KEY (`movieid`,`actorid`),\\n  KEY `fk_m2a_mid_idx` (`movieid`),\\n  KEY `fk_m2a_aid_idx` (`actorid`),\\n  KEY `cast_num` (`cast_num`),\\n  CONSTRAINT `fk_m2a_aid` FOREIGN KEY (`actorid`) REFERENCES `actors` (`actorid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_m2a_mid` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de cinedirectores con las columnas de, movieid, directorid, género",
      "output": "('movies2directors', 'CREATE TABLE `movies2directors` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `directorid` mediumint(8) unsigned NOT NULL,\\n  `genre` varchar(15) NOT NULL,\\n  PRIMARY KEY (`movieid`,`directorid`),\\n  KEY `fk_m2d_mid_idx` (`movieid`),\\n  KEY `fk_m2d_did_idx` (`directorid`),\\n  KEY `genre` (`genre`),\\n  CONSTRAINT `fk_m2d_did` FOREIGN KEY (`directorid`) REFERENCES `directors` (`directorid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_m2d_mid` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de base con las columnas de, ID de usuario, ID de película, calificación",
      "output": "('u2base', 'CREATE TABLE `u2base` (\\n  `userid` int(11) NOT NULL DEFAULT 0  `movieid` mediumint(8) unsigned NOT NULL,\\n  `rating` varchar(45) NOT NULL,\\n  PRIMARY KEY (`userid`,`movieid`),\\n  KEY `fk_u2base_uid_idx` (`userid`),\\n  KEY `fk_u2base_mid_idx` (`movieid`),\\n  KEY `rating` (`rating`),\\n  CONSTRAINT `fk_u2base_mid` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fk_u2base_uid` FOREIGN KEY (`userid`) REFERENCES `users` (`userid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de usuarios con las columnas de, ID de usuario, edad, género, ocupación",
      "output": "('users', 'CREATE TABLE `users` (\\n  `userid` int(11) NOT NULL DEFAULT 0  `age` varchar(5) NOT NULL,\\n  `u_gender` varchar(5) NOT NULL,\\n  `occupation` varchar(45) NOT NULL,\\n  PRIMARY KEY (`userid`),\\n  KEY `index` (`age`,`u_gender`,`occupation`),\\n  KEY `age` (`age`),\\n  KEY `u_gender` (`u_gender`),\\n  KEY `occupation` (`occupation`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de actores con las columnas de, actorid, nombre, sexo",
      "output": "('actors', \"CREATE TABLE `actors` (\\n  `actorid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT  `name` varchar(250) NOT NULL,\\n  `sex` enum('M','F') DEFAULT NULL,\\n  PRIMARY KEY (`actorid`),\\n  KEY `name` (`name`(10)),\\n  FULLTEXT KEY `actors_name_fulltext` (`name`)\\n) ENGINE=InnoDB AUTO_INCREMENT=2749387 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de negocio con las columnas de, movieid, texto comercial",
      "output": "('business', 'CREATE TABLE `business` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `businesstext` mediumtext DEFAULT NULL,\\n  PRIMARY KEY (`movieid`),\\n  CONSTRAINT `business_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de países con las columnas de, movieid, país",
      "output": "('countries', 'CREATE TABLE `countries` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `country` varchar(50) NOT NULL,\\n  PRIMARY KEY (`movieid`,`country`),\\n  CONSTRAINT `countries_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de directores con las columnas de, directorid, nombre, tasa, bruto, num",
      "output": "('directors', 'CREATE TABLE `directors` (\\n  `directorid` mediumint(8) unsigned NOT NULL DEFAULT 0  `name` varchar(250) NOT NULL,\\n  `rate` double(18,1) DEFAULT NULL,\\n  `gross` decimal(32,0) DEFAULT NULL,\\n  `num` bigint(21) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`directorid`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de distribuidores con las columnas de, movieid, nombre",
      "output": "('distributors', 'CREATE TABLE `distributors` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `name` varchar(250) NOT NULL,\\n  PRIMARY KEY (`movieid`,`name`),\\n  CONSTRAINT `distributors_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de editores con las columnas de, ID de editor, nombre",
      "output": "('editors', 'CREATE TABLE `editors` (\\n  `editorid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT  `name` varchar(250) NOT NULL,\\n  PRIMARY KEY (`editorid`),\\n  KEY `name` (`name`(10))\\n) ENGINE=InnoDB AUTO_INCREMENT=202790 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de géneros con las columnas de, movieid, género",
      "output": "('genres', 'CREATE TABLE `genres` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `genre` varchar(50) NOT NULL,\\n  PRIMARY KEY (`movieid`,`genre`),\\n  KEY `movieid` (`movieid`),\\n  KEY `genre` (`genre`(15)),\\n  CONSTRAINT `genres_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de idioma con las columnas de, movieid, idioma",
      "output": "('language', 'CREATE TABLE `language` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `language` varchar(100) NOT NULL,\\n  PRIMARY KEY (`movieid`,`language`),\\n  KEY `index1` (`movieid`),\\n  CONSTRAINT `language_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de películas con las columnas de, movieid, título, año",
      "output": "('movies', 'CREATE TABLE `movies` (\\n  `movieid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT  `title` varchar(400) NOT NULL,\\n  `year` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`movieid`),\\n  KEY `title` (`title`(15)),\\n  FULLTEXT KEY `movies_title_fulltext` (`title`)\\n) ENGINE=InnoDB AUTO_INCREMENT=2593314 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cineactores con las columnas de, movieid, actorid, como personaje, protagonista",
      "output": "('movies2actors', 'CREATE TABLE `movies2actors` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `actorid` mediumint(8) unsigned NOT NULL,\\n  `as_character` varchar(1000) DEFAULT NULL,\\n  `leading` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`movieid`,`actorid`),\\n  KEY `a` (`actorid`),\\n  KEY `movieid` (`movieid`),\\n  CONSTRAINT `movies2actors_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `movies2actors_ibfk_2` FOREIGN KEY (`actorid`) REFERENCES `actors` (`actorid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cinedirectores con las columnas de, movieid, directorid, género",
      "output": "('movies2directors', 'CREATE TABLE `movies2directors` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `directorid` mediumint(8) unsigned NOT NULL,\\n  `genre` varchar(15) DEFAULT NULL,\\n  PRIMARY KEY (`movieid`,`directorid`),\\n  KEY `movieid` (`movieid`),\\n  KEY `directorid` (`directorid`),\\n  CONSTRAINT `movies2directors_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `movies2directors_ibfk_2` FOREIGN KEY (`directorid`) REFERENCES `directors` (`directorid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de editores de peliculas con las columnas de, movieid, editorid, adición",
      "output": "('movies2editors', 'CREATE TABLE `movies2editors` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `editorid` mediumint(8) unsigned NOT NULL,\\n  `addition` varchar(1000) DEFAULT NULL,\\n  PRIMARY KEY (`movieid`,`editorid`),\\n  KEY `movieid` (`movieid`),\\n  KEY `editorid` (`editorid`),\\n  CONSTRAINT `movies2editors_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `movies2editors_ibfk_2` FOREIGN KEY (`editorid`) REFERENCES `editors` (`editorid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de productores de peliculas con las columnas de, movieid, productid, adición",
      "output": "('movies2producers', 'CREATE TABLE `movies2producers` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `producerid` mediumint(8) unsigned NOT NULL,\\n  `addition` varchar(100) NOT NULL,\\n  PRIMARY KEY (`movieid`,`producerid`,`addition`),\\n  KEY `movieid` (`movieid`),\\n  KEY `producerid` (`producerid`),\\n  CONSTRAINT `movies2producers_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `movies2producers_ibfk_2` FOREIGN KEY (`producerid`) REFERENCES `producers` (`producerid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de guionistas con las columnas de, movieid, writeid, adición",
      "output": "('movies2writers', 'CREATE TABLE `movies2writers` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `writerid` mediumint(8) unsigned NOT NULL,\\n  `addition` varchar(250) NOT NULL,\\n  PRIMARY KEY (`movieid`,`writerid`,`addition`),\\n  KEY `movieid` (`movieid`),\\n  KEY `writerid` (`writerid`),\\n  CONSTRAINT `movies2writers_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `movies2writers_ibfk_2` FOREIGN KEY (`writerid`) REFERENCES `writers` (`writerid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de empresas de produccion con las columnas de, movieid, nombre",
      "output": "('prodcompanies', 'CREATE TABLE `prodcompanies` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `name` varchar(250) NOT NULL,\\n  PRIMARY KEY (`movieid`,`name`),\\n  KEY `movieid` (`movieid`),\\n  KEY `name` (`name`(15)),\\n  CONSTRAINT `prodcompanies_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de productores con las columnas de, ID de productor, nombre",
      "output": "('producers', 'CREATE TABLE `producers` (\\n  `producerid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT  `name` varchar(250) NOT NULL,\\n  PRIMARY KEY (`producerid`),\\n  KEY `name` (`name`(10)),\\n  FULLTEXT KEY `producers_name_fulltext` (`name`)\\n) ENGINE=InnoDB AUTO_INCREMENT=532348 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de calificaciones con las columnas de, movieid, rango, votos, distribución",
      "output": "('ratings', 'CREATE TABLE `ratings` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `rank` char(4) NOT NULL,\\n  `votes` mediumint(8) unsigned DEFAULT NULL,\\n  `distribution` char(10) NOT NULL,\\n  PRIMARY KEY (`movieid`),\\n  CONSTRAINT `ratings_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tiempos de ejecución con las columnas de, movieid, tiempo, adición, tiempo",
      "output": "('runningtimes', 'CREATE TABLE `runningtimes` (\\n  `movieid` mediumint(8) unsigned NOT NULL  `time` varchar(50) NOT NULL,\\n  `addition` varchar(100) NOT NULL,\\n  `time1` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`movieid`,`time`,`addition`),\\n  KEY `movieid` (`movieid`),\\n  CONSTRAINT `runningtimes_ibfk_1` FOREIGN KEY (`movieid`) REFERENCES `movies` (`movieid`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de escritores con las columnas de, id de escritor, nombre",
      "output": "('writers', 'CREATE TABLE `writers` (\\n  `writerid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT  `name` varchar(250) NOT NULL,\\n  PRIMARY KEY (`writerid`),\\n  KEY `name` (`name`(10))\\n) ENGINE=InnoDB AUTO_INCREMENT=407171 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de actores con las columnas de, id, nombre, apellido, género",
      "output": "('actors', 'CREATE TABLE `actors` (\\n  `id` int(11) NOT NULL DEFAULT 0  `first_name` varchar(100) DEFAULT NULL,\\n  `last_name` varchar(100) DEFAULT NULL,\\n  `gender` char(1) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `actors_first_name` (`first_name`),\\n  KEY `actors_last_name` (`last_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de directores con las columnas de, id, nombre, apellido",
      "output": "('directors', 'CREATE TABLE `directors` (\\n  `id` int(11) NOT NULL DEFAULT 0  `first_name` varchar(100) DEFAULT NULL,\\n  `last_name` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `directors_first_name` (`first_name`),\\n  KEY `directors_last_name` (`last_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de géneros de directores con las columnas de, identificación del director, género, problema",
      "output": "('directors_genres', 'CREATE TABLE `directors_genres` (\\n  `director_id` int(11) NOT NULL  `genre` varchar(100) NOT NULL,\\n  `prob` float DEFAULT NULL,\\n  PRIMARY KEY (`director_id`,`genre`),\\n  KEY `directors_genres_director_id` (`director_id`),\\n  CONSTRAINT `directors_genres_ibfk_1` FOREIGN KEY (`director_id`) REFERENCES `directors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de películas con las columnas de, id, nombre, año, rango",
      "output": "('movies', 'CREATE TABLE `movies` (\\n  `id` int(11) NOT NULL DEFAULT 0  `name` varchar(100) DEFAULT NULL,\\n  `year` int(11) DEFAULT NULL,\\n  `rank` float DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `movies_name` (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de directores de cine con las columnas de, ID del director, ID de la película",
      "output": "('movies_directors', 'CREATE TABLE `movies_directors` (\\n  `director_id` int(11) NOT NULL  `movie_id` int(11) NOT NULL,\\n  PRIMARY KEY (`director_id`,`movie_id`),\\n  KEY `movies_directors_director_id` (`director_id`),\\n  KEY `movies_directors_movie_id` (`movie_id`),\\n  CONSTRAINT `movies_directors_ibfk_1` FOREIGN KEY (`director_id`) REFERENCES `directors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `movies_directors_ibfk_2` FOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de géneros de películas con las columnas de, identificación de la película, género",
      "output": "('movies_genres', 'CREATE TABLE `movies_genres` (\\n  `movie_id` int(11) NOT NULL  `genre` varchar(100) NOT NULL,\\n  PRIMARY KEY (`movie_id`,`genre`),\\n  KEY `movies_genres_movie_id` (`movie_id`),\\n  CONSTRAINT `movies_genres_ibfk_1` FOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de roles con las columnas de, identificación del actor, identificación de la película, rol",
      "output": "('roles', 'CREATE TABLE `roles` (\\n  `actor_id` int(11) NOT NULL  `movie_id` int(11) NOT NULL,\\n  `role` varchar(100) NOT NULL,\\n  PRIMARY KEY (`actor_id`,`movie_id`,`role`),\\n  KEY `actor_id` (`actor_id`),\\n  KEY `movie_id` (`movie_id`),\\n  CONSTRAINT `roles_ibfk_1` FOREIGN KEY (`actor_id`) REFERENCES `actors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `roles_ibfk_2` FOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de actores con las columnas de, id, nombre, apellido, sexo, número de películas",
      "output": "('actors', 'CREATE TABLE `actors` (\\n  `id` int(11) NOT NULL DEFAULT 0  `first_name` varchar(100) DEFAULT NULL,\\n  `last_name` varchar(100) DEFAULT NULL,\\n  `gender` char(1) DEFAULT NULL,\\n  `film_count` int(11) DEFAULT 0,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de directores con las columnas de, id, nombre, apellido",
      "output": "('directors', 'CREATE TABLE `directors` (\\n  `id` int(11) NOT NULL DEFAULT 0  `first_name` varchar(100) DEFAULT NULL,\\n  `last_name` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de géneros de directores con las columnas de, identificación del director, género, problema",
      "output": "('directors_genres', 'CREATE TABLE `directors_genres` (\\n  `director_id` int(11) DEFAULT NULL  `genre` varchar(100) DEFAULT NULL,\\n  `prob` float DEFAULT NULL,\\n  KEY `idx_director_id` (`director_id`),\\n  CONSTRAINT `directors_genres_ibfk_1` FOREIGN KEY (`director_id`) REFERENCES `directors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de películas con las columnas de, id, nombre, año, rango",
      "output": "('movies', 'CREATE TABLE `movies` (\\n  `id` int(11) NOT NULL DEFAULT 0  `name` varchar(100) DEFAULT NULL,\\n  `year` int(11) DEFAULT NULL,\\n  `rank` float DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de directores de cine con las columnas de, ID del director, ID de la película",
      "output": "('movies_directors', 'CREATE TABLE `movies_directors` (\\n  `director_id` int(11) NOT NULL  `movie_id` int(11) NOT NULL,\\n  PRIMARY KEY (`director_id`,`movie_id`),\\n  KEY `idx_director_id` (`director_id`),\\n  KEY `idx_movie_id` (`movie_id`),\\n  CONSTRAINT `movies_directors_ibfk_1` FOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `movies_directors_ibfk_2` FOREIGN KEY (`director_id`) REFERENCES `directors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de géneros de películas con las columnas de, identificación de la película, género",
      "output": "('movies_genres', 'CREATE TABLE `movies_genres` (\\n  `movie_id` int(11) NOT NULL  `genre` varchar(100) NOT NULL,\\n  PRIMARY KEY (`movie_id`,`genre`),\\n  KEY `movie_id` (`movie_id`),\\n  CONSTRAINT `movies_genres_ibfk_1` FOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de roles con las columnas de, identificación del actor, identificación de la película, rol",
      "output": "('roles', 'CREATE TABLE `roles` (\\n  `actor_id` int(11) NOT NULL  `movie_id` int(11) NOT NULL,\\n  `role` varchar(100) NOT NULL,\\n  PRIMARY KEY (`actor_id`,`movie_id`,`role`),\\n  KEY `idx_actor_id` (`actor_id`),\\n  KEY `idx_movie_id` (`movie_id`),\\n  CONSTRAINT `roles_ibfk_1` FOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `roles_ibfk_2` FOREIGN KEY (`actor_id`) REFERENCES `actors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de TODOS LOS COMPLEMENTOS con las columnas de, NOMBRE DEL PLUGIN, VERSIÓN DEL PLUGIN, ESTADO DEL PLUGIN, TIPO DE PLUGIN, VERSIÓN DEL TIPO DE PLUGIN, BIBLIOTECA DE PLUGIN, VERSIÓN DE LA BIBLIOTECA DE PLUGIN, AUTOR DEL PLUGIN, DESCRIPCIÓN DEL PLUGIN, LICENCIA DEL PLUGIN, OPCIÓN DE CARGA, VENCIMIENTO DEL PLUGIN, VERSIÓN DE AUTORIZACIÓN DEL PLUGIN",
      "output": "('ALL_PLUGINS', \"CREATE TEMPORARY TABLE `ALL_PLUGINS` (\\n  `PLUGIN_NAME` varchar(64) NOT NULL DEFAULT ''  `PLUGIN_VERSION` varchar(20) NOT NULL DEFAULT '',\\n  `PLUGIN_STATUS` varchar(16) NOT NULL DEFAULT '',\\n  `PLUGIN_TYPE` varchar(80) NOT NULL DEFAULT '',\\n  `PLUGIN_TYPE_VERSION` varchar(20) NOT NULL DEFAULT '',\\n  `PLUGIN_LIBRARY` varchar(64) DEFAULT NULL,\\n  `PLUGIN_LIBRARY_VERSION` varchar(20) DEFAULT NULL,\\n  `PLUGIN_AUTHOR` varchar(64) DEFAULT NULL,\\n  `PLUGIN_DESCRIPTION` longtext DEFAULT NULL,\\n  `PLUGIN_LICENSE` varchar(80) NOT NULL DEFAULT '',\\n  `LOAD_OPTION` varchar(64) NOT NULL DEFAULT '',\\n  `PLUGIN_MATURITY` varchar(12) NOT NULL DEFAULT '',\\n  `PLUGIN_AUTH_VERSION` varchar(80) DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de FUNCIONES APLICABLES con las columnas de, CONCESIONARIO, NOMBRE DE LA FUNCIÓN, ES OTORGABLE, ES PREDETERMINADO",
      "output": "('APPLICABLE_ROLES', \"CREATE TEMPORARY TABLE `APPLICABLE_ROLES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `ROLE_NAME` varchar(128) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT '',\\n  `IS_DEFAULT` varchar(3) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de CONJUNTOS DE PERSONAJES con las columnas de, NOMBRE DEL CONJUNTO DE CARACTERES, NOMBRE DE CLASIFICACIÓN PREDETERMINADA, DESCRIPCIÓN, MAXLEN",
      "output": "('CHARACTER_SETS', \"CREATE TEMPORARY TABLE `CHARACTER_SETS` (\\n  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT ''  `DEFAULT_COLLATE_NAME` varchar(32) NOT NULL DEFAULT '',\\n  `DESCRIPTION` varchar(60) NOT NULL DEFAULT '',\\n  `MAXLEN` bigint(3) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de VERIFICAR RESTRICCIONES con las columnas de, CATÁLOGO DE RESTRICCIONES, ESQUEMA DE RESTRICCIONES, NOMBRE DE RESTRICCIONES, NOMBRE DE TABLA, CLÁUSULA DE VERIFICACIÓN",
      "output": "('CHECK_CONSTRAINTS', \"CREATE TEMPORARY TABLE `CHECK_CONSTRAINTS` (\\n  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT ''  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `CHECK_CLAUSE` varchar(64) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de APERITIVOS con las columnas de, NOMBRE DE LA COLACIÓN, NOMBRE DEL CONJUNTO DE CARACTERES, ID, ES PREDETERMINADO, ESTÁ COMPILADO, CLASIFICADO",
      "output": "('COLLATIONS', \"CREATE TEMPORARY TABLE `COLLATIONS` (\\n  `COLLATION_NAME` varchar(32) NOT NULL DEFAULT ''  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',\\n  `ID` bigint(11) NOT NULL DEFAULT 0,\\n  `IS_DEFAULT` varchar(3) NOT NULL DEFAULT '',\\n  `IS_COMPILED` varchar(3) NOT NULL DEFAULT '',\\n  `SORTLEN` bigint(3) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de APLICABILIDAD DEL CONJUNTO DE CARACTERES COLLATION con las columnas de, NOMBRE DE LA COLACIÓN, NOMBRE DEL CONJUNTO DE CARACTERES",
      "output": "('COLLATION_CHARACTER_SET_APPLICABILITY', \"CREATE TEMPORARY TABLE `COLLATION_CHARACTER_SET_APPLICABILITY` (\\n  `COLLATION_NAME` varchar(32) NOT NULL DEFAULT ''  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de COLUMNAS con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, NOMBRE DE COLUMNA, POSICIÓN ORDINAL, COLUMNA PREDETERMINADA, ES ANULABLE, TIPO DE DATOS, LONGITUD MÁXIMA DE CARÁCTER, LONGITUD DE OCTEO DE CARÁCTER, PRECISIÓN NUMÉRICA, ESCALA NUMÉRICA, PRECISIÓN DE FECHA Y HORA, NOMBRE DEL CONJUNTO DE CARACTERES, NOMBRE DE COLACIÓN, COLUMNA TIPO, CLAVE DE COLUMNA, EXTRA, PRIVILEGIOS, COMENTARIO DE COLUMNA, SE GENERA, EXPRESIÓN DE GENERACIÓN",
      "output": "('COLUMNS', \"CREATE TEMPORARY TABLE `COLUMNS` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `ORDINAL_POSITION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `COLUMN_DEFAULT` longtext DEFAULT NULL,\\n  `IS_NULLABLE` varchar(3) NOT NULL DEFAULT '',\\n  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `CHARACTER_MAXIMUM_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `CHARACTER_OCTET_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `NUMERIC_PRECISION` bigint(21) unsigned DEFAULT NULL,\\n  `NUMERIC_SCALE` bigint(21) unsigned DEFAULT NULL,\\n  `DATETIME_PRECISION` bigint(21) unsigned DEFAULT NULL,\\n  `CHARACTER_SET_NAME` varchar(32) DEFAULT NULL,\\n  `COLLATION_NAME` varchar(32) DEFAULT NULL,\\n  `COLUMN_TYPE` longtext NOT NULL DEFAULT '',\\n  `COLUMN_KEY` varchar(3) NOT NULL DEFAULT '',\\n  `EXTRA` varchar(30) NOT NULL DEFAULT '',\\n  `PRIVILEGES` varchar(80) NOT NULL DEFAULT '',\\n  `COLUMN_COMMENT` varchar(1024) NOT NULL DEFAULT '',\\n  `IS_GENERATED` varchar(6) NOT NULL DEFAULT '',\\n  `GENERATION_EXPRESSION` longtext DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de PRIVILEGIOS DE COLUMNA con las columnas de, CONCESIONARIO, CATÁLOGO DE MESA, ESQUEMA DE MESA, NOMBRE DE MESA, NOMBRE DE COLUMNA, TIPO DE PRIVILEGIO, ES OTORGABLE",
      "output": "('COLUMN_PRIVILEGES', \"CREATE TEMPORARY TABLE `COLUMN_PRIVILEGES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ROLES HABILITADOS con las columnas de, NOMBRE DE ROL",
      "output": "('ENABLED_ROLES', 'CREATE TEMPORARY TABLE `ENABLED_ROLES` (\\n  `ROLE_NAME` varchar(128) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de MOTORES con las columnas de, MOTOR, SOPORTE, COMENTARIO, TRANSACCIONES, XA, SAVEPOINTS",
      "output": "('ENGINES', \"CREATE TEMPORARY TABLE `ENGINES` (\\n  `ENGINE` varchar(64) NOT NULL DEFAULT ''  `SUPPORT` varchar(8) NOT NULL DEFAULT '',\\n  `COMMENT` varchar(160) NOT NULL DEFAULT '',\\n  `TRANSACTIONS` varchar(3) DEFAULT NULL,\\n  `XA` varchar(3) DEFAULT NULL,\\n  `SAVEPOINTS` varchar(3) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de EVENTOS con las columnas de, CATÁLOGO DE EVENTOS, ESQUEMA DE EVENTOS, NOMBRE DEL EVENTO, DEFINITOR, ZONA HORARIA, CUERPO DEL EVENTO, DEFINICIÓN DEL EVENTO, TIPO DE EVENTO, EJECUTAR EN, VALOR DEL INTERVALO, CAMPO DEL INTERVALO, MODO SQL, COMIENZA, TERMINA, ESTADO, AL FINALIZAR, CREADO, ÚLTIMA ALTERACIÓN, ÚLTIMO EJECUTADO, COMENTARIO DE EVENTO, ORIGINADOR, CLIENTE DE CONJUNTO DE CARACTERES, CONEXIÓN DE COLACIÓN, COLACIÓN DE BASE DE DATOS",
      "output": "('EVENTS', \"CREATE TEMPORARY TABLE `EVENTS` (\\n  `EVENT_CATALOG` varchar(64) NOT NULL DEFAULT ''  `EVENT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `EVENT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `DEFINER` varchar(189) NOT NULL DEFAULT '',\\n  `TIME_ZONE` varchar(64) NOT NULL DEFAULT '',\\n  `EVENT_BODY` varchar(8) NOT NULL DEFAULT '',\\n  `EVENT_DEFINITION` longtext NOT NULL DEFAULT '',\\n  `EVENT_TYPE` varchar(9) NOT NULL DEFAULT '',\\n  `EXECUTE_AT` datetime DEFAULT NULL,\\n  `INTERVAL_VALUE` varchar(256) DEFAULT NULL,\\n  `INTERVAL_FIELD` varchar(18) DEFAULT NULL,\\n  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',\\n  `STARTS` datetime DEFAULT NULL,\\n  `ENDS` datetime DEFAULT NULL,\\n  `STATUS` varchar(18) NOT NULL DEFAULT '',\\n  `ON_COMPLETION` varchar(12) NOT NULL DEFAULT '',\\n  `CREATED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_ALTERED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_EXECUTED` datetime DEFAULT NULL,\\n  `EVENT_COMMENT` varchar(64) NOT NULL DEFAULT '',\\n  `ORIGINATOR` bigint(10) NOT NULL DEFAULT 0,\\n  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',\\n  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',\\n  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de ARCHIVOS con las columnas de, ID DE ARCHIVO, NOMBRE DE ARCHIVO, TIPO DE ARCHIVO, NOMBRE DEL ESPACIO DE LA MESA, CATÁLOGO DE LA MESA, ESQUEMA DE LA MESA, NOMBRE DE LA MESA, NOMBRE DEL GRUPO DEL ARCHIVO DE REGISTRO, NÚMERO DEL GRUPO DEL ARCHIVO DE REGISTRO, MOTOR, TECLAS DE TEXTO COMPLETO, FILAS ELIMINADAS, CONTADOR DE ACTUALIZACIONES, EXTENSIÓN LIBRE, EXTENSIÓN TOTAL, TAMAÑO DE LA EXTENSIÓN, TAMAÑO INICIAL, TAMAÑO MÁXIMO, TAMAÑO DE EXTENSIÓN AUTOMÁTICA, TIEMPO DE CREACIÓN, TIEMPO DE ÚLTIMA ACTUALIZACIÓN, TIEMPO DE ÚLTIMO ACCESO, TIEMPO DE RECUPERACIÓN, CONTADOR DE TRANSACCIONES, VERSIÓN, FORMATO DE FILA, FILAS DE LA MESA, LONGITUD PROMEDIO DE FILA, LONGITUD DE DATOS, LONGITUD MÁXIMA DE DATOS, LONGITUD DE ÍNDICE, LIBRE DE DATOS , CREAR HORA, ACTUALIZAR HORA, VERIFICAR HORA, CHECKSUM, ESTADO, EXTRA",
      "output": "('FILES', \"CREATE TEMPORARY TABLE `FILES` (\\n  `FILE_ID` bigint(4) NOT NULL DEFAULT 0  `FILE_NAME` varchar(512) DEFAULT NULL,\\n  `FILE_TYPE` varchar(20) NOT NULL DEFAULT '',\\n  `TABLESPACE_NAME` varchar(64) DEFAULT NULL,\\n  `TABLE_CATALOG` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) DEFAULT NULL,\\n  `TABLE_NAME` varchar(64) DEFAULT NULL,\\n  `LOGFILE_GROUP_NAME` varchar(64) DEFAULT NULL,\\n  `LOGFILE_GROUP_NUMBER` bigint(4) DEFAULT NULL,\\n  `ENGINE` varchar(64) NOT NULL DEFAULT '',\\n  `FULLTEXT_KEYS` varchar(64) DEFAULT NULL,\\n  `DELETED_ROWS` bigint(4) DEFAULT NULL,\\n  `UPDATE_COUNT` bigint(4) DEFAULT NULL,\\n  `FREE_EXTENTS` bigint(4) DEFAULT NULL,\\n  `TOTAL_EXTENTS` bigint(4) DEFAULT NULL,\\n  `EXTENT_SIZE` bigint(4) NOT NULL DEFAULT 0,\\n  `INITIAL_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `MAXIMUM_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `AUTOEXTEND_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `CREATION_TIME` datetime DEFAULT NULL,\\n  `LAST_UPDATE_TIME` datetime DEFAULT NULL,\\n  `LAST_ACCESS_TIME` datetime DEFAULT NULL,\\n  `RECOVER_TIME` bigint(4) DEFAULT NULL,\\n  `TRANSACTION_COUNTER` bigint(4) DEFAULT NULL,\\n  `VERSION` bigint(21) unsigned DEFAULT NULL,\\n  `ROW_FORMAT` varchar(10) DEFAULT NULL,\\n  `TABLE_ROWS` bigint(21) unsigned DEFAULT NULL,\\n  `AVG_ROW_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `DATA_FREE` bigint(21) unsigned DEFAULT NULL,\\n  `CREATE_TIME` datetime DEFAULT NULL,\\n  `UPDATE_TIME` datetime DEFAULT NULL,\\n  `CHECK_TIME` datetime DEFAULT NULL,\\n  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,\\n  `STATUS` varchar(20) NOT NULL DEFAULT '',\\n  `EXTRA` varchar(255) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ESTADO GLOBAL con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE",
      "output": "('GLOBAL_STATUS', \"CREATE TEMPORARY TABLE `GLOBAL_STATUS` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(2048) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de VARIABLES GLOBALES con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE",
      "output": "('GLOBAL_VARIABLES', \"CREATE TEMPORARY TABLE `GLOBAL_VARIABLES` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(2048) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de CACHÉS CLAVE con las columnas de, NOMBRE DE LA CACHE DE CLAVE, SEGMENTOS, NÚMERO DE SEGMENTO, TAMAÑO COMPLETO, TAMAÑO DE BLOQUE, BLOQUES USADOS, BLOQUES NO USADOS, BLOQUES SUCIOS, SOLICITUDES DE LECTURA, LECTURAS, SOLICITUDES DE ESCRITURA, ESCRITURAS",
      "output": "('KEY_CACHES', \"CREATE TEMPORARY TABLE `KEY_CACHES` (\\n  `KEY_CACHE_NAME` varchar(192) NOT NULL DEFAULT ''  `SEGMENTS` int(3) unsigned DEFAULT NULL,\\n  `SEGMENT_NUMBER` int(3) unsigned DEFAULT NULL,\\n  `FULL_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `BLOCK_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `USED_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `UNUSED_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DIRTY_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `READ_REQUESTS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `READS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `WRITE_REQUESTS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `WRITES` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de USO DE LA COLUMNA CLAVE con las columnas de, CATÁLOGO DE RESTRICCIÓN, ESQUEMA DE RESTRICCIÓN, NOMBRE DE RESTRICCIÓN, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, NOMBRE DE COLUMNA, POSICIÓN ORDINAL, POSICIÓN EN RESTRICCIÓN ÚNICA, ESQUEMA DE TABLA REFERENCIADA, NOMBRE DE TABLA REFERIDA, NOMBRE DE COLUMNA REFERIDA",
      "output": "('KEY_COLUMN_USAGE', \"CREATE TEMPORARY TABLE `KEY_COLUMN_USAGE` (\\n  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT ''  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `ORDINAL_POSITION` bigint(10) NOT NULL DEFAULT 0,\\n  `POSITION_IN_UNIQUE_CONSTRAINT` bigint(10) DEFAULT NULL,\\n  `REFERENCED_TABLE_SCHEMA` varchar(64) DEFAULT NULL,\\n  `REFERENCED_TABLE_NAME` varchar(64) DEFAULT NULL,\\n  `REFERENCED_COLUMN_NAME` varchar(64) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de PARÁMETROS con las columnas de, CATÁLOGO ESPECÍFICO, ESQUEMA ESPECÍFICO, NOMBRE ESPECÍFICO, POSICIÓN ORDINAL, MODO DE PARÁMETRO, NOMBRE DE PARÁMETRO, TIPO DE DATOS, LONGITUD MÁXIMA DE CARÁCTER, LONGITUD DE OCTETTO DE CARÁCTER, PRECISIÓN NUMÉRICA, ESCALA NUMÉRICA, PRECISIÓN DE FECHA Y HORA, NOMBRE DE CONJUNTO DE CARACTERES, NOMBRE DE COLACIÓN, IDENTIFICADOR DTD, RUTINA ESCRIBE",
      "output": "('PARAMETERS', \"CREATE TEMPORARY TABLE `PARAMETERS` (\\n  `SPECIFIC_CATALOG` varchar(512) NOT NULL DEFAULT ''  `SPECIFIC_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `SPECIFIC_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `ORDINAL_POSITION` int(21) NOT NULL DEFAULT 0,\\n  `PARAMETER_MODE` varchar(5) DEFAULT NULL,\\n  `PARAMETER_NAME` varchar(64) DEFAULT NULL,\\n  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `CHARACTER_MAXIMUM_LENGTH` int(21) DEFAULT NULL,\\n  `CHARACTER_OCTET_LENGTH` int(21) DEFAULT NULL,\\n  `NUMERIC_PRECISION` int(21) DEFAULT NULL,\\n  `NUMERIC_SCALE` int(21) DEFAULT NULL,\\n  `DATETIME_PRECISION` bigint(21) unsigned DEFAULT NULL,\\n  `CHARACTER_SET_NAME` varchar(64) DEFAULT NULL,\\n  `COLLATION_NAME` varchar(64) DEFAULT NULL,\\n  `DTD_IDENTIFIER` longtext NOT NULL DEFAULT '',\\n  `ROUTINE_TYPE` varchar(9) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de PARTICIONES con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, NOMBRE DE PARTICIÓN, NOMBRE DE SUBPARTICIÓN, POSICIÓN ORDINAL DE PARTICIÓN, POSICIÓN ORDINAL DE SUBPARTICIÓN, MÉTODO DE PARTICIÓN, MÉTODO DE SUBPARTICIÓN, EXPRESIÓN DE PARTICIÓN, EXPRESIÓN DE SUBPARTICIÓN, DESCRIPCIÓN DE PARTICIÓN, FILAS DE LA TABLA, LONGITUD DE FILA PROMEDIO, LONGITUD DE DATOS, MÁX. LONGITUD DE DATOS, LONGITUD DE ÍNDICE, LIBRE DE DATOS, TIEMPO DE CREACIÓN, TIEMPO DE ACTUALIZACIÓN, TIEMPO DE COMPROBACIÓN, SUMA DE VERIFICACIÓN, COMENTARIO DE PARTICIÓN, GRUPO DE NODOS, NOMBRE DE ESPACIO DE MESA",
      "output": "('PARTITIONS', \"CREATE TEMPORARY TABLE `PARTITIONS` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `PARTITION_NAME` varchar(64) DEFAULT NULL,\\n  `SUBPARTITION_NAME` varchar(64) DEFAULT NULL,\\n  `PARTITION_ORDINAL_POSITION` bigint(21) unsigned DEFAULT NULL,\\n  `SUBPARTITION_ORDINAL_POSITION` bigint(21) unsigned DEFAULT NULL,\\n  `PARTITION_METHOD` varchar(18) DEFAULT NULL,\\n  `SUBPARTITION_METHOD` varchar(12) DEFAULT NULL,\\n  `PARTITION_EXPRESSION` longtext DEFAULT NULL,\\n  `SUBPARTITION_EXPRESSION` longtext DEFAULT NULL,\\n  `PARTITION_DESCRIPTION` longtext DEFAULT NULL,\\n  `TABLE_ROWS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `AVG_ROW_LENGTH` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATA_LENGTH` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `INDEX_LENGTH` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATA_FREE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `CREATE_TIME` datetime DEFAULT NULL,\\n  `UPDATE_TIME` datetime DEFAULT NULL,\\n  `CHECK_TIME` datetime DEFAULT NULL,\\n  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,\\n  `PARTITION_COMMENT` varchar(80) NOT NULL DEFAULT '',\\n  `NODEGROUP` varchar(12) NOT NULL DEFAULT '',\\n  `TABLESPACE_NAME` varchar(64) DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de COMPLEMENTOS con las columnas de, NOMBRE DEL PLUGIN, VERSIÓN DEL PLUGIN, ESTADO DEL PLUGIN, TIPO DE PLUGIN, VERSIÓN DEL TIPO DE PLUGIN, BIBLIOTECA DE PLUGIN, VERSIÓN DE LA BIBLIOTECA DE PLUGIN, AUTOR DEL PLUGIN, DESCRIPCIÓN DEL PLUGIN, LICENCIA DEL PLUGIN, OPCIÓN DE CARGA, VENCIMIENTO DEL PLUGIN, VERSIÓN DE AUTORIZACIÓN DEL PLUGIN",
      "output": "('PLUGINS', \"CREATE TEMPORARY TABLE `PLUGINS` (\\n  `PLUGIN_NAME` varchar(64) NOT NULL DEFAULT ''  `PLUGIN_VERSION` varchar(20) NOT NULL DEFAULT '',\\n  `PLUGIN_STATUS` varchar(16) NOT NULL DEFAULT '',\\n  `PLUGIN_TYPE` varchar(80) NOT NULL DEFAULT '',\\n  `PLUGIN_TYPE_VERSION` varchar(20) NOT NULL DEFAULT '',\\n  `PLUGIN_LIBRARY` varchar(64) DEFAULT NULL,\\n  `PLUGIN_LIBRARY_VERSION` varchar(20) DEFAULT NULL,\\n  `PLUGIN_AUTHOR` varchar(64) DEFAULT NULL,\\n  `PLUGIN_DESCRIPTION` longtext DEFAULT NULL,\\n  `PLUGIN_LICENSE` varchar(80) NOT NULL DEFAULT '',\\n  `LOAD_OPTION` varchar(64) NOT NULL DEFAULT '',\\n  `PLUGIN_MATURITY` varchar(12) NOT NULL DEFAULT '',\\n  `PLUGIN_AUTH_VERSION` varchar(80) DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de LISTA DE PROCESOS con las columnas de, ID, USUARIO, HOST, BD, COMANDO, HORA, ESTADO, INFO, TIEMPO MS, ETAPA, ETAPA MÁX., PROGRESO, MEMORIA UTILIZADA, MEMORIA MÁXIMA UTILIZADA, FILAS EXAMINADAS, ID DE CONSULTA, INFORMACIÓN BINARIA, TID",
      "output": "('PROCESSLIST', \"CREATE TEMPORARY TABLE `PROCESSLIST` (\\n  `ID` bigint(4) NOT NULL DEFAULT 0  `USER` varchar(128) NOT NULL DEFAULT '',\\n  `HOST` varchar(64) NOT NULL DEFAULT '',\\n  `DB` varchar(64) DEFAULT NULL,\\n  `COMMAND` varchar(16) NOT NULL DEFAULT '',\\n  `TIME` int(7) NOT NULL DEFAULT 0,\\n  `STATE` varchar(64) DEFAULT NULL,\\n  `INFO` longtext DEFAULT NULL,\\n  `TIME_MS` decimal(22,3) NOT NULL DEFAULT 0.000,\\n  `STAGE` tinyint(2) NOT NULL DEFAULT 0,\\n  `MAX_STAGE` tinyint(2) NOT NULL DEFAULT 0,\\n  `PROGRESS` decimal(7,3) NOT NULL DEFAULT 0.000,\\n  `MEMORY_USED` bigint(7) NOT NULL DEFAULT 0,\\n  `MAX_MEMORY_USED` bigint(7) NOT NULL DEFAULT 0,\\n  `EXAMINED_ROWS` int(7) NOT NULL DEFAULT 0,\\n  `QUERY_ID` bigint(4) NOT NULL DEFAULT 0,\\n  `INFO_BINARY` blob DEFAULT NULL,\\n  `TID` bigint(4) NOT NULL DEFAULT 0\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de PERFILADO con las columnas de, ID DE CONSULTA, SEQ, ESTADO, DURACIÓN, USUARIO DE CPU, SISTEMA DE CPU, CONTEXTO VOLUNTARIO, CONTEXTO INVOLUNTARIO, ENTRADA DE BLOQUEO, SALIDA DE BLOQUEO, MENSAJES ENVIADOS, MENSAJES RECIBIDOS, FALLAS DE PÁGINA MAYORES, FALLAS DE PÁGINA MENORES, INTERCAMBIOS, FUNCIÓN DE ORIGEN, ORIGEN ARCHIVO, LÍNEA DE FUENTE",
      "output": "('PROFILING', \"CREATE TEMPORARY TABLE `PROFILING` (\\n  `QUERY_ID` int(20) NOT NULL DEFAULT 0  `SEQ` int(20) NOT NULL DEFAULT 0,\\n  `STATE` varchar(30) NOT NULL DEFAULT '',\\n  `DURATION` decimal(9,6) NOT NULL DEFAULT 0.000000,\\n  `CPU_USER` decimal(9,6) DEFAULT NULL,\\n  `CPU_SYSTEM` decimal(9,6) DEFAULT NULL,\\n  `CONTEXT_VOLUNTARY` int(20) DEFAULT NULL,\\n  `CONTEXT_INVOLUNTARY` int(20) DEFAULT NULL,\\n  `BLOCK_OPS_IN` int(20) DEFAULT NULL,\\n  `BLOCK_OPS_OUT` int(20) DEFAULT NULL,\\n  `MESSAGES_SENT` int(20) DEFAULT NULL,\\n  `MESSAGES_RECEIVED` int(20) DEFAULT NULL,\\n  `PAGE_FAULTS_MAJOR` int(20) DEFAULT NULL,\\n  `PAGE_FAULTS_MINOR` int(20) DEFAULT NULL,\\n  `SWAPS` int(20) DEFAULT NULL,\\n  `SOURCE_FUNCTION` varchar(30) DEFAULT NULL,\\n  `SOURCE_FILE` varchar(20) DEFAULT NULL,\\n  `SOURCE_LINE` int(20) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de RESTRICCIONES DE REFERENCIA con las columnas de, CATÁLOGO DE RESTRICCIÓN, ESQUEMA DE RESTRICCIÓN, NOMBRE DE RESTRICCIÓN, CATÁLOGO DE RESTRICCIÓN ÚNICA, ESQUEMA DE RESTRICCIÓN ÚNICA, NOMBRE DE RESTRICCIÓN ÚNICA, OPCIÓN DE COINCIDENCIA, REGLA DE ACTUALIZACIÓN, REGLA DE ELIMINACIÓN, NOMBRE DE LA TABLA, NOMBRE DE LA TABLA REFERENCIADA",
      "output": "('REFERENTIAL_CONSTRAINTS', \"CREATE TEMPORARY TABLE `REFERENTIAL_CONSTRAINTS` (\\n  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT ''  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `UNIQUE_CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `UNIQUE_CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `UNIQUE_CONSTRAINT_NAME` varchar(64) DEFAULT NULL,\\n  `MATCH_OPTION` varchar(64) NOT NULL DEFAULT '',\\n  `UPDATE_RULE` varchar(64) NOT NULL DEFAULT '',\\n  `DELETE_RULE` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `REFERENCED_TABLE_NAME` varchar(64) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de RUTINAS con las columnas de, NOMBRE ESPECÍFICO, CATÁLOGO DE RUTINA, ESQUEMA DE RUTINA, NOMBRE DE RUTINA, TIPO DE RUTINA, TIPO DE DATOS, LONGITUD MÁXIMA DE CARÁCTER, LONGITUD DE OCTETTO DE CARÁCTER, PRECISIÓN NUMÉRICA, ESCALA NUMÉRICA, PRECISIÓN DE FECHA Y HORA, NOMBRE DEL CONJUNTO DE CARACTERES, NOMBRE DE COLLACIÓN, IDENTIFICADOR DTD, CUERPO DE RUTINA, RUTINA DEFINICIÓN, NOMBRE EXTERNO, IDIOMA EXTERNO, ESTILO DE PARÁMETRO, ES DETERMINISTA, ACCESO A DATOS SQL, RUTA SQL, TIPO DE SEGURIDAD, CREADO, ÚLTIMA ALTERACIÓN, MODO SQL, COMENTARIO DE RUTINA, DEFINITOR, CLIENTE DE CONJUNTO DE CARACTERES, CONEXIÓN DE COLACIÓN, COLACIÓN DE BASE DE DATOS",
      "output": "('ROUTINES', \"CREATE TEMPORARY TABLE `ROUTINES` (\\n  `SPECIFIC_NAME` varchar(64) NOT NULL DEFAULT ''  `ROUTINE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `ROUTINE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `ROUTINE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `ROUTINE_TYPE` varchar(13) NOT NULL DEFAULT '',\\n  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `CHARACTER_MAXIMUM_LENGTH` int(21) DEFAULT NULL,\\n  `CHARACTER_OCTET_LENGTH` int(21) DEFAULT NULL,\\n  `NUMERIC_PRECISION` int(21) DEFAULT NULL,\\n  `NUMERIC_SCALE` int(21) DEFAULT NULL,\\n  `DATETIME_PRECISION` bigint(21) unsigned DEFAULT NULL,\\n  `CHARACTER_SET_NAME` varchar(64) DEFAULT NULL,\\n  `COLLATION_NAME` varchar(64) DEFAULT NULL,\\n  `DTD_IDENTIFIER` longtext DEFAULT NULL,\\n  `ROUTINE_BODY` varchar(8) NOT NULL DEFAULT '',\\n  `ROUTINE_DEFINITION` longtext DEFAULT NULL,\\n  `EXTERNAL_NAME` varchar(64) DEFAULT NULL,\\n  `EXTERNAL_LANGUAGE` varchar(64) DEFAULT NULL,\\n  `PARAMETER_STYLE` varchar(8) NOT NULL DEFAULT '',\\n  `IS_DETERMINISTIC` varchar(3) NOT NULL DEFAULT '',\\n  `SQL_DATA_ACCESS` varchar(64) NOT NULL DEFAULT '',\\n  `SQL_PATH` varchar(64) DEFAULT NULL,\\n  `SECURITY_TYPE` varchar(7) NOT NULL DEFAULT '',\\n  `CREATED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_ALTERED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',\\n  `ROUTINE_COMMENT` longtext NOT NULL DEFAULT '',\\n  `DEFINER` varchar(189) NOT NULL DEFAULT '',\\n  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',\\n  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',\\n  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de ESQUEMA con las columnas de, NOMBRE DE CATÁLOGO, NOMBRE DE ESQUEMA, NOMBRE DE CONJUNTO DE CARACTERES POR DEFECTO, NOMBRE DE COLACIÓN POR DEFECTO, RUTA SQL",
      "output": "('SCHEMATA', \"CREATE TEMPORARY TABLE `SCHEMATA` (\\n  `CATALOG_NAME` varchar(512) NOT NULL DEFAULT ''  `SCHEMA_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `DEFAULT_CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',\\n  `DEFAULT_COLLATION_NAME` varchar(32) NOT NULL DEFAULT '',\\n  `SQL_PATH` varchar(512) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de PRIVILEGIOS DE ESQUEMA con las columnas de, CONCESIONARIO, CATÁLOGO DE MESA, ESQUEMA DE MESA, TIPO DE PRIVILEGIO, ES OTORGABLE",
      "output": "('SCHEMA_PRIVILEGES', \"CREATE TEMPORARY TABLE `SCHEMA_PRIVILEGES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ESTADO DE LA SESIÓN con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE",
      "output": "('SESSION_STATUS', \"CREATE TEMPORARY TABLE `SESSION_STATUS` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(2048) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de VARIABLES DE SESIÓN con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE",
      "output": "('SESSION_VARIABLES', \"CREATE TEMPORARY TABLE `SESSION_VARIABLES` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(2048) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, NO ÚNICO, ESQUEMA DE ÍNDICE, NOMBRE DE ÍNDICE, SEQ EN ÍNDICE, NOMBRE DE COLUMNA, COLLACIÓN, CARDINALIDAD, SUBPARTE, EMPAQUETADO, ANULABLE, TIPO DE ÍNDICE, COMENTARIO, COMENTARIO DE ÍNDICE",
      "output": "('STATISTICS', \"CREATE TEMPORARY TABLE `STATISTICS` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `NON_UNIQUE` bigint(1) NOT NULL DEFAULT 0,\\n  `INDEX_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `INDEX_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `SEQ_IN_INDEX` bigint(2) NOT NULL DEFAULT 0,\\n  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `COLLATION` varchar(1) DEFAULT NULL,\\n  `CARDINALITY` bigint(21) DEFAULT NULL,\\n  `SUB_PART` bigint(3) DEFAULT NULL,\\n  `PACKED` varchar(10) DEFAULT NULL,\\n  `NULLABLE` varchar(3) NOT NULL DEFAULT '',\\n  `INDEX_TYPE` varchar(16) NOT NULL DEFAULT '',\\n  `COMMENT` varchar(16) DEFAULT NULL,\\n  `INDEX_COMMENT` varchar(1024) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de VARIABLES DEL SISTEMA con las columnas de, NOMBRE DE VARIABLE, VALOR DE SESIÓN, VALOR GLOBAL, ORIGEN DE VALOR GLOBAL, VALOR PREDETERMINADO, ÁMBITO DE VARIABLE, TIPO DE VARIABLE, COMENTARIO DE VARIABLE, VALOR MÍNIMO NUMÉRICO, VALOR MÁXIMO NUMÉRICO, TAMAÑO DE BLOQUE NUMÉRICO, LISTA DE VALORES ENUM, SOLO LECTURA, ARGUMENTO DE LÍNEA DE COMANDOS",
      "output": "('SYSTEM_VARIABLES', \"CREATE TEMPORARY TABLE `SYSTEM_VARIABLES` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `SESSION_VALUE` varchar(2048) DEFAULT NULL,\\n  `GLOBAL_VALUE` varchar(2048) DEFAULT NULL,\\n  `GLOBAL_VALUE_ORIGIN` varchar(64) NOT NULL DEFAULT '',\\n  `DEFAULT_VALUE` varchar(2048) DEFAULT NULL,\\n  `VARIABLE_SCOPE` varchar(64) NOT NULL DEFAULT '',\\n  `VARIABLE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `VARIABLE_COMMENT` varchar(2048) NOT NULL DEFAULT '',\\n  `NUMERIC_MIN_VALUE` varchar(21) DEFAULT NULL,\\n  `NUMERIC_MAX_VALUE` varchar(21) DEFAULT NULL,\\n  `NUMERIC_BLOCK_SIZE` varchar(21) DEFAULT NULL,\\n  `ENUM_VALUE_LIST` longtext DEFAULT NULL,\\n  `READ_ONLY` varchar(3) NOT NULL DEFAULT '',\\n  `COMMAND_LINE_ARGUMENT` varchar(64) DEFAULT NULL\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de MESAS con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, TIPO DE TABLA, MOTOR, VERSIÓN, FORMATO DE FILA, FILAS DE TABLA, LONGITUD PROMEDIO DE FILA, LONGITUD DE DATOS, LONGITUD MÁXIMA DE DATOS, LONGITUD DE ÍNDICE, DATOS LIBRES, INCREMENTO AUTOMÁTICO, TIEMPO DE CREACIÓN, TIEMPO DE ACTUALIZACIÓN, COMPROBAR TIEMPO, COLACIÓN DE TABLA, SUMA DE VERIFICACIÓN, CREAR OPCIONES, COMENTARIO DE TABLA, LONGITUD MÁXIMA DEL ÍNDICE, TEMPORAL",
      "output": "('TABLES', \"CREATE TEMPORARY TABLE `TABLES` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `ENGINE` varchar(64) DEFAULT NULL,\\n  `VERSION` bigint(21) unsigned DEFAULT NULL,\\n  `ROW_FORMAT` varchar(10) DEFAULT NULL,\\n  `TABLE_ROWS` bigint(21) unsigned DEFAULT NULL,\\n  `AVG_ROW_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `DATA_FREE` bigint(21) unsigned DEFAULT NULL,\\n  `AUTO_INCREMENT` bigint(21) unsigned DEFAULT NULL,\\n  `CREATE_TIME` datetime DEFAULT NULL,\\n  `UPDATE_TIME` datetime DEFAULT NULL,\\n  `CHECK_TIME` datetime DEFAULT NULL,\\n  `TABLE_COLLATION` varchar(32) DEFAULT NULL,\\n  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,\\n  `CREATE_OPTIONS` varchar(2048) DEFAULT NULL,\\n  `TABLE_COMMENT` varchar(2048) NOT NULL DEFAULT '',\\n  `MAX_INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,\\n  `TEMPORARY` varchar(1) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ESPACIOS DE MESA con las columnas de, NOMBRE DE ESPACIO DE MESA, MOTOR, TIPO DE ESPACIO DE MESA, NOMBRE DE GRUPO DE ARCHIVO DE REGISTRO, TAMAÑO DE EXTENSIÓN, TAMAÑO DE EXTENSIÓN AUTOMÁTICA, TAMAÑO MÁXIMO, ID DE GRUPO DE NODO, COMENTARIO DE ESPACIO DE MESA",
      "output": "('TABLESPACES', \"CREATE TEMPORARY TABLE `TABLESPACES` (\\n  `TABLESPACE_NAME` varchar(64) NOT NULL DEFAULT ''  `ENGINE` varchar(64) NOT NULL DEFAULT '',\\n  `TABLESPACE_TYPE` varchar(64) DEFAULT NULL,\\n  `LOGFILE_GROUP_NAME` varchar(64) DEFAULT NULL,\\n  `EXTENT_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `AUTOEXTEND_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `MAXIMUM_SIZE` bigint(21) unsigned DEFAULT NULL,\\n  `NODEGROUP_ID` bigint(21) unsigned DEFAULT NULL,\\n  `TABLESPACE_COMMENT` varchar(2048) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de RESTRICCIONES DE LA TABLA con las columnas de, CATÁLOGO DE RESTRICCIONES, ESQUEMA DE RESTRICCIONES, NOMBRE DE RESTRICCIONES, ESQUEMA DE TABLA, NOMBRE DE TABLA, TIPO DE RESTRICCIÓN",
      "output": "('TABLE_CONSTRAINTS', \"CREATE TEMPORARY TABLE `TABLE_CONSTRAINTS` (\\n  `CONSTRAINT_CATALOG` varchar(512) NOT NULL DEFAULT ''  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `CONSTRAINT_TYPE` varchar(64) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de PRIVILEGIOS DE LA MESA con las columnas de, CONCESIONARIO, CATÁLOGO DE MESA, ESQUEMA DE MESA, NOMBRE DE MESA, TIPO DE PRIVILEGIO, ES OTORGABLE",
      "output": "('TABLE_PRIVILEGES', \"CREATE TEMPORARY TABLE `TABLE_PRIVILEGES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de DISPARADORES con las columnas de, CATÁLOGO DE ACTIVACIÓN, ESQUEMA DE ACTIVACIÓN, NOMBRE DE ACTIVACIÓN, MANIPULACIÓN DE EVENTOS, CATÁLOGO DE OBJETOS DE EVENTOS, ESQUEMA DE OBJETOS DE EVENTOS, TABLA DE OBJETOS DE EVENTOS, ORDEN DE ACCIÓN, CONDICIÓN DE ACCIÓN, DECLARACIÓN DE ACCIÓN, ORIENTACIÓN DE ACCIÓN, TIEMPO DE ACCIÓN, TABLA ANTIGUA DE REFERENCIA DE ACCIÓN, TABLA NUEVA DE REFERENCIA DE ACCIÓN, REFERENCIA DE ACCIÓN FILA ANTIGUA, REFERENCIA DE ACCIÓN FILA NUEVA, CREADA, MODO SQL, DEFINITOR, CLIENTE DE CONJUNTO DE CARACTERES, CONEXIÓN DE COLACIÓN, COLACIÓN DE BASE DE DATOS",
      "output": "('TRIGGERS', \"CREATE TEMPORARY TABLE `TRIGGERS` (\\n  `TRIGGER_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TRIGGER_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TRIGGER_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `EVENT_MANIPULATION` varchar(6) NOT NULL DEFAULT '',\\n  `EVENT_OBJECT_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `EVENT_OBJECT_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `EVENT_OBJECT_TABLE` varchar(64) NOT NULL DEFAULT '',\\n  `ACTION_ORDER` bigint(4) NOT NULL DEFAULT 0,\\n  `ACTION_CONDITION` longtext DEFAULT NULL,\\n  `ACTION_STATEMENT` longtext NOT NULL DEFAULT '',\\n  `ACTION_ORIENTATION` varchar(9) NOT NULL DEFAULT '',\\n  `ACTION_TIMING` varchar(6) NOT NULL DEFAULT '',\\n  `ACTION_REFERENCE_OLD_TABLE` varchar(64) DEFAULT NULL,\\n  `ACTION_REFERENCE_NEW_TABLE` varchar(64) DEFAULT NULL,\\n  `ACTION_REFERENCE_OLD_ROW` varchar(3) NOT NULL DEFAULT '',\\n  `ACTION_REFERENCE_NEW_ROW` varchar(3) NOT NULL DEFAULT '',\\n  `CREATED` datetime(2) DEFAULT NULL,\\n  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',\\n  `DEFINER` varchar(189) NOT NULL DEFAULT '',\\n  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',\\n  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',\\n  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de PRIVILEGIOS DE USUARIO con las columnas de, CONCESIONARIO, CATÁLOGO DE MESA, TIPO DE PRIVILEGIO, ES OTORGABLE",
      "output": "('USER_PRIVILEGES', \"CREATE TEMPORARY TABLE `USER_PRIVILEGES` (\\n  `GRANTEE` varchar(190) NOT NULL DEFAULT ''  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de PUNTOS DE VISTA con las columnas de, CATÁLOGO DE TABLA, ESQUEMA DE TABLA, NOMBRE DE TABLA, VER DEFINICIÓN, VER OPCIÓN, ES ACTUALIZABLE, DEFINITOR, TIPO DE SEGURIDAD, CLIENTE DE CONJUNTO DE CARACTERES, CONEXIÓN DE COLACIÓN, ALGORITMO",
      "output": "('VIEWS', \"CREATE TEMPORARY TABLE `VIEWS` (\\n  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `VIEW_DEFINITION` longtext NOT NULL DEFAULT '',\\n  `CHECK_OPTION` varchar(8) NOT NULL DEFAULT '',\\n  `IS_UPDATABLE` varchar(3) NOT NULL DEFAULT '',\\n  `DEFINER` varchar(189) NOT NULL DEFAULT '',\\n  `SECURITY_TYPE` varchar(7) NOT NULL DEFAULT '',\\n  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',\\n  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',\\n  `ALGORITHM` varchar(10) NOT NULL DEFAULT ''\\n) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0\")"
    },
    {
      "input": "Una tabla de COLUMNAS DE GEOMETRÍA con las columnas de, CATÁLOGO DE LA TABLA F, ESQUEMA DE LA TABLA F, NOMBRE DE LA TABLA, COLUMNA DE GEOMETRÍA F, CATÁLOGO DE LA TABLA G, ESQUEMA DE LA TABLA G, NOMBRE DE LA TABLA, COLUMNA DE GEOMETRÍA, TIPO DE ALMACENAMIENTO, TIPO DE GEOMETRÍA, DIMENSIÓN DE COORDENADAS, PPR MÁX., SRID",
      "output": "('GEOMETRY_COLUMNS', \"CREATE TEMPORARY TABLE `GEOMETRY_COLUMNS` (\\n  `F_TABLE_CATALOG` varchar(512) NOT NULL DEFAULT ''  `F_TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `F_TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `F_GEOMETRY_COLUMN` varchar(64) NOT NULL DEFAULT '',\\n  `G_TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',\\n  `G_TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',\\n  `G_TABLE_NAME` varchar(64) NOT NULL DEFAULT '',\\n  `G_GEOMETRY_COLUMN` varchar(64) NOT NULL DEFAULT '',\\n  `STORAGE_TYPE` tinyint(2) NOT NULL DEFAULT 0,\\n  `GEOMETRY_TYPE` int(7) NOT NULL DEFAULT 0,\\n  `COORD_DIMENSION` tinyint(2) NOT NULL DEFAULT 0,\\n  `MAX_PPR` tinyint(2) NOT NULL DEFAULT 0,\\n  `SRID` smallint(5) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de SISTEMA REF ESPACIAL con las columnas de, SRID, NOMBRE DE AUTORIZACIÓN, SRID DE AUTORIZACIÓN, SRTEXT",
      "output": "('SPATIAL_REF_SYS', \"CREATE TEMPORARY TABLE `SPATIAL_REF_SYS` (\\n  `SRID` smallint(5) NOT NULL DEFAULT 0  `AUTH_NAME` varchar(512) NOT NULL DEFAULT '',\\n  `AUTH_SRID` int(5) NOT NULL DEFAULT 0,\\n  `SRTEXT` varchar(2048) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DE CLIENTES con las columnas de, CLIENTE, TOTAL DE CONEXIONES, CONEXIONES CONCURRENTES, TIEMPO CONECTADO, TIEMPO OCUPADO, TIEMPO DE CPU, BYTES RECIBIDOS, BYTES ENVIADOS, BINLOG BYTES ESCRITOS, FILAS LEÍDAS, FILAS ENVIADAS, FILAS ELIMINADAS, FILAS INSERTADAS, FILAS ACTUALIZADAS, SELECCIONAR COMANDOS, ACTUALIZAR COMANDOS, OTROS COMANDOS, TRANSACCIONES DE COMPROMISO, TRANSACCIONES DE RETROCESO, CONEXIONES DENEGADAS, CONEXIONES PERDIDAS, ACCESO DENEGADO, CONSULTAS VACÍAS, CONEXIONES SSL TOTALES, TIEMPO MÁXIMO DE DECLARACIÓN EXCEDIDO",
      "output": "('CLIENT_STATISTICS', \"CREATE TEMPORARY TABLE `CLIENT_STATISTICS` (\\n  `CLIENT` varchar(64) NOT NULL DEFAULT ''  `TOTAL_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `CONCURRENT_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `CONNECTED_TIME` bigint(21) NOT NULL DEFAULT 0,\\n  `BUSY_TIME` double NOT NULL DEFAULT 0,\\n  `CPU_TIME` double NOT NULL DEFAULT 0,\\n  `BYTES_RECEIVED` bigint(21) NOT NULL DEFAULT 0,\\n  `BYTES_SENT` bigint(21) NOT NULL DEFAULT 0,\\n  `BINLOG_BYTES_WRITTEN` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_READ` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_SENT` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_DELETED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_INSERTED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_UPDATED` bigint(21) NOT NULL DEFAULT 0,\\n  `SELECT_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `UPDATE_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `OTHER_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `COMMIT_TRANSACTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `ROLLBACK_TRANSACTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `DENIED_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `LOST_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `ACCESS_DENIED` bigint(21) NOT NULL DEFAULT 0,\\n  `EMPTY_QUERIES` bigint(21) NOT NULL DEFAULT 0,\\n  `TOTAL_SSL_CONNECTIONS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MAX_STATEMENT_TIME_EXCEEDED` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DEL ÍNDICE con las columnas de, ESQUEMA DE TABLA, NOMBRE DE TABLA, NOMBRE DE ÍNDICE, LECTURA DE FILAS",
      "output": "('INDEX_STATISTICS', \"CREATE TEMPORARY TABLE `INDEX_STATISTICS` (\\n  `TABLE_SCHEMA` varchar(192) NOT NULL DEFAULT ''  `TABLE_NAME` varchar(192) NOT NULL DEFAULT '',\\n  `INDEX_NAME` varchar(192) NOT NULL DEFAULT '',\\n  `ROWS_READ` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ARCHIVOS DE DATOS DEL SISTEMA INNODB con las columnas de, ESPACIO, CAMINO",
      "output": "('INNODB_SYS_DATAFILES', \"CREATE TEMPORARY TABLE `INNODB_SYS_DATAFILES` (\\n  `SPACE` int(11) unsigned NOT NULL DEFAULT 0  `PATH` varchar(4000) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DE USUARIO con las columnas de, USUARIO, TOTAL DE CONEXIONES, CONEXIONES CONCURRENTES, TIEMPO CONECTADO, TIEMPO OCUPADO, TIEMPO DE CPU, BYTES RECIBIDOS, BYTES ENVIADOS, BINLOG BYTES ESCRITOS, FILAS LEÍDAS, FILAS ENVIADAS, FILAS ELIMINADAS, FILAS INSERTADAS, FILAS ACTUALIZADAS, SELECCIONAR COMANDOS, ACTUALIZAR COMANDOS, OTROS COMANDOS, TRANSACCIONES DE COMPROMISO, TRANSACCIONES DE RETROCESO, CONEXIONES DENEGADAS, CONEXIONES PERDIDAS, ACCESO DENEGADO, CONSULTAS VACÍAS, CONEXIONES SSL TOTALES, TIEMPO MÁXIMO DE DECLARACIÓN EXCEDIDO",
      "output": "('USER_STATISTICS', \"CREATE TEMPORARY TABLE `USER_STATISTICS` (\\n  `USER` varchar(128) NOT NULL DEFAULT ''  `TOTAL_CONNECTIONS` int(11) NOT NULL DEFAULT 0,\\n  `CONCURRENT_CONNECTIONS` int(11) NOT NULL DEFAULT 0,\\n  `CONNECTED_TIME` int(11) NOT NULL DEFAULT 0,\\n  `BUSY_TIME` double NOT NULL DEFAULT 0,\\n  `CPU_TIME` double NOT NULL DEFAULT 0,\\n  `BYTES_RECEIVED` bigint(21) NOT NULL DEFAULT 0,\\n  `BYTES_SENT` bigint(21) NOT NULL DEFAULT 0,\\n  `BINLOG_BYTES_WRITTEN` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_READ` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_SENT` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_DELETED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_INSERTED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_UPDATED` bigint(21) NOT NULL DEFAULT 0,\\n  `SELECT_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `UPDATE_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `OTHER_COMMANDS` bigint(21) NOT NULL DEFAULT 0,\\n  `COMMIT_TRANSACTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `ROLLBACK_TRANSACTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `DENIED_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `LOST_CONNECTIONS` bigint(21) NOT NULL DEFAULT 0,\\n  `ACCESS_DENIED` bigint(21) NOT NULL DEFAULT 0,\\n  `EMPTY_QUERIES` bigint(21) NOT NULL DEFAULT 0,\\n  `TOTAL_SSL_CONNECTIONS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MAX_STATEMENT_TIME_EXCEEDED` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de INNODB SYS TABLESTATS con las columnas de, ID DE LA TABLA, NOMBRE, ESTADÍSTICAS INICIALIZADAS, NÚMERO DE FILAS, TAMAÑO DEL ÍNDICE DE CLUST, OTRO TAMAÑO DEL ÍNDICE, CONTADOR MODIFICADO, AUTOINC, REF COUNT",
      "output": "('INNODB_SYS_TABLESTATS', \"CREATE TEMPORARY TABLE `INNODB_SYS_TABLESTATS` (\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(193) NOT NULL DEFAULT '',\\n  `STATS_INITIALIZED` varchar(193) NOT NULL DEFAULT '',\\n  `NUM_ROWS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `CLUST_INDEX_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `OTHER_INDEX_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MODIFIED_COUNTER` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `AUTOINC` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `REF_COUNT` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de CERRADURAS INNODB con las columnas de, bloquear id, bloquear trx id, modo de bloqueo, tipo de bloqueo, tabla de bloqueo, índice de bloqueo, espacio de bloqueo, página de bloqueo, registro de bloqueo, datos de bloqueo",
      "output": "('INNODB_LOCKS', \"CREATE TEMPORARY TABLE `INNODB_LOCKS` (\\n  `lock_id` varchar(81) NOT NULL DEFAULT ''  `lock_trx_id` varchar(18) NOT NULL DEFAULT '',\\n  `lock_mode` varchar(32) NOT NULL DEFAULT '',\\n  `lock_type` varchar(32) NOT NULL DEFAULT '',\\n  `lock_table` varchar(1024) NOT NULL DEFAULT '',\\n  `lock_index` varchar(1024) DEFAULT NULL,\\n  `lock_space` bigint(21) unsigned DEFAULT NULL,\\n  `lock_page` bigint(21) unsigned DEFAULT NULL,\\n  `lock_rec` bigint(21) unsigned DEFAULT NULL,\\n  `lock_data` varchar(8192) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de MUTEX DE INNODB con las columnas de, NOMBRE, CREAR ARCHIVO, CREAR LÍNEA, OS ESPERA",
      "output": "('INNODB_MUTEXES', \"CREATE TEMPORARY TABLE `INNODB_MUTEXES` (\\n  `NAME` varchar(4000) NOT NULL DEFAULT ''  `CREATE_FILE` varchar(4000) NOT NULL DEFAULT '',\\n  `CREATE_LINE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `OS_WAITS` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de INNODB CMPMEM con las columnas de, tamaño de página, instancia de grupo de búfer, páginas utilizadas, páginas libres, operaciones de reubicación, tiempo de reubicación",
      "output": "('INNODB_CMPMEM', 'CREATE TEMPORARY TABLE `INNODB_CMPMEM` (\\n  `page_size` int(5) NOT NULL DEFAULT 0  `buffer_pool_instance` int(11) NOT NULL DEFAULT 0,\\n  `pages_used` int(11) NOT NULL DEFAULT 0,\\n  `pages_free` int(11) NOT NULL DEFAULT 0,\\n  `relocation_ops` bigint(21) NOT NULL DEFAULT 0,\\n  `relocation_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de INNODB CMP POR ÍNDICE con las columnas de, nombre de base de datos, nombre de tabla, nombre de índice, comprimir operaciones, comprimir operaciones ok, comprimir tiempo, descomprimir operaciones, descomprimir tiempo",
      "output": "('INNODB_CMP_PER_INDEX', \"CREATE TEMPORARY TABLE `INNODB_CMP_PER_INDEX` (\\n  `database_name` varchar(192) NOT NULL DEFAULT ''  `table_name` varchar(192) NOT NULL DEFAULT '',\\n  `index_name` varchar(192) NOT NULL DEFAULT '',\\n  `compress_ops` int(11) NOT NULL DEFAULT 0,\\n  `compress_ops_ok` int(11) NOT NULL DEFAULT 0,\\n  `compress_time` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_ops` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de INNODB CMP con las columnas de, tamaño de página, comprimir operaciones, comprimir operaciones ok, comprimir tiempo, descomprimir operaciones, descomprimir tiempo",
      "output": "('INNODB_CMP', 'CREATE TEMPORARY TABLE `INNODB_CMP` (\\n  `page_size` int(5) NOT NULL DEFAULT 0  `compress_ops` int(11) NOT NULL DEFAULT 0,\\n  `compress_ops_ok` int(11) NOT NULL DEFAULT 0,\\n  `compress_time` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_ops` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de INNODB FT BORRADO con las columnas de, ID DOC",
      "output": "('INNODB_FT_DELETED', 'CREATE TEMPORARY TABLE `INNODB_FT_DELETED` (\\n  `DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de RESTABLECIMIENTO DE INNODB CMP con las columnas de, tamaño de página, comprimir operaciones, comprimir operaciones ok, comprimir tiempo, descomprimir operaciones, descomprimir tiempo",
      "output": "('INNODB_CMP_RESET', 'CREATE TEMPORARY TABLE `INNODB_CMP_RESET` (\\n  `page_size` int(5) NOT NULL DEFAULT 0  `compress_ops` int(11) NOT NULL DEFAULT 0,\\n  `compress_ops_ok` int(11) NOT NULL DEFAULT 0,\\n  `compress_time` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_ops` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de EL BLOQUEO INNODB ESPERA con las columnas de, solicitando trx id, id de bloqueo solicitado, bloqueando trx id, bloqueando id de bloqueo",
      "output": "('INNODB_LOCK_WAITS', \"CREATE TEMPORARY TABLE `INNODB_LOCK_WAITS` (\\n  `requesting_trx_id` varchar(18) NOT NULL DEFAULT ''  `requested_lock_id` varchar(81) NOT NULL DEFAULT '',\\n  `blocking_trx_id` varchar(18) NOT NULL DEFAULT '',\\n  `blocking_lock_id` varchar(81) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de TABLA DE ESTADÍSTICAS con las columnas de, ESQUEMA DE LA TABLA, NOMBRE DE LA TABLA, FILAS LEÍDAS, FILAS CAMBIADAS, FILAS CAMBIADAS X ÍNDICES",
      "output": "('TABLE_STATISTICS', \"CREATE TEMPORARY TABLE `TABLE_STATISTICS` (\\n  `TABLE_SCHEMA` varchar(192) NOT NULL DEFAULT ''  `TABLE_NAME` varchar(192) NOT NULL DEFAULT '',\\n  `ROWS_READ` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_CHANGED` bigint(21) NOT NULL DEFAULT 0,\\n  `ROWS_CHANGED_X_INDEXES` bigint(21) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de CIFRADO DE ESPACIOS DE TABLAS DE INNODB con las columnas de, ESPACIO, NOMBRE, ESQUEMA DE CIFRADO, SOLICITUDES DE SERVIDOR DE LLAVE, VERSIÓN DE CLAVE MÍNIMA, VERSIÓN DE CLAVE ACTUAL, NÚMERO DE PÁGINA DE ROTACIÓN DE CLAVE, NÚMERO DE PÁGINA MÁXIMA DE ROTACIÓN DE CLAVE, ID DE CLAVE ACTUAL, ROTACIÓN O DESCARGA",
      "output": "('INNODB_TABLESPACES_ENCRYPTION', 'CREATE TEMPORARY TABLE `INNODB_TABLESPACES_ENCRYPTION` (\\n  `SPACE` int(11) unsigned NOT NULL DEFAULT 0  `NAME` varchar(655) DEFAULT NULL,\\n  `ENCRYPTION_SCHEME` int(11) unsigned NOT NULL DEFAULT 0,\\n  `KEYSERVER_REQUESTS` int(11) unsigned NOT NULL DEFAULT 0,\\n  `MIN_KEY_VERSION` int(11) unsigned NOT NULL DEFAULT 0,\\n  `CURRENT_KEY_VERSION` int(11) unsigned NOT NULL DEFAULT 0,\\n  `KEY_ROTATION_PAGE_NUMBER` bigint(21) unsigned DEFAULT NULL,\\n  `KEY_ROTATION_MAX_PAGE_NUMBER` bigint(21) unsigned DEFAULT NULL,\\n  `CURRENT_KEY_ID` int(11) unsigned NOT NULL DEFAULT 0,\\n  `ROTATING_OR_FLUSHING` int(1) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de PÁGINA DE BÚFER INNODB LRU con las columnas de, ID DE GRUPO, POSICIÓN DE LRU, ESPACIO, NÚMERO DE PÁGINA, TIPO DE PÁGINA, TIPO DE LIMPIEZA, CONTEO DE ARREGLOS, TIENE HASH, MODIFICACIÓN MÁS NUEVA, MODIFICACIÓN MÁS ANTIGUA, TIEMPO DE ACCESO, NOMBRE DE LA TABLA, NOMBRE DEL ÍNDICE, NÚMERO DE REGISTROS, TAMAÑO DE DATOS, TAMAÑO COMPRIMIDO, COMPRIMIDO, IO FIX, ES ANTIGUO, RELOJ DE PÁGINA LIBRE",
      "output": "('INNODB_BUFFER_PAGE_LRU', 'CREATE TEMPORARY TABLE `INNODB_BUFFER_PAGE_LRU` (\\n  `POOL_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `LRU_POSITION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `SPACE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_NUMBER` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_TYPE` varchar(64) DEFAULT NULL,\\n  `FLUSH_TYPE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `FIX_COUNT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `IS_HASHED` varchar(3) DEFAULT NULL,\\n  `NEWEST_MODIFICATION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `OLDEST_MODIFICATION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `ACCESS_TIME` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `TABLE_NAME` varchar(1024) DEFAULT NULL,\\n  `INDEX_NAME` varchar(1024) DEFAULT NULL,\\n  `NUMBER_RECORDS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATA_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `COMPRESSED_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `COMPRESSED` varchar(3) DEFAULT NULL,\\n  `IO_FIX` varchar(64) DEFAULT NULL,\\n  `IS_OLD` varchar(3) DEFAULT NULL,\\n  `FREE_PAGE_CLOCK` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de CAMPOS DEL SISTEMA INNODB con las columnas de, ID DE ÍNDICE, NOMBRE, POS",
      "output": "('INNODB_SYS_FIELDS', \"CREATE TEMPORARY TABLE `INNODB_SYS_FIELDS` (\\n  `INDEX_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(193) NOT NULL DEFAULT '',\\n  `POS` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de RESTABLECIMIENTO DE INNODB CMPMEM con las columnas de, tamaño de página, instancia de grupo de búfer, páginas utilizadas, páginas libres, operaciones de reubicación, tiempo de reubicación",
      "output": "('INNODB_CMPMEM_RESET', 'CREATE TEMPORARY TABLE `INNODB_CMPMEM_RESET` (\\n  `page_size` int(5) NOT NULL DEFAULT 0  `buffer_pool_instance` int(11) NOT NULL DEFAULT 0,\\n  `pages_used` int(11) NOT NULL DEFAULT 0,\\n  `pages_free` int(11) NOT NULL DEFAULT 0,\\n  `relocation_ops` bigint(21) NOT NULL DEFAULT 0,\\n  `relocation_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de COLUMNAS INNODB SYS con las columnas de, ID DE LA MESA, NOMBRE, POS, MTYPE, PRTYPE, LEN",
      "output": "('INNODB_SYS_COLUMNS', \"CREATE TEMPORARY TABLE `INNODB_SYS_COLUMNS` (\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(193) NOT NULL DEFAULT '',\\n  `POS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MTYPE` int(11) NOT NULL DEFAULT 0,\\n  `PRTYPE` int(11) NOT NULL DEFAULT 0,\\n  `LEN` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de TABLA DE ÍNDICE INNODB FT con las columnas de, PALABRA, PRIMER ID DE DOC, ÚLTIMO ID DE DOC, NÚMERO DE DOC, ID DE DOC, POSICIÓN",
      "output": "('INNODB_FT_INDEX_TABLE', \"CREATE TEMPORARY TABLE `INNODB_FT_INDEX_TABLE` (\\n  `WORD` varchar(337) NOT NULL DEFAULT ''  `FIRST_DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `LAST_DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DOC_COUNT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `POSITION` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de INNODB CMP POR REINICIO DEL ÍNDICE con las columnas de, nombre de base de datos, nombre de tabla, nombre de índice, comprimir operaciones, comprimir operaciones ok, comprimir tiempo, descomprimir operaciones, descomprimir tiempo",
      "output": "('INNODB_CMP_PER_INDEX_RESET', \"CREATE TEMPORARY TABLE `INNODB_CMP_PER_INDEX_RESET` (\\n  `database_name` varchar(192) NOT NULL DEFAULT ''  `table_name` varchar(192) NOT NULL DEFAULT '',\\n  `index_name` varchar(192) NOT NULL DEFAULT '',\\n  `compress_ops` int(11) NOT NULL DEFAULT 0,\\n  `compress_ops_ok` int(11) NOT NULL DEFAULT 0,\\n  `compress_time` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_ops` int(11) NOT NULL DEFAULT 0,\\n  `uncompress_time` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de variables de usuario con las columnas de, NOMBRE DE VARIABLE, VALOR DE VARIABLE, TIPO DE VARIABLE, NOMBRE DEL CONJUNTO DE CARACTERES",
      "output": "('user_variables', \"CREATE TEMPORARY TABLE `user_variables` (\\n  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT ''  `VARIABLE_VALUE` varchar(2048) DEFAULT NULL,\\n  `VARIABLE_TYPE` varchar(64) NOT NULL DEFAULT '',\\n  `CHARACTER_SET_NAME` varchar(32) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de CACHE DEL ÍNDICE INNODB FT con las columnas de, PALABRA, PRIMER ID DE DOC, ÚLTIMO ID DE DOC, NÚMERO DE DOC, ID DE DOC, POSICIÓN",
      "output": "('INNODB_FT_INDEX_CACHE', \"CREATE TEMPORARY TABLE `INNODB_FT_INDEX_CACHE` (\\n  `WORD` varchar(337) NOT NULL DEFAULT ''  `FIRST_DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `LAST_DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DOC_COUNT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `POSITION` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de COLEGIOS EXTRANJEROS INNODB SYS con las columnas de, ID, PARA NOMBRE DE COLUMNA, REF NOMBRE DE COLUMNA, POS",
      "output": "('INNODB_SYS_FOREIGN_COLS', \"CREATE TEMPORARY TABLE `INNODB_SYS_FOREIGN_COLS` (\\n  `ID` varchar(193) NOT NULL DEFAULT ''  `FOR_COL_NAME` varchar(193) NOT NULL DEFAULT '',\\n  `REF_COL_NAME` varchar(193) NOT NULL DEFAULT '',\\n  `POS` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de INNODB FT SIENDO ELIMINADO con las columnas de, ID DOC",
      "output": "('INNODB_FT_BEING_DELETED', 'CREATE TEMPORARY TABLE `INNODB_FT_BEING_DELETED` (\\n  `DOC_ID` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ESTADÍSTICAS DEL GRUPO DE BÚFER INNODB con las columnas de, ID DE LA PISCINA, TAMAÑO DE LA PISCINA, BÚFERES LIBRES, PÁGINAS DE LA BASE DE DATOS, PÁGINAS DE LA BASE DE DATOS ANTIGUAS, PÁGINAS DE LA BASE DE DATOS MODIFICADAS, DESCOMPRESIÓN PENDIENTES, LECTURAS PENDIENTES, LRU DE LIMPIEZA PENDIENTE, LISTA DE LIMPIEZA PENDIENTE, PÁGINAS REALIZADAS JOVEN, PÁGINAS NO FORMADAS JOVEN, PÁGINAS REALIZADAS TARIFA JOVEN, PÁGINAS TARIFA NO HECHA JOVEN, NÚMERO DE PÁGINAS LEÍDAS, NÚMERO DE PÁGINAS CREADAS, NÚMERO DE PÁGINAS ESCRITAS, TARIFA DE LECTURA DE PÁGINAS, TARIFA DE CREACIÓN DE PÁGINAS, TARIFA DE PÁGINAS ESCRITAS, NÚMERO DE PÁGINAS OBTENER, TASA DE ACCESOS, JOVEN HACER POR MIL RECIBOS, NO JOVEN HACER POR MIL RECIBOS, NÚMERO PÁGINAS DE LECTURA ADELANTE, NÚMERO DE LECTURAS PREVIAS DESALOJADAS, TASA DE LECTURAS ADELANTE, TASA DE LECTURAS DESALOJADAS ADELANTE, TOTAL DE E/S DE LRU, CORRIENTE DE E/S DE LRU, TOTAL DESCOMPRIMIDO, CORRIENTE DESCOMPRIMIDA",
      "output": "('INNODB_BUFFER_POOL_STATS', 'CREATE TEMPORARY TABLE `INNODB_BUFFER_POOL_STATS` (\\n  `POOL_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `POOL_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `FREE_BUFFERS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATABASE_PAGES` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `OLD_DATABASE_PAGES` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `MODIFIED_DATABASE_PAGES` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PENDING_DECOMPRESS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PENDING_READS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PENDING_FLUSH_LRU` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PENDING_FLUSH_LIST` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGES_MADE_YOUNG` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGES_NOT_MADE_YOUNG` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGES_MADE_YOUNG_RATE` double NOT NULL DEFAULT 0,\\n  `PAGES_MADE_NOT_YOUNG_RATE` double NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_READ` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_CREATED` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_WRITTEN` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGES_READ_RATE` double NOT NULL DEFAULT 0,\\n  `PAGES_CREATE_RATE` double NOT NULL DEFAULT 0,\\n  `PAGES_WRITTEN_RATE` double NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_GET` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `HIT_RATE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `YOUNG_MAKE_PER_THOUSAND_GETS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NOT_YOUNG_MAKE_PER_THOUSAND_GETS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NUMBER_PAGES_READ_AHEAD` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `NUMBER_READ_AHEAD_EVICTED` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `READ_AHEAD_RATE` double NOT NULL DEFAULT 0,\\n  `READ_AHEAD_EVICTED_RATE` double NOT NULL DEFAULT 0,\\n  `LRU_IO_TOTAL` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `LRU_IO_CURRENT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `UNCOMPRESS_TOTAL` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `UNCOMPRESS_CURRENT` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de INNODB TRX con las columnas de, trx id, trx state, trx comenzó, trx solicitó id de bloqueo, trx espera comenzó, trx peso, trx mysql thread id, consulta trx, estado de operación trx, tablas trx en uso, tablas trx bloqueadas, estructuras de bloqueo trx, memoria de bloqueo trx bytes, filas de trx bloqueadas, filas de trx modificadas, tickets de concurrencia de trx, nivel de aislamiento de trx, verificaciones únicas de trx, verificaciones de clave externa de trx, último error de clave externa de trx, trx es de solo lectura, confirmación automática de trx sin bloqueo",
      "output": "('INNODB_TRX', \"CREATE TEMPORARY TABLE `INNODB_TRX` (\\n  `trx_id` varchar(18) NOT NULL DEFAULT ''  `trx_state` varchar(13) NOT NULL DEFAULT '',\\n  `trx_started` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `trx_requested_lock_id` varchar(81) DEFAULT NULL,\\n  `trx_wait_started` datetime DEFAULT NULL,\\n  `trx_weight` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_mysql_thread_id` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_query` varchar(1024) DEFAULT NULL,\\n  `trx_operation_state` varchar(64) DEFAULT NULL,\\n  `trx_tables_in_use` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_tables_locked` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_lock_structs` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_lock_memory_bytes` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_rows_locked` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_rows_modified` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_concurrency_tickets` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `trx_isolation_level` varchar(16) NOT NULL DEFAULT '',\\n  `trx_unique_checks` int(1) NOT NULL DEFAULT 0,\\n  `trx_foreign_key_checks` int(1) NOT NULL DEFAULT 0,\\n  `trx_last_foreign_key_error` varchar(256) DEFAULT NULL,\\n  `trx_is_read_only` int(1) NOT NULL DEFAULT 0,\\n  `trx_autocommit_non_locking` int(1) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de INNODB SYS EXTRANJERO con las columnas de, ID, PARA NOMBRE, REF NOMBRE, N COLS, TIPO",
      "output": "('INNODB_SYS_FOREIGN', \"CREATE TEMPORARY TABLE `INNODB_SYS_FOREIGN` (\\n  `ID` varchar(193) NOT NULL DEFAULT ''  `FOR_NAME` varchar(193) NOT NULL DEFAULT '',\\n  `REF_NAME` varchar(193) NOT NULL DEFAULT '',\\n  `N_COLS` int(11) unsigned NOT NULL DEFAULT 0,\\n  `TYPE` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de TABLAS DEL SISTEMA INNODB con las columnas de, ID DE LA TABLA, NOMBRE, BANDERA Y COLUMNA, ESPACIO, FORMATO DE FILA, TAMAÑO DE PÁGINA ZIP, TIPO DE ESPACIO",
      "output": "('INNODB_SYS_TABLES', \"CREATE TEMPORARY TABLE `INNODB_SYS_TABLES` (\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(655) NOT NULL DEFAULT '',\\n  `FLAG` int(11) NOT NULL DEFAULT 0,\\n  `N_COLS` int(11) NOT NULL DEFAULT 0,\\n  `SPACE` int(11) NOT NULL DEFAULT 0,\\n  `ROW_FORMAT` varchar(12) DEFAULT NULL,\\n  `ZIP_PAGE_SIZE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `SPACE_TYPE` varchar(10) DEFAULT NULL\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de PALABRA DE PARO PREDETERMINADA DE INNODB FT con las columnas de, valor",
      "output": "('INNODB_FT_DEFAULT_STOPWORD', \"CREATE TEMPORARY TABLE `INNODB_FT_DEFAULT_STOPWORD` (\\n  `value` varchar(18) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de CONFIGURACIÓN INNODB FT con las columnas de, VALOR CLAVE",
      "output": "('INNODB_FT_CONFIG', \"CREATE TEMPORARY TABLE `INNODB_FT_CONFIG` (\\n  `KEY` varchar(193) NOT NULL DEFAULT ''  `VALUE` varchar(193) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de PÁGINA DE BÚFER DE INNODB con las columnas de, ID DE GRUPO, ID DE BLOQUE, ESPACIO, NÚMERO DE PÁGINA, TIPO DE PÁGINA, TIPO DE DESCARGA, CONTEO DE ARREGLOS, TIENE HASH, MODIFICACIÓN MÁS NUEVA, MODIFICACIÓN MÁS ANTIGUA, TIEMPO DE ACCESO, NOMBRE DE LA TABLA, NOMBRE DEL ÍNDICE, NÚMERO DE REGISTROS, TAMAÑO DE DATOS, TAMAÑO COMPRIMIDO, ESTADO DE LA PÁGINA , IO FIX, ES ANTIGUO, RELOJ DE PÁGINA LIBRE",
      "output": "('INNODB_BUFFER_PAGE', 'CREATE TEMPORARY TABLE `INNODB_BUFFER_PAGE` (\\n  `POOL_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `BLOCK_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `SPACE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_NUMBER` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_TYPE` varchar(64) DEFAULT NULL,\\n  `FLUSH_TYPE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `FIX_COUNT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `IS_HASHED` varchar(3) DEFAULT NULL,\\n  `NEWEST_MODIFICATION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `OLDEST_MODIFICATION` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `ACCESS_TIME` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `TABLE_NAME` varchar(1024) DEFAULT NULL,\\n  `INDEX_NAME` varchar(1024) DEFAULT NULL,\\n  `NUMBER_RECORDS` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `DATA_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `COMPRESSED_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `PAGE_STATE` varchar(64) DEFAULT NULL,\\n  `IO_FIX` varchar(64) DEFAULT NULL,\\n  `IS_OLD` varchar(3) DEFAULT NULL,\\n  `FREE_PAGE_CLOCK` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ESPACIOS DE TABLAS DEL SISTEMA INNODB con las columnas de, ESPACIO, NOMBRE, BANDERA, FORMATO DE FILA, TAMAÑO DE PÁGINA, TAMAÑO DE PÁGINA ZIP, TIPO DE ESPACIO, TAMAÑO DE BLOQUE FS, TAMAÑO DE ARCHIVO, TAMAÑO ASIGNADO",
      "output": "('INNODB_SYS_TABLESPACES', \"CREATE TEMPORARY TABLE `INNODB_SYS_TABLESPACES` (\\n  `SPACE` int(11) unsigned NOT NULL DEFAULT 0  `NAME` varchar(655) NOT NULL DEFAULT '',\\n  `FLAG` int(11) unsigned NOT NULL DEFAULT 0,\\n  `ROW_FORMAT` varchar(22) DEFAULT NULL,\\n  `PAGE_SIZE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `ZIP_PAGE_SIZE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `SPACE_TYPE` varchar(10) DEFAULT NULL,\\n  `FS_BLOCK_SIZE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `FILE_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `ALLOCATED_SIZE` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de MÉTRICAS DE INNODB con las columnas de, NOMBRE, SUBSISTEMA, CUENTA, CUENTA MÁXIMA, CUENTA MÍNIMA, CUENTA PROMEDIO, REINICIO DE CUENTA, REINICIO DE CUENTA MÁXIMA, REINICIO DE CUENTA MÍNIMA, REINICIO DE CUENTA PROMEDIO, TIEMPO HABILITADO, TIEMPO DESHABILITADO, TIEMPO TRANSCURRIDO, REINICIO DE TIEMPO, ESTADO, TIPO, COMENTARIO",
      "output": "('INNODB_METRICS', \"CREATE TEMPORARY TABLE `INNODB_METRICS` (\\n  `NAME` varchar(193) NOT NULL DEFAULT ''  `SUBSYSTEM` varchar(193) NOT NULL DEFAULT '',\\n  `COUNT` bigint(21) NOT NULL DEFAULT 0,\\n  `MAX_COUNT` bigint(21) DEFAULT NULL,\\n  `MIN_COUNT` bigint(21) DEFAULT NULL,\\n  `AVG_COUNT` double DEFAULT NULL,\\n  `COUNT_RESET` bigint(21) NOT NULL DEFAULT 0,\\n  `MAX_COUNT_RESET` bigint(21) DEFAULT NULL,\\n  `MIN_COUNT_RESET` bigint(21) DEFAULT NULL,\\n  `AVG_COUNT_RESET` double DEFAULT NULL,\\n  `TIME_ENABLED` datetime DEFAULT NULL,\\n  `TIME_DISABLED` datetime DEFAULT NULL,\\n  `TIME_ELAPSED` bigint(21) DEFAULT NULL,\\n  `TIME_RESET` datetime DEFAULT NULL,\\n  `STATUS` varchar(193) NOT NULL DEFAULT '',\\n  `TYPE` varchar(193) NOT NULL DEFAULT '',\\n  `COMMENT` varchar(193) NOT NULL DEFAULT ''\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de ÍNDICES DEL SISTEMA INNODB con las columnas de, ID DE ÍNDICE, NOMBRE, ID DE TABLA, TIPO, N CAMPOS, NÚMERO DE PÁGINA, ESPACIO, UMBRAL DE COMBINACIÓN",
      "output": "('INNODB_SYS_INDEXES', \"CREATE TEMPORARY TABLE `INNODB_SYS_INDEXES` (\\n  `INDEX_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(193) NOT NULL DEFAULT '',\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `TYPE` int(11) NOT NULL DEFAULT 0,\\n  `N_FIELDS` int(11) NOT NULL DEFAULT 0,\\n  `PAGE_NO` int(11) NOT NULL DEFAULT 0,\\n  `SPACE` int(11) NOT NULL DEFAULT 0,\\n  `MERGE_THRESHOLD` int(11) NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de INNODB SISTEMA VIRTUAL con las columnas de, ID DE LA MESA, POS, POS BASE",
      "output": "('INNODB_SYS_VIRTUAL', 'CREATE TEMPORARY TABLE `INNODB_SYS_VIRTUAL` (\\n  `TABLE_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `POS` int(11) unsigned NOT NULL DEFAULT 0,\\n  `BASE_POS` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de FREGADO INNODB TABLESPACES con las columnas de, ESPACIO, NOMBRE, COMPRIMIDO, ÚLTIMA LIMPIEZA COMPLETADA, LIMPIEZA ACTUAL INICIADA, HILOS ACTIVOS DE LA LIMPIEZA ACTUAL, NÚMERO DE PÁGINA DE LA LIMPIEZA ACTUAL, NÚMERO MÁXIMO DE PÁGINA DE LA LIMPIEZA ACTUAL",
      "output": "('INNODB_TABLESPACES_SCRUBBING', 'CREATE TEMPORARY TABLE `INNODB_TABLESPACES_SCRUBBING` (\\n  `SPACE` bigint(21) unsigned NOT NULL DEFAULT 0  `NAME` varchar(655) DEFAULT NULL,\\n  `COMPRESSED` int(11) unsigned NOT NULL DEFAULT 0,\\n  `LAST_SCRUB_COMPLETED` datetime DEFAULT NULL,\\n  `CURRENT_SCRUB_STARTED` datetime DEFAULT NULL,\\n  `CURRENT_SCRUB_ACTIVE_THREADS` int(11) unsigned DEFAULT NULL,\\n  `CURRENT_SCRUB_PAGE_NUMBER` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `CURRENT_SCRUB_MAX_PAGE_NUMBER` bigint(21) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de EL SEMÁFORO INNODB SYS ESPERA con las columnas de, ID DE HILO, NOMBRE DE OBJETO, ARCHIVO, LÍNEA, TIEMPO DE ESPERA, OBJETO DE ESPERA, TIPO DE ESPERA, ID DE HILO DE TITULAR, ARCHIVO DE TITULAR, LÍNEA DE TITULAR, ARCHIVO CREADO, LÍNEA CREADA, HILO DE ESCRITOR, MODO DE RESERVA, LECTORES, BANDERA DE MESERO, PALABRA DE BLOQUEO, ÚLTIMO ARCHIVO DEL ESCRITOR, ÚLTIMA LÍNEA DEL ESCRITOR, CONTEO DE ESPERAS DEL SO",
      "output": "('INNODB_SYS_SEMAPHORE_WAITS', 'CREATE TEMPORARY TABLE `INNODB_SYS_SEMAPHORE_WAITS` (\\n  `THREAD_ID` bigint(21) unsigned NOT NULL DEFAULT 0  `OBJECT_NAME` varchar(4000) DEFAULT NULL,\\n  `FILE` varchar(4000) DEFAULT NULL,\\n  `LINE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `WAIT_TIME` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `WAIT_OBJECT` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `WAIT_TYPE` varchar(16) DEFAULT NULL,\\n  `HOLDER_THREAD_ID` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `HOLDER_FILE` varchar(4000) DEFAULT NULL,\\n  `HOLDER_LINE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `CREATED_FILE` varchar(4000) DEFAULT NULL,\\n  `CREATED_LINE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `WRITER_THREAD` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `RESERVATION_MODE` varchar(16) DEFAULT NULL,\\n  `READERS` int(11) unsigned NOT NULL DEFAULT 0,\\n  `WAITERS_FLAG` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `LOCK_WORD` bigint(21) unsigned NOT NULL DEFAULT 0,\\n  `LAST_WRITER_FILE` varchar(4000) DEFAULT NULL,\\n  `LAST_WRITER_LINE` int(11) unsigned NOT NULL DEFAULT 0,\\n  `OS_WAIT_COUNT` int(11) unsigned NOT NULL DEFAULT 0\\n) ENGINE=MEMORY DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de allstarfull con las columnas de, Id. de jugador, Id. de año, Núm. de juego, Id. de juego, Id. de equipo, Id. de lg, GP, Pos inicial",
      "output": "('allstarfull', 'CREATE TABLE `allstarfull` (\\n  `playerID` varchar(9) NOT NULL  `yearID` int(11) NOT NULL,\\n  `gameNum` int(11) NOT NULL,\\n  `gameID` varchar(12) DEFAULT NULL,\\n  `teamID` varchar(3) DEFAULT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `GP` int(11) DEFAULT NULL,\\n  `startingPos` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`yearID`,`gameNum`),\\n  KEY `allstarfull_teamID` (`teamID`),\\n  CONSTRAINT `allstarfull_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de apariciones con las columnas de, Id. de año, Id. de equipo, Id. de LG, Id. de jugador, G todos, G bateo, G defensa, G p, G c, G b, G b, G b, G ss, G lf, G cf, G rf, G de, G dh, G ph, G pr",
      "output": "('appearances', 'CREATE TABLE `appearances` (\\n  `yearID` int(11) NOT NULL  `teamID` varchar(3) NOT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `playerID` varchar(9) NOT NULL,\\n  `G_all` int(11) DEFAULT NULL,\\n  `G_batting` int(11) DEFAULT NULL,\\n  `G_defense` int(11) DEFAULT NULL,\\n  `G_p` int(11) DEFAULT NULL,\\n  `G_c` int(11) DEFAULT NULL,\\n  `G_1b` int(11) DEFAULT NULL,\\n  `G_2b` int(11) DEFAULT NULL,\\n  `G_3b` int(11) DEFAULT NULL,\\n  `G_ss` int(11) DEFAULT NULL,\\n  `G_lf` int(11) DEFAULT NULL,\\n  `G_cf` int(11) DEFAULT NULL,\\n  `G_rf` int(11) DEFAULT NULL,\\n  `G_of` int(11) DEFAULT NULL,\\n  `G_dh` int(11) DEFAULT NULL,\\n  `G_ph` int(11) DEFAULT NULL,\\n  `G_pr` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`teamID`,`playerID`),\\n  KEY `appearances_teamID` (`teamID`),\\n  KEY `appearances_playerID` (`playerID`),\\n  KEY `appearances_playerID_2` (`playerID`),\\n  CONSTRAINT `appearances_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de gerentes de premios con las columnas de, Id. de gerente, premio De, año Is, lg Id, empate, notas",
      "output": "('awardsmanagers', 'CREATE TABLE `awardsmanagers` (\\n  `managerID` varchar(10) NOT NULL  `awardID` varchar(25) NOT NULL,\\n  `yearID` int(11) NOT NULL,\\n  `lgID` varchar(2) NOT NULL,\\n  `tie` varchar(1) DEFAULT NULL,\\n  `notes` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`awardID`,`lgID`,`managerID`),\\n  KEY `awardsmanagers_managerID` (`managerID`),\\n  CONSTRAINT `awardsmanagers_ibfk_1` FOREIGN KEY (`managerID`) REFERENCES `managers` (`managerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premiosjugadores con las columnas de, ID de jugador, premio de, año Is, lg Id, empate, notas",
      "output": "('awardsplayers', 'CREATE TABLE `awardsplayers` (\\n  `playerID` varchar(9) NOT NULL  `awardID` varchar(255) NOT NULL,\\n  `yearID` int(11) NOT NULL,\\n  `lgID` varchar(2) NOT NULL,\\n  `tie` varchar(1) DEFAULT NULL,\\n  `notes` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`awardID`,`lgID`,`playerID`),\\n  KEY `awardsplayers_playerID` (`playerID`),\\n  CONSTRAINT `awardsplayers_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premiossharemanagers con las columnas de, premio de, año es, lg Id, manager Id, puntos ganados, puntos máx., votos primero",
      "output": "('awardssharemanagers', 'CREATE TABLE `awardssharemanagers` (\\n  `awardID` varchar(25) NOT NULL  `yearID` int(11) NOT NULL,\\n  `lgID` varchar(2) NOT NULL,\\n  `managerID` varchar(10) NOT NULL,\\n  `pointsWon` int(11) DEFAULT NULL,\\n  `pointsMax` int(11) DEFAULT NULL,\\n  `votesFirst` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`awardID`,`yearID`,`lgID`,`managerID`),\\n  KEY `awardssharemanagers_managerID` (`managerID`),\\n  CONSTRAINT `awardssharemanagers_ibfk_1` FOREIGN KEY (`managerID`) REFERENCES `managers` (`managerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de premioscompartirjugadores con las columnas de, premio de, año es, Id. de LG, Id. de jugador, puntos ganados, puntos máx., votos primero",
      "output": "('awardsshareplayers', 'CREATE TABLE `awardsshareplayers` (\\n  `awardID` varchar(25) NOT NULL  `yearID` int(11) NOT NULL,\\n  `lgID` varchar(2) NOT NULL,\\n  `playerID` varchar(9) NOT NULL,\\n  `pointsWon` int(11) DEFAULT NULL,\\n  `pointsMax` int(11) DEFAULT NULL,\\n  `votesFirst` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`awardID`,`yearID`,`lgID`,`playerID`),\\n  KEY `awardsshareplayers_playerID` (`playerID`),\\n  KEY `awardsshareplayers_playerID_2` (`playerID`),\\n  CONSTRAINT `awardsshareplayers_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de guata con las columnas de, Id. de jugador, Id. de año, período, Id. de equipo, Id. de LG, G, G de bateo, AB, R, H, B, B, HR, RBI, SB, CS, BB, SO, IBB, HBP, SH, SF, PIDP, G viejo",
      "output": "('batting', 'CREATE TABLE `batting` (\\n  `playerID` varchar(9) NOT NULL  `yearID` int(11) NOT NULL,\\n  `stint` int(11) NOT NULL,\\n  `teamID` varchar(3) DEFAULT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `G_batting` int(11) DEFAULT NULL,\\n  `AB` int(11) DEFAULT NULL,\\n  `R` int(11) DEFAULT NULL,\\n  `H` int(11) DEFAULT NULL,\\n  `2B` int(11) DEFAULT NULL,\\n  `3B` int(11) DEFAULT NULL,\\n  `HR` int(11) DEFAULT NULL,\\n  `RBI` int(11) DEFAULT NULL,\\n  `SB` int(11) DEFAULT NULL,\\n  `CS` int(11) DEFAULT NULL,\\n  `BB` int(11) DEFAULT NULL,\\n  `SO` int(11) DEFAULT NULL,\\n  `IBB` int(11) DEFAULT NULL,\\n  `HBP` int(11) DEFAULT NULL,\\n  `SH` int(11) DEFAULT NULL,\\n  `SF` int(11) DEFAULT NULL,\\n  `GIDP` int(11) DEFAULT NULL,\\n  `G_old` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`yearID`,`stint`),\\n  KEY `batting_teamID` (`teamID`),\\n  CONSTRAINT `batting_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `batting_ibfk_2` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de poste de bateo con las columnas de, Id. de año, ronda, Id. de jugador, Id. de equipo, Id. de LG, G, AB, R, H, B, B, HR, RBI, SB, CS, BB, SO, IBB, HBP, SH, SF, GIDP",
      "output": "('battingpost', 'CREATE TABLE `battingpost` (\\n  `yearID` int(11) NOT NULL  `round` varchar(10) NOT NULL,\\n  `playerID` varchar(9) NOT NULL,\\n  `teamID` varchar(3) DEFAULT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `AB` int(11) DEFAULT NULL,\\n  `R` int(11) DEFAULT NULL,\\n  `H` int(11) DEFAULT NULL,\\n  `2B` int(11) DEFAULT NULL,\\n  `3B` int(11) DEFAULT NULL,\\n  `HR` int(11) DEFAULT NULL,\\n  `RBI` int(11) DEFAULT NULL,\\n  `SB` int(11) DEFAULT NULL,\\n  `CS` int(11) DEFAULT NULL,\\n  `BB` int(11) DEFAULT NULL,\\n  `SO` int(11) DEFAULT NULL,\\n  `IBB` int(11) DEFAULT NULL,\\n  `HBP` int(11) DEFAULT NULL,\\n  `SH` int(11) DEFAULT NULL,\\n  `SF` int(11) DEFAULT NULL,\\n  `GIDP` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`round`,`playerID`),\\n  KEY `battingpost_teamID` (`teamID`),\\n  KEY `battingpost_playerID` (`playerID`),\\n  KEY `battingpost_playerID_2` (`playerID`),\\n  CONSTRAINT `battingpost_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `battingpost_ibfk_2` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de los team names con las columnas de, id, lgid, teamid, franchid, nombre, parque",
      "output": "('els_teamnames', 'CREATE TABLE `els_teamnames` (\\n  `id` int(11) NOT NULL  `lgid` varchar(2) NOT NULL,\\n  `teamid` varchar(3) NOT NULL,\\n  `franchid` varchar(3) DEFAULT NULL,\\n  `name` varchar(50) DEFAULT NULL,\\n  `park` varchar(255) DEFAULT NULL,\\n  KEY `els_teamnames_teamid` (`teamid`),\\n  KEY `els_teamnames_franchid` (`franchid`),\\n  CONSTRAINT `els_teamnames_ibfk_1` FOREIGN KEY (`teamid`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `els_teamnames_ibfk_2` FOREIGN KEY (`franchid`) REFERENCES `teamsfranchises` (`franchID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de fildeo con las columnas de, Id. de jugador, año Is, stint, Id. de equipo, Id. de LG, POS, G, GS, Inn Outs, PO, A, E, DP, PB, WP, SB, CS, Z",
      "output": "('fielding', 'CREATE TABLE `fielding` (\\n  `playerID` varchar(9) NOT NULL  `yearID` int(11) NOT NULL,\\n  `stint` int(11) NOT NULL,\\n  `teamID` varchar(3) DEFAULT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `POS` varchar(2) NOT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `GS` int(11) DEFAULT NULL,\\n  `InnOuts` int(11) DEFAULT NULL,\\n  `PO` int(11) DEFAULT NULL,\\n  `A` int(11) DEFAULT NULL,\\n  `E` int(11) DEFAULT NULL,\\n  `DP` int(11) DEFAULT NULL,\\n  `PB` int(11) DEFAULT NULL,\\n  `WP` int(11) DEFAULT NULL,\\n  `SB` int(11) DEFAULT NULL,\\n  `CS` int(11) DEFAULT NULL,\\n  `ZR` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`yearID`,`stint`,`POS`),\\n  KEY `fielding_teamID` (`teamID`),\\n  CONSTRAINT `fielding_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fielding_ibfk_2` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de campo de con las columnas de, jugador De, año Es, stint, Glf, Glf, Glf",
      "output": "('fieldingof', 'CREATE TABLE `fieldingof` (\\n  `playerID` varchar(9) NOT NULL  `yearID` int(11) NOT NULL,\\n  `stint` int(11) NOT NULL,\\n  `Glf` int(11) DEFAULT NULL,\\n  `Gcf` int(11) DEFAULT NULL,\\n  `Grf` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`yearID`,`stint`),\\n  CONSTRAINT `fieldingof_ibfk_1` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de puesto de campo con las columnas de, ID de jugador, ID de año, ID de equipo, ID de LG, ronda, POS, G, GS, Inn Outs, PO, A, E, DP, TP, PB, SB, CS",
      "output": "('fieldingpost', 'CREATE TABLE `fieldingpost` (\\n  `playerID` varchar(9) NOT NULL  `yearID` int(11) NOT NULL,\\n  `teamID` varchar(3) DEFAULT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `round` varchar(10) NOT NULL,\\n  `POS` varchar(2) NOT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `GS` int(11) DEFAULT NULL,\\n  `InnOuts` int(11) DEFAULT NULL,\\n  `PO` int(11) DEFAULT NULL,\\n  `A` int(11) DEFAULT NULL,\\n  `E` int(11) DEFAULT NULL,\\n  `DP` int(11) DEFAULT NULL,\\n  `TP` int(11) DEFAULT NULL,\\n  `PB` int(11) DEFAULT NULL,\\n  `SB` int(11) DEFAULT NULL,\\n  `CS` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`yearID`,`round`,`POS`),\\n  KEY `fieldingpost_teamID` (`teamID`),\\n  CONSTRAINT `fieldingpost_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `fieldingpost_ibfk_2` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Salón de la Fama con las columnas de, hof Id, año es, votado por, papeletas, necesarios, votos, admitidos, categoría",
      "output": "('halloffame', 'CREATE TABLE `halloffame` (\\n  `hofID` varchar(10) NOT NULL  `yearID` int(11) NOT NULL,\\n  `votedBy` varchar(64) DEFAULT NULL,\\n  `ballots` int(11) DEFAULT NULL,\\n  `needed` int(11) DEFAULT NULL,\\n  `votes` int(11) DEFAULT NULL,\\n  `inducted` varchar(1) DEFAULT NULL,\\n  `category` varchar(20) DEFAULT NULL,\\n  PRIMARY KEY (`hofID`,`yearID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de gerentes con las columnas de, Id. de gerente, Id. de año, Id. de equipo, Id. de lg, en temporada, G, W, L, rango, plyr Mgr",
      "output": "('managers', 'CREATE TABLE `managers` (\\n  `managerID` varchar(10) DEFAULT NULL  `yearID` int(11) NOT NULL,\\n  `teamID` varchar(3) NOT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `inseason` int(11) NOT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `rank` int(11) DEFAULT NULL,\\n  `plyrMgr` varchar(1) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`teamID`,`inseason`),\\n  KEY `managers_teamID` (`teamID`),\\n  KEY `managers_managerID` (`managerID`),\\n  CONSTRAINT `managers_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de medio gerente con las columnas de, Id. de gerente, Id. de año, Id. de equipo, Id. de lg, en temporada, mitad, G, W, L, rango",
      "output": "('managershalf', 'CREATE TABLE `managershalf` (\\n  `managerID` varchar(10) NOT NULL  `yearID` int(11) NOT NULL,\\n  `teamID` varchar(3) NOT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `inseason` int(11) DEFAULT NULL,\\n  `half` int(11) NOT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `rank` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`teamID`,`managerID`,`half`),\\n  KEY `managershalf_teamID` (`teamID`),\\n  KEY `managershalf_managerID` (`managerID`),\\n  CONSTRAINT `managershalf_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `managershalf_ibfk_2` FOREIGN KEY (`managerID`) REFERENCES `managers` (`managerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cabeceo con las columnas de, Id. de jugador, Id. de año, período, Id. de equipo, Id. de LG, W, L, G, GS, CG, SHO, SV, I Pouts, H, ER, HR, BB, SO, B A Opp, ERA, IBB, WP , HTA, BK, BFP, GF, R, SH, SF, GIDP",
      "output": "('pitching', 'CREATE TABLE `pitching` (\\n  `playerID` varchar(9) NOT NULL  `yearID` int(11) NOT NULL,\\n  `stint` int(11) NOT NULL,\\n  `teamID` varchar(3) DEFAULT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `GS` int(11) DEFAULT NULL,\\n  `CG` int(11) DEFAULT NULL,\\n  `SHO` int(11) DEFAULT NULL,\\n  `SV` int(11) DEFAULT NULL,\\n  `IPouts` int(11) DEFAULT NULL,\\n  `H` int(11) DEFAULT NULL,\\n  `ER` int(11) DEFAULT NULL,\\n  `HR` int(11) DEFAULT NULL,\\n  `BB` int(11) DEFAULT NULL,\\n  `SO` int(11) DEFAULT NULL,\\n  `BAOpp` int(11) DEFAULT NULL,\\n  `ERA` int(11) DEFAULT NULL,\\n  `IBB` int(11) DEFAULT NULL,\\n  `WP` int(11) DEFAULT NULL,\\n  `HBP` int(11) DEFAULT NULL,\\n  `BK` int(11) DEFAULT NULL,\\n  `BFP` int(11) DEFAULT NULL,\\n  `GF` int(11) DEFAULT NULL,\\n  `R` int(11) DEFAULT NULL,\\n  `SH` int(11) DEFAULT NULL,\\n  `SF` int(11) DEFAULT NULL,\\n  `GIDP` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`yearID`,`stint`),\\n  KEY `pitching_teamID` (`teamID`),\\n  CONSTRAINT `pitching_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `pitching_ibfk_2` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de poste de lanzamiento con las columnas de, Id. de jugador, Id. de año, ronda, Id. de equipo, Id. de LG, W, L, G, GS, CG, SHO, SV, I Pouts, H, ER, HR, BB, SO, B A Opp, ERA, IBB, WP , HTA, BK, BFP, GF, R, SH, SF, GIDP",
      "output": "('pitchingpost', 'CREATE TABLE `pitchingpost` (\\n  `playerID` varchar(9) NOT NULL  `yearID` int(11) NOT NULL,\\n  `round` varchar(10) NOT NULL,\\n  `teamID` varchar(3) DEFAULT NULL,\\n  `lgID` varchar(2) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `GS` int(11) DEFAULT NULL,\\n  `CG` int(11) DEFAULT NULL,\\n  `SHO` int(11) DEFAULT NULL,\\n  `SV` int(11) DEFAULT NULL,\\n  `IPouts` int(11) DEFAULT NULL,\\n  `H` int(11) DEFAULT NULL,\\n  `ER` int(11) DEFAULT NULL,\\n  `HR` int(11) DEFAULT NULL,\\n  `BB` int(11) DEFAULT NULL,\\n  `SO` int(11) DEFAULT NULL,\\n  `BAOpp` int(11) DEFAULT NULL,\\n  `ERA` int(11) DEFAULT NULL,\\n  `IBB` int(11) DEFAULT NULL,\\n  `WP` int(11) DEFAULT NULL,\\n  `HBP` int(11) DEFAULT NULL,\\n  `BK` int(11) DEFAULT NULL,\\n  `BFP` int(11) DEFAULT NULL,\\n  `GF` int(11) DEFAULT NULL,\\n  `R` int(11) DEFAULT NULL,\\n  `SH` int(11) DEFAULT NULL,\\n  `SF` int(11) DEFAULT NULL,\\n  `GIDP` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`yearID`,`round`),\\n  KEY `pitchingpost_teamID` (`teamID`),\\n  CONSTRAINT `pitchingpost_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `pitchingpost_ibfk_2` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de jugadores con las columnas de, ID de lahman, ID de jugador, ID de manager, ID de hof, año de nacimiento, mes de nacimiento, día de nacimiento, país de nacimiento, estado de nacimiento, ciudad de nacimiento, año de muerte, mes de muerte, día de muerte, país de muerte, estado de muerte, ciudad de muerte, nombre Nombre, nombre Apellido, nombre Nota, nombre dado, nombre Nick, peso, altura, bates, lanzamientos, debut, juego final, universidad, identificación de lahman, identificación de lahman, identificación retro, identificación de holtz, identificación de bbref",
      "output": "('players', 'CREATE TABLE `players` (\\n  `lahmanID` int(11) NOT NULL  `playerID` varchar(9) DEFAULT NULL,\\n  `managerID` varchar(10) DEFAULT NULL,\\n  `hofID` varchar(10) DEFAULT NULL,\\n  `birthYear` int(11) DEFAULT NULL,\\n  `birthMonth` int(11) DEFAULT NULL,\\n  `birthDay` int(11) DEFAULT NULL,\\n  `birthCountry` varchar(50) DEFAULT NULL,\\n  `birthState` varchar(2) DEFAULT NULL,\\n  `birthCity` varchar(50) DEFAULT NULL,\\n  `deathYear` int(11) DEFAULT NULL,\\n  `deathMonth` int(11) DEFAULT NULL,\\n  `deathDay` int(11) DEFAULT NULL,\\n  `deathCountry` varchar(50) DEFAULT NULL,\\n  `deathState` varchar(2) DEFAULT NULL,\\n  `deathCity` varchar(50) DEFAULT NULL,\\n  `nameFirst` varchar(50) DEFAULT NULL,\\n  `nameLast` varchar(50) DEFAULT NULL,\\n  `nameNote` varchar(255) DEFAULT NULL,\\n  `nameGiven` varchar(255) DEFAULT NULL,\\n  `nameNick` varchar(255) DEFAULT NULL,\\n  `weight` int(11) DEFAULT NULL,\\n  `height` int(11) DEFAULT NULL,\\n  `bats` varchar(1) DEFAULT NULL,\\n  `throws` varchar(1) DEFAULT NULL,\\n  `debut` varchar(10) DEFAULT NULL,\\n  `finalGame` varchar(10) DEFAULT NULL,\\n  `college` varchar(50) DEFAULT NULL,\\n  `lahman40ID` varchar(9) DEFAULT NULL,\\n  `lahman45ID` varchar(9) DEFAULT NULL,\\n  `retroID` varchar(9) DEFAULT NULL,\\n  `holtzID` varchar(9) DEFAULT NULL,\\n  `bbrefID` varchar(9) DEFAULT NULL,\\n  PRIMARY KEY (`lahmanID`),\\n  KEY `players_playerID` (`playerID`),\\n  KEY `players_hofID` (`hofID`),\\n  KEY `players_hofID_2` (`hofID`),\\n  CONSTRAINT `players_ibfk_1` FOREIGN KEY (`hofID`) REFERENCES `halloffame` (`hofID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de sueldos con las columnas de, Id. de año, Id. de equipo, Id. de lg, Id. de jugador, salario",
      "output": "('salaries', 'CREATE TABLE `salaries` (\\n  `yearID` int(11) NOT NULL  `teamID` varchar(3) NOT NULL,\\n  `lgID` varchar(2) NOT NULL,\\n  `playerID` varchar(9) NOT NULL,\\n  `salary` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`teamID`,`lgID`,`playerID`),\\n  KEY `salaries_teamID` (`teamID`),\\n  CONSTRAINT `salaries_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de escuelas con las columnas de, identificación de la escuela, nombre de la escuela, ciudad de la escuela, estado de la escuela, apodo de la escuela",
      "output": "('schools', 'CREATE TABLE `schools` (\\n  `schoolID` varchar(15) NOT NULL  `schoolName` varchar(255) DEFAULT NULL,\\n  `schoolCity` varchar(55) DEFAULT NULL,\\n  `schoolState` varchar(55) DEFAULT NULL,\\n  `schoolNick` varchar(55) DEFAULT NULL,\\n  PRIMARY KEY (`schoolID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de jugadores escolares con las columnas de, identificación del jugador, identificación de la escuela, año mínimo, año máximo",
      "output": "('schoolsplayers', 'CREATE TABLE `schoolsplayers` (\\n  `playerID` varchar(9) NOT NULL  `schoolID` varchar(15) NOT NULL,\\n  `yearMin` int(11) DEFAULT NULL,\\n  `yearMax` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`playerID`,`schoolID`),\\n  KEY `schoolsplayers_schoolID` (`schoolID`),\\n  CONSTRAINT `schoolsplayers_ibfk_1` FOREIGN KEY (`schoolID`) REFERENCES `schools` (`schoolID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `schoolsplayers_ibfk_2` FOREIGN KEY (`playerID`) REFERENCES `players` (`playerID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de seriepost con las columnas de, año Id, ronda, equipo Idwinner, lg Idwinner, equipo Idloser, lg Idloser, victorias, derrotas, empates",
      "output": "('seriespost', 'CREATE TABLE `seriespost` (\\n  `yearID` int(11) NOT NULL  `round` varchar(5) NOT NULL,\\n  `teamIDwinner` varchar(3) DEFAULT NULL,\\n  `lgIDwinner` varchar(2) DEFAULT NULL,\\n  `teamIDloser` varchar(3) DEFAULT NULL,\\n  `lgIDloser` varchar(2) DEFAULT NULL,\\n  `wins` int(11) DEFAULT NULL,\\n  `losses` int(11) DEFAULT NULL,\\n  `ties` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`round`),\\n  KEY `seriespost_teamIDwinner` (`teamIDwinner`),\\n  KEY `seriespost_teamIDloser` (`teamIDloser`),\\n  CONSTRAINT `seriespost_ibfk_1` FOREIGN KEY (`teamIDwinner`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `seriespost_ibfk_2` FOREIGN KEY (`teamIDloser`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de equipos con las columnas de, año Id, lg Id, equipo Id, franch Id, div Id, Rango, G, Ghome, W, L, Div Win, W C Win, Lg Win, W S Win, R, AB, H, B, B, HR, BB, SO, SB, CS, HBP, SF, RA, ER, ERA, CG, SHO, SV, I Pouts, HA, HRA, BBA, SOA, E, DP, FP, nombre, parque, asistencia, BPF, PPF , equipo Id BR, equipo Idlahman, equipo Idretro",
      "output": "('teams', 'CREATE TABLE `teams` (\\n  `yearID` int(11) NOT NULL  `lgID` varchar(2) NOT NULL,\\n  `teamID` varchar(3) NOT NULL,\\n  `franchID` varchar(3) DEFAULT NULL,\\n  `divID` varchar(1) DEFAULT NULL,\\n  `Rank` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `Ghome` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  `DivWin` varchar(1) DEFAULT NULL,\\n  `WCWin` varchar(1) DEFAULT NULL,\\n  `LgWin` varchar(1) DEFAULT NULL,\\n  `WSWin` varchar(1) DEFAULT NULL,\\n  `R` int(11) DEFAULT NULL,\\n  `AB` int(11) DEFAULT NULL,\\n  `H` int(11) DEFAULT NULL,\\n  `2B` int(11) DEFAULT NULL,\\n  `3B` int(11) DEFAULT NULL,\\n  `HR` int(11) DEFAULT NULL,\\n  `BB` int(11) DEFAULT NULL,\\n  `SO` int(11) DEFAULT NULL,\\n  `SB` int(11) DEFAULT NULL,\\n  `CS` int(11) DEFAULT NULL,\\n  `HBP` int(11) DEFAULT NULL,\\n  `SF` int(11) DEFAULT NULL,\\n  `RA` int(11) DEFAULT NULL,\\n  `ER` int(11) DEFAULT NULL,\\n  `ERA` int(11) DEFAULT NULL,\\n  `CG` int(11) DEFAULT NULL,\\n  `SHO` int(11) DEFAULT NULL,\\n  `SV` int(11) DEFAULT NULL,\\n  `IPouts` int(11) DEFAULT NULL,\\n  `HA` int(11) DEFAULT NULL,\\n  `HRA` int(11) DEFAULT NULL,\\n  `BBA` int(11) DEFAULT NULL,\\n  `SOA` int(11) DEFAULT NULL,\\n  `E` int(11) DEFAULT NULL,\\n  `DP` int(11) DEFAULT NULL,\\n  `FP` int(11) DEFAULT NULL,\\n  `name` varchar(50) DEFAULT NULL,\\n  `park` varchar(255) DEFAULT NULL,\\n  `attendance` int(11) DEFAULT NULL,\\n  `BPF` int(11) DEFAULT NULL,\\n  `PPF` int(11) DEFAULT NULL,\\n  `teamIDBR` varchar(3) DEFAULT NULL,\\n  `teamIDlahman45` varchar(3) DEFAULT NULL,\\n  `teamIDretro` varchar(3) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`lgID`,`teamID`),\\n  KEY `teams_teamID` (`teamID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de franquicias de equipos con las columnas de, Id francés, Nombre francés, activo, Y asociado",
      "output": "('teamsfranchises', 'CREATE TABLE `teamsfranchises` (\\n  `franchID` varchar(3) NOT NULL  `franchName` varchar(50) DEFAULT NULL,\\n  `active` varchar(2) DEFAULT NULL,\\n  `NAassoc` varchar(3) DEFAULT NULL,\\n  PRIMARY KEY (`franchID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de medio equipo con las columnas de, Id. de año, Id. de lg, Id. de equipo, Mitad, Id. de división, Ganancia de división, Rango, G, W, L",
      "output": "('teamshalf', 'CREATE TABLE `teamshalf` (\\n  `yearID` int(11) NOT NULL  `lgID` varchar(2) NOT NULL,\\n  `teamID` varchar(3) NOT NULL,\\n  `Half` varchar(1) NOT NULL,\\n  `divID` varchar(1) DEFAULT NULL,\\n  `DivWin` varchar(1) DEFAULT NULL,\\n  `Rank` int(11) DEFAULT NULL,\\n  `G` int(11) DEFAULT NULL,\\n  `W` int(11) DEFAULT NULL,\\n  `L` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`yearID`,`teamID`,`lgID`,`Half`),\\n  KEY `teamshalf_teamID` (`teamID`),\\n  CONSTRAINT `teamshalf_ibfk_1` FOREIGN KEY (`teamID`) REFERENCES `teams` (`teamID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de enlace de acto legal con las columnas de, ID de acto, ID de acto",
      "output": "('legalact_link', 'CREATE TABLE `legalact_link` (\\n  `actId1` int(11) NOT NULL  `actId2` int(11) NOT NULL,\\n  PRIMARY KEY (`actId1`,`actId2`),\\n  KEY `actId2` (`actId2`),\\n  CONSTRAINT `legalact_link_ibfk_1` FOREIGN KEY (`actId1`) REFERENCES `legalacts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `legalact_link_ibfk_2` FOREIGN KEY (`actId2`) REFERENCES `legalacts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de gente legalact con las columnas de, identificación de personas, identificación de acto",
      "output": "('legalact_people', 'CREATE TABLE `legalact_people` (\\n  `peopleId` int(11) NOT NULL  `actId` int(11) NOT NULL,\\n  PRIMARY KEY (`peopleId`,`actId`),\\n  KEY `actId` (`actId`),\\n  CONSTRAINT `legalact_people_ibfk_1` FOREIGN KEY (`peopleId`) REFERENCES `people` (`personId`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `legalact_people_ibfk_2` FOREIGN KEY (`actId`) REFERENCES `legalacts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de actos legales con las columnas de, id, hash, actualización, tribunal, tipo de caso, número de caso, año del acto, juez, tipo de acto, número de acto, fecha de inicio, fecha legal, estado, vínculo del acto, fecha del motivo, vínculo del motivo, tribunal superior, número de salida, año Tribunal superior, tipo de documento, fecha de envío, resultado de la apelación",
      "output": "('legalacts', 'CREATE TABLE `legalacts` (\\n  `id` int(11) NOT NULL  `hash` char(32) NOT NULL,\\n  `update` timestamp NOT NULL DEFAULT current_timestamp(),\\n  `Court` varchar(100) DEFAULT NULL,\\n  `CaseKind` varchar(50) DEFAULT NULL,\\n  `CaseNumber` smallint(6) DEFAULT NULL,\\n  `ActYear` smallint(6) DEFAULT NULL,\\n  `Judge` varchar(255) DEFAULT NULL,\\n  `ActKind` varchar(20) DEFAULT NULL,\\n  `ActNumber` smallint(6) DEFAULT NULL,\\n  `StartDate` date DEFAULT NULL,\\n  `LegalDate` date DEFAULT NULL,\\n  `Status` varchar(20) DEFAULT NULL,\\n  `ActLink` tinyint(1) NOT NULL DEFAULT 0,\\n  `MotiveDate` date DEFAULT NULL,\\n  `MotiveLink` tinyint(1) NOT NULL DEFAULT 0,\\n  `HighCourt` varchar(100) DEFAULT NULL,\\n  `OutNumber` smallint(6) DEFAULT NULL,\\n  `YearHigherCourt` smallint(6) DEFAULT NULL,\\n  `TypeOfDocument` varchar(100) DEFAULT NULL,\\n  `SendDate` date DEFAULT NULL,\\n  `ResultOfAppeal` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de gente con las columnas de, ID de persona, nombre, jurado, tribunal",
      "output": "('people', 'CREATE TABLE `people` (\\n  `personId` int(11) NOT NULL AUTO_INCREMENT  `name` varchar(255) NOT NULL,\\n  `jury` tinyint(1) NOT NULL DEFAULT 0,\\n  `court` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`personId`)\\n) ENGINE=InnoDB AUTO_INCREMENT=3790 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de raspado con las columnas de, ID de acto, descripción del arreglo, colaborador",
      "output": "('scrapefix', 'CREATE TABLE `scrapefix` (\\n  `actId` int(11) NOT NULL  `fix_description` text NOT NULL,\\n  `contributor` varchar(50) DEFAULT NULL,\\n  PRIMARY KEY (`actId`),\\n  CONSTRAINT `scrapefix_ibfk_1` FOREIGN KEY (`actId`) REFERENCES `legalacts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Examen con las columnas de, ID, Fecha de examen, a C L Ig G, a C L Ig M, ANA, A N A Patrón, a C L Ig A, Diagnóstico, KCT, RVVT, LAC, Síntomas, Trombosis",
      "output": "('Examination', 'CREATE TABLE `Examination` (\\n  `ID` int(11) DEFAULT NULL  `Examination Date` date DEFAULT NULL,\\n  `aCL IgG` float DEFAULT NULL,\\n  `aCL IgM` float DEFAULT NULL,\\n  `ANA` int(11) DEFAULT NULL,\\n  `ANA Pattern` varchar(255) DEFAULT NULL,\\n  `aCL IgA` int(11) DEFAULT NULL,\\n  `Diagnosis` varchar(255) DEFAULT NULL,\\n  `KCT` varchar(255) DEFAULT NULL,\\n  `RVVT` varchar(255) DEFAULT NULL,\\n  `LAC` varchar(255) DEFAULT NULL,\\n  `Symptoms` varchar(255) DEFAULT NULL,\\n  `Thrombosis` int(11) DEFAULT NULL,\\n  KEY `Examination_ID` (`ID`),\\n  CONSTRAINT `Examination_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `Patient` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Laboratorio con las columnas de, ID, Fecha, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T BIL, T CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG , PIC, TAT, TAT, U PRO, IGG, IGA, IGM, CRP, RA, RF, C, C, RNP, SM, SC, SSA, SSB, CENTROMEA, DNA, DNA II",
      "output": "('Laboratory', \"CREATE TABLE `Laboratory` (\\n  `ID` int(11) NOT NULL DEFAULT 0  `Date` date NOT NULL DEFAULT '0000-00-00',\\n  `GOT` int(11) DEFAULT NULL,\\n  `GPT` int(11) DEFAULT NULL,\\n  `LDH` int(11) DEFAULT NULL,\\n  `ALP` int(11) DEFAULT NULL,\\n  `TP` decimal(5,1) DEFAULT NULL,\\n  `ALB` decimal(5,1) DEFAULT NULL,\\n  `UA` decimal(5,1) DEFAULT NULL,\\n  `UN` int(11) DEFAULT NULL,\\n  `CRE` decimal(5,1) DEFAULT NULL,\\n  `T-BIL` decimal(5,1) DEFAULT NULL,\\n  `T-CHO` int(11) DEFAULT NULL,\\n  `TG` int(11) DEFAULT NULL,\\n  `CPK` int(11) DEFAULT NULL,\\n  `GLU` int(11) DEFAULT NULL,\\n  `WBC` decimal(5,1) DEFAULT NULL,\\n  `RBC` decimal(5,1) DEFAULT NULL,\\n  `HGB` decimal(5,1) DEFAULT NULL,\\n  `HCT` decimal(5,1) DEFAULT NULL,\\n  `PLT` int(11) DEFAULT NULL,\\n  `PT` decimal(5,1) DEFAULT NULL,\\n  `APTT` int(11) DEFAULT NULL,\\n  `FG` decimal(5,1) DEFAULT NULL,\\n  `PIC` int(11) DEFAULT NULL,\\n  `TAT` int(11) DEFAULT NULL,\\n  `TAT2` int(11) DEFAULT NULL,\\n  `U-PRO` varchar(255) DEFAULT NULL,\\n  `IGG` int(11) DEFAULT NULL,\\n  `IGA` int(11) DEFAULT NULL,\\n  `IGM` int(11) DEFAULT NULL,\\n  `CRP` varchar(255) DEFAULT NULL,\\n  `RA` varchar(255) DEFAULT NULL,\\n  `RF` varchar(255) DEFAULT NULL,\\n  `C3` int(11) DEFAULT NULL,\\n  `C4` int(11) DEFAULT NULL,\\n  `RNP` varchar(255) DEFAULT NULL,\\n  `SM` varchar(255) DEFAULT NULL,\\n  `SC170` varchar(255) DEFAULT NULL,\\n  `SSA` varchar(255) DEFAULT NULL,\\n  `SSB` varchar(255) DEFAULT NULL,\\n  `CENTROMEA` varchar(255) DEFAULT NULL,\\n  `DNA` varchar(255) DEFAULT NULL,\\n  `DNA-II` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ID`,`Date`),\\n  KEY `Laboratory_ID` (`ID`),\\n  CONSTRAINT `Laboratory_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `Patient` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Paciente con las columnas de, DNI, SEXO, Cumpleaños, Descripción, Primera Cita, Admisión, Diagnóstico",
      "output": "('Patient', 'CREATE TABLE `Patient` (\\n  `ID` int(11) NOT NULL DEFAULT 0  `SEX` varchar(255) DEFAULT NULL,\\n  `Birthday` date DEFAULT NULL,\\n  `Description` date DEFAULT NULL,\\n  `First Date` date DEFAULT NULL,\\n  `Admission` varchar(255) DEFAULT NULL,\\n  `Diagnosis` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de algoritmo con las columnas de, id, algoritmo, tipo, publicado, recuento de referencias, clasificación, propagación, función característica, uso en la clasificación, clasificación de confianza, nota",
      "output": "('algorithm', \"CREATE TABLE `algorithm` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `algorithm` varchar(255) NOT NULL COMMENT 'Algorithm name',\\n  `type` varchar(255) DEFAULT NULL COMMENT 'Rough category',\\n  `released` int(4) DEFAULT NULL COMMENT 'Publication date',\\n  `reference_count` int(11) DEFAULT NULL COMMENT 'Reference count on Google Scholar',\\n  `ranking` decimal(10,5) DEFAULT NULL COMMENT 'Ranking based on accuracy. Higher value is better',\\n  `propagation` varchar(255) DEFAULT NULL COMMENT 'Used information propagation',\\n  `feature_function` varchar(255) DEFAULT NULL COMMENT 'Used feature function',\\n  `use_in_ranking` int(11) DEFAULT 1,\\n  `rank_confidence` float DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL COMMENT 'Free text',\\n  PRIMARY KEY (`id`),\\n  KEY `algorithm` (`algorithm`)\\n) ENGINE=InnoDB AUTO_INCREMENT=92 DEFAULT CHARSET=utf8 COMMENT='Hand entered data about relational algorithms/implementations.'\")"
    },
    {
      "input": "Una tabla de autor con las columnas de, autor texto, autor url, tiene intervalo de confianza",
      "output": "('author', \"CREATE TABLE `author` (\\n  `author_text` varchar(255) NOT NULL COMMENT 'Reference name'  `author_url` varchar(2550) NOT NULL COMMENT 'Reference URL',\\n  `has_confidence_interval` int(1) DEFAULT 0,\\n  PRIMARY KEY (`author_text`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de base de datos con las columnas de, nombre de la base de datos, nombre del conjunto de datos, es la versión principal, está oculto, nombre del cargador, URL del cargador, fecha de carga, URL de descarga, modificaciones, tiene bucle, recuento nulo, tabla de destino, columna de destino, ID de destino, marca de tiempo de destino, tarea, ruta de img",
      "output": "('database', \"CREATE TABLE `database` (\\n  `database_name` varchar(255) NOT NULL COMMENT 'Name of the dataset in the database.\\\\n'  `dataset_name` varchar(255) NOT NULL COMMENT 'The name used in the web page.',\\n  `is_primary_version` int(1) DEFAULT 0 COMMENT 'A dataset can have multiple versions, show this version as the default?',\\n  `is_hidden` int(1) DEFAULT 0 COMMENT 'Hide it from the web page.',\\n  `uploader_name` varchar(255) DEFAULT NULL COMMENT 'Name of the person who uploaded the dataset.',\\n  `uploader_url` varchar(500) DEFAULT NULL COMMENT 'URL to the uploader.',\\n  `upload_date` datetime DEFAULT NULL COMMENT 'Date when the dataset was uploaded.',\\n  `download_url` varchar(255) DEFAULT NULL COMMENT 'URL to web site, where the dataset can be downloaded.',\\n  `modifications` varchar(2550) DEFAULT NULL COMMENT 'Description of the changes performed on the dataset.',\\n  `has_loop` int(1) DEFAULT NULL COMMENT 'Does there exist a loop over more than a single table if we treat foreign keys as an undirected graph?',\\n  `null_count` int(11) DEFAULT NULL COMMENT 'Count of missing values in the database.',\\n  `target_table` varchar(255) DEFAULT NULL COMMENT 'The column to predict.',\\n  `target_column` varchar(255) DEFAULT NULL COMMENT 'Identifier of the target column.',\\n  `target_id` varchar(255) DEFAULT NULL COMMENT 'The target table - the place where the target column resides.',\\n  `target_timestamp` varchar(255) DEFAULT NULL COMMENT 'When to perform the prediction?',\\n  `task` varchar(255) DEFAULT NULL COMMENT 'The task that is performed on the target column. Generally either classification or regression.',\\n  `img_path` varchar(255) DEFAULT NULL COMMENT 'Filename of the schema image on the server.',\\n  PRIMARY KEY (`database_name`),\\n  KEY `dataset_name` (`dataset_name`),\\n  CONSTRAINT `database_ibfk_1` FOREIGN KEY (`dataset_name`) REFERENCES `dataset` (`dataset_name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Hand entered data about individual versions of the datasets.'\")"
    },
    {
      "input": "Una tabla de conjunto de datos con las columnas de, nombre del conjunto de datos, dominio, descripción, nombres alternativos, recuento de publicaciones, recuento de filas original, nombre de archivo bibtex, es artificial, tiene una sola entidad, es compatible con gráficos, taxonomía de cosas, taxonomía de gráficos, licencia, URL de licencia",
      "output": "('dataset', \"CREATE TABLE `dataset` (\\n  `dataset_name` varchar(255) NOT NULL COMMENT 'Name of the database on the server.'  `domain` varchar(255) NOT NULL COMMENT 'An approximate categorization of the dataset into industries. ',\\n  `description` text DEFAULT NULL COMMENT 'A brief description of the dataset.',\\n  `alternative_names` varchar(255) DEFAULT NULL COMMENT 'Sometimes the dataset can be known under several names. List the alternatives.',\\n  `publication_count` int(11) DEFAULT NULL COMMENT 'Offline hand entered value that is used to identify the most popular datasets.',\\n  `original_row_count` int(11) DEFAULT NULL COMMENT 'Count of the rows over all the tables in the database as reported by the author of the dataset.',\\n  `bibtex_filename` varchar(255) DEFAULT NULL COMMENT 'Filename of the BibTex file on the server.',\\n  `is_artificial` int(1) DEFAULT NULL COMMENT 'The dataset can be either synthetic or a measurement of the real world.',\\n  `has_single_entity` int(1) DEFAULT NULL,\\n  `is_graph_friendly` int(1) NOT NULL COMMENT 'Subjective. If transitive relationships have to be modeled or label propagation have to be employed, we say that graph aproach is desirable.',\\n  `thing_taxonomy` varchar(255) DEFAULT NULL COMMENT 'Categorization of the target table into 8 categories based on http://schema.org/Thing',\\n  `graph_taxonomy` varchar(255) DEFAULT NULL COMMENT 'Is the target table an Entity or a Relationship? Heuristic: Does the target table reference the same table twice?',\\n  `license` varchar(255) DEFAULT NULL,\\n  `license_url` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`dataset_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Hand entered data about the datasets.'\")"
    },
    {
      "input": "Una tabla de información con las columnas de, nombre de la base de datos, nombre del conjunto de datos, es la versión principal, está oculto, es artificial, dominio, descripción, nombres alternativos, número de publicaciones, tamaño de la base de datos, número de tablas, número de filas, número máximo de filas, número nulo, número de columnas, número geográfico, número de fechas , conteo de lob, conteo de cadenas, conteo numérico, conteo de clave principal, conteo de clave externa, conteo de clave externa compuesta, conteo de tabla autorreferencial, tiene bucle, tabla de destino, columna de destino, id de destino, marca de tiempo de destino, tarea, conteo de instancias, destino duplicado id, tiene bucle de tabla de destino, recuento de clases, relación de clase mayoritaria, nombre del cargador, URL del cargador, fecha de carga, URL de descarga, modificaciones, nombre de archivo bibtex, nombre de archivo img, nombre de archivo mwb",
      "output": "('information', \"CREATE TABLE `information` (\\n  `database_name` varchar(64) NOT NULL COMMENT 'Name of database on MySQL server.'  `dataset_name` varchar(255) COMMENT 'The name used in the web page.',\\n  `is_primary_version` int(1) DEFAULT 0 COMMENT 'A dataset can have multiple versions, show this version as the default?',\\n  `is_hidden` int(1) DEFAULT 0 COMMENT 'Hide it from the web page.',\\n  `is_artificial` int(1) DEFAULT NULL COMMENT 'The dataset can be either synthetic or a measurement of the real world.',\\n  `domain` varchar(255) COMMENT 'An approximate categorization of the dataset into industries. ',\\n  `description` text DEFAULT NULL COMMENT 'A brief description of the dataset.',\\n  `alternative_names` varchar(255) DEFAULT NULL COMMENT 'Sometimes the dataset can be known under several names. List the alternatives.',\\n  `publication_count` int(11) DEFAULT NULL COMMENT 'Offline hand entered value that is used to identify the most popular datasets.',\\n  `database_size` decimal(46,1) DEFAULT NULL COMMENT 'Database size in MB as reported by MariaDB. The size includes indexes.',\\n  `table_count` bigint(21) DEFAULT 0 COMMENT 'Count of the tables in the database.',\\n  `row_count` decimal(43,0) DEFAULT NULL COMMENT 'Count of rows over all the tables in the database.',\\n  `row_max` bigint(21) unsigned DEFAULT NULL COMMENT 'Count of rows in the tallest table in the database.',\\n  `null_count` int(11) DEFAULT NULL COMMENT 'Count of missing values in the database.',\\n  `column_count` bigint(21) DEFAULT 0 COMMENT 'Count of columns over all the tables in the database.',\\n  `geo_count` bigint(21) DEFAULT NULL COMMENT 'Count of geography related data types in the database.',\\n  `date_count` bigint(21) DEFAULT NULL COMMENT 'Count of time, date, datetime and timestamp columns in the database.',\\n  `lob_count` bigint(21) DEFAULT NULL COMMENT 'Count of large objects in the database like images or text attributes.',\\n  `string_count` bigint(21) DEFAULT NULL COMMENT 'Count of string columns in the database.',\\n  `numeric_count` bigint(21) DEFAULT NULL COMMENT 'Count of numerical attributes in the database. Includes integers, floats,...',\\n  `primary_key_count` bigint(21) DEFAULT NULL COMMENT 'Count of indexes in the database.',\\n  `foreign_key_count` bigint(21) DEFAULT NULL COMMENT 'Count of foreign keys.',\\n  `composite_foreign_key_count` bigint(21) DEFAULT NULL COMMENT 'Count of primary keys that are composed of two or more columns.',\\n  `self_referencing_table_count` bigint(21) DEFAULT NULL COMMENT 'Count of tables, whose foreign key references the primary key of the table.',\\n  `has_loop` int(1) DEFAULT NULL COMMENT 'Does there exist a loop over more than a single table if we treat foreign keys as an undirected graph?',\\n  `target_table` varchar(255) DEFAULT NULL COMMENT 'The column to predict.',\\n  `target_column` varchar(255) DEFAULT NULL COMMENT 'Identifier of the target column.',\\n  `target_id` varchar(255) DEFAULT NULL COMMENT 'The target table - the place where the target column resides.',\\n  `target_timestamp` varchar(255) DEFAULT NULL COMMENT 'When to perform the prediction?',\\n  `task` varchar(255) DEFAULT NULL COMMENT 'The task that is performed on the target column. Generally either classification or regression.',\\n  `instance_count` bigint(21) unsigned DEFAULT NULL COMMENT 'Count of rows in the target table.',\\n  `duplicate_target_id` int(1) DEFAULT NULL COMMENT 'Does the target table contain duplicate target_id?',\\n  `has_target_table_loop` int(1) DEFAULT NULL COMMENT 'Does the target table and some other table create a loop?',\\n  `class_count` bigint(21),\\n  `majority_class_ratio` decimal(24,4) DEFAULT NULL COMMENT 'Proportion of majority class in the target column.',\\n  `uploader_name` varchar(255) DEFAULT NULL COMMENT 'Name of the person who uploaded the dataset.',\\n  `uploader_url` varchar(500) DEFAULT NULL COMMENT 'URL to the uploader.',\\n  `upload_date` datetime DEFAULT NULL COMMENT 'Date when the dataset was uploaded.',\\n  `download_url` varchar(255) DEFAULT NULL COMMENT 'URL to web site, where the dataset can be downloaded.',\\n  `modifications` varchar(2550) DEFAULT NULL COMMENT 'Description of the changes performed on the dataset.',\\n  `bibtex_filename` varchar(255) DEFAULT NULL COMMENT 'Filename of the BibTex file on the server.',\\n  `img_filename` binary(0) DEFAULT NULL,\\n  `mwb_filename` binary(0) DEFAULT NULL,\\n  PRIMARY KEY (`database_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Automatically generated meta data about the datasets.'\")"
    },
    {
      "input": "Una tabla de informacion bkp con las columnas de, nombre de la base de datos, nombre del conjunto de datos, es la versión principal, está oculto, es artificial, dominio, descripción, nombres alternativos, número de publicaciones, tamaño de la base de datos, número de tablas, número de filas, número máximo de filas, número nulo, número de columnas, número geográfico, número de fechas , conteo de lob, conteo de cadenas, conteo numérico, conteo de clave principal, conteo de clave externa, conteo de clave externa compuesta, conteo de tabla autorreferencial, tiene bucle, tabla de destino, columna de destino, id de destino, marca de tiempo de destino, tarea, conteo de instancias, destino duplicado id, tiene bucle de tabla de destino, recuento de clases, relación de clase mayoritaria, nombre del cargador, URL del cargador, fecha de carga, URL de descarga, modificaciones, nombre de archivo bibtex, nombre de archivo img, nombre de archivo mwb",
      "output": "('information_bkp', \"CREATE TABLE `information_bkp` (\\n  `database_name` varchar(64) NOT NULL COMMENT 'Name of database on MySQL server.'  `dataset_name` varchar(255) COMMENT 'The name used in the web page.',\\n  `is_primary_version` int(1) DEFAULT 0 COMMENT 'A dataset can have multiple versions, show this version as the default?',\\n  `is_hidden` int(1) DEFAULT 0 COMMENT 'Hide it from the web page.',\\n  `is_artificial` int(1) DEFAULT NULL COMMENT 'The dataset can be either synthetic or a measurement of the real world.',\\n  `domain` varchar(255) COMMENT 'An approximate categorization of the dataset into industries. ',\\n  `description` text DEFAULT NULL COMMENT 'A brief description of the dataset.',\\n  `alternative_names` varchar(255) DEFAULT NULL COMMENT 'Sometimes the dataset can be known under several names. List the alternatives.',\\n  `publication_count` int(11) DEFAULT NULL COMMENT 'Offline hand entered value that is used to identify the most popular datasets.',\\n  `database_size` decimal(46,1) DEFAULT NULL COMMENT 'Database size in MB as reported by MariaDB. The size includes indexes.',\\n  `table_count` bigint(21) DEFAULT 0 COMMENT 'Count of the tables in the database.',\\n  `row_count` decimal(43,0) DEFAULT NULL COMMENT 'Count of rows over all the tables in the database.',\\n  `row_max` bigint(21) unsigned DEFAULT NULL COMMENT 'Count of rows in the tallest table in the database.',\\n  `null_count` int(11) DEFAULT NULL COMMENT 'Count of missing values in the database.',\\n  `column_count` bigint(21) DEFAULT 0 COMMENT 'Count of columns over all the tables in the database.',\\n  `geo_count` bigint(21) DEFAULT NULL COMMENT 'Count of geography related data types in the database.',\\n  `date_count` bigint(21) DEFAULT NULL COMMENT 'Count of time, date, datetime and timestamp columns in the database.',\\n  `lob_count` bigint(21) DEFAULT NULL COMMENT 'Count of large objects in the database like images or text attributes.',\\n  `string_count` bigint(21) DEFAULT NULL COMMENT 'Count of string columns in the database.',\\n  `numeric_count` bigint(21) DEFAULT NULL COMMENT 'Count of numerical attributes in the database. Includes integers, floats,...',\\n  `primary_key_count` bigint(21) DEFAULT NULL COMMENT 'Count of indexes in the database.',\\n  `foreign_key_count` bigint(21) DEFAULT NULL COMMENT 'Count of foreign keys.',\\n  `composite_foreign_key_count` bigint(21) DEFAULT NULL COMMENT 'Count of primary keys that are composed of two or more columns.',\\n  `self_referencing_table_count` bigint(21) DEFAULT NULL COMMENT 'Count of tables, whose foreign key references the primary key of the table.',\\n  `has_loop` int(1) DEFAULT NULL COMMENT 'Does there exist a loop over more than a single table if we treat foreign keys as an undirected graph?',\\n  `target_table` varchar(255) DEFAULT NULL COMMENT 'The column to predict.',\\n  `target_column` varchar(255) DEFAULT NULL COMMENT 'Identifier of the target column.',\\n  `target_id` varchar(255) DEFAULT NULL COMMENT 'The target table - the place where the target column resides.',\\n  `target_timestamp` varchar(255) DEFAULT NULL COMMENT 'When to perform the prediction?',\\n  `task` varchar(255) DEFAULT NULL COMMENT 'The task that is performed on the target column. Generally either classification or regression.',\\n  `instance_count` bigint(21) unsigned DEFAULT NULL COMMENT 'Count of rows in the target table.',\\n  `duplicate_target_id` int(1) DEFAULT NULL COMMENT 'Does the target table contain duplicate target_id?',\\n  `has_target_table_loop` int(1) DEFAULT NULL COMMENT 'Does the target table and some other table create a loop?',\\n  `class_count` bigint(21),\\n  `majority_class_ratio` decimal(24,4) DEFAULT NULL COMMENT 'Proportion of majority class in the target column.',\\n  `uploader_name` varchar(255) DEFAULT NULL COMMENT 'Name of the person who uploaded the dataset.',\\n  `uploader_url` varchar(500) DEFAULT NULL COMMENT 'URL to the uploader.',\\n  `upload_date` datetime DEFAULT NULL COMMENT 'Date when the dataset was uploaded.',\\n  `download_url` varchar(255) DEFAULT NULL COMMENT 'URL to web site, where the dataset can be downloaded.',\\n  `modifications` varchar(2550) DEFAULT NULL COMMENT 'Description of the changes performed on the dataset.',\\n  `bibtex_filename` varchar(255) DEFAULT NULL COMMENT 'Filename of the BibTex file on the server.',\\n  `img_filename` binary(0) DEFAULT NULL,\\n  `mwb_filename` binary(0) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de medida con las columnas de, id, conjunto de datos, versión del conjunto de datos, destino, algoritmo, texto del autor, medida, valor, marca de tiempo, tiene intervalo de confianza, nota",
      "output": "('measure', \"CREATE TABLE `measure` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `dataset` varchar(255) NOT NULL COMMENT 'Dataset name',\\n  `dataset_version` varchar(255) DEFAULT NULL,\\n  `target` varchar(255) DEFAULT NULL COMMENT 'Target column',\\n  `algorithm` varchar(255) NOT NULL COMMENT 'Algorithm name',\\n  `author_text` varchar(255) DEFAULT NULL COMMENT 'Reference name',\\n  `measure` varchar(255) NOT NULL COMMENT 'Measure name',\\n  `value` decimal(24,4) NOT NULL COMMENT 'Measure value',\\n  `timestamp` timestamp NULL DEFAULT current_timestamp() COMMENT 'Timestamp of the record',\\n  `has_confidence_interval` int(11) DEFAULT NULL,\\n  `note` varchar(255) DEFAULT NULL COMMENT 'Free text',\\n  PRIMARY KEY (`id`),\\n  KEY `algorithm` (`algorithm`),\\n  KEY `dataset_version` (`dataset_version`),\\n  KEY `author_text` (`author_text`),\\n  CONSTRAINT `measure_ibfk_2` FOREIGN KEY (`author_text`) REFERENCES `author` (`author_text`) ON DELETE NO ACTION ON UPDATE CASCADE,\\n  CONSTRAINT `measure_ibfk_3` FOREIGN KEY (`algorithm`) REFERENCES `algorithm` (`algorithm`) ON DELETE NO ACTION ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=755 DEFAULT CHARSET=utf8 COMMENT='Hand entered model accuracie''s on the datasets.'\")"
    },
    {
      "input": "Una tabla de actuación con las columnas de, id, nombre de la base de datos, algoritmo, mensaje de error, objetivo de mensaje de error corregido en Aleph, precisión, auc, fbeta, fscore, precisión, recuperación, tiempo de ejecución, comentario",
      "output": "('performance', 'CREATE TABLE `performance` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `database_name` varchar(50) NOT NULL,\\n  `algorithm` varchar(50) NOT NULL,\\n  `error_message` text DEFAULT NULL,\\n  `error_message_corrected_target_in_Aleph` text DEFAULT NULL,\\n  `accuracy` decimal(10,4) DEFAULT NULL,\\n  `auc` decimal(10,3) DEFAULT NULL,\\n  `fbeta` decimal(10,3) DEFAULT NULL,\\n  `fscore` decimal(10,3) DEFAULT NULL,\\n  `precision` decimal(10,3) DEFAULT NULL,\\n  `recall` decimal(10,3) DEFAULT NULL,\\n  `runtime` decimal(10,3) DEFAULT NULL,\\n  `comment` text DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=55 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de control de calidad con las columnas de, nombre de la base de datos, tiene tablas, tiene registros, coincide con el número de filas esperado, tiene claves principales, tiene una columna normal, tiene una tabla de destino, tiene una descripción, tiene una tarea, tiene bibtex, qc",
      "output": "('qc', \"CREATE TABLE `qc` (\\n  `database_name` varchar(64) NOT NULL DEFAULT ''  `has_tables` int(1) NOT NULL,\\n  `has_records` int(1) DEFAULT NULL,\\n  `matches_expected_row_count` int(1) DEFAULT NULL,\\n  `has_primary_keys` int(1) DEFAULT NULL,\\n  `has_normal_column` int(1) DEFAULT NULL,\\n  `has_target_table` int(1) NOT NULL,\\n  `has_description` int(1) NOT NULL,\\n  `has_task` int(1) NOT NULL,\\n  `has_bibtex` int(1) NOT NULL,\\n  `qc` bigint(10) DEFAULT NULL,\\n  PRIMARY KEY (`database_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Automatically generated quality control overview.'\")"
    },
    {
      "input": "Una tabla de referencia con las columnas de, id, nombre de la base de datos, texto, url",
      "output": "('reference', \"CREATE TABLE `reference` (\\n  `id` int(11) NOT NULL AUTO_INCREMENT  `database_name` varchar(255) NOT NULL,\\n  `text` varchar(255) NOT NULL,\\n  `url` varchar(255) NOT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `database_name` (`database_name`),\\n  CONSTRAINT `reference_ibfk_1` FOREIGN KEY (`database_name`) REFERENCES `database` (`database_name`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8 COMMENT='Hand entered refereces to datasets (beyond origin url).'\")"
    },
    {
      "input": "Una tabla de átomo con las columnas de, átomo y, molécula de, elemento, tipo, carga",
      "output": "('atom', 'CREATE TABLE `atom` (\\n  `atom_id` char(7) NOT NULL  `molecule_id` char(4) NOT NULL,\\n  `element` char(1) NOT NULL,\\n  `type` int(11) NOT NULL,\\n  `charge` double NOT NULL,\\n  PRIMARY KEY (`atom_id`),\\n  KEY `molecule_id` (`molecule_id`),\\n  CONSTRAINT `FK_molecule_atom` FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de vínculo con las columnas de, id de átomo, id de átomo, tipo",
      "output": "('bond', 'CREATE TABLE `bond` (\\n  `atom1_id` char(7) NOT NULL  `atom2_id` char(7) NOT NULL,\\n  `type` int(11) NOT NULL,\\n  PRIMARY KEY (`atom1_id`,`atom2_id`),\\n  KEY `atom2_id` (`atom2_id`),\\n  KEY `atom1_id` (`atom1_id`),\\n  CONSTRAINT `FK_atom1_bond` FOREIGN KEY (`atom1_id`) REFERENCES `atom` (`atom_id`),\\n  CONSTRAINT `FK_atom2_bond` FOREIGN KEY (`atom2_id`) REFERENCES `atom` (`atom_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de molécula con las columnas de, id de molécula, adentro, india, logotipo, lumo, mutagénico",
      "output": "('molecule', 'CREATE TABLE `molecule` (\\n  `molecule_id` char(4) NOT NULL  `ind1` int(11) NOT NULL,\\n  `inda` int(11) NOT NULL,\\n  `logp` float NOT NULL,\\n  `lumo` double NOT NULL,\\n  `mutagenic` char(3) NOT NULL,\\n  PRIMARY KEY (`molecule_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED')"
    },
    {
      "input": "Una tabla de átomos con las columnas de, id, id de droga, elemento, tipo de átomo, carga",
      "output": "('atoms', 'CREATE TABLE `atoms` (\\n  `id` int(11) NOT NULL DEFAULT 0  `drug_id` int(11) DEFAULT NULL,\\n  `element` varchar(2) DEFAULT NULL,\\n  `atom_type` int(11) DEFAULT NULL,\\n  `charge` float DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `atoms_drug_id` (`drug_id`) USING BTREE,\\n  CONSTRAINT `atoms_ibfk_1` FOREIGN KEY (`drug_id`) REFERENCES `drugs` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de cautiverio con las columnas de, id, droga es, átomo an, átomo es, tipo de enlace",
      "output": "('bonds', 'CREATE TABLE `bonds` (\\n  `id` int(11) NOT NULL DEFAULT 0  `drug_id` int(11) DEFAULT NULL,\\n  `atom1_id` int(11) DEFAULT NULL,\\n  `atom2_id` int(11) DEFAULT NULL,\\n  `bond_type` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `bonds_drug_id` (`drug_id`) USING BTREE,\\n  KEY `bonds_atom1_id` (`atom1_id`) USING BTREE,\\n  KEY `bonds_atom2_id` (`atom2_id`) USING BTREE,\\n  CONSTRAINT `bonds_ibfk_1` FOREIGN KEY (`drug_id`) REFERENCES `drugs` (`id`),\\n  CONSTRAINT `bonds_ibfk_2` FOREIGN KEY (`atom1_id`) REFERENCES `atoms` (`id`),\\n  CONSTRAINT `bonds_ibfk_3` FOREIGN KEY (`atom2_id`) REFERENCES `atoms` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de drogas con las columnas de, id, ind, inda, acto, logp, lumo, activo",
      "output": "('drugs', 'CREATE TABLE `drugs` (\\n  `id` int(11) NOT NULL DEFAULT 0  `ind1` float DEFAULT NULL,\\n  `inda` float DEFAULT NULL,\\n  `act` float DEFAULT NULL,\\n  `logp` float DEFAULT NULL,\\n  `lumo` float DEFAULT NULL,\\n  `active` tinyint(1) DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de átomo de anillo con las columnas de, id, id de anillo, id de átomo",
      "output": "('ring_atom', 'CREATE TABLE `ring_atom` (\\n  `id` int(11) NOT NULL DEFAULT 0  `ring_id` int(11) DEFAULT NULL,\\n  `atom_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `ring_atom_ring_id` (`ring_id`) USING BTREE,\\n  KEY `ring_atom_atom_id` (`atom_id`) USING BTREE,\\n  CONSTRAINT `ring_atom_ibfk_1` FOREIGN KEY (`ring_id`) REFERENCES `rings` (`id`),\\n  CONSTRAINT `ring_atom_ibfk_2` FOREIGN KEY (`atom_id`) REFERENCES `atoms` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de estructuras de anillo con las columnas de, id, id de medicamento, nombre",
      "output": "('ring_strucs', 'CREATE TABLE `ring_strucs` (\\n  `id` int(11) NOT NULL DEFAULT 0  `drug_id` int(11) DEFAULT NULL,\\n  `name` varchar(64) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `ring_structs_drug_id` (`drug_id`) USING BTREE,\\n  CONSTRAINT `ring_strucs_ibfk_1` FOREIGN KEY (`drug_id`) REFERENCES `drugs` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de anillos con las columnas de, id, id de estructura de anillo",
      "output": "('rings', 'CREATE TABLE `rings` (\\n  `id` int(11) NOT NULL DEFAULT 0  `ring_struc_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `rings_ring_struc_id` (`ring_struc_id`) USING BTREE,\\n  CONSTRAINT `rings_ibfk_1` FOREIGN KEY (`ring_struc_id`) REFERENCES `ring_strucs` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de estructuras de anillo con las columnas de, id, id de medicamento, nombre",
      "output": "('ring_strucs', 'CREATE TABLE `ring_strucs` (\\n  `id` int(11) NOT NULL DEFAULT 0  `drug_id` int(11) DEFAULT NULL,\\n  `name` varchar(64) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `ring_strucs_drug_id` (`drug_id`) USING BTREE,\\n  CONSTRAINT `ring_strucs_ibfk_1` FOREIGN KEY (`drug_id`) REFERENCES `drugs` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de estadísticas de columna con las columnas de, nombre de la base de datos, nombre de la tabla, nombre de la columna, valor mínimo, valor máximo, proporción de valores nulos, longitud promedio, frecuencia promedio, tamaño histórico, tipo histórico, histograma",
      "output": "('column_stats', \"CREATE TABLE `column_stats` (\\n  `db_name` varchar(64) COLLATE utf8_bin NOT NULL  `table_name` varchar(64) COLLATE utf8_bin NOT NULL,\\n  `column_name` varchar(64) COLLATE utf8_bin NOT NULL,\\n  `min_value` varbinary(255) DEFAULT NULL,\\n  `max_value` varbinary(255) DEFAULT NULL,\\n  `nulls_ratio` decimal(12,4) DEFAULT NULL,\\n  `avg_length` decimal(12,4) DEFAULT NULL,\\n  `avg_frequency` decimal(12,4) DEFAULT NULL,\\n  `hist_size` tinyint(3) unsigned DEFAULT NULL,\\n  `hist_type` enum('SINGLE_PREC_HB','DOUBLE_PREC_HB') COLLATE utf8_bin DEFAULT NULL,\\n  `histogram` varbinary(255) DEFAULT NULL,\\n  PRIMARY KEY (`db_name`,`table_name`,`column_name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Statistics on Columns'\")"
    },
    {
      "input": "Una tabla de columnas privadas con las columnas de, host, base de datos, usuario, nombre de tabla, nombre de columna, marca de tiempo, privilegio de columna",
      "output": "('columns_priv', \"CREATE TABLE `columns_priv` (\\n  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT ''  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `User` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Column_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`,`Column_name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Column privileges'\")"
    },
    {
      "input": "Una tabla de base de datos con las columnas de, Host, Db, User, Select priv, Insert priv, Update priv, Delete priv, Create priv, Drop priv, Grant priv, References priv, Index priv, Alter priv, Create tmp table priv, Lock tables priv, Create view priv, Mostrar priv de vista, Crear priv de rutina, Alterar priv de rutina, Ejecutar priv, Evento priv, Activar priv, Eliminar historial priv",
      "output": "('db', \"CREATE TABLE `db` (\\n  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT ''  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `User` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Delete_history_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  PRIMARY KEY (`Host`,`Db`,`User`),\\n  KEY `User` (`User`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Database privileges'\")"
    },
    {
      "input": "Una tabla de evento con las columnas de, db, nombre, cuerpo, definidor, ejecutar en, valor de intervalo, campo de intervalo, creado, modificado, ejecutado por última vez, comienza, finaliza, estado, al finalizar, modo sql, comentario, autor, zona horaria, cliente de conjunto de caracteres, conexión de colación , colación db, cuerpo utf",
      "output": "('event', \"CREATE TABLE `event` (\\n  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT ''  `name` char(64) NOT NULL DEFAULT '',\\n  `body` longblob NOT NULL,\\n  `definer` char(141) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `execute_at` datetime DEFAULT NULL,\\n  `interval_value` int(11) DEFAULT NULL,\\n  `interval_field` enum('YEAR','QUARTER','MONTH','DAY','HOUR','MINUTE','WEEK','SECOND','MICROSECOND','YEAR_MONTH','DAY_HOUR','DAY_MINUTE','DAY_SECOND','HOUR_MINUTE','HOUR_SECOND','MINUTE_SECOND','DAY_MICROSECOND','HOUR_MICROSECOND','MINUTE_MICROSECOND','SECOND_MICROSECOND') DEFAULT NULL,\\n  `created` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `last_executed` datetime DEFAULT NULL,\\n  `starts` datetime DEFAULT NULL,\\n  `ends` datetime DEFAULT NULL,\\n  `status` enum('ENABLED','DISABLED','SLAVESIDE_DISABLED') NOT NULL DEFAULT 'ENABLED',\\n  `on_completion` enum('DROP','PRESERVE') NOT NULL DEFAULT 'DROP',\\n  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','IGNORE_BAD_TABLE_OPTIONS','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH','EMPTY_STRING_IS_NULL','SIMULTANEOUS_ASSIGNMENT') NOT NULL DEFAULT '',\\n  `comment` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `originator` int(10) unsigned NOT NULL,\\n  `time_zone` char(64) CHARACTER SET latin1 NOT NULL DEFAULT 'SYSTEM',\\n  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `body_utf8` longblob DEFAULT NULL,\\n  PRIMARY KEY (`db`,`name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Events'\")"
    },
    {
      "input": "Una tabla de función con las columnas de, nombre, ret, dl, tipo",
      "output": "('func', \"CREATE TABLE `func` (\\n  `name` char(64) COLLATE utf8_bin NOT NULL DEFAULT ''  `ret` tinyint(1) NOT NULL DEFAULT 0,\\n  `dl` char(128) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `type` enum('function','aggregate') CHARACTER SET utf8 NOT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='User defined functions'\")"
    },
    {
      "input": "Una tabla de registro general con las columnas de, hora del evento, host de usuario, ID de subproceso, ID de servidor, tipo de comando, argumento",
      "output": "('general_log', \"CREATE TABLE `general_log` (\\n  `event_time` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6)  `user_host` mediumtext NOT NULL,\\n  `thread_id` int(11) NOT NULL,\\n  `server_id` int(10) unsigned NOT NULL,\\n  `command_type` varchar(64) NOT NULL,\\n  `argument` mediumtext NOT NULL\\n) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='General log'\")"
    },
    {
      "input": "Una tabla de pos esclavo gtid con las columnas de, id de dominio, sub id, id de servidor, seq no",
      "output": "('gtid_slave_pos', \"CREATE TABLE `gtid_slave_pos` (\\n  `domain_id` int(10) unsigned NOT NULL  `sub_id` bigint(20) unsigned NOT NULL,\\n  `server_id` int(10) unsigned NOT NULL,\\n  `seq_no` bigint(20) unsigned NOT NULL,\\n  PRIMARY KEY (`domain_id`,`sub_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Replication slave GTID position'\")"
    },
    {
      "input": "Una tabla de categoría de ayuda con las columnas de, ID de categoría de ayuda, nombre, ID de categoría principal, URL",
      "output": "('help_category', \"CREATE TABLE `help_category` (\\n  `help_category_id` smallint(5) unsigned NOT NULL  `name` char(64) NOT NULL,\\n  `parent_category_id` smallint(5) unsigned DEFAULT NULL,\\n  `url` text NOT NULL,\\n  PRIMARY KEY (`help_category_id`),\\n  UNIQUE KEY `name` (`name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help categories'\")"
    },
    {
      "input": "Una tabla de palabra clave de ayuda con las columnas de, ID de palabra clave de ayuda, nombre",
      "output": "('help_keyword', \"CREATE TABLE `help_keyword` (\\n  `help_keyword_id` int(10) unsigned NOT NULL  `name` char(64) NOT NULL,\\n  PRIMARY KEY (`help_keyword_id`),\\n  UNIQUE KEY `name` (`name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help keywords'\")"
    },
    {
      "input": "Una tabla de relacion de ayuda con las columnas de, ID de tema de ayuda, ID de palabra clave de ayuda",
      "output": "('help_relation', \"CREATE TABLE `help_relation` (\\n  `help_topic_id` int(10) unsigned NOT NULL  `help_keyword_id` int(10) unsigned NOT NULL,\\n  PRIMARY KEY (`help_keyword_id`,`help_topic_id`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='keyword-topic relation'\")"
    },
    {
      "input": "Una tabla de Tópico de ayuda con las columnas de, ID de tema de ayuda, nombre, ID de categoría de ayuda, descripción, ejemplo, URL",
      "output": "('help_topic', \"CREATE TABLE `help_topic` (\\n  `help_topic_id` int(10) unsigned NOT NULL  `name` char(64) NOT NULL,\\n  `help_category_id` smallint(5) unsigned NOT NULL,\\n  `description` text NOT NULL,\\n  `example` text NOT NULL,\\n  `url` text NOT NULL,\\n  PRIMARY KEY (`help_topic_id`),\\n  UNIQUE KEY `name` (`name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help topics'\")"
    },
    {
      "input": "Una tabla de anfitrión con las columnas de, Host, Db, Select priv, Insert priv, Update priv, Delete priv, Create priv, Drop priv, Grant priv, References priv, Index priv, Alter priv, Create tmp table priv, Lock tables priv, Create view priv, Show view priv, Crear rutina priv, Modificar rutina priv, Ejecutar priv, Activar priv",
      "output": "('host', \"CREATE TABLE `host` (\\n  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT ''  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  PRIMARY KEY (`Host`,`Db`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Host privileges"
    },
    {
      "input": "Una tabla de índice de estadísticas con las columnas de, nombre de base de datos, nombre de tabla, nombre de índice, aridad de prefijo, frecuencia promedio",
      "output": "('index_stats', \"CREATE TABLE `index_stats` (\\n  `db_name` varchar(64) COLLATE utf8_bin NOT NULL  `table_name` varchar(64) COLLATE utf8_bin NOT NULL,\\n  `index_name` varchar(64) COLLATE utf8_bin NOT NULL,\\n  `prefix_arity` int(11) unsigned NOT NULL,\\n  `avg_frequency` decimal(12,4) DEFAULT NULL,\\n  PRIMARY KEY (`db_name`,`table_name`,`index_name`,`prefix_arity`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Statistics on Indexes'\")"
    },
    {
      "input": "Una tabla de estadísticas del índice innodb con las columnas de, nombre de la base de datos, nombre de la tabla, nombre del índice, última actualización, nombre de la estadística, valor de la estadística, tamaño de la muestra, descripción de la estadística",
      "output": "('innodb_index_stats', 'CREATE TABLE `innodb_index_stats` (\\n  `database_name` varchar(64) COLLATE utf8_bin NOT NULL  `table_name` varchar(199) COLLATE utf8_bin NOT NULL,\\n  `index_name` varchar(64) COLLATE utf8_bin NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `stat_name` varchar(64) COLLATE utf8_bin NOT NULL,\\n  `stat_value` bigint(20) unsigned NOT NULL,\\n  `sample_size` bigint(20) unsigned DEFAULT NULL,\\n  `stat_description` varchar(1024) COLLATE utf8_bin NOT NULL,\\n  PRIMARY KEY (`database_name`,`table_name`,`index_name`,`stat_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0')"
    },
    {
      "input": "Una tabla de estadísticas de la tabla innodb con las columnas de, nombre de base de datos, nombre de tabla, última actualización, n filas, tamaño de índice agrupado, suma de otros tamaños de índice",
      "output": "('innodb_table_stats', 'CREATE TABLE `innodb_table_stats` (\\n  `database_name` varchar(64) COLLATE utf8_bin NOT NULL  `table_name` varchar(199) COLLATE utf8_bin NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `n_rows` bigint(20) unsigned NOT NULL,\\n  `clustered_index_size` bigint(20) unsigned NOT NULL,\\n  `sum_of_other_index_sizes` bigint(20) unsigned NOT NULL,\\n  PRIMARY KEY (`database_name`,`table_name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0')"
    },
    {
      "input": "Una tabla de enchufar con las columnas de, nombre, dl",
      "output": "('plugin', \"CREATE TABLE `plugin` (\\n  `name` varchar(64) NOT NULL DEFAULT ''  `dl` varchar(128) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='MySQL plugins'\")"
    },
    {
      "input": "Una tabla de proceso con las columnas de, db, nombre, tipo, nombre específico, idioma, acceso a datos sql, es determinista, tipo de seguridad, lista de parámetros, devoluciones, cuerpo, definidor, creado, modificado, modo sql, comentario, cliente de juego de caracteres, conexión de colación, colación de base de datos, cuerpo utf, agregado",
      "output": "('proc', \"CREATE TABLE `proc` (\\n  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT ''  `name` char(64) NOT NULL DEFAULT '',\\n  `type` enum('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY') NOT NULL,\\n  `specific_name` char(64) NOT NULL DEFAULT '',\\n  `language` enum('SQL') NOT NULL DEFAULT 'SQL',\\n  `sql_data_access` enum('CONTAINS_SQL','NO_SQL','READS_SQL_DATA','MODIFIES_SQL_DATA') NOT NULL DEFAULT 'CONTAINS_SQL',\\n  `is_deterministic` enum('YES','NO') NOT NULL DEFAULT 'NO',\\n  `security_type` enum('INVOKER','DEFINER') NOT NULL DEFAULT 'DEFINER',\\n  `param_list` blob NOT NULL,\\n  `returns` longblob NOT NULL,\\n  `body` longblob NOT NULL,\\n  `definer` char(141) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `created` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','IGNORE_BAD_TABLE_OPTIONS','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH','EMPTY_STRING_IS_NULL','SIMULTANEOUS_ASSIGNMENT') NOT NULL DEFAULT '',\\n  `comment` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,\\n  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `body_utf8` longblob DEFAULT NULL,\\n  `aggregate` enum('NONE','GROUP') NOT NULL DEFAULT 'NONE',\\n  PRIMARY KEY (`db`,`name`,`type`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Stored Procedures'\")"
    },
    {
      "input": "Una tabla de proceso priv con las columnas de, Host, Db, Usuario, Nombre de rutina, Tipo de rutina, Concedente, Proc priv, Marca de tiempo",
      "output": "('procs_priv', \"CREATE TABLE `procs_priv` (\\n  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT ''  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `User` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Routine_name` char(64) CHARACTER SET utf8 NOT NULL DEFAULT '',\\n  `Routine_type` enum('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY') COLLATE utf8_bin NOT NULL,\\n  `Grantor` char(141) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Proc_priv` set('Execute','Alter Routine','Grant') CHARACTER SET utf8 NOT NULL DEFAULT '',\\n  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`Host`,`Db`,`User`,`Routine_name`,`Routine_type`),\\n  KEY `Grantor` (`Grantor`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Procedure privileges'\")"
    },
    {
      "input": "Una tabla de proxies privados con las columnas de, host, usuario, host proxy, usuario proxy, con concesión, otorgante, marca de tiempo",
      "output": "('proxies_priv', \"CREATE TABLE `proxies_priv` (\\n  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT ''  `User` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Proxied_host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Proxied_user` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `With_grant` tinyint(1) NOT NULL DEFAULT 0,\\n  `Grantor` char(141) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`Host`,`User`,`Proxied_host`,`Proxied_user`),\\n  KEY `Grantor` (`Grantor`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='User proxy privileges'\")"
    },
    {
      "input": "Una tabla de mapeo de roles con las columnas de, Host, Usuario, Rol, Opción de administrador",
      "output": "('roles_mapping', \"CREATE TABLE `roles_mapping` (\\n  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT ''  `User` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Role` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Admin_option` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  UNIQUE KEY `Host` (`Host`,`User`,`Role`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Granted roles'\")"
    },
    {
      "input": "Una tabla de servidores con las columnas de, Nombre del servidor, Host, Db, Nombre de usuario, Contraseña, Puerto, Socket, Contenedor, Propietario",
      "output": "('servers', \"CREATE TABLE `servers` (\\n  `Server_name` char(64) NOT NULL DEFAULT ''  `Host` char(64) NOT NULL DEFAULT '',\\n  `Db` char(64) NOT NULL DEFAULT '',\\n  `Username` char(80) NOT NULL DEFAULT '',\\n  `Password` char(64) NOT NULL DEFAULT '',\\n  `Port` int(4) NOT NULL DEFAULT 0,\\n  `Socket` char(64) NOT NULL DEFAULT '',\\n  `Wrapper` char(64) NOT NULL DEFAULT '',\\n  `Owner` char(64) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Server_name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='MySQL Foreign Servers table'\")"
    },
    {
      "input": "Una tabla de registro lento con las columnas de, hora de inicio, host de usuario, hora de consulta, hora de bloqueo, filas enviadas, filas examinadas, base de datos, último ID de inserción, ID de inserción, ID de servidor, texto SQL, ID de subproceso, filas afectadas",
      "output": "('slow_log', \"CREATE TABLE `slow_log` (\\n  `start_time` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6)  `user_host` mediumtext NOT NULL,\\n  `query_time` time(6) NOT NULL,\\n  `lock_time` time(6) NOT NULL,\\n  `rows_sent` int(11) NOT NULL,\\n  `rows_examined` int(11) NOT NULL,\\n  `db` varchar(512) NOT NULL,\\n  `last_insert_id` int(11) NOT NULL,\\n  `insert_id` int(11) NOT NULL,\\n  `server_id` int(10) unsigned NOT NULL,\\n  `sql_text` mediumtext NOT NULL,\\n  `thread_id` bigint(21) unsigned NOT NULL,\\n  `rows_affected` int(11) NOT NULL\\n) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='Slow log'\")"
    },
    {
      "input": "Una tabla de estadísticas de la tabla con las columnas de, nombre de la base de datos, nombre de la tabla, cardinalidad",
      "output": "('table_stats', \"CREATE TABLE `table_stats` (\\n  `db_name` varchar(64) COLLATE utf8_bin NOT NULL  `table_name` varchar(64) COLLATE utf8_bin NOT NULL,\\n  `cardinality` bigint(21) unsigned DEFAULT NULL,\\n  PRIMARY KEY (`db_name`,`table_name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Statistics on Tables'\")"
    },
    {
      "input": "Una tabla de mesas privadas con las columnas de, host, base de datos, usuario, nombre de tabla, otorgante, marca de tiempo, priv de tabla, priv de columna",
      "output": "('tables_priv', \"CREATE TABLE `tables_priv` (\\n  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT ''  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `User` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Grantor` char(141) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `Table_priv` set('Select','Insert','Update','Delete','Create','Drop','Grant','References','Index','Alter','Create View','Show view','Trigger','Delete versioning rows') CHARACTER SET utf8 NOT NULL DEFAULT '',\\n  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`),\\n  KEY `Grantor` (`Grantor`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Table privileges'\")"
    },
    {
      "input": "Una tabla de zona horaria con las columnas de, Id. de zona horaria, Usar segundos bisiestos",
      "output": "('time_zone', \"CREATE TABLE `time_zone` (\\n  `Time_zone_id` int(10) unsigned NOT NULL AUTO_INCREMENT  `Use_leap_seconds` enum('Y','N') NOT NULL DEFAULT 'N',\\n  PRIMARY KEY (`Time_zone_id`)\\n) ENGINE=MyISAM AUTO_INCREMENT=1171 DEFAULT CHARSET=utf8 COMMENT='Time zones'\")"
    },
    {
      "input": "Una tabla de segundo bisiesto zona horaria con las columnas de, Tiempo de transición, Corrección",
      "output": "('time_zone_leap_second', \"CREATE TABLE `time_zone_leap_second` (\\n  `Transition_time` bigint(20) NOT NULL  `Correction` int(11) NOT NULL,\\n  PRIMARY KEY (`Transition_time`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Leap seconds information for time zones'\")"
    },
    {
      "input": "Una tabla de nombre de la zona horaria con las columnas de, Nombre, ID de zona horaria",
      "output": "('time_zone_name', \"CREATE TABLE `time_zone_name` (\\n  `Name` char(64) NOT NULL  `Time_zone_id` int(10) unsigned NOT NULL,\\n  PRIMARY KEY (`Name`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone names'\")"
    },
    {
      "input": "Una tabla de transición de zona horaria con las columnas de, Id. de zona horaria, Hora de transición, Id. de tipo de transición",
      "output": "('time_zone_transition', \"CREATE TABLE `time_zone_transition` (\\n  `Time_zone_id` int(10) unsigned NOT NULL  `Transition_time` bigint(20) NOT NULL,\\n  `Transition_type_id` int(10) unsigned NOT NULL,\\n  PRIMARY KEY (`Time_zone_id`,`Transition_time`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone transitions'\")"
    },
    {
      "input": "Una tabla de tipo de transición de zona horaria con las columnas de, Id. de zona horaria, Id. de tipo de transición, Compensación, Is D S T, Abreviatura",
      "output": "('time_zone_transition_type', \"CREATE TABLE `time_zone_transition_type` (\\n  `Time_zone_id` int(10) unsigned NOT NULL  `Transition_type_id` int(10) unsigned NOT NULL,\\n  `Offset` int(11) NOT NULL DEFAULT 0,\\n  `Is_DST` tinyint(3) unsigned NOT NULL DEFAULT 0,\\n  `Abbreviation` char(8) NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Time_zone_id`,`Transition_type_id`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone transition types'\")"
    },
    {
      "input": "Una tabla de registro de transacciones con las columnas de, ID de transacción, ID de compromiso, marca de tiempo de inicio, marca de tiempo de compromiso, nivel de aislamiento",
      "output": "('transaction_registry', \"CREATE TABLE `transaction_registry` (\\n  `transaction_id` bigint(20) unsigned NOT NULL  `commit_id` bigint(20) unsigned NOT NULL,\\n  `begin_timestamp` timestamp(6) NOT NULL DEFAULT '0000-00-00 00:00:00.000000',\\n  `commit_timestamp` timestamp(6) NOT NULL DEFAULT '0000-00-00 00:00:00.000000',\\n  `isolation_level` enum('READ-UNCOMMITTED','READ-COMMITTED','REPEATABLE-READ','SERIALIZABLE') COLLATE utf8_bin NOT NULL,\\n  PRIMARY KEY (`transaction_id`),\\n  UNIQUE KEY `commit_id` (`commit_id`),\\n  KEY `begin_timestamp` (`begin_timestamp`),\\n  KEY `commit_timestamp` (`commit_timestamp`,`transaction_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0\")"
    },
    {
      "input": "Una tabla de usuario con las columnas de, Host, Usuario, Contraseña, Seleccionar priv, Insertar priv, Actualizar priv, Eliminar priv, Crear priv, Soltar priv, Recargar priv, Apagar priv, Procesar priv, Archivo priv, Otorgar priv, Referencias priv, Índice priv, Modificar priv, Mostrar db priv, Super priv, Crear tmp table priv, Bloquear tablas priv, Ejecutar priv, Repl esclavo priv, Repl client priv, Crear vista priv, Mostrar vista priv, Crear rutina priv, Modificar rutina priv, Crear usuario priv, Evento priv, Activar priv, crear tablespace priv, eliminar historial priv, tipo de ssl, cifrado de ssl, emisor x, asunto x, número máximo de preguntas, número máximo de actualizaciones, número máximo de conexiones, número máximo de conexiones de usuario, complemento, cadena de autenticación, contraseña caducada, función, función predeterminada, función máx. tiempo de declaración",
      "output": "('user', \"CREATE TABLE `user` (\\n  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT ''  `User` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `Password` char(41) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL DEFAULT '',\\n  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Reload_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Shutdown_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Process_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `File_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Show_db_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Super_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Repl_slave_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Repl_client_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_user_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Create_tablespace_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `Delete_history_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `ssl_type` enum('','ANY','X509','SPECIFIED') CHARACTER SET utf8 NOT NULL DEFAULT '',\\n  `ssl_cipher` blob NOT NULL,\\n  `x509_issuer` blob NOT NULL,\\n  `x509_subject` blob NOT NULL,\\n  `max_questions` int(11) unsigned NOT NULL DEFAULT 0,\\n  `max_updates` int(11) unsigned NOT NULL DEFAULT 0,\\n  `max_connections` int(11) unsigned NOT NULL DEFAULT 0,\\n  `max_user_connections` int(11) NOT NULL DEFAULT 0,\\n  `plugin` char(64) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `authentication_string` text COLLATE utf8_bin NOT NULL,\\n  `password_expired` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `is_role` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',\\n  `default_role` char(80) COLLATE utf8_bin NOT NULL DEFAULT '',\\n  `max_statement_time` decimal(12,6) NOT NULL DEFAULT 0.000000,\\n  PRIMARY KEY (`Host`,`User`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Users and global privileges'\")"
    },
    {
      "input": "Una tabla de país con las columnas de, ID de país, país",
      "output": "('country', 'CREATE TABLE `country` (\\n  `country_id` int(11) NOT NULL  `country` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`country_id`),\\n  CONSTRAINT `country_ibfk_1` FOREIGN KEY (`country_id`) REFERENCES `stat` (`country_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de relación con las columnas de, documento nacional de identidad, documento nacional de identidad, relación, valor",
      "output": "('relation', 'CREATE TABLE `relation` (\\n  `nation_id1` int(11) NOT NULL  `nation_id2` int(11) NOT NULL,\\n  `relation` varchar(255) NOT NULL,\\n  `value` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`nation_id1`,`nation_id2`,`relation`),\\n  KEY `nation_id1` (`nation_id1`),\\n  KEY `nation_id2` (`nation_id2`),\\n  CONSTRAINT `relation_ibfk_1` FOREIGN KEY (`nation_id1`) REFERENCES `country` (`country_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `relation_ibfk_2` FOREIGN KEY (`nation_id2`) REFERENCES `country` (`country_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de estadística con las columnas de, identificación del país, teléfono, población agrícola, consumo de energía, analfabetos, GNP, popxenergabs, incomeabs, popabs, sin evaluación, defensaexpabs, títulos en inglés, membresía en bloque, ayuda recibida, libertad de oposición, I F Can y I B R D, amenazas, acusaciones, violencia extranjera asesinada, acción militar, protestas, violencia doméstica asesinada, disturbios, purgas, demostraciones, católicos, distancia aérea, medicinango, diploma expulsado, divorcios, población/tierra, cultivable, área, longitud de la carretera, longitud del ferrocarril, religiones, inmigrantes/migrantes, lluvia, mayor extensión, agua corriente, colegio extranjero, bloque neutral, edad, títulos religiosos, emigrantes, bienes transportados por mar, Lawngos, desempleados, exportación, idiomas, idioma más grande, grupos étnicos, ayuda económica tomada, asistencia técnica tomada, gastos de educación gubernamental, trabajadoras, exportaciones, correo extranjero, importaciones, calorías consumidas, proteínas, títulos rusos, personal militar, inversiones, partidos políticos, artesculturango, partido comunista, gasto público, monarquía, escuela primaria, cambio legal, legitgov, la etnia más grande, asesino iones, majgovcrisis, impagodelinq, pagos de saldo, inversiones de saldo, sistema de estilo, constitucional, sistema electoral, no comunista, liderazgo político, poder horizontal, militar, burocracia, censura, geografíax, geografíay, geografíaz, membresía en bloque, membresía en bloque, libertad de oposición, libertad de oposición, govchangelegal, govchangelegal, legitgov, systemstyle, systemstyle, constitucional, constitucional, sistema electoral, sistema electoral, liderazgo político, liderazgo político, poder horizontal, militar, militar, burocracia, burocracia, censura, censura",
      "output": "('stat', \"CREATE TABLE `stat` (\\n  `country_id` int(11) NOT NULL  `telephone` int(11) DEFAULT NULL,\\n  `agriculturalpop` int(11) DEFAULT NULL,\\n  `energyconsume` int(11) DEFAULT NULL,\\n  `illiterates` int(11) DEFAULT NULL,\\n  `GNP` int(11) DEFAULT NULL,\\n  `popxenergabs` int(11) DEFAULT NULL,\\n  `incomeabs` int(11) DEFAULT NULL,\\n  `popabs` int(11) DEFAULT NULL,\\n  `unassessment` int(11) DEFAULT NULL,\\n  `defenseexpabs` int(11) DEFAULT NULL,\\n  `englishtitles` int(11) DEFAULT NULL,\\n  `blocmembership0` int(11) DEFAULT NULL,\\n  `usaidreceived` int(11) DEFAULT NULL,\\n  `freedomofopposition0` int(11) DEFAULT NULL,\\n  `IFCandIBRD` int(11) DEFAULT NULL,\\n  `threats` int(11) DEFAULT NULL,\\n  `accusations` int(11) DEFAULT NULL,\\n  `killedforeignviolence` int(11) DEFAULT NULL,\\n  `militaryaction` int(11) DEFAULT NULL,\\n  `protests` int(11) DEFAULT NULL,\\n  `killeddomesticviolence` int(11) DEFAULT NULL,\\n  `riots` int(11) DEFAULT NULL,\\n  `purges` int(11) DEFAULT NULL,\\n  `demonstrations` int(11) DEFAULT NULL,\\n  `catholics` int(11) DEFAULT NULL,\\n  `airdistance` int(11) DEFAULT NULL,\\n  `medicinengo` int(11) DEFAULT NULL,\\n  `diplomatexpelled` int(11) DEFAULT NULL,\\n  `divorces` int(11) DEFAULT NULL,\\n  `popn/land` int(11) DEFAULT NULL,\\n  `arable` int(11) DEFAULT NULL,\\n  `area` int(11) DEFAULT NULL,\\n  `roadlength` int(11) DEFAULT NULL,\\n  `railroadlength` int(11) DEFAULT NULL,\\n  `religions` int(11) DEFAULT NULL,\\n  `immigrants/migrants` int(11) DEFAULT NULL,\\n  `rainfall` int(11) DEFAULT NULL,\\n  `largestrelgn` int(11) DEFAULT NULL,\\n  `runningwater` int(11) DEFAULT NULL,\\n  `foreigncollegestud` int(11) DEFAULT NULL,\\n  `neutralblock` int(11) DEFAULT NULL,\\n  `age` int(11) DEFAULT NULL,\\n  `religioustitles` int(11) DEFAULT NULL,\\n  `emigrants` int(11) DEFAULT NULL,\\n  `seabornegoods` int(11) DEFAULT NULL,\\n  `lawngos` int(11) DEFAULT NULL,\\n  `unemployed` int(11) DEFAULT NULL,\\n  `export` int(11) DEFAULT NULL,\\n  `languages` int(11) DEFAULT NULL,\\n  `largestlang` int(11) DEFAULT NULL,\\n  `ethnicgrps` int(11) DEFAULT NULL,\\n  `economicaidtaken` int(11) DEFAULT NULL,\\n  `techassistancetaken` int(11) DEFAULT NULL,\\n  `goveducationspend` int(11) DEFAULT NULL,\\n  `femaleworkers` int(11) DEFAULT NULL,\\n  `exports` int(11) DEFAULT NULL,\\n  `foreignmail` int(11) DEFAULT NULL,\\n  `imports` int(11) DEFAULT NULL,\\n  `caloriesconsumed` int(11) DEFAULT NULL,\\n  `protein` int(11) DEFAULT NULL,\\n  `russiantitles` int(11) DEFAULT NULL,\\n  `militarypersonnel` int(11) DEFAULT NULL,\\n  `investments` int(11) DEFAULT NULL,\\n  `politicalparties` int(11) DEFAULT NULL,\\n  `artsculturengo` int(11) DEFAULT NULL,\\n  `communistparty` int(11) DEFAULT NULL,\\n  `govspending` int(11) DEFAULT NULL,\\n  `monarchy` int(11) DEFAULT NULL,\\n  `primaryschool` int(11) DEFAULT NULL,\\n  `govchangelegal0` int(11) DEFAULT NULL,\\n  `legitgov0` int(11) DEFAULT NULL,\\n  `largestethnic` int(11) DEFAULT NULL,\\n  `assassinations` int(11) DEFAULT NULL,\\n  `majgovcrisis` int(11) DEFAULT NULL,\\n  `unpaymentdelinq` int(11) DEFAULT NULL,\\n  `balancepayments` int(11) DEFAULT NULL,\\n  `balanceinvestments` int(11) DEFAULT NULL,\\n  `systemstyle0` int(11) DEFAULT NULL,\\n  `constitutional0` int(11) DEFAULT NULL,\\n  `electoralsystem0` int(11) DEFAULT NULL,\\n  `noncommunist` int(11) DEFAULT NULL,\\n  `politicalleadership0` int(11) DEFAULT NULL,\\n  `horizontalpower0` int(11) DEFAULT NULL,\\n  `military0` int(11) DEFAULT NULL,\\n  `bureaucracy0` int(11) DEFAULT NULL,\\n  `censorship0` int(11) DEFAULT NULL,\\n  `geographyx` int(11) DEFAULT NULL,\\n  `geographyy` int(11) DEFAULT NULL,\\n  `geographyz` int(11) DEFAULT NULL,\\n  `blocmembership1` int(11) DEFAULT NULL,\\n  `blocmembership2` int(11) DEFAULT NULL,\\n  `freedomofopposition1` int(11) DEFAULT NULL,\\n  `freedomofopposition2` int(11) DEFAULT NULL,\\n  `govchangelegal1` int(11) DEFAULT NULL,\\n  `govchangelegal2` int(11) DEFAULT NULL,\\n  `legitgov1` int(11) DEFAULT NULL,\\n  `systemstyle1` int(11) DEFAULT NULL,\\n  `systemstyle2` int(11) DEFAULT NULL,\\n  `constitutional1` int(11) DEFAULT NULL,\\n  `constitutional2` int(11) DEFAULT NULL,\\n  `electoralsystem1` int(11) DEFAULT NULL,\\n  `electoralsystem2` int(11) DEFAULT NULL,\\n  `politicalleadership1` int(11) DEFAULT NULL,\\n  `politicalleadership2` int(11) DEFAULT NULL,\\n  `horizontalpower2` int(11) DEFAULT NULL,\\n  `military1` int(11) DEFAULT NULL,\\n  `military2` int(11) DEFAULT NULL,\\n  `bureaucracy1` int(11) DEFAULT NULL,\\n  `bureaucracy2` int(11) DEFAULT NULL,\\n  `censorship1` int(11) DEFAULT NULL,\\n  `censorship2` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`country_id`),\\n  KEY `country_id'` (`country_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Información del jugador con las columnas de, ELITEID, nombre del jugador, fecha de nacimiento, año de nacimiento, mes de nacimiento, cumpleaños, lugar de nacimiento, nación, información de altura, altura, información de peso, peso, información de posición, posición, brotes, draftyear, draftround, general, general por, clasificación CSS, suma año GP, sum yr T O I, G P mayor que",
      "output": "('PlayerInfo', 'CREATE TABLE `PlayerInfo` (\\n  `ELITEID` int(11) NOT NULL  `PlayerName` varchar(255) NOT NULL,\\n  `birthdate` varchar(255) NOT NULL,\\n  `birthyear` varchar(255) NOT NULL,\\n  `birthmonth` int(11) NOT NULL,\\n  `birthday` int(11) NOT NULL,\\n  `birthplace` varchar(255) NOT NULL,\\n  `nation` varchar(255) NOT NULL,\\n  `height_info` varchar(255) NOT NULL,\\n  `height` int(11) NOT NULL,\\n  `weight_info` varchar(255) NOT NULL,\\n  `weight` int(11) NOT NULL,\\n  `position_info` varchar(255) NOT NULL,\\n  `position` varchar(255) NOT NULL,\\n  `shoots` varchar(255) NOT NULL,\\n  `draftyear` int(11) NOT NULL,\\n  `draftround` int(11) NOT NULL,\\n  `overall` int(11) NOT NULL,\\n  `overallby` varchar(255) NOT NULL,\\n  `CSS_rank` int(11) NOT NULL,\\n  `sum_7yr_GP` int(11) NOT NULL,\\n  `sum_7yr_TOI` int(11) NOT NULL,\\n  `GP_greater_than_0` varchar(255) NOT NULL,\\n  PRIMARY KEY (`ELITEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Estado de la temporada con las columnas de, ELITY, TEMPORADA, EQUIPO, LIGA, TIPO DE JUEGO, GP, G, A, P, PIM, PLUSMINUS",
      "output": "('SeasonStatus', 'CREATE TABLE `SeasonStatus` (\\n  `ELITEID` int(11) NOT NULL  `SEASON` varchar(255) NOT NULL,\\n  `TEAM` varchar(255) NOT NULL,\\n  `LEAGUE` varchar(255) NOT NULL,\\n  `GAMETYPE` varchar(255) NOT NULL,\\n  `GP` int(11) NOT NULL,\\n  `G` int(11) NOT NULL,\\n  `A` int(11) NOT NULL,\\n  `P` int(11) NOT NULL,\\n  `PIM` int(11) NOT NULL,\\n  `PLUSMINUS` int(11) NOT NULL,\\n  KEY `SeasonStatus_PlayerInfo_FK` (`ELITEID`),\\n  CONSTRAINT `SeasonStatus_PlayerInfo_FK` FOREIGN KEY (`ELITEID`) REFERENCES `PlayerInfo` (`ELITEID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de Categorías con las columnas de, Id. de categoría, Nombre de categoría, Descripción, Imagen",
      "output": "('Categories', 'CREATE TABLE `Categories` (\\n  `CategoryID` int(11) NOT NULL AUTO_INCREMENT  `CategoryName` varchar(15) NOT NULL,\\n  `Description` mediumtext DEFAULT NULL,\\n  `Picture` longblob DEFAULT NULL,\\n  PRIMARY KEY (`CategoryID`),\\n  KEY `Categories_CategoryName` (`CategoryName`)\\n) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Cliente Cliente Demostración con las columnas de, ID de cliente, ID de tipo de cliente",
      "output": "('CustomerCustomerDemo', 'CREATE TABLE `CustomerCustomerDemo` (\\n  `CustomerID` varchar(5) NOT NULL  `CustomerTypeID` varchar(10) NOT NULL,\\n  PRIMARY KEY (`CustomerID`,`CustomerTypeID`),\\n  KEY `FK_CustomerCustomerDemo` (`CustomerTypeID`),\\n  CONSTRAINT `FK_CustomerCustomerDemo` FOREIGN KEY (`CustomerTypeID`) REFERENCES `CustomerDemographics` (`CustomerTypeID`),\\n  CONSTRAINT `FK_CustomerCustomerDemo_Customers` FOREIGN KEY (`CustomerID`) REFERENCES `Customers` (`CustomerID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Datos demográficos del cliente con las columnas de, ID de tipo de cliente, Descripción del cliente",
      "output": "('CustomerDemographics', 'CREATE TABLE `CustomerDemographics` (\\n  `CustomerTypeID` varchar(10) NOT NULL  `CustomerDesc` mediumtext DEFAULT NULL,\\n  PRIMARY KEY (`CustomerTypeID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Clientes con las columnas de, Id. del cliente, Nombre de la empresa, Nombre del contacto, Título del contacto, Dirección, Ciudad, Región, Código postal, País, Teléfono, Fax",
      "output": "('Customers', 'CREATE TABLE `Customers` (\\n  `CustomerID` varchar(5) NOT NULL  `CompanyName` varchar(40) NOT NULL,\\n  `ContactName` varchar(30) DEFAULT NULL,\\n  `ContactTitle` varchar(30) DEFAULT NULL,\\n  `Address` varchar(60) DEFAULT NULL,\\n  `City` varchar(15) DEFAULT NULL,\\n  `Region` varchar(15) DEFAULT NULL,\\n  `PostalCode` varchar(10) DEFAULT NULL,\\n  `Country` varchar(15) DEFAULT NULL,\\n  `Phone` varchar(24) DEFAULT NULL,\\n  `Fax` varchar(24) DEFAULT NULL,\\n  PRIMARY KEY (`CustomerID`),\\n  KEY `Customers_City` (`City`),\\n  KEY `Customers_CompanyName` (`CompanyName`),\\n  KEY `Customers_PostalCode` (`PostalCode`),\\n  KEY `Customers_Region` (`Region`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Territorios de empleados con las columnas de, ID de empleado, ID de territorio",
      "output": "('EmployeeTerritories', 'CREATE TABLE `EmployeeTerritories` (\\n  `EmployeeID` int(11) NOT NULL  `TerritoryID` varchar(20) NOT NULL,\\n  PRIMARY KEY (`EmployeeID`,`TerritoryID`),\\n  KEY `FK_EmployeeTerritories_Territories` (`TerritoryID`),\\n  CONSTRAINT `FK_EmployeeTerritories_Employees` FOREIGN KEY (`EmployeeID`) REFERENCES `Employees` (`EmployeeID`),\\n  CONSTRAINT `FK_EmployeeTerritories_Territories` FOREIGN KEY (`TerritoryID`) REFERENCES `Territories` (`TerritoryID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Empleados con las columnas de, Id. de empleado, Apellido, Nombre, Título, Título de cortesía, Fecha de nacimiento, Fecha de contratación, Dirección, Ciudad, Región, Código postal, País, Teléfono particular, Extensión, Foto, Notas, Informes a, Ruta de la foto, Salario",
      "output": "('Employees', 'CREATE TABLE `Employees` (\\n  `EmployeeID` int(11) NOT NULL AUTO_INCREMENT  `LastName` varchar(20) NOT NULL,\\n  `FirstName` varchar(10) NOT NULL,\\n  `Title` varchar(30) DEFAULT NULL,\\n  `TitleOfCourtesy` varchar(25) DEFAULT NULL,\\n  `BirthDate` datetime DEFAULT NULL,\\n  `HireDate` datetime DEFAULT NULL,\\n  `Address` varchar(60) DEFAULT NULL,\\n  `City` varchar(15) DEFAULT NULL,\\n  `Region` varchar(15) DEFAULT NULL,\\n  `PostalCode` varchar(10) DEFAULT NULL,\\n  `Country` varchar(15) DEFAULT NULL,\\n  `HomePhone` varchar(24) DEFAULT NULL,\\n  `Extension` varchar(4) DEFAULT NULL,\\n  `Photo` longblob DEFAULT NULL,\\n  `Notes` mediumtext NOT NULL,\\n  `ReportsTo` int(11) DEFAULT NULL,\\n  `PhotoPath` varchar(255) DEFAULT NULL,\\n  `Salary` float DEFAULT NULL,\\n  PRIMARY KEY (`EmployeeID`),\\n  KEY `FK_Employees_Employees` (`ReportsTo`),\\n  KEY `Employees_LastName` (`LastName`),\\n  KEY `Employees_PostalCode` (`PostalCode`),\\n  CONSTRAINT `FK_Employees_Employees` FOREIGN KEY (`ReportsTo`) REFERENCES `Employees` (`EmployeeID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Pedidos con las columnas de, Id. de pedido, Id. de cliente, Id. de empleado, Fecha de pedido, Fecha requerida, Fecha de envío, Vía de envío, Carga, Nombre de envío, Dirección de envío, Ciudad de envío, Región de envío, Código postal de envío, País de envío",
      "output": "('Orders', 'CREATE TABLE `Orders` (\\n  `OrderID` int(11) NOT NULL AUTO_INCREMENT  `CustomerID` varchar(5) DEFAULT NULL,\\n  `EmployeeID` int(11) DEFAULT NULL,\\n  `OrderDate` datetime DEFAULT NULL,\\n  `RequiredDate` datetime DEFAULT NULL,\\n  `ShippedDate` datetime DEFAULT NULL,\\n  `ShipVia` int(11) DEFAULT NULL,\\n  `Freight` decimal(10,4) DEFAULT 0.0000,\\n  `ShipName` varchar(40) DEFAULT NULL,\\n  `ShipAddress` varchar(60) DEFAULT NULL,\\n  `ShipCity` varchar(15) DEFAULT NULL,\\n  `ShipRegion` varchar(15) DEFAULT NULL,\\n  `ShipPostalCode` varchar(10) DEFAULT NULL,\\n  `ShipCountry` varchar(15) DEFAULT NULL,\\n  PRIMARY KEY (`OrderID`),\\n  KEY `FK_Orders_Customers` (`CustomerID`),\\n  KEY `FK_Orders_Employees` (`EmployeeID`),\\n  KEY `FK_Orders_Shippers` (`ShipVia`),\\n  KEY `Orders_OrderDate` (`OrderDate`),\\n  KEY `Orders_ShippedDate` (`ShippedDate`),\\n  KEY `Orders_ShipPostalCode` (`ShipPostalCode`),\\n  CONSTRAINT `FK_Orders_Customers` FOREIGN KEY (`CustomerID`) REFERENCES `Customers` (`CustomerID`),\\n  CONSTRAINT `FK_Orders_Employees` FOREIGN KEY (`EmployeeID`) REFERENCES `Employees` (`EmployeeID`),\\n  CONSTRAINT `FK_Orders_Shippers` FOREIGN KEY (`ShipVia`) REFERENCES `Shippers` (`ShipperID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=11078 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de productos con las columnas de, Id. de producto, Nombre de producto, Id. de proveedor, Id. de categoría, Cantidad por unidad, Precio unitario, Unidades en stock, Unidades en pedido, Nivel de pedido, Descontinuado",
      "output": "('Products', 'CREATE TABLE `Products` (\\n  `ProductID` int(11) NOT NULL AUTO_INCREMENT  `ProductName` varchar(40) NOT NULL,\\n  `SupplierID` int(11) DEFAULT NULL,\\n  `CategoryID` int(11) DEFAULT NULL,\\n  `QuantityPerUnit` varchar(20) DEFAULT NULL,\\n  `UnitPrice` decimal(10,4) DEFAULT 0.0000,\\n  `UnitsInStock` smallint(2) DEFAULT 0,\\n  `UnitsOnOrder` smallint(2) DEFAULT 0,\\n  `ReorderLevel` smallint(2) DEFAULT 0,\\n  `Discontinued` tinyint(1) NOT NULL,\\n  PRIMARY KEY (`ProductID`),\\n  KEY `FK_Products_Categories` (`CategoryID`),\\n  KEY `FK_Products_Suppliers` (`SupplierID`),\\n  KEY `Products_ProductName` (`ProductName`),\\n  CONSTRAINT `FK_Products_Categories` FOREIGN KEY (`CategoryID`) REFERENCES `Categories` (`CategoryID`),\\n  CONSTRAINT `FK_Products_Suppliers` FOREIGN KEY (`SupplierID`) REFERENCES `Suppliers` (`SupplierID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Región con las columnas de, Id. de región, Descripción de región",
      "output": "('Region', 'CREATE TABLE `Region` (\\n  `RegionID` int(11) NOT NULL  `RegionDescription` varchar(50) NOT NULL,\\n  PRIMARY KEY (`RegionID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Cargadores con las columnas de, ID del remitente, nombre de la empresa, teléfono",
      "output": "('Shippers', 'CREATE TABLE `Shippers` (\\n  `ShipperID` int(11) NOT NULL AUTO_INCREMENT  `CompanyName` varchar(40) NOT NULL,\\n  `Phone` varchar(24) DEFAULT NULL,\\n  PRIMARY KEY (`ShipperID`)\\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Proveedores con las columnas de, Id. del proveedor, Nombre de la empresa, Nombre del contacto, Título del contacto, Dirección, Ciudad, Región, Código postal, País, Teléfono, Fax, Página de inicio",
      "output": "('Suppliers', 'CREATE TABLE `Suppliers` (\\n  `SupplierID` int(11) NOT NULL AUTO_INCREMENT  `CompanyName` varchar(40) NOT NULL,\\n  `ContactName` varchar(30) DEFAULT NULL,\\n  `ContactTitle` varchar(30) DEFAULT NULL,\\n  `Address` varchar(60) DEFAULT NULL,\\n  `City` varchar(15) DEFAULT NULL,\\n  `Region` varchar(15) DEFAULT NULL,\\n  `PostalCode` varchar(10) DEFAULT NULL,\\n  `Country` varchar(15) DEFAULT NULL,\\n  `Phone` varchar(24) DEFAULT NULL,\\n  `Fax` varchar(24) DEFAULT NULL,\\n  `HomePage` mediumtext DEFAULT NULL,\\n  PRIMARY KEY (`SupplierID`),\\n  KEY `Suppliers_CompanyName` (`CompanyName`),\\n  KEY `Suppliers_PostalCode` (`PostalCode`)\\n) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Territorios con las columnas de, ID de territorio, Descripción de territorio, ID de región",
      "output": "('Territories', 'CREATE TABLE `Territories` (\\n  `TerritoryID` varchar(20) NOT NULL  `TerritoryDescription` varchar(50) NOT NULL,\\n  `RegionID` int(11) NOT NULL,\\n  PRIMARY KEY (`TerritoryID`),\\n  KEY `FK_Territories_Region` (`RegionID`),\\n  CONSTRAINT `FK_Territories_Region` FOREIGN KEY (`RegionID`) REFERENCES `Region` (`RegionID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cuentas con las columnas de, USUARIO, HOST, CONEXIONES ACTUALES, CONEXIONES TOTALES",
      "output": "('accounts', 'CREATE TABLE `accounts` (\\n  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `CURRENT_CONNECTIONS` bigint(20) NOT NULL,\\n  `TOTAL_CONNECTIONS` bigint(20) NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de instancias condicionales con las columnas de, NOMBRE, INICIO DE INSTANCIA DE OBJETO",
      "output": "('cond_instances', 'CREATE TABLE `cond_instances` (\\n  `NAME` varchar(128) NOT NULL  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de eventos etapas actual con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DE EVENTO, ORIGEN, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, ID DE EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN",
      "output": "('events_stages_current', \"CREATE TABLE `events_stages_current` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de eventos etapas historia con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DE EVENTO, ORIGEN, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, ID DE EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN",
      "output": "('events_stages_history', \"CREATE TABLE `events_stages_history` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de eventos etapas historia larga con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DE EVENTO, ORIGEN, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, ID DE EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN",
      "output": "('events_stages_history_long', \"CREATE TABLE `events_stages_history_long` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de resumen de etapas de eventos por cuenta por nombre de evento con las columnas de, USUARIO, ANFITRIÓN, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('events_stages_summary_by_account_by_event_name', 'CREATE TABLE `events_stages_summary_by_account_by_event_name` (\\n  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de etapas de eventos por anfitrión por nombre de evento con las columnas de, ANFITRIÓN, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('events_stages_summary_by_host_by_event_name', 'CREATE TABLE `events_stages_summary_by_host_by_event_name` (\\n  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de etapas de eventos por hilo por nombre de evento con las columnas de, ID DE SUBPROCESO, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, ESPERA DE TEMPORIZADOR DE SUMA, ESPERA DE TEMPORIZADOR MÍN, ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁXIMO",
      "output": "('events_stages_summary_by_thread_by_event_name', 'CREATE TABLE `events_stages_summary_by_thread_by_event_name` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de etapas de eventos por usuario por nombre de evento con las columnas de, USUARIO, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('events_stages_summary_by_user_by_event_name', 'CREATE TABLE `events_stages_summary_by_user_by_event_name` (\\n  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de etapas de eventos global por nombre de evento con las columnas de, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('events_stages_summary_global_by_event_name', 'CREATE TABLE `events_stages_summary_global_by_event_name` (\\n  `EVENT_NAME` varchar(128) NOT NULL  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de declaraciones de eventos actuales con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DE EVENTO, FUENTE, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, TIEMPO DE BLOQUEO, TEXTO SQL, RESUMEN, TEXTO DEL RESUMEN, ESQUEMA ACTUAL, TIPO DE OBJETO, ESQUEMA DE OBJETO, NOMBRE DE OBJETO, INSTANCIA DE OBJETO INICIO, NÚMERO DE ERROR DE MYSQL, SQLSTATE DEVUELTO, TEXTO DE MENSAJE, ERRORES, ADVERTENCIAS, FILAS AFECTADAS, FILAS ENVIADAS, FILAS EXAMINADAS, TABLAS DE DISCO TMP CREADAS, TABLAS TMP CREADAS, SELECCIONAR UNIÓN COMPLETA, SELECCIONAR RANGO COMPLETO UNIÓN, SELECCIONAR RANGO, SELECCIONAR RANGO VERIFICAR, SELECCIONAR ESCANEAR, ORDENAR PASES DE COMBINACIÓN, ORDENAR RANGO, ORDENAR FILAS, ORDENAR ESCANEO, NO SE UTILIZA ÍNDICE, NO SE UTILIZA BUEN ÍNDICE, ID DE EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN",
      "output": "('events_statements_current', \"CREATE TABLE `events_statements_current` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SQL_TEXT` longtext DEFAULT NULL,\\n  `DIGEST` varchar(32) DEFAULT NULL,\\n  `DIGEST_TEXT` longtext DEFAULT NULL,\\n  `CURRENT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL,\\n  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(64) DEFAULT NULL,\\n  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned DEFAULT NULL,\\n  `MYSQL_ERRNO` int(11) DEFAULT NULL,\\n  `RETURNED_SQLSTATE` varchar(5) DEFAULT NULL,\\n  `MESSAGE_TEXT` varchar(128) DEFAULT NULL,\\n  `ERRORS` bigint(20) unsigned NOT NULL,\\n  `WARNINGS` bigint(20) unsigned NOT NULL,\\n  `ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de historia de declaraciones de eventos con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DE EVENTO, FUENTE, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, TIEMPO DE BLOQUEO, TEXTO SQL, RESUMEN, TEXTO DEL RESUMEN, ESQUEMA ACTUAL, TIPO DE OBJETO, ESQUEMA DE OBJETO, NOMBRE DE OBJETO, INSTANCIA DE OBJETO INICIO, NÚMERO DE ERROR DE MYSQL, SQLSTATE DEVUELTO, TEXTO DE MENSAJE, ERRORES, ADVERTENCIAS, FILAS AFECTADAS, FILAS ENVIADAS, FILAS EXAMINADAS, TABLAS DE DISCO TMP CREADAS, TABLAS TMP CREADAS, SELECCIONAR UNIÓN COMPLETA, SELECCIONAR RANGO COMPLETO UNIÓN, SELECCIONAR RANGO, SELECCIONAR RANGO VERIFICAR, SELECCIONAR ESCANEAR, ORDENAR PASES DE COMBINACIÓN, ORDENAR RANGO, ORDENAR FILAS, ORDENAR ESCANEO, NO SE UTILIZA ÍNDICE, NO SE UTILIZA BUEN ÍNDICE, ID DE EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN",
      "output": "('events_statements_history', \"CREATE TABLE `events_statements_history` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SQL_TEXT` longtext DEFAULT NULL,\\n  `DIGEST` varchar(32) DEFAULT NULL,\\n  `DIGEST_TEXT` longtext DEFAULT NULL,\\n  `CURRENT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL,\\n  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(64) DEFAULT NULL,\\n  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned DEFAULT NULL,\\n  `MYSQL_ERRNO` int(11) DEFAULT NULL,\\n  `RETURNED_SQLSTATE` varchar(5) DEFAULT NULL,\\n  `MESSAGE_TEXT` varchar(128) DEFAULT NULL,\\n  `ERRORS` bigint(20) unsigned NOT NULL,\\n  `WARNINGS` bigint(20) unsigned NOT NULL,\\n  `ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de eventos declaraciones historia larga con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DE EVENTO, FUENTE, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, TIEMPO DE BLOQUEO, TEXTO SQL, RESUMEN, TEXTO DEL RESUMEN, ESQUEMA ACTUAL, TIPO DE OBJETO, ESQUEMA DE OBJETO, NOMBRE DE OBJETO, INSTANCIA DE OBJETO INICIO, NÚMERO DE ERROR DE MYSQL, SQLSTATE DEVUELTO, TEXTO DE MENSAJE, ERRORES, ADVERTENCIAS, FILAS AFECTADAS, FILAS ENVIADAS, FILAS EXAMINADAS, TABLAS DE DISCO TMP CREADAS, TABLAS TMP CREADAS, SELECCIONAR UNIÓN COMPLETA, SELECCIONAR RANGO COMPLETO UNIÓN, SELECCIONAR RANGO, SELECCIONAR RANGO VERIFICAR, SELECCIONAR ESCANEAR, ORDENAR PASES DE COMBINACIÓN, ORDENAR RANGO, ORDENAR FILAS, ORDENAR ESCANEO, NO SE UTILIZA ÍNDICE, NO SE UTILIZA BUEN ÍNDICE, ID DE EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN",
      "output": "('events_statements_history_long', \"CREATE TABLE `events_statements_history_long` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SQL_TEXT` longtext DEFAULT NULL,\\n  `DIGEST` varchar(32) DEFAULT NULL,\\n  `DIGEST_TEXT` longtext DEFAULT NULL,\\n  `CURRENT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL,\\n  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(64) DEFAULT NULL,\\n  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned DEFAULT NULL,\\n  `MYSQL_ERRNO` int(11) DEFAULT NULL,\\n  `RETURNED_SQLSTATE` varchar(5) DEFAULT NULL,\\n  `MESSAGE_TEXT` varchar(128) DEFAULT NULL,\\n  `ERRORS` bigint(20) unsigned NOT NULL,\\n  `WARNINGS` bigint(20) unsigned NOT NULL,\\n  `ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de resumen de extractos de eventos por cuenta por nombre de evento con las columnas de, USUARIO, ANFITRIÓN, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, MÍN. DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MIN. TABLAS DE DISCO TMP CREADAS, SUMA TABLAS TMP CREADAS, SUM SELECCIONA UNIÓN COMPLETA, SUM SELECCIONA RANGO COMPLETO ÚNETE, SUM SELECCIONA RANGO, SUM SELECCIONA RANGO COMPROBACIÓN, SUM SELECCIONA ESCANEO, SUM ORDENA FUSIÓN DE PASES, SUMA ORDENA RANGO, SUMA ORDENA FILAS, SUMA ORDENA ESCANEO , SUMA SIN ÍNDICE UTILIZADO, SUMA SIN ÍNDICE UTILIZADO",
      "output": "('events_statements_summary_by_account_by_event_name', 'CREATE TABLE `events_statements_summary_by_account_by_event_name` (\\n  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SUM_ERRORS` bigint(20) unsigned NOT NULL,\\n  `SUM_WARNINGS` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de declaraciones de eventos por compendio con las columnas de, NOMBRE DEL ESQUEMA, RESUMEN, TEXTO DEL RESUMEN, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, MIN DE ESPERA DE TEMPORIZADOR, PROMEDIO DE ESPERA DE TEMPORIZADOR, MAX DE ESPERA DE TEMPORIZADOR, SUMA DE TIEMPO DE BLOQUEO, SUMA DE ERRORES, SUMA DE ADVERTENCIAS, SUMA DE FILAS AFECTADAS, SUMA DE FILAS ENVIADAS, SUMA DE FILAS EXAMINADAS, SUM CREATED TMP DISK TABLES, SUM CREATED TMP TABLES, SUM SELECT FULL JOIN, SUM SELECT FULL RANGE JOIN, SUM SELECT RANGE, SUM SELECT RANGE CHECK, SUM SELECT SCAN, SUM SORT MERGE PASES, SUM SORT RANGE, SUM SORT FILAS, SUM SORT ESCANEAR, SUM SIN ÍNDICE USADO, SUM NO BUEN ÍNDICE USADO, PRIMERA VISTA, ÚLTIMA VISTA",
      "output": "('events_statements_summary_by_digest', \"CREATE TABLE `events_statements_summary_by_digest` (\\n  `SCHEMA_NAME` varchar(64) DEFAULT NULL  `DIGEST` varchar(32) DEFAULT NULL,\\n  `DIGEST_TEXT` longtext DEFAULT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SUM_ERRORS` bigint(20) unsigned NOT NULL,\\n  `SUM_WARNINGS` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `FIRST_SEEN` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_SEEN` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00'\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de resumen de declaraciones de eventos por host por nombre de evento con las columnas de, ANFITRIÓN, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, MIN DE ESPERA DE TEMPORIZADOR, PROMEDIO DE ESPERA DE TEMPORIZADOR, MAX DE ESPERA DE TEMPORIZADOR, SUMA DE TIEMPO DE BLOQUEO, SUMA DE ERRORES, SUMA DE AVISOS, SUMA DE FILAS AFECTADAS, SUMA DE FILAS ENVIADAS, SUMA DE FILAS EXAMINADAS, SUMA CREADA TMP TABLAS DE DISCO, SUM TABLAS CREADAS TMP, SUM SELECCIONAR UNIÓN COMPLETA, SUM SELECCIONAR RANGO COMPLETO UNIÓN, SUM SELECCIONAR RANGO, SUM SELECCIONAR RANGO VERIFICAR, SUM SELECCIONAR ESCANEAR, SUM ORDENAR COMBINAR PASES, SUMA ORDENAR RANGO, SUMA ORDENAR FILAS, SUMA ORDENAR ESCANEAR, SUMA NO SE UTILIZA ÍNDICE, SUMA NO SE UTILIZA BUEN ÍNDICE",
      "output": "('events_statements_summary_by_host_by_event_name', 'CREATE TABLE `events_statements_summary_by_host_by_event_name` (\\n  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SUM_ERRORS` bigint(20) unsigned NOT NULL,\\n  `SUM_WARNINGS` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de declaraciones de eventos por hilo por nombre de evento con las columnas de, ID DE SUBPROCESO, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, MIN DE ESPERA DE TEMPORIZADOR, PROMEDIO DE ESPERA DE TEMPORIZADOR, MÁXIMA DE ESPERA DE TEMPORIZADOR, SUMA DE TIEMPO DE BLOQUEO, SUMA DE ERRORES, SUMA DE ADVERTENCIAS, SUMA DE FILAS AFECTADAS, SUMA DE FILAS ENVIADAS, SUMA DE FILAS EXAMINADAS, SUMA CREADA TMP DISK TABLES, SUM CREATED TMP TABLES, SUM SELECT FULL JOIN, SUM SELECT FULL RANGE JOIN, SUM SELECT RANGE, SUM SELECT RANGE CHECK, SUM SELECT SCAN, SUM SORT MERGE PASES, SUM SORT RANGE, SUM SORT ROWS, SUM SORT SCAN, SUMA SIN ÍNDICE UTILIZADO, SUMA SIN ÍNDICE UTILIZADO",
      "output": "('events_statements_summary_by_thread_by_event_name', 'CREATE TABLE `events_statements_summary_by_thread_by_event_name` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SUM_ERRORS` bigint(20) unsigned NOT NULL,\\n  `SUM_WARNINGS` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de declaraciones de eventos por usuario por nombre de evento con las columnas de, USUARIO, NOMBRE DE EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, MIN DE ESPERA DE TEMPORIZADOR, PROMEDIO DE ESPERA DE TEMPORIZADOR, MAX DE ESPERA DE TEMPORIZADOR, SUMA DE TIEMPO DE BLOQUEO, SUMA DE ERRORES, SUMA DE AVISOS, SUMA DE FILAS AFECTADAS, SUMA DE FILAS ENVIADAS, SUMA DE FILAS EXAMINADAS, SUMA CREADA TMP TABLAS DE DISCO, SUM TABLAS CREADAS TMP, SUM SELECCIONAR UNIÓN COMPLETA, SUM SELECCIONAR RANGO COMPLETO UNIÓN, SUM SELECCIONAR RANGO, SUM SELECCIONAR RANGO VERIFICAR, SUM SELECCIONAR ESCANEAR, SUM ORDENAR COMBINAR PASES, SUMA ORDENAR RANGO, SUMA ORDENAR FILAS, SUMA ORDENAR ESCANEAR, SUMA NO SE UTILIZA ÍNDICE, SUMA NO SE UTILIZA BUEN ÍNDICE",
      "output": "('events_statements_summary_by_user_by_event_name', 'CREATE TABLE `events_statements_summary_by_user_by_event_name` (\\n  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SUM_ERRORS` bigint(20) unsigned NOT NULL,\\n  `SUM_WARNINGS` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de declaraciones de eventos global por nombre de evento con las columnas de, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX., SUMA DE TIEMPO DE BLOQUEO, SUMA DE ERRORES, SUMA DE ADVERTENCIAS, SUMA DE FILAS AFECTADAS, SUMA DE FILAS ENVIADAS, SUMA DE FILAS EXAMINADAS, SUMA DE TABLAS DE DISCO TMP CREADAS , TABLAS TMP CREADAS EN SUMA, SELECCIÓN DE SUMA UNIÓN COMPLETA, SELECCIÓN DE SUMA UNIÓN DE RANGO COMPLETO, RANGO DE SELECCIÓN DE SUMA, COMPROBACIÓN DE RANGO DE SELECCIÓN DE SUMA, ESCANEO DE SELECCIÓN DE SUMA, PASES DE FUSIÓN DE CLASIFICACIÓN DE SUMA, RANGO DE CLASIFICACIÓN DE SUMA, FILAS DE CLASIFICACIÓN DE SUMA, EXPLORACIÓN DE CLASIFICACIÓN DE SUMA, SIN ÍNDICE DE SUMA USADO, SUMA NO BUEN ÍNDICE USADO",
      "output": "('events_statements_summary_global_by_event_name', 'CREATE TABLE `events_statements_summary_global_by_event_name` (\\n  `EVENT_NAME` varchar(128) NOT NULL  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL,\\n  `SUM_ERRORS` bigint(20) unsigned NOT NULL,\\n  `SUM_WARNINGS` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL,\\n  `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL,\\n  `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL,\\n  `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL,\\n  `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de eventos espera actual con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DEL EVENTO, FUENTE, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, GIROS, ESQUEMA DEL OBJETO, NOMBRE DEL OBJETO, NOMBRE DEL ÍNDICE, TIPO DE OBJETO, INICIO DE LA INSTANCIA DEL OBJETO, ID DEL EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN , OPERACIÓN, NÚMERO DE BYTES, BANDERAS",
      "output": "('events_waits_current', \"CREATE TABLE `events_waits_current` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `SPINS` int(10) unsigned DEFAULT NULL,\\n  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(512) DEFAULT NULL,\\n  `INDEX_NAME` varchar(64) DEFAULT NULL,\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL,\\n  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL,\\n  `OPERATION` varchar(32) NOT NULL,\\n  `NUMBER_OF_BYTES` bigint(20) DEFAULT NULL,\\n  `FLAGS` int(10) unsigned DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de eventos espera historia con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DEL EVENTO, FUENTE, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, GIROS, ESQUEMA DEL OBJETO, NOMBRE DEL OBJETO, NOMBRE DEL ÍNDICE, TIPO DE OBJETO, INICIO DE LA INSTANCIA DEL OBJETO, ID DEL EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN , OPERACIÓN, NÚMERO DE BYTES, BANDERAS",
      "output": "('events_waits_history', \"CREATE TABLE `events_waits_history` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `SPINS` int(10) unsigned DEFAULT NULL,\\n  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(512) DEFAULT NULL,\\n  `INDEX_NAME` varchar(64) DEFAULT NULL,\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL,\\n  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL,\\n  `OPERATION` varchar(32) NOT NULL,\\n  `NUMBER_OF_BYTES` bigint(20) DEFAULT NULL,\\n  `FLAGS` int(10) unsigned DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de eventos espera historia larga con las columnas de, ID DE SUBPROCESO, ID DE EVENTO, ID DE EVENTO FINAL, NOMBRE DEL EVENTO, FUENTE, INICIO DEL TEMPORIZADOR, FIN DEL TEMPORIZADOR, ESPERA DEL TEMPORIZADOR, GIROS, ESQUEMA DEL OBJETO, NOMBRE DEL OBJETO, NOMBRE DEL ÍNDICE, TIPO DE OBJETO, INICIO DE LA INSTANCIA DEL OBJETO, ID DEL EVENTO DE ANIDACIÓN, TIPO DE EVENTO DE ANIDACIÓN , OPERACIÓN, NÚMERO DE BYTES, BANDERAS",
      "output": "('events_waits_history_long', \"CREATE TABLE `events_waits_history_long` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_ID` bigint(20) unsigned NOT NULL,\\n  `END_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `SOURCE` varchar(64) DEFAULT NULL,\\n  `TIMER_START` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_END` bigint(20) unsigned DEFAULT NULL,\\n  `TIMER_WAIT` bigint(20) unsigned DEFAULT NULL,\\n  `SPINS` int(10) unsigned DEFAULT NULL,\\n  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(512) DEFAULT NULL,\\n  `INDEX_NAME` varchar(64) DEFAULT NULL,\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL,\\n  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `NESTING_EVENT_ID` bigint(20) unsigned DEFAULT NULL,\\n  `NESTING_EVENT_TYPE` enum('STATEMENT','STAGE','WAIT') DEFAULT NULL,\\n  `OPERATION` varchar(32) NOT NULL,\\n  `NUMBER_OF_BYTES` bigint(20) DEFAULT NULL,\\n  `FLAGS` int(10) unsigned DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de resumen de esperas de eventos por cuenta por nombre de evento con las columnas de, USUARIO, ANFITRIÓN, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('events_waits_summary_by_account_by_event_name', 'CREATE TABLE `events_waits_summary_by_account_by_event_name` (\\n  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de esperas de eventos por host por nombre de evento con las columnas de, ANFITRIÓN, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('events_waits_summary_by_host_by_event_name', 'CREATE TABLE `events_waits_summary_by_host_by_event_name` (\\n  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de esperas de eventos por instancia con las columnas de, NOMBRE DEL EVENTO, INICIO DE LA INSTANCIA DEL OBJETO, CONTEO DE ESTRELLAS, ESPERA DEL TEMPORIZADOR DE SUMA, ESPERA DEL TEMPORIZADOR MÍN. ESPERA DEL TEMPORIZADOR PROMEDIO, ESPERA DEL TEMPORIZADOR MÁXIMO",
      "output": "('events_waits_summary_by_instance', 'CREATE TABLE `events_waits_summary_by_instance` (\\n  `EVENT_NAME` varchar(128) NOT NULL  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de esperas de eventos por subproceso por nombre de evento con las columnas de, ID DE SUBPROCESO, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, ESPERA DE TEMPORIZADOR DE SUMA, ESPERA DE TEMPORIZADOR MÍN, ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁXIMO",
      "output": "('events_waits_summary_by_thread_by_event_name', 'CREATE TABLE `events_waits_summary_by_thread_by_event_name` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de esperas de eventos por usuario por nombre de evento con las columnas de, USUARIO, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('events_waits_summary_by_user_by_event_name', 'CREATE TABLE `events_waits_summary_by_user_by_event_name` (\\n  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de eventos espera resumen global por nombre de evento con las columnas de, NOMBRE DEL EVENTO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('events_waits_summary_global_by_event_name', 'CREATE TABLE `events_waits_summary_global_by_event_name` (\\n  `EVENT_NAME` varchar(128) NOT NULL  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de instancias de archivo con las columnas de, NOMBRE DE ARCHIVO, NOMBRE DE EVENTO, CUENTA ABIERTA",
      "output": "('file_instances', 'CREATE TABLE `file_instances` (\\n  `FILE_NAME` varchar(512) NOT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `OPEN_COUNT` int(10) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de archivo por nombre de evento con las columnas de, NOMBRE DE EVENTO, ESTRELLA DE CONTEO, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MAX. , ESCRITURA DE TEMPORIZADOR DE SUMA, ESCRITURA DE TEMPORIZADOR MÍN, ESCRITURA DE TEMPORIZADOR PROMEDIO, ESCRITURA DE TEMPORIZADOR MÁXIMO, ESCRITURA DE SUMA DE NÚMERO DE BYTES, COUNT MISC, SUMA DE ESCRITURA DE TEMPORIZADOR, MISC DE TEMPORIZADOR MIN, MISC DE TEMPORIZADOR PROMEDIO, VARIOS DE TEMPORIZADOR MÁX.",
      "output": "('file_summary_by_event_name', 'CREATE TABLE `file_summary_by_event_name` (\\n  `EVENT_NAME` varchar(128) NOT NULL  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_NUMBER_OF_BYTES_READ` bigint(20) NOT NULL,\\n  `COUNT_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_NUMBER_OF_BYTES_WRITE` bigint(20) NOT NULL,\\n  `COUNT_MISC` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_MISC` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de archivos por instancia con las columnas de, NOMBRE DE ARCHIVO, NOMBRE DE EVENTO, INICIO DE INSTANCIA DE OBJETO, ESTRELLA DE CONTEO, ESPERA DE TEMPORIZADOR DE SUMA, ESPERA DE TEMPORIZADOR MÍN. ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX. NÚMERO DE BYTES LEÍDOS, CONTADOR DE ESCRITURA, SUMA DE ESCRITURA DE TEMPORIZADOR, MIN DE ESCRITURA DE TEMPORIZADOR, PROMEDIO DE ESCRITURA DE TEMPORIZADOR, MAX DE ESCRITURA DE TEMPORIZADOR, SUMA DE NÚMERO DE BYTES DE ESCRITURA, CONTADOR DE ESCRITURA, SUMA DE ESCRITURA DE TEMPORIZADOR, MIN DE ESCRITURA DE TEMPORIZADOR, PROMEDIO DE ESCRITURA DE TEMPORIZADOR, MAX DE ESCRITURA DE TEMPORIZADOR, MAX DE ESCRITURA DE TEMPORIZADOR",
      "output": "('file_summary_by_instance', 'CREATE TABLE `file_summary_by_instance` (\\n  `FILE_NAME` varchar(512) NOT NULL  `EVENT_NAME` varchar(128) NOT NULL,\\n  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_NUMBER_OF_BYTES_READ` bigint(20) NOT NULL,\\n  `COUNT_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_NUMBER_OF_BYTES_WRITE` bigint(20) NOT NULL,\\n  `COUNT_MISC` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_MISC` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de caché de host con las columnas de, IP, HOST, HOST VALIDADO, SUMA DE ERRORES DE CONEXIÓN, CONTEO DE ERRORES BLOQUEADOS DE HOST, CONTEO DE ERRORES TRANSITORIOS DE NAMEINFO, CONTEO DE ERRORES PERMANENTES DE NAMEINFO, CONTEO DE ERRORES DE FORMATO, CONTEO DE ERRORES TRANSITORIOS DE ADDRINFO, CONTEO DE ERRORES PERMANENTES DE ADDRINFO, CONTEO DE ERRORES FCRDNS, CONTEO DE ERRORES DE ACL DEL HOST, CUENTA SIN ERRORES DE COMPLEMENTO DE AUTORIZACIÓN, CUENTA DE ERRORES DE COMPLEMENTO DE AUTORIZACIÓN, CUENTA DE ERRORES DE HANDSHAKE, CUENTA DE ERRORES DE USUARIO DE PROXY, CUENTA DE ERRORES DE ACL DE USUARIO DE PROXY, CUENTA DE ERRORES DE AUTENTICACIÓN, CUENTA DE ERRORES DE SSL, CUENTA MÁXIMA DE ERRORES DE CONEXIONES DE USUARIO, CUENTA MÁXIMA DE CONEXIONES DE USUARIO POR HORA DE ERRORES, CUENTA PREDETERMINADA ERRORES DE LA BASE DE DATOS, CONTEO DE ERRORES DE CONEXIÓN INIT, CONTEO DE ERRORES LOCALES, CONTEO DE ERRORES DESCONOCIDOS, PRIMERA VISTA, ÚLTIMA VISTA, PRIMER ERROR VISTO, ÚLTIMO ERROR VISTO",
      "output": "('host_cache', \"CREATE TABLE `host_cache` (\\n  `IP` varchar(64) NOT NULL  `HOST` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `HOST_VALIDATED` enum('YES','NO') NOT NULL,\\n  `SUM_CONNECT_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_HOST_BLOCKED_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_NAMEINFO_TRANSIENT_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_NAMEINFO_PERMANENT_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_FORMAT_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_ADDRINFO_TRANSIENT_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_ADDRINFO_PERMANENT_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_FCRDNS_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_HOST_ACL_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_NO_AUTH_PLUGIN_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_AUTH_PLUGIN_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_HANDSHAKE_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_PROXY_USER_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_PROXY_USER_ACL_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_AUTHENTICATION_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_SSL_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_MAX_USER_CONNECTIONS_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_MAX_USER_CONNECTIONS_PER_HOUR_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_DEFAULT_DATABASE_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_INIT_CONNECT_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_LOCAL_ERRORS` bigint(20) NOT NULL,\\n  `COUNT_UNKNOWN_ERRORS` bigint(20) NOT NULL,\\n  `FIRST_SEEN` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_SEEN` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\\n  `FIRST_ERROR_SEEN` timestamp NULL DEFAULT '0000-00-00 00:00:00',\\n  `LAST_ERROR_SEEN` timestamp NULL DEFAULT '0000-00-00 00:00:00'\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Hospedadores con las columnas de, HOST, CONEXIONES ACTUALES, CONEXIONES TOTALES",
      "output": "('hosts', 'CREATE TABLE `hosts` (\\n  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `CURRENT_CONNECTIONS` bigint(20) NOT NULL,\\n  `TOTAL_CONNECTIONS` bigint(20) NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de instancias de exclusión mutua con las columnas de, NOMBRE, INICIO DE INSTANCIA DE OBJETO, BLOQUEADO POR ID DE HILO",
      "output": "('mutex_instances', 'CREATE TABLE `mutex_instances` (\\n  `NAME` varchar(128) NOT NULL  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `LOCKED_BY_THREAD_ID` bigint(20) unsigned DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de objetos global por tipo con las columnas de, TIPO DE OBJETO, ESQUEMA DE OBJETO, NOMBRE DE OBJETO, CONTEO DE ESTRELLAS, ESPERA DE TEMPORIZADOR DE SUMA, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX.",
      "output": "('objects_summary_global_by_type', 'CREATE TABLE `objects_summary_global_by_type` (\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(64) DEFAULT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de temporizadores de rendimiento con las columnas de, NOMBRE DEL TEMPORIZADOR, FRECUENCIA DEL TEMPORIZADOR, RESOLUCIÓN DEL TEMPORIZADOR, SOBRECARGA DEL TEMPORIZADOR",
      "output": "('performance_timers', \"CREATE TABLE `performance_timers` (\\n  `TIMER_NAME` enum('CYCLE','NANOSECOND','MICROSECOND','MILLISECOND','TICK') NOT NULL  `TIMER_FREQUENCY` bigint(20) DEFAULT NULL,\\n  `TIMER_RESOLUTION` bigint(20) DEFAULT NULL,\\n  `TIMER_OVERHEAD` bigint(20) DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de instancias de rwlock con las columnas de, NOMBRE, INICIO DE INSTANCIA DE OBJETO, ESCRITURA BLOQUEADA POR ID DE HILO, LECTURA BLOQUEADA POR CONTEO",
      "output": "('rwlock_instances', 'CREATE TABLE `rwlock_instances` (\\n  `NAME` varchar(128) NOT NULL  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `WRITE_LOCKED_BY_THREAD_ID` bigint(20) unsigned DEFAULT NULL,\\n  `READ_LOCKED_BY_COUNT` int(10) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de sesión cuenta conectar attrs con las columnas de, ID DE LISTA DE PROCESOS, NOMBRE DE ATTR, VALOR DE ATTR, POSICIÓN ORDINAL",
      "output": "('session_account_connect_attrs', 'CREATE TABLE `session_account_connect_attrs` (\\n  `PROCESSLIST_ID` int(11) NOT NULL  `ATTR_NAME` varchar(32) COLLATE utf8_bin NOT NULL,\\n  `ATTR_VALUE` varchar(1024) COLLATE utf8_bin DEFAULT NULL,\\n  `ORDINAL_POSITION` int(11) DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8 COLLATE=utf8_bin')"
    },
    {
      "input": "Una tabla de atributos de conexión de sesión con las columnas de, ID DE LISTA DE PROCESOS, NOMBRE DE ATTR, VALOR DE ATTR, POSICIÓN ORDINAL",
      "output": "('session_connect_attrs', 'CREATE TABLE `session_connect_attrs` (\\n  `PROCESSLIST_ID` int(11) NOT NULL  `ATTR_NAME` varchar(32) COLLATE utf8_bin NOT NULL,\\n  `ATTR_VALUE` varchar(1024) COLLATE utf8_bin DEFAULT NULL,\\n  `ORDINAL_POSITION` int(11) DEFAULT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8 COLLATE=utf8_bin')"
    },
    {
      "input": "Una tabla de actores de configuración con las columnas de, HOST, USUARIO, ROL",
      "output": "('setup_actors', \"CREATE TABLE `setup_actors` (\\n  `HOST` char(60) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '%'  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '%',\\n  `ROLE` char(16) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '%'\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de configurar consumidores con las columnas de, NOMBRE, HABILITADO",
      "output": "('setup_consumers', \"CREATE TABLE `setup_consumers` (\\n  `NAME` varchar(64) NOT NULL  `ENABLED` enum('YES','NO') NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de configurar instrumentos con las columnas de, NOMBRE, HABILITADO, TEMPORIZADO",
      "output": "('setup_instruments', \"CREATE TABLE `setup_instruments` (\\n  `NAME` varchar(128) NOT NULL  `ENABLED` enum('YES','NO') NOT NULL,\\n  `TIMED` enum('YES','NO') NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de configurar objetos con las columnas de, TIPO DE OBJETO, ESQUEMA DE OBJETO, NOMBRE DE OBJETO, HABILITADO, TEMPORIZADO",
      "output": "('setup_objects', \"CREATE TABLE `setup_objects` (\\n  `OBJECT_TYPE` enum('TABLE') NOT NULL DEFAULT 'TABLE'  `OBJECT_SCHEMA` varchar(64) DEFAULT '%',\\n  `OBJECT_NAME` varchar(64) NOT NULL DEFAULT '%',\\n  `ENABLED` enum('YES','NO') NOT NULL DEFAULT 'YES',\\n  `TIMED` enum('YES','NO') NOT NULL DEFAULT 'YES'\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de temporizadores de configuración con las columnas de, NOMBRE, NOMBRE DEL TEMPORIZADOR",
      "output": "('setup_timers', \"CREATE TABLE `setup_timers` (\\n  `NAME` varchar(64) NOT NULL  `TIMER_NAME` enum('CYCLE','NANOSECOND','MICROSECOND','MILLISECOND','TICK') NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de instancias de socket con las columnas de, NOMBRE DEL EVENTO, INICIO DE LA INSTANCIA DEL OBJETO, ID DEL SUBPROCESO, ID DEL SOCKET, IP, PUERTO, ESTADO",
      "output": "('socket_instances', \"CREATE TABLE `socket_instances` (\\n  `EVENT_NAME` varchar(128) NOT NULL  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `THREAD_ID` bigint(20) unsigned DEFAULT NULL,\\n  `SOCKET_ID` int(11) NOT NULL,\\n  `IP` varchar(64) NOT NULL,\\n  `PORT` int(11) NOT NULL,\\n  `STATE` enum('IDLE','ACTIVE') NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de resumen de socket por nombre de evento con las columnas de, NOMBRE DE EVENTO, ESTRELLA DE CONTEO, SUMA DE ESPERA DE TEMPORIZADOR, ESPERA DE TEMPORIZADOR MÍN., ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MAX. , ESCRITURA DE TEMPORIZADOR DE SUMA, ESCRITURA DE TEMPORIZADOR MÍN, ESCRITURA DE TEMPORIZADOR PROMEDIO, ESCRITURA DE TEMPORIZADOR MÁXIMO, ESCRITURA DE SUMA DE NÚMERO DE BYTES, COUNT MISC, SUMA DE ESCRITURA DE TEMPORIZADOR, MISC DE TEMPORIZADOR MIN, MISC DE TEMPORIZADOR PROMEDIO, VARIOS DE TEMPORIZADOR MÁX.",
      "output": "('socket_summary_by_event_name', 'CREATE TABLE `socket_summary_by_event_name` (\\n  `EVENT_NAME` varchar(128) NOT NULL  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_NUMBER_OF_BYTES_READ` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_NUMBER_OF_BYTES_WRITE` bigint(20) unsigned NOT NULL,\\n  `COUNT_MISC` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_MISC` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de socket por instancia con las columnas de, NOMBRE DE EVENTO, INICIO DE INSTANCIA DE OBJETO, CONTEO DE ESTRELLAS, SUMA DE ESPERA DE TEMPORIZADOR, MIN DE ESPERA DE TEMPORIZADOR, PROMEDIO DE ESPERA DE TEMPORIZADOR, MAX DE ESPERA DE TEMPORIZADOR, CONTADOR DE LECTURA, SUMA DE LECTURA DE TEMPORIZADOR, MIN DE LECTURA DE TEMPORIZADOR, PROMEDIO DE LECTURA DE TEMPORIZADOR, MAX DE LECTURA DE TEMPORIZADOR, SUMA DE NÚMERO DE BYTES LEER, ESCRIBIR CONTADOR, ESCRIBIR TEMPORIZADOR SUMA, ESCRIBIR TEMPORIZADOR MIN, ESCRIBIR TEMPORIZADOR PROMEDIO, ESCRIBIR TEMPORIZADOR MÁXIMO, ESCRIBIR NÚMERO DE SUM DE BYTES, ESCRIBIR CONTADOR MISC, ESCRIBIR TEMPORIZADOR SUMA, MISC TEMPORIZADOR MIN, MISC TEMPORIZADOR PROMEDIO, MISC TEMPORIZADOR MÁX.",
      "output": "('socket_summary_by_instance', 'CREATE TABLE `socket_summary_by_instance` (\\n  `EVENT_NAME` varchar(128) NOT NULL  `OBJECT_INSTANCE_BEGIN` bigint(20) unsigned NOT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_NUMBER_OF_BYTES_READ` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_NUMBER_OF_BYTES_WRITE` bigint(20) unsigned NOT NULL,\\n  `COUNT_MISC` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_MISC` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_MISC` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tabla io espera resumen por uso de índice con las columnas de, TIPO DE OBJETO, ESQUEMA DE OBJETO, NOMBRE DE OBJETO, NOMBRE DE ÍNDICE, ESTRELLA DE CONTEO, ESPERA DE TEMPORIZADOR DE SUMA, ESPERA DE TEMPORIZADOR MÍN. ESPERA DE TEMPORIZADOR PROMEDIO, ESPERA DE TEMPORIZADOR MÁX. , ESCRITURA DE CONTADOR, ESCRITURA DE TEMPORIZADOR DE SUMA, ESCRITURA DE TEMPORIZADOR DE MIN, ESCRITURA DE TEMPORIZADOR PROMEDIO, ESCRITURA DE TEMPORIZADOR DE MAX, BUSCADOR DE CONTADOR, BUSCADOR DE TEMPORIZADOR DE SUMA, BUSCADOR DE TEMPORIZADOR DE MIN, BUSCADOR DE TEMPORIZADOR PROMEDIO, BUSCADOR DE TEMPORIZADOR DE MAX, INSERCIÓN DE CUENTA, INSERCIÓN DE TEMPORIZADOR DE SUMA, INSERCIÓN DE TEMPORIZADOR DE MIN, INSERTAR TEMPORIZADOR PROMEDIO, INSERTAR TEMPORIZADOR MÁXIMO, ACTUALIZAR CONTADOR, ACTUALIZAR TEMPORIZADOR SUMA, ACTUALIZAR TEMPORIZADOR MÍNIMO, ACTUALIZAR TEMPORIZADOR PROMEDIO, ACTUALIZAR TEMPORIZADOR MÁXIMO, ELIMINAR CONTADOR, ELIMINAR TEMPORIZADOR SUMA, ELIMINAR TEMPORIZADOR MÍNIMO, ELIMINAR TEMPORIZADOR PROMEDIO, ELIMINAR TEMPORIZADOR MÁXIMO",
      "output": "('table_io_waits_summary_by_index_usage', 'CREATE TABLE `table_io_waits_summary_by_index_usage` (\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(64) DEFAULT NULL,\\n  `INDEX_NAME` varchar(64) DEFAULT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `COUNT_FETCH` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_FETCH` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_FETCH` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_FETCH` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_FETCH` bigint(20) unsigned NOT NULL,\\n  `COUNT_INSERT` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_INSERT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_INSERT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_INSERT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_INSERT` bigint(20) unsigned NOT NULL,\\n  `COUNT_UPDATE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_UPDATE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_UPDATE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_UPDATE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_UPDATE` bigint(20) unsigned NOT NULL,\\n  `COUNT_DELETE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_DELETE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_DELETE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_DELETE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_DELETE` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tabla io espera resumen por tabla con las columnas de, TIPO DE OBJETO, ESQUEMA DE OBJETO, NOMBRE DE OBJETO, ESTRELLA DE CONTEO, SUMA DE ESPERA DE TEMPORIZADOR, MIN DE ESPERA DE TEMPORIZADOR, PROMEDIO DE ESPERA DE TEMPORIZADOR, MAX DE ESPERA DE TEMPORIZADOR, CONTADOR DE LECTURA, SUMA DE LECTURA DE TEMPORIZADOR, MIN DE LECTURA DE TEMPORIZADOR, PROMEDIO DE LECTURA DE TEMPORIZADOR, MAX DE LECTURA DE TEMPORIZADOR, DE ESCRITURA DE CONTEO , ESCRITURA DE TEMPORIZADOR DE SUMA, ESCRITURA DE TEMPORIZADOR MIN, ESCRITURA DE TEMPORIZADOR PROMEDIO, ESCRITURA DE TEMPORIZADOR MÁXIMO, BUSCAR CONTADOR, BUSCAR DE TEMPORIZADOR SUMA, BUSCAR TEMPORIZADOR MIN, BUSCAR TEMPORIZADOR PROMEDIO, BUSCAR TEMPORIZADOR MÁXIMO, INSERTAR CONTADOR, INSERTAR TEMPORIZADOR SUMA, INSERTAR TEMPORIZADOR MIN, INSERTAR TEMPORIZADOR PROMEDIO , INSERTAR TEMPORIZADOR MÁXIMO, ACTUALIZAR CONTADOR, ACTUALIZAR TEMPORIZADOR SUMA, ACTUALIZAR TEMPORIZADOR MÍNIMO, ACTUALIZAR TEMPORIZADOR PROMEDIO, ACTUALIZAR TEMPORIZADOR MÁXIMO, ELIMINAR CONTADOR, ELIMINAR TEMPORIZADOR SUMA, ELIMINAR TEMPORIZADOR MÍNIMO, ELIMINAR TEMPORIZADOR PROMEDIO, ELIMINAR TEMPORIZADOR MÁXIMO",
      "output": "('table_io_waits_summary_by_table', 'CREATE TABLE `table_io_waits_summary_by_table` (\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(64) DEFAULT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `COUNT_FETCH` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_FETCH` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_FETCH` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_FETCH` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_FETCH` bigint(20) unsigned NOT NULL,\\n  `COUNT_INSERT` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_INSERT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_INSERT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_INSERT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_INSERT` bigint(20) unsigned NOT NULL,\\n  `COUNT_UPDATE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_UPDATE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_UPDATE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_UPDATE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_UPDATE` bigint(20) unsigned NOT NULL,\\n  `COUNT_DELETE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_DELETE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_DELETE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_DELETE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_DELETE` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de resumen de esperas de bloqueo de tabla por tabla con las columnas de, TIPO DE OBJETO, ESQUEMA DE OBJETO, NOMBRE DE OBJETO, ESTRELLA DE CONTEO, SUMA DE ESPERA DE TEMPORIZADOR, MIN DE ESPERA DE TEMPORIZADOR, PROMEDIO DE ESPERA DE TEMPORIZADOR, MAX DE ESPERA DE TEMPORIZADOR, CONTADOR DE LECTURA, SUMA DE LECTURA DE TEMPORIZADOR, MIN DE LECTURA DE TEMPORIZADOR, PROMEDIO DE LECTURA DE TEMPORIZADOR, MAX DE LECTURA DE TEMPORIZADOR, DE ESCRITURA DE CONTEO , ESCRITURA DE TEMPORIZADOR DE SUMA, ESCRITURA DE TEMPORIZADOR MIN, ESCRITURA DE TEMPORIZADOR PROMEDIO, ESCRITURA DE TEMPORIZADOR MAX, LECTURA DE CONTADOR NORMAL, LECTURA DE TEMPORIZADOR NORMAL, LECTURA DE TEMPORIZADOR MIN NORMAL, LECTURA DE TEMPORIZADOR PROMEDIO NORMAL, LECTURA DE TEMPORIZADOR MAX NORMAL, LECTURA DE CONTADOR CON BLOQUEOS COMPARTIDOS, LECTURA DE TEMPORIZADOR CON BLOQUEOS COMPARTIDOS, LECTURA DE TEMPORIZADOR MÍN. CON BLOQUEOS COMPARTIDOS, LECTURA DE TEMPORIZADOR PROMEDIO CON BLOQUEOS COMPARTIDOS, LECTURA DE TEMPORIZADOR MÁX. CON BLOQUEOS COMPARTIDOS, LECTURA DE CONTEO ALTA PRIORIDAD, LECTURA DE TEMPORIZADOR DE SUMA ALTA PRIORIDAD, LECTURA DE TEMPORIZADOR MIN ALTA PRIORIDAD, LECTURA DE TEMPORIZADOR PROMEDIO ALTA PRIORIDAD, TEMPORIZADOR MÁX. LECTURA ALTA PRIORIDAD, CONTADOR LECTURA SIN INSERCIÓN, SUMA TEMPORIZADOR LECTURA SIN INSERCIÓN, MIN TEMPORIZADOR LECTURA SIN INSERCIÓN, PROMEDIO TEMPORIZADOR LECTURA SIN INSERCIÓN, MAX TIMER LECTURA SIN INSERCIÓN, CONTADOR LECTURA EXTERNA, SUMA TEMPORIZADOR LECTURA EXTERNA, MIN TEMPORIZADOR LECTURA EXTERNA, PROMEDIO TEMPORIZADOR LECTURA EXTERNO, TEMPORIZADOR MÁX. LECTURA EXTERNO, CONTADOR ESCRIBIR PERMITIR ESCRIBIR, SUMA TEMPORIZADOR ESCRIBIR PERMITIR ESCRIBIR, ESCRITURA DE TEMPORIZADOR MÍN. PERMITIR ESCRITURA, ESCRITURA DE TEMPORIZADOR PROMEDIO. PERMITIR ESCRITURA, ESCRITURA DE TEMPORIZADOR MÁX. , ESCRITURA DE TEMPORIZADOR DE SUMA DEMORADA, ESCRITURA DE TEMPORIZADOR MÍNIMA DEMORADA, ESCRITURA DE TEMPORIZADOR PROMEDIO DEMORADA, ESCRITURA DE TEMPORIZADOR MÁXIMA DEMORADA, ESCRITURA DE CONTADOR PRIORIDAD BAJA, ESCRITURA DE TEMPORIZADOR SUMA DE PRIORIDAD BAJA, ESCRITURA DE TEMPORIZADOR MÍN PRIORIDAD BAJA, ESCRITURA DE TEMPORIZADOR PROMEDIO PRIORIDAD BAJA, ESCRITURA DE TEMPORIZADOR MÁXIMA PRIORIDAD BAJA, ESCRIBIR CONTADOR NORMAL, ESCRIBIR TEMPORIZADOR SUMA NORMAL, ESCRIBIR TEMPORIZADOR MIN NORMAL, ESCRIBIR TEMPORIZADOR PROMEDIO NORMAL, ESCRIBIR TEMPORIZADOR MAX NORMAL, ESCRIBIR CONTADOR EXTERNO, ESCRIBIR TEMPORIZADOR SUMA EXTERNO, ESCRIBIR TEMPORIZADOR MIN EXTERNO, ESCRIBIR TEMPORIZADOR PROMEDIO EXTERNO, ESCRIBIR TEMPORIZADOR MAX EXTERNO",
      "output": "('table_lock_waits_summary_by_table', 'CREATE TABLE `table_lock_waits_summary_by_table` (\\n  `OBJECT_TYPE` varchar(64) DEFAULT NULL  `OBJECT_SCHEMA` varchar(64) DEFAULT NULL,\\n  `OBJECT_NAME` varchar(64) DEFAULT NULL,\\n  `COUNT_STAR` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ_NORMAL` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ_NORMAL` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ_NORMAL` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ_NORMAL` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ_NORMAL` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ_WITH_SHARED_LOCKS` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ_WITH_SHARED_LOCKS` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ_WITH_SHARED_LOCKS` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ_WITH_SHARED_LOCKS` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ_WITH_SHARED_LOCKS` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ_HIGH_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ_HIGH_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ_HIGH_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ_HIGH_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ_HIGH_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ_NO_INSERT` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ_NO_INSERT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ_NO_INSERT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ_NO_INSERT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ_NO_INSERT` bigint(20) unsigned NOT NULL,\\n  `COUNT_READ_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_READ_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_READ_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_READ_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_READ_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE_ALLOW_WRITE` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE_ALLOW_WRITE` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE_ALLOW_WRITE` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE_ALLOW_WRITE` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE_ALLOW_WRITE` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE_CONCURRENT_INSERT` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE_CONCURRENT_INSERT` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE_CONCURRENT_INSERT` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE_CONCURRENT_INSERT` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE_CONCURRENT_INSERT` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE_DELAYED` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE_DELAYED` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE_DELAYED` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE_DELAYED` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE_DELAYED` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE_LOW_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE_LOW_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE_LOW_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE_LOW_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE_LOW_PRIORITY` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE_NORMAL` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE_NORMAL` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE_NORMAL` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE_NORMAL` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE_NORMAL` bigint(20) unsigned NOT NULL,\\n  `COUNT_WRITE_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `SUM_TIMER_WRITE_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `MIN_TIMER_WRITE_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `AVG_TIMER_WRITE_EXTERNAL` bigint(20) unsigned NOT NULL,\\n  `MAX_TIMER_WRITE_EXTERNAL` bigint(20) unsigned NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de hilos con las columnas de, ID DE HILO, NOMBRE, TIPO, ID DE LISTA DE PROCESOS, USUARIO DE LA LISTA DE PROCESOS, HOST DE LA LISTA DE PROCESOS, BD DE LA LISTA DE PROCESOS, COMANDO DE LA LISTA DE PROCESOS, TIEMPO DE LA LISTA DE PROCESOS, ESTADO DE LA LISTA DE PROCESOS, INFORMACIÓN DE LA LISTA DE PROCESOS, ID DEL HILO PRINCIPAL, ROL, INSTRUMENTADO",
      "output": "('threads', \"CREATE TABLE `threads` (\\n  `THREAD_ID` bigint(20) unsigned NOT NULL  `NAME` varchar(128) NOT NULL,\\n  `TYPE` varchar(10) NOT NULL,\\n  `PROCESSLIST_ID` bigint(20) unsigned DEFAULT NULL,\\n  `PROCESSLIST_USER` varchar(16) DEFAULT NULL,\\n  `PROCESSLIST_HOST` varchar(60) DEFAULT NULL,\\n  `PROCESSLIST_DB` varchar(64) DEFAULT NULL,\\n  `PROCESSLIST_COMMAND` varchar(16) DEFAULT NULL,\\n  `PROCESSLIST_TIME` bigint(20) DEFAULT NULL,\\n  `PROCESSLIST_STATE` varchar(64) DEFAULT NULL,\\n  `PROCESSLIST_INFO` longtext DEFAULT NULL,\\n  `PARENT_THREAD_ID` bigint(20) unsigned DEFAULT NULL,\\n  `ROLE` varchar(64) DEFAULT NULL,\\n  `INSTRUMENTED` enum('YES','NO') NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de usuarios con las columnas de, USUARIO, CONEXIONES ACTUALES, CONEXIONES TOTALES",
      "output": "('users', 'CREATE TABLE `users` (\\n  `USER` char(16) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL  `CURRENT_CONNECTIONS` bigint(20) NOT NULL,\\n  `TOTAL_CONNECTIONS` bigint(20) NOT NULL\\n) ENGINE=PERFORMANCE_SCHEMA DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de REGALO DE MUESTRA PRINCIPAL con las columnas de, id propagado, destino propagado",
      "output": "('MAINSAMPLE_GIFT', 'CREATE TABLE `MAINSAMPLE_GIFT` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, objetivo propagado, M E M B E R I O DEL HOGAR agregado Promedio distinto",
      "output": "('PREDICTOR100004', 'CREATE TABLE `PREDICTOR100004` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_YEAR_aggregateDistinct_avg_100004` decimal(14,4) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, objetivo propagado, MIEMBROS DEL HOGAR agregado Suma distinta",
      "output": "('PREDICTOR100005', 'CREATE TABLE `PREDICTOR100005` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_aggregateDistinct_sum_100005` decimal(32,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, objetivo propagado, MIEMBROS DEL HOGAR AÑO agregado Suma distinta",
      "output": "('PREDICTOR100006', 'CREATE TABLE `PREDICTOR100006` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_YEAR_aggregateDistinct_sum_100006` decimal(32,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, id propagado, objetivo propagado, MIEMBROS DEL HOGAR Y E A R coeficiente de variación",
      "output": "('PREDICTOR100016', 'CREATE TABLE `PREDICTOR100016` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_YEAR_coefficientOfVariation_100016` double(25,8) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100029', 'CREATE TABLE `PREDICTOR100029` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_60_100029` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100030', 'CREATE TABLE `PREDICTOR100030` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_50_100030` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100031', 'CREATE TABLE `PREDICTOR100031` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_55_100031` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100032', 'CREATE TABLE `PREDICTOR100032` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_16_100032` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100033', 'CREATE TABLE `PREDICTOR100033` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_59_100033` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100034', 'CREATE TABLE `PREDICTOR100034` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_32_100034` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100035', 'CREATE TABLE `PREDICTOR100035` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_12_100035` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100036', 'CREATE TABLE `PREDICTOR100036` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_58_100036` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100037', 'CREATE TABLE `PREDICTOR100037` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_57_100037` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100038', 'CREATE TABLE `PREDICTOR100038` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_54_100038` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100039', 'CREATE TABLE `PREDICTOR100039` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_10_100039` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100040', 'CREATE TABLE `PREDICTOR100040` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_11_100040` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100041', 'CREATE TABLE `PREDICTOR100041` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_61_100041` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100042', 'CREATE TABLE `PREDICTOR100042` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_45_100042` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100043', 'CREATE TABLE `PREDICTOR100043` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_56_100043` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100044', 'CREATE TABLE `PREDICTOR100044` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_33_100044` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100045', 'CREATE TABLE `PREDICTOR100045` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_30_100045` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100046', 'CREATE TABLE `PREDICTOR100046` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_34_100046` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100047', 'CREATE TABLE `PREDICTOR100047` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_49_100047` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR Recuento existencial",
      "output": "('PREDICTOR100048', 'CREATE TABLE `PREDICTOR100048` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_AGE_existentialCount_36_100048` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR M E M A R I T A L Conteo existencial",
      "output": "('PREDICTOR100049', 'CREATE TABLE `PREDICTOR100049` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_MARITAL_existentialCount_1_100049` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR M E M A R I T A L Conteo existencial",
      "output": "('PREDICTOR100050', 'CREATE TABLE `PREDICTOR100050` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_MARITAL_existentialCount_5_100050` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR M E M A R I T A L Conteo existencial",
      "output": "('PREDICTOR100051', 'CREATE TABLE `PREDICTOR100051` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_MARITAL_existentialCount_3_100051` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR M E M A R I T A L Conteo existencial",
      "output": "('PREDICTOR100052', 'CREATE TABLE `PREDICTOR100052` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_MARITAL_existentialCount_2_100052` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR M E M A R I T A L Conteo existencial",
      "output": "('PREDICTOR100053', 'CREATE TABLE `PREDICTOR100053` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_MARITAL_existentialCount_4_100053` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, objetivo propagado, MIEMBROS DEL HOGAR SEXO existencial Recuento",
      "output": "('PREDICTOR100054', 'CREATE TABLE `PREDICTOR100054` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_SEX_existentialCount_2_100054` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, objetivo propagado, MIEMBROS DEL HOGAR SEXO existencial Recuento",
      "output": "('PREDICTOR100055', 'CREATE TABLE `PREDICTOR100055` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_SEX_existentialCount_1_100055` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, objetivo propagado, MIEMBROS DEL HOGAR ESTADO DE TRABAJO Recuento existencial",
      "output": "('PREDICTOR100056', 'CREATE TABLE `PREDICTOR100056` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_WORK_STATUS_existentialCount_1_100056` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, objetivo propagado, MIEMBROS DEL HOGAR ESTADO DE TRABAJO Recuento existencial",
      "output": "('PREDICTOR100057', 'CREATE TABLE `PREDICTOR100057` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_WORK_STATUS_existentialCount_2_100057` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, objetivo propagado, MIEMBROS DEL HOGAR ESTADO DE TRABAJO Recuento existencial",
      "output": "('PREDICTOR100058', 'CREATE TABLE `PREDICTOR100058` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_WORK_STATUS_existentialCount_3_100058` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR AÑO existencial Recuento",
      "output": "('PREDICTOR100059', 'CREATE TABLE `PREDICTOR100059` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_YEAR_existentialCount_2017_100059` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR AÑO existencial Recuento",
      "output": "('PREDICTOR100060', 'CREATE TABLE `PREDICTOR100060` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_YEAR_existentialCount_2015_100060` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR AÑO existencial Recuento",
      "output": "('PREDICTOR100061', 'CREATE TABLE `PREDICTOR100061` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_YEAR_existentialCount_2016_100061` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR AÑO existencial Recuento",
      "output": "('PREDICTOR100062', 'CREATE TABLE `PREDICTOR100062` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_YEAR_existentialCount_2018_100062` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de VATICINADOR con las columnas de, identificador propagado, destino propagado, MIEMBROS DEL HOGAR AÑO existencial Recuento",
      "output": "('PREDICTOR100063', 'CREATE TABLE `PREDICTOR100063` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `HOUSEHOLD_MEMBERS_YEAR_existentialCount_2019_100063` decimal(22,0) DEFAULT NULL,\\n  PRIMARY KEY (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de base con las columnas de, id propagado, objetivo propagado, pliegue propagado",
      "output": "('base', 'CREATE TABLE `base` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `propagated_fold` double(17,0) NOT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de base muestreada con las columnas de, id propagado, objetivo propagado, pliegue propagado",
      "output": "('base_sampled', 'CREATE TABLE `base_sampled` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `propagated_fold` double(17,0) NOT NULL,\\n  KEY `ix_base_sampled` (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de bkp Gastos de consumo patrón j con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('bkp_ConsumerExpenditures_j_pattern', 'CREATE TABLE `bkp_ConsumerExpenditures_j_pattern` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de bkp Gastos del consumidor j predictor con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, nombre de tabla de propagación, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón , código sql, tipo de datos, tipo de categoría, recuento de filas qc, recuento de nulos qc, mensaje de excepción, está bien, está duplicado, nombre duplicado, columna de destino utilizada, relevancia G I F T, deriva de concepto G I F T, relevancia ponderada G I F T",
      "output": "('bkp_ConsumerExpenditures_j_predictor', 'CREATE TABLE `bkp_ConsumerExpenditures_j_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_table_name` varchar(255) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constraint` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `data_type` varchar(255) DEFAULT NULL,\\n  `category_type` varchar(255) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  `used_target_column` varchar(255) DEFAULT NULL,\\n  `relevance_GIFT` decimal(18,3) DEFAULT NULL,\\n  `concept_drift_GIFT` decimal(7,6) DEFAULT NULL,\\n  `weighted_relevance_GIFT` decimal(18,6) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de bkp Gastos del consumidor j tabla con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('bkp_ConsumerExpenditures_j_table', 'CREATE TABLE `bkp_ConsumerExpenditures_j_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de patrón j financiero bkp con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('bkp_financial_j_pattern', 'CREATE TABLE `bkp_financial_j_pattern` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de predictor j financiero bkp con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, nombre de tabla de propagación, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón , código sql, tipo de datos, tipo de categoría, recuento de filas de qc, recuento nulo de qc, mensaje de excepción, está bien, está duplicado, nombre duplicado, columna de destino utilizada, estado de relevancia, estado de deriva de concepto, estado de relevancia ponderada",
      "output": "('bkp_financial_j_predictor', 'CREATE TABLE `bkp_financial_j_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_table_name` varchar(255) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constraint` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `data_type` varchar(255) DEFAULT NULL,\\n  `category_type` varchar(255) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  `used_target_column` varchar(255) DEFAULT NULL,\\n  `relevance_status` decimal(18,3) DEFAULT NULL,\\n  `concept_drift_status` decimal(7,6) DEFAULT NULL,\\n  `weighted_relevance_status` decimal(18,6) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de tabla j financiera bkp con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('bkp_financial_j_table', 'CREATE TABLE `bkp_financial_j_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de patrón de diario con las columnas de, nombre, autor, es agregado, es multivariado, es nominal, es numérico, es temporal, usa objetivo base, usa fecha base, descripción",
      "output": "('journal_pattern', 'CREATE TABLE `journal_pattern` (\\n  `name` varchar(255) NOT NULL  `author` varchar(255) DEFAULT NULL,\\n  `is_aggregate` int(11) DEFAULT NULL,\\n  `is_multivariate` int(11) DEFAULT NULL,\\n  `is_nominal` int(11) DEFAULT NULL,\\n  `is_numerical` int(11) DEFAULT NULL,\\n  `is_temporal` int(11) DEFAULT NULL,\\n  `uses_base_target` int(11) DEFAULT NULL,\\n  `uses_base_date` int(11) DEFAULT NULL,\\n  `description` varchar(4000) DEFAULT NULL,\\n  PRIMARY KEY (`name`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de predictor diario con las columnas de, ID de predictor, ID de grupo, hora de inicio, tiempo de ejecución, nombre de predictor, nombre largo de predictor, nombre de tabla, lista de columnas, nombre de tabla de propagación, ruta de propagación, profundidad de propagación, restricción de fecha, lista de parámetros, nombre de patrón, autor de patrón, código de patrón , código sql, tipo de datos, tipo de categoría, recuento de filas qc, recuento de nulos qc, mensaje de excepción, está bien, está duplicado, nombre duplicado, columna de destino utilizada, relevancia G I F T, deriva de concepto G I F T, relevancia ponderada G I F T",
      "output": "('journal_predictor', 'CREATE TABLE `journal_predictor` (\\n  `predictor_id` int(11) NOT NULL  `group_id` int(11) DEFAULT NULL,\\n  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `predictor_name` varchar(255) DEFAULT NULL,\\n  `predictor_long_name` varchar(512) DEFAULT NULL,\\n  `table_name` varchar(1024) DEFAULT NULL,\\n  `column_list` varchar(1024) DEFAULT NULL,\\n  `propagation_table_name` varchar(255) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `date_constraint` varchar(255) DEFAULT NULL,\\n  `parameter_list` varchar(1024) DEFAULT NULL,\\n  `pattern_name` varchar(255) DEFAULT NULL,\\n  `pattern_author` varchar(255) DEFAULT NULL,\\n  `pattern_code` varchar(3600) DEFAULT NULL,\\n  `sql_code` varchar(3600) DEFAULT NULL,\\n  `data_type` varchar(255) DEFAULT NULL,\\n  `category_type` varchar(255) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `qc_null_count` int(11) DEFAULT NULL,\\n  `exception_message` varchar(255) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  `is_duplicate` int(11) DEFAULT NULL,\\n  `duplicate_name` varchar(255) DEFAULT NULL,\\n  `used_target_column` varchar(255) DEFAULT NULL,\\n  `relevance_GIFT` decimal(18,3) DEFAULT NULL,\\n  `concept_drift_GIFT` decimal(7,6) DEFAULT NULL,\\n  `weighted_relevance_GIFT` decimal(18,6) DEFAULT NULL,\\n  PRIMARY KEY (`predictor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de ejecución del diario con las columnas de, hora de finalización, nombre del esquema, tiempo de ejecución, memoria, conteo de advertencias, conteo de errores, conteo de predictores, conteo de salidas del predictor, conteo de tabla propagada, configuración, promedio de precisión, estándar de precisión, auc avg, auc std, fscore avg, fscore std, precisión promedio, precisión estándar, recordar promedio, recordar estándar, auc optimista promedio, auc optimista estándar, auc promedio promedio, auc promedio estándar, auc pesimista promedio, auc pesimista estándar, correlación promedio, correlación estándar, rmse promedio, rmse estándar, error relativo promedio , error relativo estándar",
      "output": "('journal_run', 'CREATE TABLE `journal_run` (\\n  `finish_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()  `schema_name` varchar(255) DEFAULT NULL,\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `memory` decimal(18,3) DEFAULT NULL,\\n  `warn_count` int(11) DEFAULT NULL,\\n  `error_count` int(11) DEFAULT NULL,\\n  `predictor_count` int(11) DEFAULT NULL,\\n  `predictor_output_count` int(11) DEFAULT NULL,\\n  `propagated_table_count` int(11) DEFAULT NULL,\\n  `setting` varchar(2024) DEFAULT NULL,\\n  `accuracy_avg` decimal(8,3) DEFAULT NULL,\\n  `accuracy_std` decimal(8,3) DEFAULT NULL,\\n  `auc_avg` decimal(8,3) DEFAULT NULL,\\n  `auc_std` decimal(8,3) DEFAULT NULL,\\n  `fscore_avg` decimal(8,3) DEFAULT NULL,\\n  `fscore_std` decimal(8,3) DEFAULT NULL,\\n  `precision_avg` decimal(8,3) DEFAULT NULL,\\n  `precision_std` decimal(8,3) DEFAULT NULL,\\n  `recall_avg` decimal(8,3) DEFAULT NULL,\\n  `recall_std` decimal(8,3) DEFAULT NULL,\\n  `auc_optimistic_avg` decimal(8,3) DEFAULT NULL,\\n  `auc_optimistic_std` decimal(8,3) DEFAULT NULL,\\n  `auc_average_avg` decimal(8,3) DEFAULT NULL,\\n  `auc_average_std` decimal(8,3) DEFAULT NULL,\\n  `auc_pessimistic_avg` decimal(8,3) DEFAULT NULL,\\n  `auc_pessimistic_std` decimal(8,3) DEFAULT NULL,\\n  `correlation_avg` decimal(8,3) DEFAULT NULL,\\n  `correlation_std` decimal(8,3) DEFAULT NULL,\\n  `rmse_avg` decimal(8,3) DEFAULT NULL,\\n  `rmse_std` decimal(8,3) DEFAULT NULL,\\n  `relative_error_avg` decimal(8,3) DEFAULT NULL,\\n  `relative_error_std` decimal(8,3) DEFAULT NULL,\\n  PRIMARY KEY (`finish_time`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de tabla de diario con las columnas de, id de tabla, hora de inicio, tiempo de ejecución, nombre de tabla, nombre original, restricción temporal, razonamiento de restricción temporal, lista temporal de candidatos, recuento temporal de candidatos, recuento de filas optimista, ruta de propagación, profundidad de propagación, id de propagación, código sql, es id único , es el ID de destino único, qc se ejecutó con éxito, qc cuenta de filas, está bien",
      "output": "('journal_table', 'CREATE TABLE `journal_table` (\\n  `table_id` int(11) NOT NULL  `start_time` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  `run_time` decimal(18,3) DEFAULT NULL,\\n  `table_name` varchar(255) DEFAULT NULL,\\n  `original_name` varchar(255) DEFAULT NULL,\\n  `temporal_constraint` varchar(255) DEFAULT NULL,\\n  `temporal_constraint_reasoning` varchar(1024) DEFAULT NULL,\\n  `candidate_temporal_list` varchar(2024) DEFAULT NULL,\\n  `candidate_temporal_count` int(11) DEFAULT NULL,\\n  `row_count_optimistic` int(11) DEFAULT NULL,\\n  `propagation_path` varchar(1024) DEFAULT NULL,\\n  `propagation_depth` int(11) DEFAULT NULL,\\n  `propagation_id` varchar(1024) DEFAULT NULL,\\n  `sql_code` varchar(2024) DEFAULT NULL,\\n  `is_id_unique` int(11) DEFAULT NULL,\\n  `is_target_id_unique` int(11) DEFAULT NULL,\\n  `qc_successfully_executed` int(11) DEFAULT NULL,\\n  `qc_row_count` int(11) DEFAULT NULL,\\n  `is_ok` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`table_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de GASTOS PROPAGADOS Z con las columnas de, id propagado, objetivo propagado, pliegue propagado, GASTO DE, HOGAR SI, AÑO, MES, CÓDIGO DE PRODUCTO, COSTO, REGALO, ES CAPACITACIÓN",
      "output": "('propagated_EXPENDITURES_06Z', \"CREATE TABLE `propagated_EXPENDITURES_06Z` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `propagated_fold` double(17,0) NOT NULL,\\n  `EXPENDITURE_ID` varchar(11) NOT NULL,\\n  `HOUSEHOLD_ID` varchar(10) NOT NULL,\\n  `YEAR` int(11) NOT NULL,\\n  `MONTH` int(11) NOT NULL,\\n  `PRODUCT_CODE` varchar(6) NOT NULL,\\n  `COST` double NOT NULL,\\n  `GIFT` int(11) NOT NULL,\\n  `IS_TRAINING` int(255) NOT NULL DEFAULT 1 COMMENT 'Designed split to trainin and testing set',\\n  KEY `ix_EXPENDITURES_06Z` (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\")"
    },
    {
      "input": "Una tabla de propagado H O U S E H O L D S F con las columnas de, identificador propagado, destino propagado, pliegue propagado, ID DE HOGAR, AÑO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO, RANGO DE INGRESO MEDIO, REF DE EDAD",
      "output": "('propagated_HOUSEHOLDS__F_', 'CREATE TABLE `propagated_HOUSEHOLDS__F_` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `propagated_fold` double(17,0) NOT NULL,\\n  `HOUSEHOLD_ID` varchar(10) NOT NULL,\\n  `YEAR` int(11) NOT NULL,\\n  `INCOME_RANK` double NOT NULL,\\n  `INCOME_RANK_1` double NOT NULL,\\n  `INCOME_RANK_2` double NOT NULL,\\n  `INCOME_RANK_3` double NOT NULL,\\n  `INCOME_RANK_4` double NOT NULL,\\n  `INCOME_RANK_5` double NOT NULL,\\n  `INCOME_RANK_MEAN` double NOT NULL,\\n  `AGE_REF` int(11) NOT NULL,\\n  KEY `ix_HOUSEHOLDS__F_` (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de propagado MIEMBROS DEL HOGAR K J con las columnas de, identificación propagada, objetivo propagado, pliegue propagado, ID DE HOGAR, AÑO, CIVIL, SEXO, EDAD, ESTADO LABORAL",
      "output": "('propagated_HOUSEHOLD_MEMBERS_K_J', 'CREATE TABLE `propagated_HOUSEHOLD_MEMBERS_K_J` (\\n  `propagated_id1` varchar(11) NOT NULL  `propagated_target1` int(11) NOT NULL,\\n  `propagated_fold` double(17,0) NOT NULL,\\n  `HOUSEHOLD_ID` varchar(10) NOT NULL,\\n  `YEAR` int(11) NOT NULL,\\n  `MARITAL` varchar(1) NOT NULL,\\n  `SEX` varchar(1) NOT NULL,\\n  `AGE` int(11) NOT NULL,\\n  `WORK_STATUS` varchar(2) DEFAULT NULL,\\n  KEY `ix_HOUSEHOLD_MEMBERS_K_J` (`propagated_id1`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de autores con las columnas de, au id, au lname, au fname, teléfono, dirección, ciudad, estado, código postal, contrato",
      "output": "('authors', 'CREATE TABLE `authors` (\\n  `au_id` varchar(11) NOT NULL  `au_lname` varchar(40) NOT NULL,\\n  `au_fname` varchar(20) NOT NULL,\\n  `phone` char(12) NOT NULL,\\n  `address` varchar(40) DEFAULT NULL,\\n  `city` varchar(20) DEFAULT NULL,\\n  `state` char(2) DEFAULT NULL,\\n  `zip` char(5) DEFAULT NULL,\\n  `contract` tinyint(4) NOT NULL,\\n  PRIMARY KEY (`au_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de descuentos con las columnas de, tipo de descuento, ID de tienda, cantidad baja, cantidad alta, descuento",
      "output": "('discounts', 'CREATE TABLE `discounts` (\\n  `discounttype` varchar(40) NOT NULL  `stor_id` char(4) DEFAULT NULL,\\n  `lowqty` smallint(6) DEFAULT NULL,\\n  `highqty` smallint(6) DEFAULT NULL,\\n  `discount` decimal(4,2) NOT NULL,\\n  KEY `discounts_stor_id` (`stor_id`),\\n  CONSTRAINT `discounts_ibfk_1` FOREIGN KEY (`stor_id`) REFERENCES `stores` (`stor_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de empleado con las columnas de, emp id, fname, minit, lname, job id, job lvl, pub id, fecha de contratación",
      "output": "('employee', 'CREATE TABLE `employee` (\\n  `emp_id` char(9) NOT NULL  `fname` varchar(20) NOT NULL,\\n  `minit` char(1) DEFAULT NULL,\\n  `lname` varchar(30) NOT NULL,\\n  `job_id` smallint(6) NOT NULL,\\n  `job_lvl` smallint(6) DEFAULT NULL,\\n  `pub_id` char(4) NOT NULL,\\n  `hire_date` datetime NOT NULL,\\n  PRIMARY KEY (`emp_id`),\\n  KEY `employee_job_id` (`job_id`),\\n  KEY `employee_pub_id` (`pub_id`),\\n  CONSTRAINT `employee_ibfk_1` FOREIGN KEY (`job_id`) REFERENCES `jobs` (`job_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `employee_ibfk_2` FOREIGN KEY (`pub_id`) REFERENCES `publishers` (`pub_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de trabajos con las columnas de, identificación del trabajo, descripción del trabajo, nivel mínimo, nivel máximo",
      "output": "('jobs', 'CREATE TABLE `jobs` (\\n  `job_id` smallint(6) NOT NULL  `job_desc` varchar(50) NOT NULL,\\n  `min_lvl` smallint(6) NOT NULL,\\n  `max_lvl` smallint(6) NOT NULL,\\n  PRIMARY KEY (`job_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de información de la taberna con las columnas de, ID de pub, logotipo, información de relaciones públicas",
      "output": "('pub_info', 'CREATE TABLE `pub_info` (\\n  `pub_id` char(4) NOT NULL  `logo` longblob DEFAULT NULL,\\n  `pr_info` longtext DEFAULT NULL,\\n  PRIMARY KEY (`pub_id`),\\n  CONSTRAINT `pub_info_ibfk_1` FOREIGN KEY (`pub_id`) REFERENCES `publishers` (`pub_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de editores con las columnas de, ID de pub, nombre de pub, ciudad, estado, país",
      "output": "('publishers', 'CREATE TABLE `publishers` (\\n  `pub_id` char(4) NOT NULL  `pub_name` varchar(40) DEFAULT NULL,\\n  `city` varchar(20) DEFAULT NULL,\\n  `state` char(2) DEFAULT NULL,\\n  `country` varchar(30) DEFAULT NULL,\\n  PRIMARY KEY (`pub_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Roysched con las columnas de, identificación del título, lorange, hirange, realeza",
      "output": "('roysched', 'CREATE TABLE `roysched` (\\n  `title_id` varchar(6) NOT NULL  `lorange` int(11) DEFAULT NULL,\\n  `hirange` int(11) DEFAULT NULL,\\n  `royalty` int(11) DEFAULT NULL,\\n  KEY `roysched_title_id` (`title_id`),\\n  CONSTRAINT `roysched_ibfk_1` FOREIGN KEY (`title_id`) REFERENCES `titles` (`title_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Ventas con las columnas de, ID de tienda, número de palabra, fecha de palabra, cantidad, condiciones de pago, ID de título",
      "output": "('sales', 'CREATE TABLE `sales` (\\n  `stor_id` char(4) NOT NULL  `ord_num` varchar(20) NOT NULL,\\n  `ord_date` datetime NOT NULL,\\n  `qty` smallint(6) NOT NULL,\\n  `payterms` varchar(12) NOT NULL,\\n  `title_id` varchar(6) NOT NULL,\\n  PRIMARY KEY (`stor_id`,`ord_num`,`title_id`),\\n  KEY `sales_title_id` (`title_id`),\\n  CONSTRAINT `sales_ibfk_1` FOREIGN KEY (`stor_id`) REFERENCES `stores` (`stor_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `sales_ibfk_2` FOREIGN KEY (`title_id`) REFERENCES `titles` (`title_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de historias con las columnas de, ID de tienda, nombre de tienda, dirección de tienda, ciudad, estado, código postal",
      "output": "('stores', 'CREATE TABLE `stores` (\\n  `stor_id` char(4) NOT NULL  `stor_name` varchar(40) DEFAULT NULL,\\n  `stor_address` varchar(40) DEFAULT NULL,\\n  `city` varchar(20) DEFAULT NULL,\\n  `state` char(2) DEFAULT NULL,\\n  `zip` char(5) DEFAULT NULL,\\n  PRIMARY KEY (`stor_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de títuloautor con las columnas de, id de au, id de título, au ord, realezaper",
      "output": "('titleauthor', 'CREATE TABLE `titleauthor` (\\n  `au_id` varchar(11) NOT NULL  `title_id` varchar(6) NOT NULL,\\n  `au_ord` tinyint(4) DEFAULT NULL,\\n  `royaltyper` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`au_id`,`title_id`),\\n  KEY `titleauthor_title_id` (`title_id`),\\n  CONSTRAINT `titleauthor_ibfk_1` FOREIGN KEY (`title_id`) REFERENCES `titles` (`title_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `titleauthor_ibfk_2` FOREIGN KEY (`au_id`) REFERENCES `authors` (`au_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de títulos con las columnas de, ID de título, título, tipo, ID de pub, precio, anticipo, regalías, ventas ytd, notas, fecha de publicación",
      "output": "('titles', 'CREATE TABLE `titles` (\\n  `title_id` varchar(6) NOT NULL  `title` varchar(80) NOT NULL,\\n  `type` char(12) NOT NULL,\\n  `pub_id` char(4) DEFAULT NULL,\\n  `price` decimal(19,4) DEFAULT NULL,\\n  `advance` decimal(19,4) DEFAULT NULL,\\n  `royalty` int(11) DEFAULT NULL,\\n  `ytd_sales` int(11) DEFAULT NULL,\\n  `notes` varchar(200) DEFAULT NULL,\\n  `pubdate` datetime NOT NULL,\\n  PRIMARY KEY (`title_id`),\\n  KEY `titles_pub_id` (`pub_id`),\\n  CONSTRAINT `titles_ibfk_1` FOREIGN KEY (`pub_id`) REFERENCES `publishers` (`pub_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de información general con las columnas de, id restaurante, etiqueta, tipo de comida, ciudad, reseña",
      "output": "('generalinfo', 'CREATE TABLE `generalinfo` (\\n  `id_restaurant` int(11) NOT NULL  `label` varchar(255) DEFAULT NULL,\\n  `food_type` varchar(255) DEFAULT NULL,\\n  `city` varchar(255) DEFAULT NULL,\\n  `review` decimal(2,1) DEFAULT NULL,\\n  PRIMARY KEY (`id_restaurant`),\\n  KEY `field4` (`city`),\\n  CONSTRAINT `generalinfo_ibfk_1` FOREIGN KEY (`city`) REFERENCES `geographic` (`city`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de geográfico con las columnas de, ciudad, condado, región",
      "output": "('geographic', 'CREATE TABLE `geographic` (\\n  `city` varchar(255) NOT NULL  `county` varchar(255) DEFAULT NULL,\\n  `region` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`city`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de ubicación con las columnas de, id restaurante, número de calle, nombre de calle, ciudad",
      "output": "('location', 'CREATE TABLE `location` (\\n  `id_restaurant` int(11) NOT NULL  `street_num` int(11) DEFAULT NULL,\\n  `street_name` varchar(255) DEFAULT NULL,\\n  `city` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`id_restaurant`),\\n  KEY `city` (`city`),\\n  KEY `city_2` (`city`),\\n  KEY `id_restaurant` (`id_restaurant`),\\n  CONSTRAINT `location_ibfk_1` FOREIGN KEY (`city`) REFERENCES `geographic` (`city`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `location_ibfk_2` FOREIGN KEY (`id_restaurant`) REFERENCES `generalinfo` (`id_restaurant`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT')"
    },
    {
      "input": "Una tabla de actor con las columnas de, identificación del actor, nombre, apellido, última actualización",
      "output": "('actor', 'CREATE TABLE `actor` (\\n  `actor_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `first_name` varchar(45) NOT NULL,\\n  `last_name` varchar(45) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`actor_id`),\\n  KEY `idx_actor_last_name` (`last_name`)\\n) ENGINE=InnoDB AUTO_INCREMENT=201 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Dirección con las columnas de, id de dirección, dirección, dirección, distrito, id de ciudad, código postal, teléfono, última actualización",
      "output": "('address', 'CREATE TABLE `address` (\\n  `address_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `address` varchar(50) NOT NULL,\\n  `address2` varchar(50) DEFAULT NULL,\\n  `district` varchar(20) NOT NULL,\\n  `city_id` smallint(5) unsigned NOT NULL,\\n  `postal_code` varchar(10) DEFAULT NULL,\\n  `phone` varchar(20) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`address_id`),\\n  KEY `idx_address_city_id` (`city_id`) USING BTREE,\\n  CONSTRAINT `fk_address_city` FOREIGN KEY (`city_id`) REFERENCES `city` (`city_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=606 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de categoría con las columnas de, ID de categoría, nombre, última actualización",
      "output": "('category', 'CREATE TABLE `category` (\\n  `category_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT  `name` varchar(25) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`category_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ciudad con las columnas de, id de ciudad, ciudad, id de país, última actualización",
      "output": "('city', 'CREATE TABLE `city` (\\n  `city_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `city` varchar(50) NOT NULL,\\n  `country_id` smallint(5) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`city_id`),\\n  KEY `idx_city_country_id` (`country_id`) USING BTREE,\\n  CONSTRAINT `fk_city_country` FOREIGN KEY (`country_id`) REFERENCES `country` (`country_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=601 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de país con las columnas de, ID de país, país, última actualización",
      "output": "('country', 'CREATE TABLE `country` (\\n  `country_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `country` varchar(50) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`country_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=110 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, ID de cliente, ID de tienda, nombre, apellido, correo electrónico, ID de dirección, activo, fecha de creación, última actualización",
      "output": "('customer', 'CREATE TABLE `customer` (\\n  `customer_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `store_id` tinyint(3) unsigned NOT NULL,\\n  `first_name` varchar(45) NOT NULL,\\n  `last_name` varchar(45) NOT NULL,\\n  `email` varchar(50) DEFAULT NULL,\\n  `address_id` smallint(5) unsigned NOT NULL,\\n  `active` tinyint(1) NOT NULL DEFAULT 1,\\n  `create_date` datetime NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`customer_id`),\\n  KEY `idx_last_name` (`last_name`),\\n  KEY `idx_customer_store_id` (`store_id`) USING BTREE,\\n  KEY `idx_customer_address_id` (`address_id`) USING BTREE,\\n  CONSTRAINT `fk_customer_address` FOREIGN KEY (`address_id`) REFERENCES `address` (`address_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_customer_store` FOREIGN KEY (`store_id`) REFERENCES `store` (`store_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=600 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de película con las columnas de, identificación de la película, título, descripción, año de lanzamiento, identificación del idioma, identificación del idioma original, duración del alquiler, tarifa de alquiler, duración, costo de reemplazo, calificación, características especiales, última actualización",
      "output": "('film', \"CREATE TABLE `film` (\\n  `film_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `title` varchar(255) NOT NULL,\\n  `description` text DEFAULT NULL,\\n  `release_year` year(4) DEFAULT NULL,\\n  `language_id` tinyint(3) unsigned NOT NULL,\\n  `original_language_id` tinyint(3) unsigned DEFAULT NULL,\\n  `rental_duration` tinyint(3) unsigned NOT NULL DEFAULT 3,\\n  `rental_rate` decimal(4,2) NOT NULL DEFAULT 4.99,\\n  `length` smallint(5) unsigned DEFAULT NULL,\\n  `replacement_cost` decimal(5,2) NOT NULL DEFAULT 19.99,\\n  `rating` enum('G','PG','PG-13','R','NC-17') DEFAULT 'G',\\n  `special_features` set('Trailers','Commentaries','Deleted Scenes','Behind the Scenes') DEFAULT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`film_id`),\\n  KEY `idx_title` (`title`),\\n  KEY `idx_film_language_id` (`language_id`) USING BTREE,\\n  KEY `idx_film_original_language_id` (`original_language_id`) USING BTREE,\\n  CONSTRAINT `fk_film_language` FOREIGN KEY (`language_id`) REFERENCES `language` (`language_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_film_language_original` FOREIGN KEY (`original_language_id`) REFERENCES `language` (`language_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=1001 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Actor de películas con las columnas de, identificación del actor, identificación de la película, última actualización",
      "output": "('film_actor', 'CREATE TABLE `film_actor` (\\n  `actor_id` smallint(5) unsigned NOT NULL  `film_id` smallint(5) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`actor_id`,`film_id`),\\n  KEY `idx_film_actor_film_id` (`film_id`) USING BTREE,\\n  CONSTRAINT `fk_film_actor_actor` FOREIGN KEY (`actor_id`) REFERENCES `actor` (`actor_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_film_actor_film` FOREIGN KEY (`film_id`) REFERENCES `film` (`film_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de categoría de película con las columnas de, id de película, id de categoría, última actualización",
      "output": "('film_category', 'CREATE TABLE `film_category` (\\n  `film_id` smallint(5) unsigned NOT NULL  `category_id` tinyint(3) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`film_id`,`category_id`),\\n  KEY `fk_film_category_category` (`category_id`),\\n  CONSTRAINT `fk_film_category_category` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_film_category_film` FOREIGN KEY (`film_id`) REFERENCES `film` (`film_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de texto de la película con las columnas de, identificación de la película, título, descripción",
      "output": "('film_text', 'CREATE TABLE `film_text` (\\n  `film_id` smallint(6) NOT NULL  `title` varchar(255) NOT NULL,\\n  `description` text DEFAULT NULL,\\n  PRIMARY KEY (`film_id`),\\n  FULLTEXT KEY `idx_title_description` (`title`,`description`)\\n) ENGINE=MyISAM DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de inventario con las columnas de, ID de inventario, ID de película, ID de tienda, última actualización",
      "output": "('inventory', 'CREATE TABLE `inventory` (\\n  `inventory_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT  `film_id` smallint(5) unsigned NOT NULL,\\n  `store_id` tinyint(3) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`inventory_id`),\\n  KEY `idx_store_id_film_id` (`store_id`,`film_id`),\\n  KEY `idx_inventory_film_id` (`film_id`) USING BTREE,\\n  CONSTRAINT `fk_inventory_film` FOREIGN KEY (`film_id`) REFERENCES `film` (`film_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_inventory_store` FOREIGN KEY (`store_id`) REFERENCES `store` (`store_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=4582 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de idioma con las columnas de, ID de idioma, nombre, última actualización",
      "output": "('language', 'CREATE TABLE `language` (\\n  `language_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT  `name` char(20) NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`language_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de pago con las columnas de, id de pago, id de cliente, id de personal, id de alquiler, importe, fecha de pago, última actualización",
      "output": "('payment', 'CREATE TABLE `payment` (\\n  `payment_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT  `customer_id` smallint(5) unsigned NOT NULL,\\n  `staff_id` tinyint(3) unsigned NOT NULL,\\n  `rental_id` int(11) DEFAULT NULL,\\n  `amount` decimal(5,2) NOT NULL,\\n  `payment_date` datetime NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`payment_id`),\\n  KEY `fk_payment_rental` (`rental_id`),\\n  KEY `idx_payment_staff_id` (`staff_id`) USING BTREE,\\n  KEY `idx_payment_customer_id` (`customer_id`) USING BTREE,\\n  CONSTRAINT `fk_payment_customer` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_payment_rental` FOREIGN KEY (`rental_id`) REFERENCES `rental` (`rental_id`) ON DELETE SET NULL ON UPDATE CASCADE,\\n  CONSTRAINT `fk_payment_staff` FOREIGN KEY (`staff_id`) REFERENCES `staff` (`staff_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=16050 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de alquiler con las columnas de, ID de alquiler, fecha de alquiler, ID de inventario, ID de cliente, fecha de devolución, ID de personal, última actualización",
      "output": "('rental', 'CREATE TABLE `rental` (\\n  `rental_id` int(11) NOT NULL AUTO_INCREMENT  `rental_date` datetime NOT NULL,\\n  `inventory_id` mediumint(8) unsigned NOT NULL,\\n  `customer_id` smallint(5) unsigned NOT NULL,\\n  `return_date` datetime DEFAULT NULL,\\n  `staff_id` tinyint(3) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`rental_id`),\\n  UNIQUE KEY `rental_date` (`rental_date`,`inventory_id`,`customer_id`),\\n  KEY `idx_rental_customer_id` (`customer_id`) USING BTREE,\\n  KEY `idx_rental_inventory_id` (`inventory_id`) USING BTREE,\\n  KEY `idx_rental_staff_id` (`staff_id`) USING BTREE,\\n  CONSTRAINT `fk_rental_customer` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_rental_inventory` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_rental_staff` FOREIGN KEY (`staff_id`) REFERENCES `staff` (`staff_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=16050 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de personal con las columnas de, identificación del personal, nombre, apellido, identificación de la dirección, imagen, correo electrónico, identificación de la tienda, activo, nombre de usuario, contraseña, última actualización",
      "output": "('staff', 'CREATE TABLE `staff` (\\n  `staff_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT  `first_name` varchar(45) NOT NULL,\\n  `last_name` varchar(45) NOT NULL,\\n  `address_id` smallint(5) unsigned NOT NULL,\\n  `picture` blob DEFAULT NULL,\\n  `email` varchar(50) DEFAULT NULL,\\n  `store_id` tinyint(3) unsigned NOT NULL,\\n  `active` tinyint(1) NOT NULL DEFAULT 1,\\n  `username` varchar(16) NOT NULL,\\n  `password` varchar(40) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`staff_id`),\\n  KEY `idx_staff_store_id` (`store_id`) USING BTREE,\\n  KEY `idx_staff_address_id` (`address_id`) USING BTREE,\\n  CONSTRAINT `fk_staff_address` FOREIGN KEY (`address_id`) REFERENCES `address` (`address_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_staff_store` FOREIGN KEY (`store_id`) REFERENCES `store` (`store_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Tienda con las columnas de, ID de la tienda, ID del personal del administrador, ID de la dirección, última actualización",
      "output": "('store', 'CREATE TABLE `store` (\\n  `store_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT  `manager_staff_id` tinyint(3) unsigned NOT NULL,\\n  `address_id` smallint(5) unsigned NOT NULL,\\n  `last_update` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\\n  PRIMARY KEY (`store_id`),\\n  UNIQUE KEY `idx_unique_manager` (`manager_staff_id`),\\n  KEY `idx_store_address_id` (`address_id`) USING BTREE,\\n  CONSTRAINT `fk_store_address` FOREIGN KEY (`address_id`) REFERENCES `address` (`address_id`) ON UPDATE CASCADE,\\n  CONSTRAINT `fk_store_staff` FOREIGN KEY (`manager_staff_id`) REFERENCES `staff` (`staff_id`) ON UPDATE CASCADE\\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de insignias con las columnas de, ID, ID de usuario, nombre, fecha",
      "output": "('badges', 'CREATE TABLE `badges` (\\n  `Id` int(11) NOT NULL  `UserId` int(11) DEFAULT NULL,\\n  `Name` varchar(255) DEFAULT NULL,\\n  `Date` datetime DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `badges_UserId_fkey` (`UserId`),\\n  CONSTRAINT `badges_UserId_fkey` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de comentarios con las columnas de, ID, ID de publicación, puntuación, texto, fecha de creación, ID de usuario, nombre para mostrar del usuario",
      "output": "('comments', 'CREATE TABLE `comments` (\\n  `Id` int(11) NOT NULL  `PostId` int(11) DEFAULT NULL,\\n  `Score` int(11) DEFAULT NULL,\\n  `Text` longtext DEFAULT NULL,\\n  `CreationDate` datetime DEFAULT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  `UserDisplayName` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `comment_staged_UserId_fkey` (`UserId`),\\n  KEY `comment_PostId_fkey` (`PostId`),\\n  CONSTRAINT `comment_PostId_fkey` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `comment_staged_UserId_fkey` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Historial de publicaciones con las columnas de, ID, ID de tipo de historial de publicación, ID de publicación, ID de G U de revisión, fecha de creación, ID de usuario, texto, comentario, nombre para mostrar del usuario",
      "output": "('postHistory', 'CREATE TABLE `postHistory` (\\n  `Id` int(11) NOT NULL  `PostHistoryTypeId` int(11) DEFAULT NULL,\\n  `PostId` int(11) DEFAULT NULL,\\n  `RevisionGUID` varchar(255) DEFAULT NULL,\\n  `CreationDate` datetime DEFAULT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  `Text` longtext DEFAULT NULL,\\n  `Comment` text DEFAULT NULL,\\n  `UserDisplayName` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  UNIQUE KEY `postHistory_Id_key` (`Id`),\\n  KEY `postHistory_UserId_fkey` (`UserId`),\\n  KEY `postHistory_PostId_fkey` (`PostId`),\\n  CONSTRAINT `postHistory_PostId_fkey` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `postHistory_UserId_fkey` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de publicar enlaces con las columnas de, Id., Fecha de creación, Id. de publicación, Id. de publicación relacionada, Id. de tipo de enlace",
      "output": "('postLinks', 'CREATE TABLE `postLinks` (\\n  `Id` int(11) NOT NULL  `CreationDate` datetime DEFAULT NULL,\\n  `PostId` int(11) DEFAULT NULL,\\n  `RelatedPostId` int(11) DEFAULT NULL,\\n  `LinkTypeId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `postlinks_stripped_PostId_fkey` (`PostId`),\\n  KEY `postlinks_stripped_RelatedPostId_fkey` (`RelatedPostId`),\\n  CONSTRAINT `postlinks_stripped_PostId_fkey` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `postlinks_stripped_RelatedPostId_fkey` FOREIGN KEY (`RelatedPostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de publicaciones con las columnas de, ID, ID de tipo de publicación, ID de respuesta aceptada, fecha de creación, puntuación, recuento de vistas, cuerpo, ID de usuario propietario, última fecha de actividad, título, etiquetas, recuento de respuestas, recuento de comentarios, recuento de favoritos, ID de usuario del último editor, fecha de última edición , Fecha de propiedad de la comunidad, ID principal, Fecha de cierre, Nombre para mostrar del propietario, Nombre para mostrar del último editor",
      "output": "('posts', 'CREATE TABLE `posts` (\\n  `Id` int(11) NOT NULL  `PostTypeId` int(11) DEFAULT NULL,\\n  `AcceptedAnswerId` int(11) DEFAULT NULL,\\n  `CreaionDate` datetime DEFAULT NULL,\\n  `Score` int(11) DEFAULT NULL,\\n  `ViewCount` int(11) DEFAULT NULL,\\n  `Body` longtext DEFAULT NULL,\\n  `OwnerUserId` int(11) DEFAULT NULL,\\n  `LasActivityDate` datetime DEFAULT NULL,\\n  `Title` varchar(255) DEFAULT NULL,\\n  `Tags` varchar(255) DEFAULT NULL,\\n  `AnswerCount` int(11) DEFAULT NULL,\\n  `CommentCount` int(11) DEFAULT NULL,\\n  `FavoriteCount` int(11) DEFAULT NULL,\\n  `LastEditorUserId` int(11) DEFAULT NULL,\\n  `LastEditDate` datetime DEFAULT NULL,\\n  `CommunityOwnedDate` datetime DEFAULT NULL,\\n  `ParentId` int(11) DEFAULT NULL,\\n  `ClosedDate` datetime DEFAULT NULL,\\n  `OwnerDisplayName` varchar(255) DEFAULT NULL,\\n  `LastEditorDisplayName` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  UNIQUE KEY `posts_Id_key` (`Id`),\\n  KEY `posts_ParentId_fkey` (`ParentId`),\\n  KEY `posts_OwnerUserId_fkey` (`OwnerUserId`),\\n  KEY `posts_LastEditorUserId_fkey` (`LastEditorUserId`),\\n  CONSTRAINT `posts_LastEditorUserId_fkey` FOREIGN KEY (`LastEditorUserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `posts_OwnerUserId_fkey` FOREIGN KEY (`OwnerUserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `posts_ParentId_fkey` FOREIGN KEY (`ParentId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de etiquetas con las columnas de, Id., nombre de etiqueta, recuento, Id. de publicación de extracto, Id. de publicación de wiki",
      "output": "('tags', 'CREATE TABLE `tags` (\\n  `Id` int(11) NOT NULL  `TagName` varchar(255) DEFAULT NULL,\\n  `Count` int(11) DEFAULT NULL,\\n  `ExcerptPostId` int(11) DEFAULT NULL,\\n  `WikiPostId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `tags_ExcerptPostId_fkey` (`ExcerptPostId`),\\n  CONSTRAINT `tags_ExcerptPostId_fkey` FOREIGN KEY (`ExcerptPostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de usuarios con las columnas de, Id., Reputación, Fecha de creación, Nombre para mostrar, Fecha de último acceso, URL del sitio web, Ubicación, Acerca de mí, Vistas, Votos positivos, Votos negativos, Id. de cuenta, Edad, URL de imagen de perfil",
      "output": "('users', 'CREATE TABLE `users` (\\n  `Id` int(11) NOT NULL  `Reputation` int(11) DEFAULT NULL,\\n  `CreationDate` datetime DEFAULT NULL,\\n  `DisplayName` varchar(255) DEFAULT NULL,\\n  `LastAccessDate` datetime DEFAULT NULL,\\n  `WebsiteUrl` varchar(255) DEFAULT NULL,\\n  `Location` varchar(255) DEFAULT NULL,\\n  `AboutMe` longtext DEFAULT NULL,\\n  `Views` int(11) DEFAULT NULL,\\n  `UpVotes` int(11) DEFAULT NULL,\\n  `DownVotes` int(11) DEFAULT NULL,\\n  `AccountId` int(11) DEFAULT NULL,\\n  `Age` int(11) DEFAULT NULL,\\n  `ProfileImageUrl` varchar(255) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  UNIQUE KEY `users_staged_Id_key` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de votos con las columnas de, ID, ID de publicación, ID de tipo de voto, fecha de creación, ID de usuario, cantidad de recompensa",
      "output": "('votes', 'CREATE TABLE `votes` (\\n  `Id` int(11) NOT NULL  `PostId` int(11) DEFAULT NULL,\\n  `VoteTypeId` int(11) DEFAULT NULL,\\n  `CreationDate` date DEFAULT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  `BountyAmount` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `votes_stripped_UserId_fkey` (`UserId`),\\n  KEY `votes_stripped_PostId_fkey` (`PostId`),\\n  CONSTRAINT `votes_stripped_PostId_fkey` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `votes_stripped_UserId_fkey` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de insignias con las columnas de, ID, ID de usuario, Fecha",
      "output": "('badges', 'CREATE TABLE `badges` (\\n  `Id` int(11) NOT NULL  `UserId` int(11) NOT NULL,\\n  `Date` datetime NOT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `UserId` (`UserId`),\\n  CONSTRAINT `badges_ibfk_1` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de comentarios con las columnas de, ID, ID de publicación, puntuación, fecha de creación, ID de usuario",
      "output": "('comments', 'CREATE TABLE `comments` (\\n  `Id` int(11) NOT NULL  `PostId` int(11) NOT NULL,\\n  `Score` int(11) NOT NULL,\\n  `CreationDate` datetime NOT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `PostId` (`PostId`),\\n  KEY `UserId` (`UserId`),\\n  CONSTRAINT `comments_ibfk_1` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`),\\n  CONSTRAINT `comments_ibfk_2` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Historial de publicaciones con las columnas de, ID, ID de tipo de historial de publicación, ID de publicación, fecha de creación, ID de usuario",
      "output": "('postHistory', 'CREATE TABLE `postHistory` (\\n  `Id` int(11) NOT NULL  `PostHistoryTypeId` int(11) NOT NULL,\\n  `PostId` int(11) NOT NULL,\\n  `CreationDate` datetime NOT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `PostId` (`PostId`),\\n  KEY `UserId` (`UserId`),\\n  CONSTRAINT `postHistory_ibfk_1` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`),\\n  CONSTRAINT `postHistory_ibfk_2` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de publicar enlaces con las columnas de, Id., Fecha de creación, Id. de publicación, Id. de publicación relacionada, Id. de tipo de enlace",
      "output": "('postLinks', 'CREATE TABLE `postLinks` (\\n  `Id` int(11) NOT NULL  `CreationDate` datetime NOT NULL,\\n  `PostId` int(11) NOT NULL,\\n  `RelatedPostId` int(11) NOT NULL,\\n  `LinkTypeId` int(11) NOT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `PostId` (`PostId`),\\n  KEY `RelatedPostId` (`RelatedPostId`),\\n  CONSTRAINT `postLinks_ibfk_1` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`),\\n  CONSTRAINT `postLinks_ibfk_2` FOREIGN KEY (`RelatedPostId`) REFERENCES `posts` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de publicaciones con las columnas de, ID, ID de tipo de publicación, fecha de creación, puntuación, recuento de vistas, ID de usuario propietario, recuento de respuestas, recuento de comentarios, recuento de favoritos, ID de usuario del último editor",
      "output": "('posts', 'CREATE TABLE `posts` (\\n  `Id` int(11) NOT NULL  `PostTypeId` int(11) NOT NULL,\\n  `CreationDate` datetime NOT NULL,\\n  `Score` int(11) NOT NULL,\\n  `ViewCount` int(11) DEFAULT NULL,\\n  `OwnerUserId` int(11) DEFAULT NULL,\\n  `AnswerCount` int(11) DEFAULT NULL,\\n  `CommentCount` int(11) NOT NULL,\\n  `FavoriteCount` int(11) DEFAULT NULL,\\n  `LastEditorUserId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `LastEditorUserId` (`LastEditorUserId`),\\n  KEY `OwnerUserId` (`OwnerUserId`),\\n  CONSTRAINT `posts_ibfk_1` FOREIGN KEY (`LastEditorUserId`) REFERENCES `users` (`Id`),\\n  CONSTRAINT `posts_ibfk_2` FOREIGN KEY (`OwnerUserId`) REFERENCES `users` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de etiquetas con las columnas de, ID, recuento, ID de publicación de extracto",
      "output": "('tags', 'CREATE TABLE `tags` (\\n  `Id` int(11) NOT NULL  `Count` int(11) NOT NULL,\\n  `ExcerptPostId` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `ExcerptPostId` (`ExcerptPostId`),\\n  CONSTRAINT `tags_ibfk_1` FOREIGN KEY (`ExcerptPostId`) REFERENCES `posts` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de usuarios con las columnas de, Id., Reputación, Fecha de creación, Vistas, Votos positivos, Votos negativos",
      "output": "('users', 'CREATE TABLE `users` (\\n  `Id` int(11) NOT NULL  `Reputation` int(11) NOT NULL,\\n  `CreationDate` datetime NOT NULL,\\n  `Views` int(11) NOT NULL,\\n  `UpVotes` int(11) NOT NULL,\\n  `DownVotes` int(11) NOT NULL,\\n  PRIMARY KEY (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de votos con las columnas de, ID, ID de publicación, ID de tipo de voto, fecha de creación, ID de usuario, cantidad de recompensa",
      "output": "('votes', 'CREATE TABLE `votes` (\\n  `Id` int(11) NOT NULL  `PostId` int(11) NOT NULL,\\n  `VoteTypeId` int(11) NOT NULL,\\n  `CreationDate` datetime NOT NULL,\\n  `UserId` int(11) DEFAULT NULL,\\n  `BountyAmount` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`Id`),\\n  KEY `PostId` (`PostId`),\\n  KEY `UserId` (`UserId`),\\n  CONSTRAINT `votes_ibfk_1` FOREIGN KEY (`PostId`) REFERENCES `posts` (`Id`),\\n  CONSTRAINT `votes_ibfk_2` FOREIGN KEY (`UserId`) REFERENCES `users` (`Id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4')"
    },
    {
      "input": "Una tabla de Cliente C con las columnas de, c id, c d id, c w id, c primero, c medio, c último, c calle, c calle, c ciudad, c estado, c zip, c teléfono, c desde, c crédito, c límite de crédito, c descuento, saldo c, pago c ytd, c pago cnt, c entrega cnt, c datos, c datos",
      "output": "('C_Customer', 'CREATE TABLE `C_Customer` (\\n  `c_id` int(11) NOT NULL  `c_d_id` int(11) NOT NULL,\\n  `c_w_id` int(11) NOT NULL,\\n  `c_first` char(16) DEFAULT NULL,\\n  `c_middle` char(2) DEFAULT NULL,\\n  `c_last` char(16) DEFAULT NULL,\\n  `c_street_1` char(20) DEFAULT NULL,\\n  `c_street_2` char(20) DEFAULT NULL,\\n  `c_city` char(20) DEFAULT NULL,\\n  `c_state` char(2) DEFAULT NULL,\\n  `c_zip` char(9) DEFAULT NULL,\\n  `c_phone` char(16) DEFAULT NULL,\\n  `c_since` datetime DEFAULT NULL,\\n  `c_credit` char(2) DEFAULT NULL,\\n  `c_credit_lim` float DEFAULT NULL,\\n  `c_discount` float DEFAULT NULL,\\n  `c_balance` float DEFAULT NULL,\\n  `c_ytd_payment` float DEFAULT NULL,\\n  `c_payment_cnt` int(11) DEFAULT NULL,\\n  `c_delivery_cnt` int(11) DEFAULT NULL,\\n  `c_data1` char(250) DEFAULT NULL,\\n  `c_data2` char(250) DEFAULT NULL,\\n  PRIMARY KEY (`c_id`,`c_d_id`,`c_w_id`),\\n  UNIQUE KEY `C_Customer_I1` (`c_w_id`,`c_d_id`,`c_id`),\\n  UNIQUE KEY `C_Customer_I2` (`c_w_id`,`c_d_id`,`c_last`,`c_first`,`c_id`),\\n  KEY `c_d_id` (`c_d_id`),\\n  KEY `c_d_id_2` (`c_d_id`,`c_id`,`c_w_id`),\\n  CONSTRAINT `C_Customer_ibfk_1` FOREIGN KEY (`c_d_id`) REFERENCES `C_District` (`d_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Distrito C con las columnas de, d id, d w id, d nombre, d street , d street , d city, d state, d zip, d tax, d ytd, d next o id",
      "output": "('C_District', 'CREATE TABLE `C_District` (\\n  `d_id` int(11) NOT NULL  `d_w_id` int(11) NOT NULL,\\n  `d_name` char(10) DEFAULT NULL,\\n  `d_street_1` char(20) DEFAULT NULL,\\n  `d_street_2` char(20) DEFAULT NULL,\\n  `d_city` char(20) DEFAULT NULL,\\n  `d_state` char(2) DEFAULT NULL,\\n  `d_zip` char(9) DEFAULT NULL,\\n  `d_tax` float DEFAULT NULL,\\n  `d_ytd` float DEFAULT NULL,\\n  `d_next_o_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`d_id`,`d_w_id`),\\n  UNIQUE KEY `C_District_I1` (`d_w_id`,`d_id`),\\n  CONSTRAINT `C_District_ibfk_1` FOREIGN KEY (`d_w_id`) REFERENCES `C_Warehouse` (`w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Historia C con las columnas de, h c id, h c d id, h c w id, h d id, h w id, h fecha, h cantidad, h datos",
      "output": "('C_History', 'CREATE TABLE `C_History` (\\n  `h_c_id` int(11) DEFAULT NULL  `h_c_d_id` int(11) DEFAULT NULL,\\n  `h_c_w_id` int(11) DEFAULT NULL,\\n  `h_d_id` int(11) DEFAULT NULL,\\n  `h_w_id` int(11) DEFAULT NULL,\\n  `h_date` datetime DEFAULT NULL,\\n  `h_amount` float DEFAULT NULL,\\n  `h_data` char(24) DEFAULT NULL,\\n  KEY `h_c_w_id` (`h_c_w_id`),\\n  KEY `h_d_id` (`h_d_id`),\\n  KEY `h_c_id` (`h_c_id`,`h_c_d_id`,`h_c_w_id`),\\n  KEY `h_d_id_2` (`h_d_id`,`h_w_id`),\\n  CONSTRAINT `C_History_ibfk_3` FOREIGN KEY (`h_c_id`, `h_c_d_id`, `h_c_w_id`) REFERENCES `C_Customer` (`c_id`, `c_d_id`, `c_w_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `C_History_ibfk_4` FOREIGN KEY (`h_d_id`, `h_w_id`) REFERENCES `C_District` (`d_id`, `d_w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Artículo C con las columnas de, yo id, yo soy id, yo nombre, yo precio, yo datos",
      "output": "('C_Item', 'CREATE TABLE `C_Item` (\\n  `i_id` int(11) NOT NULL  `i_im_id` int(11) DEFAULT NULL,\\n  `i_name` char(24) DEFAULT NULL,\\n  `i_price` float DEFAULT NULL,\\n  `i_data` char(50) DEFAULT NULL,\\n  PRIMARY KEY (`i_id`),\\n  UNIQUE KEY `C_Item_I1` (`i_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de C Nuevo orden con las columnas de, sin identificación, sin identificación, sin identificación ancha",
      "output": "('C_New_Order', 'CREATE TABLE `C_New_Order` (\\n  `no_o_id` int(11) NOT NULL  `no_d_id` int(11) NOT NULL,\\n  `no_w_id` int(11) NOT NULL,\\n  PRIMARY KEY (`no_o_id`,`no_d_id`,`no_w_id`),\\n  UNIQUE KEY `C_New_Order_I1` (`no_w_id`,`no_d_id`,`no_o_id`),\\n  CONSTRAINT `C_New_Order_ibfk_1` FOREIGN KEY (`no_o_id`, `no_d_id`, `no_w_id`) REFERENCES `C_Order` (`o_id`, `o_d_id`, `o_w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Orden C con las columnas de, o id, o d id, o w id, o c id, o entrada d, o id del operador, o ol cnt, o todo local",
      "output": "('C_Order', 'CREATE TABLE `C_Order` (\\n  `o_id` int(11) NOT NULL  `o_d_id` int(11) NOT NULL,\\n  `o_w_id` int(11) NOT NULL,\\n  `o_c_id` int(11) DEFAULT NULL,\\n  `o_entry_d` datetime DEFAULT NULL,\\n  `o_carrier_id` int(11) DEFAULT NULL,\\n  `o_ol_cnt` int(11) DEFAULT NULL,\\n  `o_all_local` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`o_id`,`o_d_id`,`o_w_id`),\\n  UNIQUE KEY `C_Order_I1` (`o_w_id`,`o_d_id`,`o_id`),\\n  KEY `o_d_id` (`o_d_id`,`o_c_id`,`o_w_id`),\\n  CONSTRAINT `C_Order_ibfk_1` FOREIGN KEY (`o_d_id`, `o_c_id`, `o_w_id`) REFERENCES `C_Customer` (`c_d_id`, `c_id`, `c_w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Línea de pedido C con las columnas de, id de ol, id de ol, id de ol, id de ol, id de ol, id de ol, ancho de suministro de ol, d de entrega de ol, cantidad de ol, cantidad de ol, info de dist.",
      "output": "('C_Order_Line', 'CREATE TABLE `C_Order_Line` (\\n  `ol_o_id` int(11) NOT NULL  `ol_d_id` int(11) NOT NULL,\\n  `ol_w_id` int(11) NOT NULL,\\n  `ol_number` int(11) NOT NULL,\\n  `ol_i_id` int(11) DEFAULT NULL,\\n  `ol_supply_w_id` int(11) DEFAULT NULL,\\n  `ol_delivery_d` datetime DEFAULT NULL,\\n  `ol_quantity` int(11) DEFAULT NULL,\\n  `ol_amount` float DEFAULT NULL,\\n  `ol_dist_info` char(24) DEFAULT NULL,\\n  PRIMARY KEY (`ol_o_id`,`ol_d_id`,`ol_w_id`,`ol_number`),\\n  UNIQUE KEY `C_Order_Line_I1` (`ol_w_id`,`ol_d_id`,`ol_o_id`,`ol_number`),\\n  KEY `ol_o_id` (`ol_o_id`,`ol_d_id`,`ol_w_id`),\\n  KEY `ol_i_id` (`ol_i_id`),\\n  KEY `ol_i_id_2` (`ol_i_id`,`ol_supply_w_id`),\\n  CONSTRAINT `C_Order_Line_ibfk_1` FOREIGN KEY (`ol_o_id`, `ol_d_id`, `ol_w_id`) REFERENCES `C_Order` (`o_id`, `o_d_id`, `o_w_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `C_Order_Line_ibfk_2` FOREIGN KEY (`ol_i_id`, `ol_supply_w_id`) REFERENCES `C_Stock` (`s_i_id`, `s_w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Acciones C con las columnas de, s i id, s w id, s cantidad, s dist , s dist , s dist , s dist , s dist , s dist , s dist , s dist , s dist , s dist , s ytd, s order cnt, s remote cnt , s datos",
      "output": "('C_Stock', 'CREATE TABLE `C_Stock` (\\n  `s_i_id` int(11) NOT NULL  `s_w_id` int(11) NOT NULL,\\n  `s_quantity` int(11) DEFAULT NULL,\\n  `s_dist_01` char(24) DEFAULT NULL,\\n  `s_dist_02` char(24) DEFAULT NULL,\\n  `s_dist_03` char(24) DEFAULT NULL,\\n  `s_dist_04` char(24) DEFAULT NULL,\\n  `s_dist_05` char(24) DEFAULT NULL,\\n  `s_dist_06` char(24) DEFAULT NULL,\\n  `s_dist_07` char(24) DEFAULT NULL,\\n  `s_dist_08` char(24) DEFAULT NULL,\\n  `s_dist_09` char(24) DEFAULT NULL,\\n  `s_dist_10` char(24) DEFAULT NULL,\\n  `s_ytd` int(11) DEFAULT NULL,\\n  `s_order_cnt` int(11) DEFAULT NULL,\\n  `s_remote_cnt` int(11) DEFAULT NULL,\\n  `s_data` char(50) DEFAULT NULL,\\n  PRIMARY KEY (`s_i_id`,`s_w_id`),\\n  UNIQUE KEY `C_Stock_I1` (`s_i_id`,`s_w_id`),\\n  KEY `s_w_id` (`s_w_id`),\\n  CONSTRAINT `C_Stock_ibfk_1` FOREIGN KEY (`s_i_id`) REFERENCES `C_Item` (`i_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `C_Stock_ibfk_2` FOREIGN KEY (`s_w_id`) REFERENCES `C_Warehouse` (`w_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Almacén C con las columnas de, w id, w nombre, w street , w street , w ciudad, w estado, w zip, w tax, w ytd",
      "output": "('C_Warehouse', 'CREATE TABLE `C_Warehouse` (\\n  `w_id` int(11) NOT NULL  `w_name` char(10) DEFAULT NULL,\\n  `w_street_1` char(20) DEFAULT NULL,\\n  `w_street_2` char(20) DEFAULT NULL,\\n  `w_city` char(20) DEFAULT NULL,\\n  `w_state` char(2) DEFAULT NULL,\\n  `w_zip` char(9) DEFAULT NULL,\\n  `w_tax` float DEFAULT NULL,\\n  `w_ytd` float DEFAULT NULL,\\n  PRIMARY KEY (`w_id`),\\n  UNIQUE KEY `C_Warehouse_I1` (`w_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, c clave de acceso, c nombre, c dirección, c clave de nación, c teléfono, c acctbal, c mktsegment, c comentario",
      "output": "('dss_customer', 'CREATE TABLE `dss_customer` (\\n  `c_custkey` int(11) NOT NULL  `c_name` varchar(25) NOT NULL,\\n  `c_address` varchar(40) NOT NULL,\\n  `c_nationkey` int(11) NOT NULL,\\n  `c_phone` char(15) NOT NULL,\\n  `c_acctbal` double NOT NULL,\\n  `c_mktsegment` char(10) NOT NULL,\\n  `c_comment` varchar(117) DEFAULT NULL,\\n  PRIMARY KEY (`c_custkey`),\\n  KEY `c_nationkey` (`c_nationkey`),\\n  CONSTRAINT `dss_customer_ibfk_1` FOREIGN KEY (`c_nationkey`) REFERENCES `dss_nation` (`n_nationkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de elemento de línea de dss con las columnas de, l clave de pedido, l clave parcial, l clave de suministro, l número de línea, l cantidad, l precio extendido, l descuento, l impuesto, l bandera de devolución, l estado de línea, l fecha de envío, l fecha de confirmación, l fecha de recepción, l instrucción de envío, l modo de envío, l comentario",
      "output": "('dss_lineitem', 'CREATE TABLE `dss_lineitem` (\\n  `l_orderkey` decimal(18,0) NOT NULL  `l_partkey` int(11) NOT NULL,\\n  `l_suppkey` int(11) NOT NULL,\\n  `l_linenumber` int(11) NOT NULL,\\n  `l_quantity` double NOT NULL,\\n  `l_extendedprice` double NOT NULL,\\n  `l_discount` double NOT NULL,\\n  `l_tax` double NOT NULL,\\n  `l_returnflag` char(1) NOT NULL,\\n  `l_linestatus` char(1) NOT NULL,\\n  `l_shipdate` date DEFAULT NULL,\\n  `l_commitdate` date DEFAULT NULL,\\n  `l_receiptdate` date DEFAULT NULL,\\n  `l_shipinstruct` char(25) NOT NULL,\\n  `l_shipmode` char(10) NOT NULL,\\n  `l_comment` varchar(44) DEFAULT NULL,\\n  PRIMARY KEY (`l_orderkey`,`l_linenumber`),\\n  KEY `lineitem_idx1` (`l_orderkey`,`l_returnflag`,`l_extendedprice`,`l_discount`),\\n  KEY `lineitem_idx2` (`l_partkey`,`l_quantity`,`l_extendedprice`,`l_suppkey`,`l_orderkey`,`l_discount`),\\n  KEY `l_suppkey` (`l_suppkey`),\\n  KEY `l_partkey` (`l_partkey`,`l_suppkey`),\\n  CONSTRAINT `dss_lineitem_ibfk_1` FOREIGN KEY (`l_orderkey`) REFERENCES `dss_order` (`o_orderkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de nación dss con las columnas de, n clave de nación, n nombre, n clave de región, n comentario",
      "output": "('dss_nation', 'CREATE TABLE `dss_nation` (\\n  `n_nationkey` int(11) NOT NULL  `n_name` char(25) NOT NULL,\\n  `n_regionkey` int(11) NOT NULL,\\n  `n_comment` varchar(152) DEFAULT NULL,\\n  PRIMARY KEY (`n_nationkey`),\\n  KEY `n_regionkey` (`n_regionkey`),\\n  CONSTRAINT `dss_nation_ibfk_1` FOREIGN KEY (`n_regionkey`) REFERENCES `dss_region` (`r_regionkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de orden de dss con las columnas de, la clave del pedido, la clave del cliente, el estado del pedido, el precio total, la fecha del pedido, la prioridad del pedido, el empleado, la prioridad del envío, el comentario",
      "output": "('dss_order', 'CREATE TABLE `dss_order` (\\n  `o_orderkey` decimal(18,0) NOT NULL  `o_custkey` int(11) NOT NULL,\\n  `o_orderstatus` char(1) NOT NULL,\\n  `o_totalprice` double NOT NULL,\\n  `o_orderdate` date DEFAULT NULL,\\n  `o_orderpriority` char(15) NOT NULL,\\n  `o_clerk` char(15) NOT NULL,\\n  `o_shippriority` int(11) NOT NULL,\\n  `o_comment` varchar(79) DEFAULT NULL,\\n  PRIMARY KEY (`o_orderkey`),\\n  KEY `orders_idx1` (`o_orderkey`),\\n  KEY `orders_idx2` (`o_clerk`,`o_orderkey`,`o_orderdate`),\\n  KEY `o_custkey` (`o_custkey`),\\n  CONSTRAINT `dss_order_ibfk_1` FOREIGN KEY (`o_custkey`) REFERENCES `dss_customer` (`c_custkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de parte dss con las columnas de, p partkey, p nombre, p mfgr, p marca, p tipo, p tamaño, p contenedor, p precio minorista, p comentario",
      "output": "('dss_part', 'CREATE TABLE `dss_part` (\\n  `p_partkey` int(11) NOT NULL  `p_name` varchar(55) NOT NULL,\\n  `p_mfgr` char(25) NOT NULL,\\n  `p_brand` char(10) NOT NULL,\\n  `p_type` varchar(25) NOT NULL,\\n  `p_size` int(11) NOT NULL,\\n  `p_container` char(10) NOT NULL,\\n  `p_retailprice` double NOT NULL,\\n  `p_comment` varchar(23) NOT NULL,\\n  PRIMARY KEY (`p_partkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de repuestos dss con las columnas de, ps partkey, ps suppkey, ps disponibilidad, ps supplycost, ps comentario",
      "output": "('dss_partsupp', 'CREATE TABLE `dss_partsupp` (\\n  `ps_partkey` int(11) NOT NULL  `ps_suppkey` int(11) NOT NULL,\\n  `ps_availqty` int(11) NOT NULL,\\n  `ps_supplycost` double NOT NULL,\\n  `ps_comment` varchar(199) DEFAULT NULL,\\n  PRIMARY KEY (`ps_partkey`,`ps_suppkey`),\\n  KEY `partsupp_idx1` (`ps_partkey`),\\n  KEY `partsupp_idx2` (`ps_suppkey`,`ps_partkey`),\\n  KEY `ps_partkey` (`ps_partkey`,`ps_suppkey`),\\n  CONSTRAINT `dss_partsupp_ibfk_1` FOREIGN KEY (`ps_suppkey`) REFERENCES `dss_supplier` (`s_suppkey`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `dss_partsupp_ibfk_2` FOREIGN KEY (`ps_partkey`) REFERENCES `dss_part` (`p_partkey`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `dss_partsupp_ibfk_3` FOREIGN KEY (`ps_partkey`, `ps_suppkey`) REFERENCES `dss_lineitem` (`l_partkey`, `l_suppkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de región dss con las columnas de, r clave de región, r nombre, r comentario",
      "output": "('dss_region', 'CREATE TABLE `dss_region` (\\n  `r_regionkey` int(11) NOT NULL  `r_name` char(25) NOT NULL,\\n  `r_comment` varchar(152) DEFAULT NULL,\\n  PRIMARY KEY (`r_regionkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de proveedor de dss con las columnas de, s suppkey, s name, s address, s nationkey, s phone, s acctbal, s comment",
      "output": "('dss_supplier', 'CREATE TABLE `dss_supplier` (\\n  `s_suppkey` int(11) NOT NULL  `s_name` char(25) NOT NULL,\\n  `s_address` varchar(40) NOT NULL,\\n  `s_nationkey` int(11) NOT NULL,\\n  `s_phone` char(15) NOT NULL,\\n  `s_acctbal` double NOT NULL,\\n  `s_comment` varchar(101) NOT NULL,\\n  PRIMARY KEY (`s_suppkey`),\\n  UNIQUE KEY `supplier_idx1` (`s_suppkey`),\\n  KEY `s_nationkey` (`s_nationkey`),\\n  CONSTRAINT `dss_supplier_ibfk_1` FOREIGN KEY (`s_nationkey`) REFERENCES `dss_nation` (`n_nationkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de centro de llamadas con las columnas de, cc call center sk, cc call center id, cc rec fecha de inicio, cc rec fecha de finalización, cc fecha de cierre sk, cc open date sk, cc nombre, cc clase, cc empleados, cc pies cuadrados, cc horas, cc gerente, cc mkt id, cc mkt class, cc mkt desc, gerente de mercado de cc, división de cc, nombre de la división de cc, empresa de cc, nombre de la empresa de cc, número de calle de cc, nombre de calle de cc, tipo de calle de cc, número de suite de cc, ciudad de cc, cc condado, estado de cc, código postal de cc, país de cc, compensación de gmt de cc, porcentaje de impuestos de cc",
      "output": "('call_center', 'CREATE TABLE `call_center` (\\n  `cc_call_center_sk` int(11) NOT NULL  `cc_call_center_id` char(16) NOT NULL,\\n  `cc_rec_start_date` date DEFAULT NULL,\\n  `cc_rec_end_date` date DEFAULT NULL,\\n  `cc_closed_date_sk` int(11) DEFAULT NULL,\\n  `cc_open_date_sk` int(11) DEFAULT NULL,\\n  `cc_name` varchar(50) DEFAULT NULL,\\n  `cc_class` varchar(50) DEFAULT NULL,\\n  `cc_employees` int(11) DEFAULT NULL,\\n  `cc_sq_ft` int(11) DEFAULT NULL,\\n  `cc_hours` char(20) DEFAULT NULL,\\n  `cc_manager` varchar(40) DEFAULT NULL,\\n  `cc_mkt_id` int(11) DEFAULT NULL,\\n  `cc_mkt_class` char(50) DEFAULT NULL,\\n  `cc_mkt_desc` varchar(100) DEFAULT NULL,\\n  `cc_market_manager` varchar(40) DEFAULT NULL,\\n  `cc_division` int(11) DEFAULT NULL,\\n  `cc_division_name` varchar(50) DEFAULT NULL,\\n  `cc_company` int(11) DEFAULT NULL,\\n  `cc_company_name` char(50) DEFAULT NULL,\\n  `cc_street_number` char(10) DEFAULT NULL,\\n  `cc_street_name` varchar(60) DEFAULT NULL,\\n  `cc_street_type` char(15) DEFAULT NULL,\\n  `cc_suite_number` char(10) DEFAULT NULL,\\n  `cc_city` varchar(60) DEFAULT NULL,\\n  `cc_county` varchar(30) DEFAULT NULL,\\n  `cc_state` char(2) DEFAULT NULL,\\n  `cc_zip` char(10) DEFAULT NULL,\\n  `cc_country` varchar(20) DEFAULT NULL,\\n  `cc_gmt_offset` decimal(5,2) DEFAULT NULL,\\n  `cc_tax_percentage` decimal(5,2) DEFAULT NULL,\\n  PRIMARY KEY (`cc_call_center_sk`),\\n  KEY `cc_d2` (`cc_open_date_sk`),\\n  KEY `cc_d1` (`cc_closed_date_sk`),\\n  CONSTRAINT `cc_d1` FOREIGN KEY (`cc_closed_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cc_d2` FOREIGN KEY (`cc_open_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de página del catálogo con las columnas de, página de catálogo de cp sk, ID de página de catálogo de cp, fecha de inicio de cp sk, fecha de finalización de cp sk, departamento de cp, número de catálogo de cp, número de página de catálogo de cp, descripción de cp, tipo de cp",
      "output": "('catalog_page', 'CREATE TABLE `catalog_page` (\\n  `cp_catalog_page_sk` int(11) NOT NULL  `cp_catalog_page_id` char(16) NOT NULL,\\n  `cp_start_date_sk` int(11) DEFAULT NULL,\\n  `cp_end_date_sk` int(11) DEFAULT NULL,\\n  `cp_department` varchar(50) DEFAULT NULL,\\n  `cp_catalog_number` int(11) DEFAULT NULL,\\n  `cp_catalog_page_number` int(11) DEFAULT NULL,\\n  `cp_description` varchar(100) DEFAULT NULL,\\n  `cp_type` varchar(100) DEFAULT NULL,\\n  PRIMARY KEY (`cp_catalog_page_sk`),\\n  KEY `cp_d2` (`cp_start_date_sk`),\\n  KEY `cp_d1` (`cp_end_date_sk`),\\n  CONSTRAINT `cp_d1` FOREIGN KEY (`cp_end_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cp_d2` FOREIGN KEY (`cp_start_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de devoluciones de catálogo con las columnas de, cr fecha de devolución sk, cr hora de devolución sk, cr artículo sk, cr cliente reembolsado sk, cr reembolsado cddemo sk, cr reembolsado hdemo sk, cr reembolsado addr sk, cr cliente devuelto sk, cr devolución de cddemo sk, cr devolución de hdemo sk, cr dirección de devolución sk, cr call center sk, cr página de catálogo sk, cr modo de envío sk, cr almacén sk, cr motivo sk, cr número de pedido, cr cantidad devuelta, cr cantidad devuelta, cr impuesto de devolución, cr return amt inc tax, tarifa cr, costo de envío de devolución cr, efectivo reembolsado cr, cobro revertido cr, crédito de tienda cr, pérdida neta cr",
      "output": "('catalog_returns', 'CREATE TABLE `catalog_returns` (\\n  `cr_returned_date_sk` int(11) DEFAULT NULL  `cr_returned_time_sk` int(11) DEFAULT NULL,\\n  `cr_item_sk` int(11) NOT NULL,\\n  `cr_refunded_customer_sk` int(11) DEFAULT NULL,\\n  `cr_refunded_cdemo_sk` int(11) DEFAULT NULL,\\n  `cr_refunded_hdemo_sk` int(11) DEFAULT NULL,\\n  `cr_refunded_addr_sk` int(11) DEFAULT NULL,\\n  `cr_returning_customer_sk` int(11) DEFAULT NULL,\\n  `cr_returning_cdemo_sk` int(11) DEFAULT NULL,\\n  `cr_returning_hdemo_sk` int(11) DEFAULT NULL,\\n  `cr_returning_addr_sk` int(11) DEFAULT NULL,\\n  `cr_call_center_sk` int(11) DEFAULT NULL,\\n  `cr_catalog_page_sk` int(11) DEFAULT NULL,\\n  `cr_ship_mode_sk` int(11) DEFAULT NULL,\\n  `cr_warehouse_sk` int(11) DEFAULT NULL,\\n  `cr_reason_sk` int(11) DEFAULT NULL,\\n  `cr_order_number` int(11) NOT NULL,\\n  `cr_return_quantity` int(11) DEFAULT NULL,\\n  `cr_return_amount` decimal(7,2) DEFAULT NULL,\\n  `cr_return_tax` decimal(7,2) DEFAULT NULL,\\n  `cr_return_amt_inc_tax` decimal(7,2) DEFAULT NULL,\\n  `cr_fee` decimal(7,2) DEFAULT NULL,\\n  `cr_return_ship_cost` decimal(7,2) DEFAULT NULL,\\n  `cr_refunded_cash` decimal(7,2) DEFAULT NULL,\\n  `cr_reversed_charge` decimal(7,2) DEFAULT NULL,\\n  `cr_store_credit` decimal(7,2) DEFAULT NULL,\\n  `cr_net_loss` decimal(7,2) DEFAULT NULL,\\n  PRIMARY KEY (`cr_item_sk`,`cr_order_number`),\\n  KEY `cr_w2` (`cr_warehouse_sk`),\\n  KEY `cr_sm` (`cr_ship_mode_sk`),\\n  KEY `cr_hd2` (`cr_returning_hdemo_sk`),\\n  KEY `cr_c2` (`cr_returning_customer_sk`),\\n  KEY `cr_cd2` (`cr_returning_cdemo_sk`),\\n  KEY `cr_a2` (`cr_returning_addr_sk`),\\n  KEY `cr_t` (`cr_returned_time_sk`),\\n  KEY `cr_d1` (`cr_returned_date_sk`),\\n  KEY `cr_hd1` (`cr_refunded_hdemo_sk`),\\n  KEY `cr_c1` (`cr_refunded_customer_sk`),\\n  KEY `cr_cd1` (`cr_refunded_cdemo_sk`),\\n  KEY `cr_a1` (`cr_refunded_addr_sk`),\\n  KEY `cr_r` (`cr_reason_sk`),\\n  KEY `cr_cp` (`cr_catalog_page_sk`),\\n  KEY `cr_cc` (`cr_call_center_sk`),\\n  CONSTRAINT `cr_a1` FOREIGN KEY (`cr_refunded_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_a2` FOREIGN KEY (`cr_returning_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_c1` FOREIGN KEY (`cr_refunded_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_c2` FOREIGN KEY (`cr_returning_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_cc` FOREIGN KEY (`cr_call_center_sk`) REFERENCES `call_center` (`cc_call_center_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_cd1` FOREIGN KEY (`cr_refunded_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_cd2` FOREIGN KEY (`cr_returning_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_cp` FOREIGN KEY (`cr_catalog_page_sk`) REFERENCES `catalog_page` (`cp_catalog_page_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_d1` FOREIGN KEY (`cr_returned_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_hd1` FOREIGN KEY (`cr_refunded_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_hd2` FOREIGN KEY (`cr_returning_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_i` FOREIGN KEY (`cr_item_sk`) REFERENCES `item` (`i_item_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_r` FOREIGN KEY (`cr_reason_sk`) REFERENCES `reason` (`r_reason_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_sm` FOREIGN KEY (`cr_ship_mode_sk`) REFERENCES `ship_mode` (`sm_ship_mode_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_t` FOREIGN KEY (`cr_returned_time_sk`) REFERENCES `time_dim` (`t_time_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cr_w2` FOREIGN KEY (`cr_warehouse_sk`) REFERENCES `warehouse` (`w_warehouse_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ventas por catálogo con las columnas de, cs fecha de venta sk, cs tiempo de venta sk, cs fecha de envío sk, cs bill cliente sk, cs bill cdemo sk, cs bill hdemo sk, cs bill addr sk, cs ship client sk, cs ship cdemo sk, cs ship hdemo sk , cs ship addr sk, cs call center sk, cs catalog page sk, cs ship mode sk, cs warehouse sk, cs item sk, cs promo sk, cs order number, cs cantidad, cs mayorista cost, cs list price, cs sales precio, cs ext descuento amt, cs ext precio de venta, cs costo al por mayor cs ext, cs precio de lista ext, cs impuesto ext, cupón cs amt, cs costo de envío ext, cs neto pagado, cs net pagado inc impuestos, cs net pagado inc envío , cs neto pagado inc impuestos de envío, cs ganancia neta",
      "output": "('catalog_sales', 'CREATE TABLE `catalog_sales` (\\n  `cs_sold_date_sk` int(11) DEFAULT NULL  `cs_sold_time_sk` int(11) DEFAULT NULL,\\n  `cs_ship_date_sk` int(11) DEFAULT NULL,\\n  `cs_bill_customer_sk` int(11) DEFAULT NULL,\\n  `cs_bill_cdemo_sk` int(11) DEFAULT NULL,\\n  `cs_bill_hdemo_sk` int(11) DEFAULT NULL,\\n  `cs_bill_addr_sk` int(11) DEFAULT NULL,\\n  `cs_ship_customer_sk` int(11) DEFAULT NULL,\\n  `cs_ship_cdemo_sk` int(11) DEFAULT NULL,\\n  `cs_ship_hdemo_sk` int(11) DEFAULT NULL,\\n  `cs_ship_addr_sk` int(11) DEFAULT NULL,\\n  `cs_call_center_sk` int(11) DEFAULT NULL,\\n  `cs_catalog_page_sk` int(11) DEFAULT NULL,\\n  `cs_ship_mode_sk` int(11) DEFAULT NULL,\\n  `cs_warehouse_sk` int(11) DEFAULT NULL,\\n  `cs_item_sk` int(11) NOT NULL,\\n  `cs_promo_sk` int(11) DEFAULT NULL,\\n  `cs_order_number` int(11) NOT NULL,\\n  `cs_quantity` int(11) DEFAULT NULL,\\n  `cs_wholesale_cost` decimal(7,2) DEFAULT NULL,\\n  `cs_list_price` decimal(7,2) DEFAULT NULL,\\n  `cs_sales_price` decimal(7,2) DEFAULT NULL,\\n  `cs_ext_discount_amt` decimal(7,2) DEFAULT NULL,\\n  `cs_ext_sales_price` decimal(7,2) DEFAULT NULL,\\n  `cs_ext_wholesale_cost` decimal(7,2) DEFAULT NULL,\\n  `cs_ext_list_price` decimal(7,2) DEFAULT NULL,\\n  `cs_ext_tax` decimal(7,2) DEFAULT NULL,\\n  `cs_coupon_amt` decimal(7,2) DEFAULT NULL,\\n  `cs_ext_ship_cost` decimal(7,2) DEFAULT NULL,\\n  `cs_net_paid` decimal(7,2) DEFAULT NULL,\\n  `cs_net_paid_inc_tax` decimal(7,2) DEFAULT NULL,\\n  `cs_net_paid_inc_ship` decimal(7,2) DEFAULT NULL,\\n  `cs_net_paid_inc_ship_tax` decimal(7,2) DEFAULT NULL,\\n  `cs_net_profit` decimal(7,2) DEFAULT NULL,\\n  PRIMARY KEY (`cs_item_sk`,`cs_order_number`),\\n  KEY `cs_w` (`cs_warehouse_sk`),\\n  KEY `cs_t` (`cs_sold_time_sk`),\\n  KEY `cs_d2` (`cs_sold_date_sk`),\\n  KEY `cs_sm` (`cs_ship_mode_sk`),\\n  KEY `cs_s_hd` (`cs_ship_hdemo_sk`),\\n  KEY `cs_d1` (`cs_ship_date_sk`),\\n  KEY `cs_s_c` (`cs_ship_customer_sk`),\\n  KEY `cs_s_cd` (`cs_ship_cdemo_sk`),\\n  KEY `cs_s_a` (`cs_ship_addr_sk`),\\n  KEY `cs_p` (`cs_promo_sk`),\\n  KEY `cs_cp` (`cs_catalog_page_sk`),\\n  KEY `cs_cc` (`cs_call_center_sk`),\\n  KEY `cs_b_hd` (`cs_bill_hdemo_sk`),\\n  KEY `cs_b_c` (`cs_bill_customer_sk`),\\n  KEY `cs_b_cd` (`cs_bill_cdemo_sk`),\\n  KEY `cs_b_a` (`cs_bill_addr_sk`),\\n  CONSTRAINT `cs_b_a` FOREIGN KEY (`cs_bill_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_b_c` FOREIGN KEY (`cs_bill_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_b_cd` FOREIGN KEY (`cs_bill_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_b_hd` FOREIGN KEY (`cs_bill_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_cc` FOREIGN KEY (`cs_call_center_sk`) REFERENCES `call_center` (`cc_call_center_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_cp` FOREIGN KEY (`cs_catalog_page_sk`) REFERENCES `catalog_page` (`cp_catalog_page_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_d1` FOREIGN KEY (`cs_ship_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_d2` FOREIGN KEY (`cs_sold_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_i` FOREIGN KEY (`cs_item_sk`) REFERENCES `item` (`i_item_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_p` FOREIGN KEY (`cs_promo_sk`) REFERENCES `promotion` (`p_promo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_s_a` FOREIGN KEY (`cs_ship_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_s_c` FOREIGN KEY (`cs_ship_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_s_cd` FOREIGN KEY (`cs_ship_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_s_hd` FOREIGN KEY (`cs_ship_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_sm` FOREIGN KEY (`cs_ship_mode_sk`) REFERENCES `ship_mode` (`sm_ship_mode_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_t` FOREIGN KEY (`cs_sold_time_sk`) REFERENCES `time_dim` (`t_time_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `cs_w` FOREIGN KEY (`cs_warehouse_sk`) REFERENCES `warehouse` (`w_warehouse_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, c cliente sk, c id del cliente, c actual cdemo sk, c actual hdemo sk, c actual addr sk, c primer envío hasta la fecha sk, c primera fecha de venta sk, c saludo, c nombre, c apellido, c cliente preferido bandera, c día de nacimiento, c mes de nacimiento, c año de nacimiento, c país de nacimiento, c iniciar sesión, c dirección de correo electrónico, c última fecha de revisión",
      "output": "('customer', 'CREATE TABLE `customer` (\\n  `c_customer_sk` int(11) NOT NULL  `c_customer_id` char(16) NOT NULL,\\n  `c_current_cdemo_sk` int(11) DEFAULT NULL,\\n  `c_current_hdemo_sk` int(11) DEFAULT NULL,\\n  `c_current_addr_sk` int(11) DEFAULT NULL,\\n  `c_first_shipto_date_sk` int(11) DEFAULT NULL,\\n  `c_first_sales_date_sk` int(11) DEFAULT NULL,\\n  `c_salutation` char(10) DEFAULT NULL,\\n  `c_first_name` char(20) DEFAULT NULL,\\n  `c_last_name` char(30) DEFAULT NULL,\\n  `c_preferred_cust_flag` char(1) DEFAULT NULL,\\n  `c_birth_day` int(11) DEFAULT NULL,\\n  `c_birth_month` int(11) DEFAULT NULL,\\n  `c_birth_year` int(11) DEFAULT NULL,\\n  `c_birth_country` varchar(20) DEFAULT NULL,\\n  `c_login` char(13) DEFAULT NULL,\\n  `c_email_address` char(50) DEFAULT NULL,\\n  `c_last_review_date` char(10) DEFAULT NULL,\\n  PRIMARY KEY (`c_customer_sk`),\\n  KEY `c_fsd2` (`c_first_shipto_date_sk`),\\n  KEY `c_fsd` (`c_first_sales_date_sk`),\\n  KEY `c_hd` (`c_current_hdemo_sk`),\\n  KEY `c_cd` (`c_current_cdemo_sk`),\\n  KEY `c_a` (`c_current_addr_sk`),\\n  CONSTRAINT `c_a` FOREIGN KEY (`c_current_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `c_cd` FOREIGN KEY (`c_current_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `c_fsd` FOREIGN KEY (`c_first_sales_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `c_fsd2` FOREIGN KEY (`c_first_shipto_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `c_hd` FOREIGN KEY (`c_current_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de dirección del cliente con las columnas de, dirección de ca sk, ID de dirección de ca, número de calle de ca, nombre de calle de ca, tipo de calle de ca, número de suite de ca, ciudad de ca, condado de ca, estado de ca, código postal de ca, país de ca, compensación gmt de ca, tipo de ubicación de ca",
      "output": "('customer_address', 'CREATE TABLE `customer_address` (\\n  `ca_address_sk` int(11) NOT NULL  `ca_address_id` char(16) NOT NULL,\\n  `ca_street_number` char(10) DEFAULT NULL,\\n  `ca_street_name` varchar(60) DEFAULT NULL,\\n  `ca_street_type` char(15) DEFAULT NULL,\\n  `ca_suite_number` char(10) DEFAULT NULL,\\n  `ca_city` varchar(60) DEFAULT NULL,\\n  `ca_county` varchar(30) DEFAULT NULL,\\n  `ca_state` char(2) DEFAULT NULL,\\n  `ca_zip` char(10) DEFAULT NULL,\\n  `ca_country` varchar(20) DEFAULT NULL,\\n  `ca_gmt_offset` decimal(5,2) DEFAULT NULL,\\n  `ca_location_type` char(20) DEFAULT NULL,\\n  PRIMARY KEY (`ca_address_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de datos demográficos del cliente con las columnas de, cd demo sk, cd género, cd estado civil, cd estado educativo, estimación de compra de cd, calificación crediticia de cd, recuento de cd dep, recuento de cd dep empleados, recuento de cd dep college",
      "output": "('customer_demographics', 'CREATE TABLE `customer_demographics` (\\n  `cd_demo_sk` int(11) NOT NULL  `cd_gender` char(1) DEFAULT NULL,\\n  `cd_marital_status` char(1) DEFAULT NULL,\\n  `cd_education_status` char(20) DEFAULT NULL,\\n  `cd_purchase_estimate` int(11) DEFAULT NULL,\\n  `cd_credit_rating` char(10) DEFAULT NULL,\\n  `cd_dep_count` int(11) DEFAULT NULL,\\n  `cd_dep_employed_count` int(11) DEFAULT NULL,\\n  `cd_dep_college_count` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`cd_demo_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de fecha tenue con las columnas de, d date sk, d date id, d date, d month seq, d week seq, d quarter seq, d year, d dow, d moy, d dom, d qoy, d fy year, d fy quarter seq, d fy secuencia de la semana, d nombre del día, d nombre del trimestre, d feriado, d fin de semana, d siguiente feriado, d primer dom, d último dom, d mismo día ly, d mismo día lq, d día actual, d semana actual, d mes actual , d trimestre actual, d año actual",
      "output": "('date_dim', 'CREATE TABLE `date_dim` (\\n  `d_date_sk` int(11) NOT NULL  `d_date_id` char(16) NOT NULL,\\n  `d_date` date DEFAULT NULL,\\n  `d_month_seq` int(11) DEFAULT NULL,\\n  `d_week_seq` int(11) DEFAULT NULL,\\n  `d_quarter_seq` int(11) DEFAULT NULL,\\n  `d_year` int(11) DEFAULT NULL,\\n  `d_dow` int(11) DEFAULT NULL,\\n  `d_moy` int(11) DEFAULT NULL,\\n  `d_dom` int(11) DEFAULT NULL,\\n  `d_qoy` int(11) DEFAULT NULL,\\n  `d_fy_year` int(11) DEFAULT NULL,\\n  `d_fy_quarter_seq` int(11) DEFAULT NULL,\\n  `d_fy_week_seq` int(11) DEFAULT NULL,\\n  `d_day_name` char(9) DEFAULT NULL,\\n  `d_quarter_name` char(6) DEFAULT NULL,\\n  `d_holiday` char(1) DEFAULT NULL,\\n  `d_weekend` char(1) DEFAULT NULL,\\n  `d_following_holiday` char(1) DEFAULT NULL,\\n  `d_first_dom` int(11) DEFAULT NULL,\\n  `d_last_dom` int(11) DEFAULT NULL,\\n  `d_same_day_ly` int(11) DEFAULT NULL,\\n  `d_same_day_lq` int(11) DEFAULT NULL,\\n  `d_current_day` char(1) DEFAULT NULL,\\n  `d_current_week` char(1) DEFAULT NULL,\\n  `d_current_month` char(1) DEFAULT NULL,\\n  `d_current_quarter` char(1) DEFAULT NULL,\\n  `d_current_year` char(1) DEFAULT NULL,\\n  PRIMARY KEY (`d_date_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de datos demográficos del hogar con las columnas de, hd demo sk, banda de ingresos hd sk, potencial de compra hd, conteo de dep hd, conteo de vehículos hd",
      "output": "('household_demographics', 'CREATE TABLE `household_demographics` (\\n  `hd_demo_sk` int(11) NOT NULL  `hd_income_band_sk` int(11) DEFAULT NULL,\\n  `hd_buy_potential` char(15) DEFAULT NULL,\\n  `hd_dep_count` int(11) DEFAULT NULL,\\n  `hd_vehicle_count` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`hd_demo_sk`),\\n  KEY `hd_ib` (`hd_income_band_sk`),\\n  CONSTRAINT `hd_ib` FOREIGN KEY (`hd_income_band_sk`) REFERENCES `income_band` (`ib_income_band_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de banda de ingresos con las columnas de, ib banda de ingresos sk, ib límite inferior, ib límite superior",
      "output": "('income_band', 'CREATE TABLE `income_band` (\\n  `ib_income_band_sk` int(11) NOT NULL  `ib_lower_bound` int(11) DEFAULT NULL,\\n  `ib_upper_bound` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`ib_income_band_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de inventario con las columnas de, sk de fecha de inventario, sk de artículo de inv, sk de almacén de inv, cantidad disponible de inv",
      "output": "('inventory', 'CREATE TABLE `inventory` (\\n  `inv_date_sk` int(11) NOT NULL  `inv_item_sk` int(11) NOT NULL,\\n  `inv_warehouse_sk` int(11) NOT NULL,\\n  `inv_quantity_on_hand` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`inv_date_sk`,`inv_item_sk`,`inv_warehouse_sk`),\\n  KEY `inv_w` (`inv_warehouse_sk`),\\n  KEY `inv_i` (`inv_item_sk`),\\n  CONSTRAINT `inv_d` FOREIGN KEY (`inv_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `inv_i` FOREIGN KEY (`inv_item_sk`) REFERENCES `item` (`i_item_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `inv_w` FOREIGN KEY (`inv_warehouse_sk`) REFERENCES `warehouse` (`w_warehouse_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de artículo con las columnas de, i item sk, i item id, i rec fecha de inicio, i rec fecha de finalización, i item desc, i precio actual, i costo mayorista, i id de marca, i marca, i id de clase, i clase, i id de categoría, i categoría, i fabrique id, i fabrique, i tamaño, i formulación, i color, i unidades, i contenedor, i id de administrador, i nombre de producto",
      "output": "('item', 'CREATE TABLE `item` (\\n  `i_item_sk` int(11) NOT NULL  `i_item_id` char(16) NOT NULL,\\n  `i_rec_start_date` date DEFAULT NULL,\\n  `i_rec_end_date` date DEFAULT NULL,\\n  `i_item_desc` varchar(200) DEFAULT NULL,\\n  `i_current_price` decimal(7,2) DEFAULT NULL,\\n  `i_wholesale_cost` decimal(7,2) DEFAULT NULL,\\n  `i_brand_id` int(11) DEFAULT NULL,\\n  `i_brand` char(50) DEFAULT NULL,\\n  `i_class_id` int(11) DEFAULT NULL,\\n  `i_class` char(50) DEFAULT NULL,\\n  `i_category_id` int(11) DEFAULT NULL,\\n  `i_category` char(50) DEFAULT NULL,\\n  `i_manufact_id` int(11) DEFAULT NULL,\\n  `i_manufact` char(50) DEFAULT NULL,\\n  `i_size` char(20) DEFAULT NULL,\\n  `i_formulation` char(20) DEFAULT NULL,\\n  `i_color` char(20) DEFAULT NULL,\\n  `i_units` char(10) DEFAULT NULL,\\n  `i_container` char(10) DEFAULT NULL,\\n  `i_manager_id` int(11) DEFAULT NULL,\\n  `i_product_name` char(50) DEFAULT NULL,\\n  PRIMARY KEY (`i_item_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de promoción con las columnas de, p promoción sk, p id de promoción, p fecha de inicio sk, p fecha de finalización sk, p artículo sk, p costo, p destino de respuesta, p nombre de promoción, p canal dmail, p canal correo electrónico, p catálogo de canales, p canal tv, radio del canal p, prensa del canal p, evento del canal p, demostración del canal p, detalles del canal p, propósito p, descuento p activo",
      "output": "('promotion', 'CREATE TABLE `promotion` (\\n  `p_promo_sk` int(11) NOT NULL  `p_promo_id` char(16) NOT NULL,\\n  `p_start_date_sk` int(11) DEFAULT NULL,\\n  `p_end_date_sk` int(11) DEFAULT NULL,\\n  `p_item_sk` int(11) DEFAULT NULL,\\n  `p_cost` decimal(15,2) DEFAULT NULL,\\n  `p_response_target` int(11) DEFAULT NULL,\\n  `p_promo_name` char(50) DEFAULT NULL,\\n  `p_channel_dmail` char(1) DEFAULT NULL,\\n  `p_channel_email` char(1) DEFAULT NULL,\\n  `p_channel_catalog` char(1) DEFAULT NULL,\\n  `p_channel_tv` char(1) DEFAULT NULL,\\n  `p_channel_radio` char(1) DEFAULT NULL,\\n  `p_channel_press` char(1) DEFAULT NULL,\\n  `p_channel_event` char(1) DEFAULT NULL,\\n  `p_channel_demo` char(1) DEFAULT NULL,\\n  `p_channel_details` varchar(100) DEFAULT NULL,\\n  `p_purpose` char(15) DEFAULT NULL,\\n  `p_discount_active` char(1) DEFAULT NULL,\\n  PRIMARY KEY (`p_promo_sk`),\\n  KEY `p_start_date` (`p_start_date_sk`),\\n  KEY `p_i` (`p_item_sk`),\\n  KEY `p_end_date` (`p_end_date_sk`),\\n  CONSTRAINT `p_end_date` FOREIGN KEY (`p_end_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `p_i` FOREIGN KEY (`p_item_sk`) REFERENCES `item` (`i_item_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `p_start_date` FOREIGN KEY (`p_start_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de razón con las columnas de, r razón sk, r razón id, r razón desc",
      "output": "('reason', 'CREATE TABLE `reason` (\\n  `r_reason_sk` int(11) NOT NULL  `r_reason_id` char(16) NOT NULL,\\n  `r_reason_desc` char(100) DEFAULT NULL,\\n  PRIMARY KEY (`r_reason_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de modo de envío con las columnas de, modo de envío de sm sk, id de modo de envío de sm, tipo de sm, código de sm, operador de sm, contrato de sm",
      "output": "('ship_mode', 'CREATE TABLE `ship_mode` (\\n  `sm_ship_mode_sk` int(11) NOT NULL  `sm_ship_mode_id` char(16) NOT NULL,\\n  `sm_type` char(30) DEFAULT NULL,\\n  `sm_code` char(10) DEFAULT NULL,\\n  `sm_carrier` char(20) DEFAULT NULL,\\n  `sm_contract` char(20) DEFAULT NULL,\\n  PRIMARY KEY (`sm_ship_mode_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Tienda con las columnas de, s tienda sk, s tienda id, s rec fecha de inicio, s rec fecha de finalización, s fecha de cierre s, s nombre de la tienda, s número de empleados, s superficie, s horas, s gerente, s id de mercado, s clase de geografía, s market desc, s market manager, s division id, s division name, s company id, s company name, s street number, s street name, s street type, s suite number, s city, s County, s state, s código postal, país s, compensación gmt s, porcentaje impositivo s",
      "output": "('store', 'CREATE TABLE `store` (\\n  `s_store_sk` int(11) NOT NULL  `s_store_id` char(16) NOT NULL,\\n  `s_rec_start_date` date DEFAULT NULL,\\n  `s_rec_end_date` date DEFAULT NULL,\\n  `s_closed_date_sk` int(11) DEFAULT NULL,\\n  `s_store_name` varchar(50) DEFAULT NULL,\\n  `s_number_employees` int(11) DEFAULT NULL,\\n  `s_floor_space` int(11) DEFAULT NULL,\\n  `s_hours` char(20) DEFAULT NULL,\\n  `s_manager` varchar(40) DEFAULT NULL,\\n  `s_market_id` int(11) DEFAULT NULL,\\n  `s_geography_class` varchar(100) DEFAULT NULL,\\n  `s_market_desc` varchar(100) DEFAULT NULL,\\n  `s_market_manager` varchar(40) DEFAULT NULL,\\n  `s_division_id` int(11) DEFAULT NULL,\\n  `s_division_name` varchar(50) DEFAULT NULL,\\n  `s_company_id` int(11) DEFAULT NULL,\\n  `s_company_name` varchar(50) DEFAULT NULL,\\n  `s_street_number` varchar(10) DEFAULT NULL,\\n  `s_street_name` varchar(60) DEFAULT NULL,\\n  `s_street_type` char(15) DEFAULT NULL,\\n  `s_suite_number` char(10) DEFAULT NULL,\\n  `s_city` varchar(60) DEFAULT NULL,\\n  `s_county` varchar(30) DEFAULT NULL,\\n  `s_state` char(2) DEFAULT NULL,\\n  `s_zip` char(10) DEFAULT NULL,\\n  `s_country` varchar(20) DEFAULT NULL,\\n  `s_gmt_offset` decimal(5,2) DEFAULT NULL,\\n  `s_tax_precentage` decimal(5,2) DEFAULT NULL,\\n  PRIMARY KEY (`s_store_sk`),\\n  KEY `s_close_date` (`s_closed_date_sk`),\\n  CONSTRAINT `s_close_date` FOREIGN KEY (`s_closed_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de devoluciones en tienda con las columnas de, sr fecha de devolución sk, sr hora de devolución sk, sr artículo sk, sr cliente sk, sr cdemo sk, sr hdemo sk, sr addr sk, sr tienda sk, sr motivo sk, sr número de ticket, sr cantidad de devolución, sr devolución amt , sr devolución de impuestos, sr devolución de impuestos inc., sr tarifa, sr costo de envío de devolución, sr efectivo reembolsado, sr cobro revertido, sr crédito de tienda, sr pérdida neta",
      "output": "('store_returns', 'CREATE TABLE `store_returns` (\\n  `sr_returned_date_sk` int(11) DEFAULT NULL  `sr_return_time_sk` int(11) DEFAULT NULL,\\n  `sr_item_sk` int(11) NOT NULL,\\n  `sr_customer_sk` int(11) DEFAULT NULL,\\n  `sr_cdemo_sk` int(11) DEFAULT NULL,\\n  `sr_hdemo_sk` int(11) DEFAULT NULL,\\n  `sr_addr_sk` int(11) DEFAULT NULL,\\n  `sr_store_sk` int(11) DEFAULT NULL,\\n  `sr_reason_sk` int(11) DEFAULT NULL,\\n  `sr_ticket_number` int(11) NOT NULL,\\n  `sr_return_quantity` int(11) DEFAULT NULL,\\n  `sr_return_amt` decimal(7,2) DEFAULT NULL,\\n  `sr_return_tax` decimal(7,2) DEFAULT NULL,\\n  `sr_return_amt_inc_tax` decimal(7,2) DEFAULT NULL,\\n  `sr_fee` decimal(7,2) DEFAULT NULL,\\n  `sr_return_ship_cost` decimal(7,2) DEFAULT NULL,\\n  `sr_refunded_cash` decimal(7,2) DEFAULT NULL,\\n  `sr_reversed_charge` decimal(7,2) DEFAULT NULL,\\n  `sr_store_credit` decimal(7,2) DEFAULT NULL,\\n  `sr_net_loss` decimal(7,2) DEFAULT NULL,\\n  PRIMARY KEY (`sr_item_sk`,`sr_ticket_number`),\\n  KEY `sr_s` (`sr_store_sk`),\\n  KEY `sr_t` (`sr_return_time_sk`),\\n  KEY `sr_ret_d` (`sr_returned_date_sk`),\\n  KEY `sr_r` (`sr_reason_sk`),\\n  KEY `sr_hd` (`sr_hdemo_sk`),\\n  KEY `sr_c` (`sr_customer_sk`),\\n  KEY `sr_cd` (`sr_cdemo_sk`),\\n  KEY `sr_a` (`sr_addr_sk`),\\n  CONSTRAINT `sr_a` FOREIGN KEY (`sr_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `sr_c` FOREIGN KEY (`sr_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `sr_cd` FOREIGN KEY (`sr_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `sr_hd` FOREIGN KEY (`sr_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `sr_i` FOREIGN KEY (`sr_item_sk`) REFERENCES `item` (`i_item_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `sr_r` FOREIGN KEY (`sr_reason_sk`) REFERENCES `reason` (`r_reason_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `sr_ret_d` FOREIGN KEY (`sr_returned_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `sr_s` FOREIGN KEY (`sr_store_sk`) REFERENCES `store` (`s_store_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `sr_t` FOREIGN KEY (`sr_return_time_sk`) REFERENCES `time_dim` (`t_time_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ventas en tienda con las columnas de, ss fecha de venta sk, ss tiempo de venta sk, ss artículo sk, ss cliente sk, ss cdemo sk, ss hdemo sk, ss addr sk, ss tienda sk, ss promo sk, ss número de ticket, ss cantidad, ss costo mayorista, ss precio de lista, ss precio de venta, ss ext descuento amt, ss ext precio de venta, ss ext costo mayorista, ss ext precio de lista, ss ext impuesto, ss cupón amt, ss pago neto, ss pago neto incluido impuesto, ss ganancia neta",
      "output": "('store_sales', 'CREATE TABLE `store_sales` (\\n  `ss_sold_date_sk` int(11) DEFAULT NULL  `ss_sold_time_sk` int(11) DEFAULT NULL,\\n  `ss_item_sk` int(11) NOT NULL,\\n  `ss_customer_sk` int(11) DEFAULT NULL,\\n  `ss_cdemo_sk` int(11) DEFAULT NULL,\\n  `ss_hdemo_sk` int(11) DEFAULT NULL,\\n  `ss_addr_sk` int(11) DEFAULT NULL,\\n  `ss_store_sk` int(11) DEFAULT NULL,\\n  `ss_promo_sk` int(11) DEFAULT NULL,\\n  `ss_ticket_number` int(11) NOT NULL,\\n  `ss_quantity` int(11) DEFAULT NULL,\\n  `ss_wholesale_cost` decimal(7,2) DEFAULT NULL,\\n  `ss_list_price` decimal(7,2) DEFAULT NULL,\\n  `ss_sales_price` decimal(7,2) DEFAULT NULL,\\n  `ss_ext_discount_amt` decimal(7,2) DEFAULT NULL,\\n  `ss_ext_sales_price` decimal(7,2) DEFAULT NULL,\\n  `ss_ext_wholesale_cost` decimal(7,2) DEFAULT NULL,\\n  `ss_ext_list_price` decimal(7,2) DEFAULT NULL,\\n  `ss_ext_tax` decimal(7,2) DEFAULT NULL,\\n  `ss_coupon_amt` decimal(7,2) DEFAULT NULL,\\n  `ss_net_paid` decimal(7,2) DEFAULT NULL,\\n  `ss_net_paid_inc_tax` decimal(7,2) DEFAULT NULL,\\n  `ss_net_profit` decimal(7,2) DEFAULT NULL,\\n  PRIMARY KEY (`ss_item_sk`,`ss_ticket_number`),\\n  KEY `ss_s` (`ss_store_sk`),\\n  KEY `ss_t` (`ss_sold_time_sk`),\\n  KEY `ss_d` (`ss_sold_date_sk`),\\n  KEY `ss_p` (`ss_promo_sk`),\\n  KEY `ss_hd` (`ss_hdemo_sk`),\\n  KEY `ss_c` (`ss_customer_sk`),\\n  KEY `ss_cd` (`ss_cdemo_sk`),\\n  KEY `ss_a` (`ss_addr_sk`),\\n  CONSTRAINT `ss_a` FOREIGN KEY (`ss_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ss_c` FOREIGN KEY (`ss_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ss_cd` FOREIGN KEY (`ss_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ss_d` FOREIGN KEY (`ss_sold_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ss_hd` FOREIGN KEY (`ss_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ss_i` FOREIGN KEY (`ss_item_sk`) REFERENCES `item` (`i_item_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ss_p` FOREIGN KEY (`ss_promo_sk`) REFERENCES `promotion` (`p_promo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ss_s` FOREIGN KEY (`ss_store_sk`) REFERENCES `store` (`s_store_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ss_t` FOREIGN KEY (`ss_sold_time_sk`) REFERENCES `time_dim` (`t_time_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de tiempo tenue con las columnas de, t tiempo sk, t id de tiempo, t tiempo, t hora, t minuto, t segundo, t am pm, t turno, t sub turno, t hora de comida",
      "output": "('time_dim', 'CREATE TABLE `time_dim` (\\n  `t_time_sk` int(11) NOT NULL  `t_time_id` char(16) NOT NULL,\\n  `t_time` int(11) DEFAULT NULL,\\n  `t_hour` int(11) DEFAULT NULL,\\n  `t_minute` int(11) DEFAULT NULL,\\n  `t_second` int(11) DEFAULT NULL,\\n  `t_am_pm` char(2) DEFAULT NULL,\\n  `t_shift` char(20) DEFAULT NULL,\\n  `t_sub_shift` char(20) DEFAULT NULL,\\n  `t_meal_time` char(20) DEFAULT NULL,\\n  PRIMARY KEY (`t_time_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de depósito con las columnas de, w almacén sk, w identificación del almacén, w nombre del almacén, w pies cuadrados del almacén, w número de la calle, w nombre de la calle, w tipo de calle, w número de suite, w ciudad, w condado, w estado, w código postal, w país, w compensación gmt",
      "output": "('warehouse', 'CREATE TABLE `warehouse` (\\n  `w_warehouse_sk` int(11) NOT NULL  `w_warehouse_id` char(16) NOT NULL,\\n  `w_warehouse_name` varchar(20) DEFAULT NULL,\\n  `w_warehouse_sq_ft` int(11) DEFAULT NULL,\\n  `w_street_number` char(10) DEFAULT NULL,\\n  `w_street_name` varchar(60) DEFAULT NULL,\\n  `w_street_type` char(15) DEFAULT NULL,\\n  `w_suite_number` char(10) DEFAULT NULL,\\n  `w_city` varchar(60) DEFAULT NULL,\\n  `w_county` varchar(30) DEFAULT NULL,\\n  `w_state` char(2) DEFAULT NULL,\\n  `w_zip` char(10) DEFAULT NULL,\\n  `w_country` varchar(20) DEFAULT NULL,\\n  `w_gmt_offset` decimal(5,2) DEFAULT NULL,\\n  PRIMARY KEY (`w_warehouse_sk`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de página web con las columnas de, página web de wp sk, ID de página web de wp, fecha de inicio de wp rec, fecha de finalización de wp rec, fecha de creación de wp sk, fecha de acceso de wp sk, bandera de autogen de wp, sk de cliente de wp, url de wp, tipo de wp, recuento de caracteres de wp, wp conteo de enlaces, conteo de imágenes wp, conteo máximo de anuncios wp",
      "output": "('web_page', 'CREATE TABLE `web_page` (\\n  `wp_web_page_sk` int(11) NOT NULL  `wp_web_page_id` char(16) NOT NULL,\\n  `wp_rec_start_date` date DEFAULT NULL,\\n  `wp_rec_end_date` date DEFAULT NULL,\\n  `wp_creation_date_sk` int(11) DEFAULT NULL,\\n  `wp_access_date_sk` int(11) DEFAULT NULL,\\n  `wp_autogen_flag` char(1) DEFAULT NULL,\\n  `wp_customer_sk` int(11) DEFAULT NULL,\\n  `wp_url` varchar(100) DEFAULT NULL,\\n  `wp_type` char(50) DEFAULT NULL,\\n  `wp_char_count` int(11) DEFAULT NULL,\\n  `wp_link_count` int(11) DEFAULT NULL,\\n  `wp_image_count` int(11) DEFAULT NULL,\\n  `wp_max_ad_count` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`wp_web_page_sk`),\\n  KEY `wp_cd` (`wp_creation_date_sk`),\\n  KEY `wp_ad` (`wp_access_date_sk`),\\n  CONSTRAINT `wp_ad` FOREIGN KEY (`wp_access_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wp_cd` FOREIGN KEY (`wp_creation_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de devoluciones web con las columnas de, wr fecha de devolución sk, wr hora de devolución sk, wr artículo sk, wr cliente reembolsado sk, wr cddemo sk reembolsado, wr hdemo sk reembolsado, wr addr sk reembolsado, wr cliente que regresa sk, wr cdemo sk que regresa, wr hdemo sk que regresa, wr dirección de devolución sk, wr página web sk, wr motivo sk, wr número de pedido, wr cantidad devuelta, wr importe de devolución, wr impuesto de devolución, wr importe de devolución incl. cargo, wr crédito en cuenta, wr pérdida neta",
      "output": "('web_returns', 'CREATE TABLE `web_returns` (\\n  `wr_returned_date_sk` int(11) DEFAULT NULL  `wr_returned_time_sk` int(11) DEFAULT NULL,\\n  `wr_item_sk` int(11) NOT NULL,\\n  `wr_refunded_customer_sk` int(11) DEFAULT NULL,\\n  `wr_refunded_cdemo_sk` int(11) DEFAULT NULL,\\n  `wr_refunded_hdemo_sk` int(11) DEFAULT NULL,\\n  `wr_refunded_addr_sk` int(11) DEFAULT NULL,\\n  `wr_returning_customer_sk` int(11) DEFAULT NULL,\\n  `wr_returning_cdemo_sk` int(11) DEFAULT NULL,\\n  `wr_returning_hdemo_sk` int(11) DEFAULT NULL,\\n  `wr_returning_addr_sk` int(11) DEFAULT NULL,\\n  `wr_web_page_sk` int(11) DEFAULT NULL,\\n  `wr_reason_sk` int(11) DEFAULT NULL,\\n  `wr_order_number` int(11) NOT NULL,\\n  `wr_return_quantity` int(11) DEFAULT NULL,\\n  `wr_return_amt` decimal(7,2) DEFAULT NULL,\\n  `wr_return_tax` decimal(7,2) DEFAULT NULL,\\n  `wr_return_amt_inc_tax` decimal(7,2) DEFAULT NULL,\\n  `wr_fee` decimal(7,2) DEFAULT NULL,\\n  `wr_return_ship_cost` decimal(7,2) DEFAULT NULL,\\n  `wr_refunded_cash` decimal(7,2) DEFAULT NULL,\\n  `wr_reversed_charge` decimal(7,2) DEFAULT NULL,\\n  `wr_account_credit` decimal(7,2) DEFAULT NULL,\\n  `wr_net_loss` decimal(7,2) DEFAULT NULL,\\n  PRIMARY KEY (`wr_item_sk`,`wr_order_number`),\\n  KEY `wr_wp` (`wr_web_page_sk`),\\n  KEY `wr_ret_hd` (`wr_returning_hdemo_sk`),\\n  KEY `wr_ret_c` (`wr_returning_customer_sk`),\\n  KEY `wr_ret_cd` (`wr_returning_cdemo_sk`),\\n  KEY `wr_ret_a` (`wr_returning_addr_sk`),\\n  KEY `wr_ret_t` (`wr_returned_time_sk`),\\n  KEY `wr_ret_d` (`wr_returned_date_sk`),\\n  KEY `wr_ref_hd` (`wr_refunded_hdemo_sk`),\\n  KEY `wr_ref_c` (`wr_refunded_customer_sk`),\\n  KEY `wr_ref_cd` (`wr_refunded_cdemo_sk`),\\n  KEY `wr_ref_a` (`wr_refunded_addr_sk`),\\n  KEY `wr_r` (`wr_reason_sk`),\\n  CONSTRAINT `wr_i` FOREIGN KEY (`wr_item_sk`) REFERENCES `item` (`i_item_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_r` FOREIGN KEY (`wr_reason_sk`) REFERENCES `reason` (`r_reason_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ref_a` FOREIGN KEY (`wr_refunded_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ref_c` FOREIGN KEY (`wr_refunded_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ref_cd` FOREIGN KEY (`wr_refunded_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ref_hd` FOREIGN KEY (`wr_refunded_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ret_a` FOREIGN KEY (`wr_returning_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ret_c` FOREIGN KEY (`wr_returning_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ret_cd` FOREIGN KEY (`wr_returning_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ret_d` FOREIGN KEY (`wr_returned_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ret_hd` FOREIGN KEY (`wr_returning_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_ret_t` FOREIGN KEY (`wr_returned_time_sk`) REFERENCES `time_dim` (`t_time_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `wr_wp` FOREIGN KEY (`wr_web_page_sk`) REFERENCES `web_page` (`wp_web_page_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ventas web con las columnas dews fecha de venta sk, ws fecha de venta sk, ws fecha de envío sk, ws item sk, ws bill customer sk, ws bill cddemo sk, ws bill hdemo sk, ws bill addr sk, ws ship customer sk, ws ship cddemo sk, ws ship hdemo sk, ws ship addr sk, ws página web sk, ws sitio web sk, ws modo de envío sk, ws warehouse sk, ws promo sk, ws número de pedido, ws cantidad, ws costo mayorista, ws precio de lista, ws ventas precio, cantidad de descuento adicional, precio de venta adicional, costo mayorista adicional, precio de lista adicional, impuesto adicional, cantidad de cupón, costo de envío externo, pago neto, impuestos incluidos pagados netos, envío incluido pagado neto , ws neto pagado inc impuestos de envío, ws ganancia neta",
      "output": "('web_sales', 'CREATE TABLE `web_sales` (\\n  `ws_sold_date_sk` int(11) DEFAULT NULL  `ws_sold_time_sk` int(11) DEFAULT NULL,\\n  `ws_ship_date_sk` int(11) DEFAULT NULL,\\n  `ws_item_sk` int(11) NOT NULL,\\n  `ws_bill_customer_sk` int(11) DEFAULT NULL,\\n  `ws_bill_cdemo_sk` int(11) DEFAULT NULL,\\n  `ws_bill_hdemo_sk` int(11) DEFAULT NULL,\\n  `ws_bill_addr_sk` int(11) DEFAULT NULL,\\n  `ws_ship_customer_sk` int(11) DEFAULT NULL,\\n  `ws_ship_cdemo_sk` int(11) DEFAULT NULL,\\n  `ws_ship_hdemo_sk` int(11) DEFAULT NULL,\\n  `ws_ship_addr_sk` int(11) DEFAULT NULL,\\n  `ws_web_page_sk` int(11) DEFAULT NULL,\\n  `ws_web_site_sk` int(11) DEFAULT NULL,\\n  `ws_ship_mode_sk` int(11) DEFAULT NULL,\\n  `ws_warehouse_sk` int(11) DEFAULT NULL,\\n  `ws_promo_sk` int(11) DEFAULT NULL,\\n  `ws_order_number` int(11) NOT NULL,\\n  `ws_quantity` int(11) DEFAULT NULL,\\n  `ws_wholesale_cost` decimal(7,2) DEFAULT NULL,\\n  `ws_list_price` decimal(7,2) DEFAULT NULL,\\n  `ws_sales_price` decimal(7,2) DEFAULT NULL,\\n  `ws_ext_discount_amt` decimal(7,2) DEFAULT NULL,\\n  `ws_ext_sales_price` decimal(7,2) DEFAULT NULL,\\n  `ws_ext_wholesale_cost` decimal(7,2) DEFAULT NULL,\\n  `ws_ext_list_price` decimal(7,2) DEFAULT NULL,\\n  `ws_ext_tax` decimal(7,2) DEFAULT NULL,\\n  `ws_coupon_amt` decimal(7,2) DEFAULT NULL,\\n  `ws_ext_ship_cost` decimal(7,2) DEFAULT NULL,\\n  `ws_net_paid` decimal(7,2) DEFAULT NULL,\\n  `ws_net_paid_inc_tax` decimal(7,2) DEFAULT NULL,\\n  `ws_net_paid_inc_ship` decimal(7,2) DEFAULT NULL,\\n  `ws_net_paid_inc_ship_tax` decimal(7,2) DEFAULT NULL,\\n  `ws_net_profit` decimal(7,2) DEFAULT NULL,\\n  PRIMARY KEY (`ws_item_sk`,`ws_order_number`),\\n  KEY `ws_ws` (`ws_web_site_sk`),\\n  KEY `ws_wp` (`ws_web_page_sk`),\\n  KEY `ws_w2` (`ws_warehouse_sk`),\\n  KEY `ws_t` (`ws_sold_time_sk`),\\n  KEY `ws_d2` (`ws_sold_date_sk`),\\n  KEY `ws_sm` (`ws_ship_mode_sk`),\\n  KEY `ws_s_hd` (`ws_ship_hdemo_sk`),\\n  KEY `ws_s_d` (`ws_ship_date_sk`),\\n  KEY `ws_s_c` (`ws_ship_customer_sk`),\\n  KEY `ws_s_cd` (`ws_ship_cdemo_sk`),\\n  KEY `ws_s_a` (`ws_ship_addr_sk`),\\n  KEY `ws_p` (`ws_promo_sk`),\\n  KEY `ws_b_hd` (`ws_bill_hdemo_sk`),\\n  KEY `ws_b_c` (`ws_bill_customer_sk`),\\n  KEY `ws_b_cd` (`ws_bill_cdemo_sk`),\\n  KEY `ws_b_a` (`ws_bill_addr_sk`),\\n  CONSTRAINT `ws_b_a` FOREIGN KEY (`ws_bill_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_b_c` FOREIGN KEY (`ws_bill_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_b_cd` FOREIGN KEY (`ws_bill_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_b_hd` FOREIGN KEY (`ws_bill_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_d2` FOREIGN KEY (`ws_sold_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_i` FOREIGN KEY (`ws_item_sk`) REFERENCES `item` (`i_item_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_p` FOREIGN KEY (`ws_promo_sk`) REFERENCES `promotion` (`p_promo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_s_a` FOREIGN KEY (`ws_ship_addr_sk`) REFERENCES `customer_address` (`ca_address_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_s_c` FOREIGN KEY (`ws_ship_customer_sk`) REFERENCES `customer` (`c_customer_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_s_cd` FOREIGN KEY (`ws_ship_cdemo_sk`) REFERENCES `customer_demographics` (`cd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_s_d` FOREIGN KEY (`ws_ship_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_s_hd` FOREIGN KEY (`ws_ship_hdemo_sk`) REFERENCES `household_demographics` (`hd_demo_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_sm` FOREIGN KEY (`ws_ship_mode_sk`) REFERENCES `ship_mode` (`sm_ship_mode_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_t` FOREIGN KEY (`ws_sold_time_sk`) REFERENCES `time_dim` (`t_time_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_w2` FOREIGN KEY (`ws_warehouse_sk`) REFERENCES `warehouse` (`w_warehouse_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_wp` FOREIGN KEY (`ws_web_page_sk`) REFERENCES `web_page` (`wp_web_page_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `ws_ws` FOREIGN KEY (`ws_web_site_sk`) REFERENCES `web_site` (`web_site_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de sitio web con las columnas de, sk de sitio web, ID de sitio web, fecha de inicio de web rec, fecha de finalización de web rec, nombre web, sk de fecha de apertura web, sk de fecha de cierre web, clase web, administrador web, id de mkt web, clase de mkt web, descripción de mkt web, administrador de mercado web, identificación de la empresa web, nombre de la empresa web, número de calle web, nombre de calle web, tipo de calle web, número de suite web, ciudad web, condado web, estado web, código postal web, país web, compensación gmt web, porcentaje de impuestos web",
      "output": "('web_site', 'CREATE TABLE `web_site` (\\n  `web_site_sk` int(11) NOT NULL  `web_site_id` char(16) NOT NULL,\\n  `web_rec_start_date` date DEFAULT NULL,\\n  `web_rec_end_date` date DEFAULT NULL,\\n  `web_name` varchar(50) DEFAULT NULL,\\n  `web_open_date_sk` int(11) DEFAULT NULL,\\n  `web_close_date_sk` int(11) DEFAULT NULL,\\n  `web_class` varchar(50) DEFAULT NULL,\\n  `web_manager` varchar(40) DEFAULT NULL,\\n  `web_mkt_id` int(11) DEFAULT NULL,\\n  `web_mkt_class` varchar(50) DEFAULT NULL,\\n  `web_mkt_desc` varchar(100) DEFAULT NULL,\\n  `web_market_manager` varchar(40) DEFAULT NULL,\\n  `web_company_id` int(11) DEFAULT NULL,\\n  `web_company_name` char(50) DEFAULT NULL,\\n  `web_street_number` char(10) DEFAULT NULL,\\n  `web_street_name` varchar(60) DEFAULT NULL,\\n  `web_street_type` char(15) DEFAULT NULL,\\n  `web_suite_number` char(10) DEFAULT NULL,\\n  `web_city` varchar(60) DEFAULT NULL,\\n  `web_county` varchar(30) DEFAULT NULL,\\n  `web_state` char(2) DEFAULT NULL,\\n  `web_zip` char(10) DEFAULT NULL,\\n  `web_country` varchar(20) DEFAULT NULL,\\n  `web_gmt_offset` decimal(5,2) DEFAULT NULL,\\n  `web_tax_percentage` decimal(5,2) DEFAULT NULL,\\n  PRIMARY KEY (`web_site_sk`),\\n  KEY `web_d2` (`web_open_date_sk`),\\n  KEY `web_d1` (`web_close_date_sk`),\\n  CONSTRAINT `web_d1` FOREIGN KEY (`web_close_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION,\\n  CONSTRAINT `web_d2` FOREIGN KEY (`web_open_date_sk`) REFERENCES `date_dim` (`d_date_sk`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de PERMISO DE CUENTA E con las columnas de, AP CA ID, AP ACL, AP TAX ID, AP L NOMBRE, AP F NOMBRE",
      "output": "('E_ACCOUNT_PERMISSION', 'CREATE TABLE `E_ACCOUNT_PERMISSION` (\\n  `AP_CA_ID` decimal(11,0) NOT NULL  `AP_ACL` char(4) NOT NULL,\\n  `AP_TAX_ID` char(20) NOT NULL,\\n  `AP_L_NAME` char(30) NOT NULL,\\n  `AP_F_NAME` char(30) NOT NULL,\\n  PRIMARY KEY (`AP_CA_ID`,`AP_TAX_ID`),\\n  UNIQUE KEY `PK_E_ACCOUNT_PERMISSION` (`AP_CA_ID`,`AP_TAX_ID`),\\n  CONSTRAINT `E_ACCOUNT_PERMISSION_ibfk_1` FOREIGN KEY (`AP_CA_ID`) REFERENCES `E_CUSTOMER_ACCOUNT` (`CA_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de DIRECCIÓN ELECTRÓNICA con las columnas de, ID DE ANUNCIO, LÍNEA DE ANUNCIO, LÍNEA DE ANUNCIO, CÓDIGO ZC DE ANUNCIO, PRUEBA DE ANUNCIO",
      "output": "('E_ADDRESS', 'CREATE TABLE `E_ADDRESS` (\\n  `AD_ID` decimal(11,0) NOT NULL  `AD_LINE1` char(80) DEFAULT NULL,\\n  `AD_LINE2` char(80) DEFAULT NULL,\\n  `AD_ZC_CODE` char(12) NOT NULL,\\n  `AD_CTRY` char(80) DEFAULT NULL,\\n  PRIMARY KEY (`AD_ID`),\\n  UNIQUE KEY `PK_E_ADDRESS` (`AD_ID`),\\n  KEY `AD_ZC_CODE` (`AD_ZC_CODE`),\\n  CONSTRAINT `E_ADDRESS_ibfk_1` FOREIGN KEY (`AD_ZC_CODE`) REFERENCES `E_ZIP_CODE` (`ZC_CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de ES UN CORREDOR con las columnas de, B ID, B ST ID, B NOMBRE, B NUM NEGOCIOS, B COMM TOTAL",
      "output": "('E_BROKER', 'CREATE TABLE `E_BROKER` (\\n  `B_ID` decimal(11,0) NOT NULL  `B_ST_ID` char(4) NOT NULL,\\n  `B_NAME` char(100) NOT NULL,\\n  `B_NUM_TRADES` decimal(9,0) NOT NULL,\\n  `B_COMM_TOTAL` decimal(12,2) NOT NULL,\\n  PRIMARY KEY (`B_ID`),\\n  UNIQUE KEY `PK_E_BROKER` (`B_ID`),\\n  UNIQUE KEY `E_BROKER_INDX1` (`B_NAME`,`B_ID`),\\n  UNIQUE KEY `E_BROKER_INDX2` (`B_ID`,`B_NAME`),\\n  KEY `B_ST_ID` (`B_ST_ID`),\\n  CONSTRAINT `E_BROKER_ibfk_1` FOREIGN KEY (`B_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de TRANSACCIÓN EN EFECTIVO con las columnas de, CT T ID, CT DTS, CT AMT, CT NOMBRE",
      "output": "('E_CASH_TRANSACTION', 'CREATE TABLE `E_CASH_TRANSACTION` (\\n  `CT_T_ID` decimal(15,0) NOT NULL  `CT_DTS` date DEFAULT NULL,\\n  `CT_AMT` decimal(10,2) NOT NULL,\\n  `CT_NAME` char(100) DEFAULT NULL,\\n  PRIMARY KEY (`CT_T_ID`),\\n  UNIQUE KEY `PK_E_CASH_TRANSACTION` (`CT_T_ID`),\\n  CONSTRAINT `E_CASH_TRANSACTION_ibfk_1` FOREIGN KEY (`CT_T_ID`) REFERENCES `E_TRADE` (`T_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de CARGO E con las columnas de, F tat Eid, f c tr, f cargo",
      "output": "('E_CHARGE', 'CREATE TABLE `E_CHARGE` (\\n  `CH_TT_ID` char(3) NOT NULL  `CH_C_TIER` decimal(1,0) NOT NULL,\\n  `CH_CHRG` decimal(10,2) NOT NULL,\\n  PRIMARY KEY (`CH_TT_ID`,`CH_C_TIER`),\\n  UNIQUE KEY `PK_E_CHARGE` (`CH_TT_ID`,`CH_C_TIER`),\\n  CONSTRAINT `E_CHARGE_ibfk_1` FOREIGN KEY (`CH_TT_ID`) REFERENCES `E_TRADE_TYPE` (`TT_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de TASA DE COMISIÓN con las columnas de, CR C NIVEL, CR TT ID, CR EX ID, CR DE CANTIDAD, CR A CANTIDAD, CR TASA",
      "output": "('E_COMMISSION_RATE', 'CREATE TABLE `E_COMMISSION_RATE` (\\n  `CR_C_TIER` decimal(1,0) NOT NULL  `CR_TT_ID` char(3) NOT NULL,\\n  `CR_EX_ID` char(6) NOT NULL,\\n  `CR_FROM_QTY` decimal(9,0) NOT NULL,\\n  `CR_TO_QTY` decimal(9,0) NOT NULL,\\n  `CR_RATE` decimal(5,2) NOT NULL,\\n  PRIMARY KEY (`CR_C_TIER`,`CR_TT_ID`,`CR_EX_ID`,`CR_FROM_QTY`),\\n  UNIQUE KEY `PK_E_COMMISSION_RATE` (`CR_C_TIER`,`CR_TT_ID`,`CR_EX_ID`,`CR_FROM_QTY`),\\n  KEY `CR_EX_ID` (`CR_EX_ID`),\\n  KEY `CR_TT_ID` (`CR_TT_ID`),\\n  CONSTRAINT `E_COMMISSION_RATE_ibfk_1` FOREIGN KEY (`CR_EX_ID`) REFERENCES `E_EXCHANGE` (`EX_ID`),\\n  CONSTRAINT `E_COMMISSION_RATE_ibfk_2` FOREIGN KEY (`CR_TT_ID`) REFERENCES `E_TRADE_TYPE` (`TT_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de EMPRESA con las columnas de, CO ID, CO ST ID, CO NOMBRE, CO IN ID, CO SP RATE, CO CEO, CO AD ID, CO DESC, CO ABRIR FECHA",
      "output": "('E_COMPANY', 'CREATE TABLE `E_COMPANY` (\\n  `CO_ID` decimal(11,0) NOT NULL  `CO_ST_ID` char(4) NOT NULL,\\n  `CO_NAME` char(60) NOT NULL,\\n  `CO_IN_ID` char(2) NOT NULL,\\n  `CO_SP_RATE` char(4) NOT NULL,\\n  `CO_CEO` char(100) NOT NULL,\\n  `CO_AD_ID` decimal(11,0) NOT NULL,\\n  `CO_DESC` char(150) NOT NULL,\\n  `CO_OPEN_DATE` date DEFAULT NULL,\\n  PRIMARY KEY (`CO_ID`),\\n  UNIQUE KEY `PK_E_COMPANY` (`CO_ID`),\\n  UNIQUE KEY `E_COMPANY_INDX1` (`CO_NAME`,`CO_ID`),\\n  UNIQUE KEY `E_COMPANY_INDX2` (`CO_IN_ID`,`CO_ID`),\\n  KEY `CO_AD_ID` (`CO_AD_ID`),\\n  KEY `CO_ST_ID` (`CO_ST_ID`),\\n  CONSTRAINT `E_COMPANY_ibfk_1` FOREIGN KEY (`CO_AD_ID`) REFERENCES `E_ADDRESS` (`AD_ID`),\\n  CONSTRAINT `E_COMPANY_ibfk_2` FOREIGN KEY (`CO_IN_ID`) REFERENCES `E_INDUSTRY` (`IN_ID`),\\n  CONSTRAINT `E_COMPANY_ibfk_3` FOREIGN KEY (`CO_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E EMPRESA COMPETIDOR con las columnas de, CP CO ID, CP COMP CO ID, CP IN ID",
      "output": "('E_COMPANY_COMPETITOR', 'CREATE TABLE `E_COMPANY_COMPETITOR` (\\n  `CP_CO_ID` decimal(11,0) NOT NULL  `CP_COMP_CO_ID` decimal(11,0) NOT NULL,\\n  `CP_IN_ID` char(2) NOT NULL,\\n  PRIMARY KEY (`CP_CO_ID`,`CP_COMP_CO_ID`,`CP_IN_ID`),\\n  UNIQUE KEY `PK_E_COMPANY_COMPETITOR` (`CP_CO_ID`,`CP_COMP_CO_ID`,`CP_IN_ID`),\\n  KEY `CP_COMP_CO_ID` (`CP_COMP_CO_ID`),\\n  KEY `CP_IN_ID` (`CP_IN_ID`),\\n  KEY `E_COMPANY_COMPETITOR_INDX1` (`CP_CO_ID`),\\n  CONSTRAINT `E_COMPANY_COMPETITOR_ibfk_1` FOREIGN KEY (`CP_COMP_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`),\\n  CONSTRAINT `E_COMPANY_COMPETITOR_ibfk_2` FOREIGN KEY (`CP_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`),\\n  CONSTRAINT `E_COMPANY_COMPETITOR_ibfk_3` FOREIGN KEY (`CP_IN_ID`) REFERENCES `E_INDUSTRY` (`IN_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de CLIENTE ELECTRÓNICO con las columnas de, C ID, C TAX ID, C ST ID, C L NOMBRE, C F NOMBRE, C M NOMBRE, C GNDR, C TIER, C DOB, C AD ID, C CTRY , CAR AREA , C LOCAL , C EXT , C CTRY , C AREA , C LOCAL , C EXT , C CTRY , AREA DE ATENCION , C LOCAL , C EXT , C EMAIL , C EMAIL",
      "output": "('E_CUSTOMER', 'CREATE TABLE `E_CUSTOMER` (\\n  `C_ID` decimal(11,0) NOT NULL  `C_TAX_ID` char(20) NOT NULL,\\n  `C_ST_ID` char(4) NOT NULL,\\n  `C_L_NAME` char(30) NOT NULL,\\n  `C_F_NAME` char(30) NOT NULL,\\n  `C_M_NAME` char(1) DEFAULT NULL,\\n  `C_GNDR` char(1) DEFAULT NULL,\\n  `C_TIER` decimal(1,0) NOT NULL,\\n  `C_DOB` date DEFAULT NULL,\\n  `C_AD_ID` decimal(11,0) NOT NULL,\\n  `C_CTRY_1` char(3) DEFAULT NULL,\\n  `C_AREA_1` char(3) DEFAULT NULL,\\n  `C_LOCAL_1` char(10) DEFAULT NULL,\\n  `C_EXT_1` char(5) DEFAULT NULL,\\n  `C_CTRY_2` char(3) DEFAULT NULL,\\n  `C_AREA_2` char(3) DEFAULT NULL,\\n  `C_LOCAL_2` char(10) DEFAULT NULL,\\n  `C_EXT_2` char(5) DEFAULT NULL,\\n  `C_CTRY_3` char(3) DEFAULT NULL,\\n  `C_AREA_3` char(3) DEFAULT NULL,\\n  `C_LOCAL_3` char(10) DEFAULT NULL,\\n  `C_EXT_3` char(5) DEFAULT NULL,\\n  `C_EMAIL_1` char(50) DEFAULT NULL,\\n  `C_EMAIL_2` char(50) DEFAULT NULL,\\n  PRIMARY KEY (`C_ID`),\\n  UNIQUE KEY `PK_E_CUSTOMER` (`C_ID`),\\n  UNIQUE KEY `E_CUSTOMER_INDX1` (`C_TAX_ID`,`C_ID`),\\n  UNIQUE KEY `E_CUSTOMER_INDX2` (`C_ID`,`C_TIER`),\\n  KEY `C_ST_ID` (`C_ST_ID`),\\n  KEY `C_AD_ID` (`C_AD_ID`),\\n  CONSTRAINT `E_CUSTOMER_ibfk_1` FOREIGN KEY (`C_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`),\\n  CONSTRAINT `E_CUSTOMER_ibfk_2` FOREIGN KEY (`C_AD_ID`) REFERENCES `E_ADDRESS` (`AD_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de CUENTA DE CLIENTE con las columnas de, CA ID, CA B ID, CA C ID, CA NAME, CA TAX ST, CA BAL",
      "output": "('E_CUSTOMER_ACCOUNT', 'CREATE TABLE `E_CUSTOMER_ACCOUNT` (\\n  `CA_ID` decimal(11,0) NOT NULL  `CA_B_ID` decimal(11,0) NOT NULL,\\n  `CA_C_ID` decimal(11,0) NOT NULL,\\n  `CA_NAME` char(50) NOT NULL,\\n  `CA_TAX_ST` decimal(1,0) NOT NULL,\\n  `CA_BAL` decimal(12,2) NOT NULL,\\n  PRIMARY KEY (`CA_ID`),\\n  UNIQUE KEY `PK_E_CUSTOMER_ACCOUNT` (`CA_ID`),\\n  UNIQUE KEY `E_CUSTOMER_ACCOUNT_INDX1` (`CA_C_ID`,`CA_ID`),\\n  UNIQUE KEY `E_CUSTOMER_ACCOUNT_INDX2` (`CA_B_ID`,`CA_ID`,`CA_C_ID`),\\n  UNIQUE KEY `E_CUSTOMER_ACCOUNT_INDX3` (`CA_ID`,`CA_B_ID`,`CA_C_ID`,`CA_TAX_ST`,`CA_NAME`),\\n  CONSTRAINT `E_CUSTOMER_ACCOUNT_ibfk_1` FOREIGN KEY (`CA_B_ID`) REFERENCES `E_BROKER` (`B_ID`),\\n  CONSTRAINT `E_CUSTOMER_ACCOUNT_ibfk_2` FOREIGN KEY (`CA_C_ID`) REFERENCES `E_CUSTOMER` (`C_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de TASA DE IMPUESTO AL CLIENTE con las columnas de, ID de CX TX, ID de CX C",
      "output": "('E_CUSTOMER_TAXRATE', 'CREATE TABLE `E_CUSTOMER_TAXRATE` (\\n  `CX_TX_ID` char(4) NOT NULL  `CX_C_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`CX_TX_ID`,`CX_C_ID`),\\n  UNIQUE KEY `PK_E_CUSTOMER_TAXRATE` (`CX_C_ID`,`CX_TX_ID`),\\n  CONSTRAINT `E_CUSTOMER_TAXRATE_ibfk_1` FOREIGN KEY (`CX_C_ID`) REFERENCES `E_CUSTOMER` (`C_ID`),\\n  CONSTRAINT `E_CUSTOMER_TAXRATE_ibfk_2` FOREIGN KEY (`CX_TX_ID`) REFERENCES `E_TAXRATE` (`TX_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E MERCADO DIARIO con las columnas de, FECHA DM, SÍMB DM, CIERRE DM, ALTO DM, BAJO DM, VOLUMEN DM",
      "output": "('E_DAILY_MARKET', 'CREATE TABLE `E_DAILY_MARKET` (\\n  `DM_DATE` date NOT NULL  `DM_S_SYMB` char(15) NOT NULL,\\n  `DM_CLOSE` decimal(8,2) NOT NULL,\\n  `DM_HIGH` decimal(8,2) NOT NULL,\\n  `DM_LOW` decimal(8,2) NOT NULL,\\n  `DM_VOL` decimal(12,0) NOT NULL,\\n  PRIMARY KEY (`DM_DATE`,`DM_S_SYMB`),\\n  UNIQUE KEY `PK_E_DAILY_MARKET` (`DM_S_SYMB`,`DM_DATE`),\\n  UNIQUE KEY `E_DAILY_MARKET_INDX1` (`DM_DATE`,`DM_S_SYMB`),\\n  CONSTRAINT `E_DAILY_MARKET_ibfk_1` FOREIGN KEY (`DM_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de INTERCAMBIO E con las columnas de, EX ID, EX NOMBRE, EX NUM SYMB, EX ABRIR, EX CLOSE, EX DESC, EX AD ID",
      "output": "('E_EXCHANGE', 'CREATE TABLE `E_EXCHANGE` (\\n  `EX_ID` char(6) NOT NULL  `EX_NAME` char(100) NOT NULL,\\n  `EX_NUM_SYMB` decimal(6,0) NOT NULL,\\n  `EX_OPEN` decimal(4,0) NOT NULL,\\n  `EX_CLOSE` decimal(4,0) NOT NULL,\\n  `EX_DESC` char(150) DEFAULT NULL,\\n  `EX_AD_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`EX_ID`),\\n  UNIQUE KEY `PK_E_EXCHANGE` (`EX_ID`),\\n  KEY `EX_AD_ID` (`EX_AD_ID`),\\n  CONSTRAINT `E_EXCHANGE_ibfk_1` FOREIGN KEY (`EX_AD_ID`) REFERENCES `E_ADDRESS` (`AD_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E FINANCIERO con las columnas de, ID CO FI, AÑO FI, TRIM FI, FECHA DE INICIO DEL TRIM FI, INGRESOS FI, GANANCIA NETA FI, UPA BÁSICA FI, UPA DILUCIÓN FI, MARGEN FI, INVENTARIO FI, ACTIVO FI, PASIVO FI, SALIDA FI BÁSICA, SALIDA FI DILUIDA",
      "output": "('E_FINANCIAL', 'CREATE TABLE `E_FINANCIAL` (\\n  `FI_CO_ID` decimal(11,0) NOT NULL  `FI_YEAR` decimal(4,0) NOT NULL,\\n  `FI_QTR` decimal(1,0) NOT NULL,\\n  `FI_QTR_START_DATE` date DEFAULT NULL,\\n  `FI_REVENUE` decimal(15,2) NOT NULL,\\n  `FI_NET_EARN` decimal(15,2) NOT NULL,\\n  `FI_BASIC_EPS` decimal(10,2) NOT NULL,\\n  `FI_DILUT_EPS` decimal(10,2) NOT NULL,\\n  `FI_MARGIN` decimal(10,2) NOT NULL,\\n  `FI_INVENTORY` decimal(15,2) NOT NULL,\\n  `FI_ASSETS` decimal(15,2) NOT NULL,\\n  `FI_LIABILITY` decimal(15,2) NOT NULL,\\n  `FI_OUT_BASIC` decimal(12,0) NOT NULL,\\n  `FI_OUT_DILUT` decimal(12,0) NOT NULL,\\n  PRIMARY KEY (`FI_CO_ID`,`FI_YEAR`,`FI_QTR`),\\n  UNIQUE KEY `PK_E_FINANCIAL` (`FI_CO_ID`,`FI_YEAR`,`FI_QTR`),\\n  CONSTRAINT `E_FINANCIAL_ibfk_1` FOREIGN KEY (`FI_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E HOLDING con las columnas de, H T ID, H CA ID, H S SYMB, H DTS, H PRECIO, H CANTIDAD",
      "output": "('E_HOLDING', 'CREATE TABLE `E_HOLDING` (\\n  `H_T_ID` decimal(15,0) NOT NULL  `H_CA_ID` decimal(11,0) NOT NULL,\\n  `H_S_SYMB` char(15) NOT NULL,\\n  `H_DTS` date DEFAULT NULL,\\n  `H_PRICE` decimal(8,2) NOT NULL,\\n  `H_QTY` decimal(9,0) NOT NULL,\\n  PRIMARY KEY (`H_T_ID`),\\n  UNIQUE KEY `PK_E_HOLDING` (`H_T_ID`),\\n  UNIQUE KEY `E_HOLDING_INDX1` (`H_CA_ID`,`H_S_SYMB`,`H_DTS`,`H_T_ID`),\\n  CONSTRAINT `E_HOLDING_ibfk_1` FOREIGN KEY (`H_CA_ID`, `H_S_SYMB`) REFERENCES `E_HOLDING_SUMMARY` (`HS_CA_ID`, `HS_S_SYMB`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_HOLDING_ibfk_2` FOREIGN KEY (`H_T_ID`) REFERENCES `E_TRADE` (`T_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E HISTORIAL DE TENENCIA con las columnas de, HH H T ID, HH T ID, HH ANTES DE LA CANTIDAD, HH DESPUÉS DE LA CANTIDAD",
      "output": "('E_HOLDING_HISTORY', 'CREATE TABLE `E_HOLDING_HISTORY` (\\n  `HH_H_T_ID` decimal(15,0) NOT NULL  `HH_T_ID` decimal(15,0) NOT NULL,\\n  `HH_BEFORE_QTY` decimal(9,0) NOT NULL,\\n  `HH_AFTER_QTY` decimal(9,0) NOT NULL,\\n  PRIMARY KEY (`HH_H_T_ID`,`HH_T_ID`),\\n  UNIQUE KEY `PK_E_HOLDING_HISTORY` (`HH_H_T_ID`,`HH_T_ID`),\\n  UNIQUE KEY `E_HOLDING_HISTORY_INDX1` (`HH_T_ID`,`HH_H_T_ID`),\\n  CONSTRAINT `E_HOLDING_HISTORY_ibfk_1` FOREIGN KEY (`HH_T_ID`) REFERENCES `E_TRADE` (`T_ID`),\\n  CONSTRAINT `E_HOLDING_HISTORY_ibfk_2` FOREIGN KEY (`HH_H_T_ID`) REFERENCES `E_HOLDING` (`H_T_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E RESUMEN DE EXPLOTACIÓN con las columnas de, HS CA ID, HS S SYMB, HS CANT",
      "output": "('E_HOLDING_SUMMARY', 'CREATE TABLE `E_HOLDING_SUMMARY` (\\n  `HS_CA_ID` decimal(11,0) NOT NULL  `HS_S_SYMB` char(15) NOT NULL,\\n  `HS_QTY` decimal(9,0) NOT NULL,\\n  PRIMARY KEY (`HS_CA_ID`,`HS_S_SYMB`),\\n  UNIQUE KEY `PK_E_HOLDING_SUMMARY` (`HS_CA_ID`,`HS_S_SYMB`),\\n  KEY `HS_S_SYMB` (`HS_S_SYMB`),\\n  CONSTRAINT `E_HOLDING_SUMMARY_ibfk_1` FOREIGN KEY (`HS_CA_ID`) REFERENCES `E_CUSTOMER_ACCOUNT` (`CA_ID`),\\n  CONSTRAINT `E_HOLDING_SUMMARY_ibfk_2` FOREIGN KEY (`HS_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de INDUSTRIA ELECTRÓNICA con las columnas de, EN ID, EN NOMBRE, EN SC ID",
      "output": "('E_INDUSTRY', 'CREATE TABLE `E_INDUSTRY` (\\n  `IN_ID` char(2) NOT NULL  `IN_NAME` char(50) NOT NULL,\\n  `IN_SC_ID` char(2) NOT NULL,\\n  PRIMARY KEY (`IN_ID`),\\n  UNIQUE KEY `PK_E_INDUSTRY` (`IN_ID`),\\n  UNIQUE KEY `E_INDUSTRY_INDX1` (`IN_NAME`,`IN_ID`),\\n  UNIQUE KEY `E_INDUSTRY_INDX2` (`IN_SC_ID`,`IN_ID`),\\n  CONSTRAINT `E_INDUSTRY_ibfk_1` FOREIGN KEY (`IN_SC_ID`) REFERENCES `E_SECTOR` (`SC_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E ÚLTIMA OPERACIÓN con las columnas de, LT S SYMB, LT DTS, LT PRECIO, LT OPEN PRECIO, LT VOL",
      "output": "('E_LAST_TRADE', 'CREATE TABLE `E_LAST_TRADE` (\\n  `LT_S_SYMB` char(15) NOT NULL  `LT_DTS` date DEFAULT NULL,\\n  `LT_PRICE` decimal(8,2) NOT NULL,\\n  `LT_OPEN_PRICE` decimal(8,2) NOT NULL,\\n  `LT_VOL` decimal(12,0) NOT NULL,\\n  PRIMARY KEY (`LT_S_SYMB`),\\n  UNIQUE KEY `PK_E_LAST_TRADE` (`LT_S_SYMB`),\\n  CONSTRAINT `E_LAST_TRADE_ibfk_1` FOREIGN KEY (`LT_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E NOTICIA con las columnas de, SIN ID, SIN TÍTULO, SIN RESUMEN, SIN ELEMENTO, SIN DTS, SIN FUENTE, SIN AUTOR",
      "output": "('E_NEWS_ITEM', 'CREATE TABLE `E_NEWS_ITEM` (\\n  `NI_ID` decimal(11,0) NOT NULL  `NI_HEADLINE` char(80) NOT NULL,\\n  `NI_SUMMARY` char(255) NOT NULL,\\n  `NI_ITEM` longtext NOT NULL,\\n  `NI_DTS` date DEFAULT NULL,\\n  `NI_SOURCE` char(30) NOT NULL,\\n  `NI_AUTHOR` char(30) DEFAULT NULL,\\n  PRIMARY KEY (`NI_ID`),\\n  UNIQUE KEY `PK_E_NEWS_ITEM` (`NI_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E NOTICIAS REFX con las columnas de, ID NI NX, ID CO NX",
      "output": "('E_NEWS_XREF', 'CREATE TABLE `E_NEWS_XREF` (\\n  `NX_NI_ID` decimal(11,0) NOT NULL  `NX_CO_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`NX_NI_ID`,`NX_CO_ID`),\\n  UNIQUE KEY `PK_E_NEWS_XREF` (`NX_CO_ID`,`NX_NI_ID`),\\n  KEY `NX_NI_ID` (`NX_NI_ID`),\\n  CONSTRAINT `E_NEWS_XREF_ibfk_1` FOREIGN KEY (`NX_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_NEWS_XREF_ibfk_2` FOREIGN KEY (`NX_NI_ID`) REFERENCES `E_NEWS_ITEM` (`NI_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de SECTOR E con las columnas de, ID SC, NOMBRE SC",
      "output": "('E_SECTOR', 'CREATE TABLE `E_SECTOR` (\\n  `SC_ID` char(2) NOT NULL  `SC_NAME` char(30) NOT NULL,\\n  PRIMARY KEY (`SC_ID`),\\n  UNIQUE KEY `PK_E_SECTOR` (`SC_ID`),\\n  UNIQUE KEY `E_SECTOR_INDX1` (`SC_NAME`,`SC_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de SEGURIDAD con las columnas de, S SYMB, S ISSUE, S ST ID, S NAME, S EX ID, S CO ID, S NUM OUT, S START DATE, S EXCH DATE, S PE, S WK HIGH, S WK HIGH DATE, S WK LOW, S WK FECHA BAJA, S DIVIDENDO, S RENDIMIENTO",
      "output": "('E_SECURITY', 'CREATE TABLE `E_SECURITY` (\\n  `S_SYMB` char(15) NOT NULL  `S_ISSUE` char(6) NOT NULL,\\n  `S_ST_ID` char(4) NOT NULL,\\n  `S_NAME` char(70) NOT NULL,\\n  `S_EX_ID` char(6) NOT NULL,\\n  `S_CO_ID` decimal(11,0) NOT NULL,\\n  `S_NUM_OUT` decimal(12,0) NOT NULL,\\n  `S_START_DATE` date DEFAULT NULL,\\n  `S_EXCH_DATE` date DEFAULT NULL,\\n  `S_PE` decimal(10,2) NOT NULL,\\n  `S_52WK_HIGH` decimal(8,2) NOT NULL,\\n  `S_52WK_HIGH_DATE` date DEFAULT NULL,\\n  `S_52WK_LOW` decimal(8,2) NOT NULL,\\n  `S_52WK_LOW_DATE` date DEFAULT NULL,\\n  `S_DIVIDEND` decimal(10,2) NOT NULL,\\n  `S_YIELD` decimal(5,2) NOT NULL,\\n  PRIMARY KEY (`S_SYMB`),\\n  UNIQUE KEY `PK_E_SECURITY` (`S_SYMB`),\\n  UNIQUE KEY `E_SECURITY_INDX1` (`S_CO_ID`,`S_ISSUE`,`S_EX_ID`,`S_SYMB`),\\n  UNIQUE KEY `E_SECURITY_INDX2` (`S_CO_ID`,`S_NUM_OUT`,`S_SYMB`),\\n  KEY `S_EX_ID` (`S_EX_ID`),\\n  KEY `S_ST_ID` (`S_ST_ID`),\\n  CONSTRAINT `E_SECURITY_ibfk_1` FOREIGN KEY (`S_CO_ID`) REFERENCES `E_COMPANY` (`CO_ID`),\\n  CONSTRAINT `E_SECURITY_ibfk_2` FOREIGN KEY (`S_EX_ID`) REFERENCES `E_EXCHANGE` (`EX_ID`),\\n  CONSTRAINT `E_SECURITY_ibfk_3` FOREIGN KEY (`S_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E LIQUIDACIÓN con las columnas de, SE T ID, SE TIPO DE EFECTIVO, SE FECHA DE VENCIMIENTO DE EFECTIVO, SE AMT",
      "output": "('E_SETTLEMENT', 'CREATE TABLE `E_SETTLEMENT` (\\n  `SE_T_ID` decimal(15,0) NOT NULL  `SE_CASH_TYPE` char(40) NOT NULL,\\n  `SE_CASH_DUE_DATE` date DEFAULT NULL,\\n  `SE_AMT` decimal(10,2) NOT NULL,\\n  PRIMARY KEY (`SE_T_ID`),\\n  UNIQUE KEY `PK_E_SETTLEMENT` (`SE_T_ID`),\\n  CONSTRAINT `E_SETTLEMENT_ibfk_1` FOREIGN KEY (`SE_T_ID`) REFERENCES `E_TRADE` (`T_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E ESTADO TIPO con las columnas de, ID ST, NOMBRE ST",
      "output": "('E_STATUS_TYPE', 'CREATE TABLE `E_STATUS_TYPE` (\\n  `ST_ID` char(4) NOT NULL  `ST_NAME` char(10) NOT NULL,\\n  PRIMARY KEY (`ST_ID`),\\n  UNIQUE KEY `PK_E_STATUS_TYPE` (`ST_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de O date prisa con las columnas de, ID TX, NOMBRE TX, TASA TX",
      "output": "('E_TAXRATE', 'CREATE TABLE `E_TAXRATE` (\\n  `TX_ID` char(4) NOT NULL  `TX_NAME` char(50) NOT NULL,\\n  `TX_RATE` decimal(6,5) NOT NULL,\\n  PRIMARY KEY (`TX_ID`),\\n  UNIQUE KEY `PK_E_TAXRATE` (`TX_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Y COMERCIO con las columnas de, T ID, T DTS, T ST ID, T TT ID, T IS CASH, R S SYMBOL, T QTY, T BID PRICE, T CA ID, T EXEC NAME, T TRADE PRICE, T CHRG, T COMM, T TAX, T-LIFO",
      "output": "('E_TRADE', 'CREATE TABLE `E_TRADE` (\\n  `T_ID` decimal(15,0) NOT NULL  `T_DTS` date DEFAULT NULL,\\n  `T_ST_ID` char(4) NOT NULL,\\n  `T_TT_ID` char(3) NOT NULL,\\n  `T_IS_CASH` char(1) NOT NULL,\\n  `T_S_SYMB` char(15) NOT NULL,\\n  `T_QTY` decimal(9,0) NOT NULL,\\n  `T_BID_PRICE` decimal(8,2) NOT NULL,\\n  `T_CA_ID` decimal(11,0) NOT NULL,\\n  `T_EXEC_NAME` char(64) NOT NULL,\\n  `T_TRADE_PRICE` decimal(8,2) DEFAULT NULL,\\n  `T_CHRG` decimal(10,2) NOT NULL,\\n  `T_COMM` decimal(10,2) NOT NULL,\\n  `T_TAX` decimal(10,2) NOT NULL,\\n  `T_LIFO` char(1) NOT NULL,\\n  PRIMARY KEY (`T_ID`),\\n  UNIQUE KEY `PK_E_TRADE` (`T_ID`),\\n  UNIQUE KEY `E_TRADE_INDX1` (`T_CA_ID`,`T_DTS`,`T_ID`),\\n  UNIQUE KEY `E_TRADE_INDX2` (`T_S_SYMB`,`T_DTS`,`T_ID`),\\n  KEY `T_ST_ID` (`T_ST_ID`),\\n  KEY `E_TRADE_INDX3` (`T_CA_ID`),\\n  KEY `T_TT_ID` (`T_TT_ID`),\\n  CONSTRAINT `E_TRADE_ibfk_1` FOREIGN KEY (`T_CA_ID`) REFERENCES `E_CUSTOMER_ACCOUNT` (`CA_ID`),\\n  CONSTRAINT `E_TRADE_ibfk_2` FOREIGN KEY (`T_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`),\\n  CONSTRAINT `E_TRADE_ibfk_3` FOREIGN KEY (`T_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_TRADE_ibfk_4` FOREIGN KEY (`T_TT_ID`) REFERENCES `E_TRADE_TYPE` (`TT_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de HISTORIA DEL COMERCIO ELECTRÓNICO con las columnas de, TH T ID, TH DTS, TH ST ID",
      "output": "('E_TRADE_HISTORY', 'CREATE TABLE `E_TRADE_HISTORY` (\\n  `TH_T_ID` decimal(15,0) NOT NULL  `TH_DTS` date DEFAULT NULL,\\n  `TH_ST_ID` char(4) NOT NULL,\\n  PRIMARY KEY (`TH_T_ID`,`TH_ST_ID`),\\n  UNIQUE KEY `PK_E_TRADE_HISTORY` (`TH_T_ID`,`TH_ST_ID`),\\n  KEY `TH_ST_ID` (`TH_ST_ID`),\\n  CONSTRAINT `E_TRADE_HISTORY_ibfk_1` FOREIGN KEY (`TH_ST_ID`) REFERENCES `E_STATUS_TYPE` (`ST_ID`),\\n  CONSTRAINT `E_TRADE_HISTORY_ibfk_2` FOREIGN KEY (`TH_T_ID`) REFERENCES `E_TRADE` (`T_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de SOLICITUD DE COMERCIO ELECTRÓNICO con las columnas de, TR T ID, TR TT ID, TR S SYMB, TR QTY, TR BID PRECIO, TR CA ID",
      "output": "('E_TRADE_REQUEST', 'CREATE TABLE `E_TRADE_REQUEST` (\\n  `TR_T_ID` decimal(15,0) NOT NULL  `TR_TT_ID` char(3) NOT NULL,\\n  `TR_S_SYMB` char(15) NOT NULL,\\n  `TR_QTY` decimal(9,0) NOT NULL,\\n  `TR_BID_PRICE` decimal(8,2) NOT NULL,\\n  `TR_CA_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`TR_T_ID`,`TR_TT_ID`,`TR_CA_ID`),\\n  UNIQUE KEY `PK_E_TRADE_REQUEST` (`TR_T_ID`),\\n  UNIQUE KEY `E_TRADE_REQUEST_INDX1` (`TR_CA_ID`,`TR_S_SYMB`,`TR_T_ID`),\\n  UNIQUE KEY `E_TRADE_REQUEST_INDX2` (`TR_S_SYMB`,`TR_T_ID`,`TR_TT_ID`,`TR_BID_PRICE`,`TR_QTY`),\\n  KEY `TR_TT_ID` (`TR_TT_ID`),\\n  CONSTRAINT `E_TRADE_REQUEST_ibfk_1` FOREIGN KEY (`TR_T_ID`) REFERENCES `E_TRADE` (`T_ID`),\\n  CONSTRAINT `E_TRADE_REQUEST_ibfk_4` FOREIGN KEY (`TR_TT_ID`) REFERENCES `E_TRADE_TYPE` (`TT_ID`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_TRADE_REQUEST_ibfk_5` FOREIGN KEY (`TR_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `E_TRADE_REQUEST_ibfk_6` FOREIGN KEY (`TR_CA_ID`) REFERENCES `E_CUSTOMER_ACCOUNT` (`CA_ID`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E TIPO DE COMERCIO con las columnas de, TT ID, TT NOMBRE, TT ES VENDER, TT ES MRKT",
      "output": "('E_TRADE_TYPE', 'CREATE TABLE `E_TRADE_TYPE` (\\n  `TT_ID` char(3) NOT NULL  `TT_NAME` char(12) NOT NULL,\\n  `TT_IS_SELL` char(1) NOT NULL,\\n  `TT_IS_MRKT` char(1) NOT NULL,\\n  PRIMARY KEY (`TT_ID`),\\n  UNIQUE KEY `PK_E_TRADE_TYPE` (`TT_ID`),\\n  UNIQUE KEY `E_TRADE_TYPE_INDX` (`TT_ID`,`TT_IS_MRKT`,`TT_IS_SELL`,`TT_NAME`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E VER ARTÍCULO con las columnas de, WI WI IN, SÍMBOLO WI S",
      "output": "('E_WATCH_ITEM', 'CREATE TABLE `E_WATCH_ITEM` (\\n  `WI_WL_ID` decimal(11,0) NOT NULL  `WI_S_SYMB` char(15) NOT NULL,\\n  PRIMARY KEY (`WI_WL_ID`,`WI_S_SYMB`),\\n  UNIQUE KEY `PK_E_WATCH_ITEM` (`WI_WL_ID`,`WI_S_SYMB`),\\n  KEY `WI_S_SYMB` (`WI_S_SYMB`),\\n  CONSTRAINT `E_WATCH_ITEM_ibfk_1` FOREIGN KEY (`WI_S_SYMB`) REFERENCES `E_SECURITY` (`S_SYMB`),\\n  CONSTRAINT `E_WATCH_ITEM_ibfk_2` FOREIGN KEY (`WI_WL_ID`) REFERENCES `E_WATCH_LIST` (`WL_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de E LISTA DE VIGILANCIA con las columnas de, ID de WL, ID de WL C",
      "output": "('E_WATCH_LIST', 'CREATE TABLE `E_WATCH_LIST` (\\n  `WL_ID` decimal(11,0) NOT NULL  `WL_C_ID` decimal(11,0) NOT NULL,\\n  PRIMARY KEY (`WL_ID`),\\n  UNIQUE KEY `PK_E_WATCH_LIST` (`WL_ID`),\\n  UNIQUE KEY `E_WATCH_LIST_INDX1` (`WL_C_ID`,`WL_ID`),\\n  CONSTRAINT `E_WATCH_LIST_ibfk_1` FOREIGN KEY (`WL_C_ID`) REFERENCES `E_CUSTOMER` (`C_ID`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de CÓDIGO POSTAL con las columnas de, CÓDIGO ZC, CIUDAD ZC, DIV ZC",
      "output": "('E_ZIP_CODE', 'CREATE TABLE `E_ZIP_CODE` (\\n  `ZC_CODE` char(12) NOT NULL  `ZC_TOWN` char(80) NOT NULL,\\n  `ZC_DIV` char(80) NOT NULL,\\n  PRIMARY KEY (`ZC_CODE`),\\n  UNIQUE KEY `PK_E_ZIP_CODE` (`ZC_CODE`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de cliente con las columnas de, c custkey, c mktsegment, c nationkey, c nombre, c dirección, c teléfono, c acctbal, c comentario",
      "output": "('customer', 'CREATE TABLE `customer` (\\n  `c_custkey` bigint(20) NOT NULL  `c_mktsegment` char(10) DEFAULT NULL,\\n  `c_nationkey` int(11) DEFAULT NULL,\\n  `c_name` varchar(25) DEFAULT NULL,\\n  `c_address` varchar(40) DEFAULT NULL,\\n  `c_phone` char(15) DEFAULT NULL,\\n  `c_acctbal` decimal(19,4) DEFAULT NULL,\\n  `c_comment` varchar(118) DEFAULT NULL,\\n  PRIMARY KEY (`c_custkey`),\\n  KEY `c_nationkey` (`c_nationkey`),\\n  CONSTRAINT `customer_ibfk_1` FOREIGN KEY (`c_nationkey`) REFERENCES `nation` (`n_nationkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Elemento en linea con las columnas de, l fecha de envío, l clave de pedido, l descuento, l precio extendido, l clave de suministro, l cantidad, l bandera de retorno, l clave parcial, l estado de línea, l impuesto, l fecha de confirmación, l fecha de recepción, l modo de envío, l número de línea, l instrucción de envío, l comentario",
      "output": "('lineitem', 'CREATE TABLE `lineitem` (\\n  `l_shipdate` date DEFAULT NULL  `l_orderkey` bigint(20) NOT NULL,\\n  `l_discount` decimal(19,4) NOT NULL,\\n  `l_extendedprice` decimal(19,4) NOT NULL,\\n  `l_suppkey` int(11) NOT NULL,\\n  `l_quantity` bigint(20) NOT NULL,\\n  `l_returnflag` char(1) DEFAULT NULL,\\n  `l_partkey` bigint(20) NOT NULL,\\n  `l_linestatus` char(1) DEFAULT NULL,\\n  `l_tax` decimal(19,4) NOT NULL,\\n  `l_commitdate` date DEFAULT NULL,\\n  `l_receiptdate` date DEFAULT NULL,\\n  `l_shipmode` char(10) DEFAULT NULL,\\n  `l_linenumber` bigint(20) NOT NULL,\\n  `l_shipinstruct` char(25) DEFAULT NULL,\\n  `l_comment` varchar(44) DEFAULT NULL,\\n  PRIMARY KEY (`l_orderkey`,`l_linenumber`),\\n  KEY `l_suppkey` (`l_suppkey`,`l_partkey`),\\n  KEY `l_partkey` (`l_partkey`,`l_suppkey`),\\n  CONSTRAINT `lineitem_ibfk_1` FOREIGN KEY (`l_orderkey`) REFERENCES `orders` (`o_orderkey`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `lineitem_ibfk_2` FOREIGN KEY (`l_partkey`, `l_suppkey`) REFERENCES `partsupp` (`ps_partkey`, `ps_suppkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de nación con las columnas de, n clave de nación, n nombre, n clave de región, n comentario",
      "output": "('nation', 'CREATE TABLE `nation` (\\n  `n_nationkey` int(11) NOT NULL  `n_name` char(25) DEFAULT NULL,\\n  `n_regionkey` int(11) DEFAULT NULL,\\n  `n_comment` varchar(152) DEFAULT NULL,\\n  PRIMARY KEY (`n_nationkey`),\\n  KEY `n_regionkey` (`n_regionkey`),\\n  CONSTRAINT `nation_ibfk_1` FOREIGN KEY (`n_regionkey`) REFERENCES `region` (`r_regionkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de pedidos con las columnas de, la fecha del pedido, la clave del pedido, la clave del cliente, la prioridad del pedido, la prioridad del envío, el empleado, el estado del pedido, el precio total, el comentario",
      "output": "('orders', 'CREATE TABLE `orders` (\\n  `o_orderdate` date DEFAULT NULL  `o_orderkey` bigint(20) NOT NULL,\\n  `o_custkey` bigint(20) NOT NULL,\\n  `o_orderpriority` char(15) DEFAULT NULL,\\n  `o_shippriority` int(11) DEFAULT NULL,\\n  `o_clerk` char(15) DEFAULT NULL,\\n  `o_orderstatus` char(1) DEFAULT NULL,\\n  `o_totalprice` decimal(19,4) DEFAULT NULL,\\n  `o_comment` varchar(79) DEFAULT NULL,\\n  PRIMARY KEY (`o_orderkey`),\\n  KEY `o_custkey` (`o_custkey`),\\n  CONSTRAINT `orders_ibfk_1` FOREIGN KEY (`o_custkey`) REFERENCES `customer` (`c_custkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de parte con las columnas de, p partkey, p tipo, p tamaño, p marca, p nombre, p contenedor, p mfgr, p precio minorista, p comentario",
      "output": "('part', 'CREATE TABLE `part` (\\n  `p_partkey` bigint(20) NOT NULL  `p_type` varchar(25) DEFAULT NULL,\\n  `p_size` int(11) DEFAULT NULL,\\n  `p_brand` char(10) DEFAULT NULL,\\n  `p_name` varchar(55) DEFAULT NULL,\\n  `p_container` char(10) DEFAULT NULL,\\n  `p_mfgr` char(25) DEFAULT NULL,\\n  `p_retailprice` decimal(19,4) DEFAULT NULL,\\n  `p_comment` varchar(23) DEFAULT NULL,\\n  PRIMARY KEY (`p_partkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de repuestos con las columnas de, ps partkey, ps suppkey, ps supplycost, ps disponibilidad, ps comentario",
      "output": "('partsupp', 'CREATE TABLE `partsupp` (\\n  `ps_partkey` bigint(20) NOT NULL  `ps_suppkey` int(11) NOT NULL,\\n  `ps_supplycost` decimal(19,4) NOT NULL,\\n  `ps_availqty` int(11) DEFAULT NULL,\\n  `ps_comment` varchar(199) DEFAULT NULL,\\n  PRIMARY KEY (`ps_partkey`,`ps_suppkey`),\\n  KEY `ps_suppkey` (`ps_suppkey`),\\n  CONSTRAINT `partsupp_ibfk_1` FOREIGN KEY (`ps_partkey`) REFERENCES `part` (`p_partkey`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `partsupp_ibfk_2` FOREIGN KEY (`ps_suppkey`) REFERENCES `supplier` (`s_suppkey`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de región con las columnas de, r clave de región, r nombre, r comentario",
      "output": "('region', 'CREATE TABLE `region` (\\n  `r_regionkey` int(11) NOT NULL  `r_name` char(25) DEFAULT NULL,\\n  `r_comment` varchar(152) DEFAULT NULL,\\n  PRIMARY KEY (`r_regionkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de proveedor con las columnas de, s suppkey, s nationkey, s comentario, s nombre, s dirección, s teléfono, s acctbal",
      "output": "('supplier', 'CREATE TABLE `supplier` (\\n  `s_suppkey` int(11) NOT NULL  `s_nationkey` int(11) DEFAULT NULL,\\n  `s_comment` varchar(102) DEFAULT NULL,\\n  `s_name` char(25) DEFAULT NULL,\\n  `s_address` varchar(40) DEFAULT NULL,\\n  `s_phone` char(15) DEFAULT NULL,\\n  `s_acctbal` decimal(19,4) DEFAULT NULL,\\n  PRIMARY KEY (`s_suppkey`),\\n  KEY `supplier_ibfk_1` (`s_nationkey`),\\n  CONSTRAINT `supplier_ibfk_1` FOREIGN KEY (`s_nationkey`) REFERENCES `nation` (`n_nationkey`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de coches con las columnas de, id, id del tren, posición, forma, longitud, lados, techo, ruedas, forma de carga, número de carga",
      "output": "('cars', 'CREATE TABLE `cars` (\\n  `id` int(11) NOT NULL  `train_id` int(11) DEFAULT NULL,\\n  `position` int(11) DEFAULT NULL,\\n  `shape` varchar(255) DEFAULT NULL,\\n  `len` varchar(255) DEFAULT NULL,\\n  `sides` varchar(255) DEFAULT NULL,\\n  `roof` varchar(255) DEFAULT NULL,\\n  `wheels` int(11) DEFAULT NULL,\\n  `load_shape` varchar(255) DEFAULT NULL,\\n  `load_num` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `train_id` (`train_id`),\\n  CONSTRAINT `cars_ibfk_1` FOREIGN KEY (`train_id`) REFERENCES `trains` (`id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de trenes con las columnas de, identificación, dirección",
      "output": "('trains', 'CREATE TABLE `trains` (\\n  `id` int(11) NOT NULL  `direction` varchar(4) DEFAULT NULL,\\n  PRIMARY KEY (`id`),\\n  KEY `id` (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de seguidor activo real con las columnas de, ID de usuario, ID de seguidor",
      "output": "('active_follower_real', 'CREATE TABLE `active_follower_real` (\\n  `user_id` int(11) NOT NULL  `follower_id` int(11) NOT NULL,\\n  PRIMARY KEY (`user_id`,`follower_id`),\\n  KEY `NewIndex1` (`user_id`),\\n  KEY `NewIndex2` (`follower_id`),\\n  CONSTRAINT `active_follower_real_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `distinct_users_from_search_table_real_map` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,\\n  CONSTRAINT `active_follower_real_ibfk_2` FOREIGN KEY (`follower_id`) REFERENCES `distinct_users_from_search_table_real_map` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de usuarios distintos del mapa real de la tabla de búsqueda con las columnas de, ID de usuario, nombre de usuario en pantalla, grado de entrada, grado de salida, ID de usuario incorrecta",
      "output": "('distinct_users_from_search_table_real_map', 'CREATE TABLE `distinct_users_from_search_table_real_map` (\\n  `user_id` int(11) NOT NULL  `user_screen_name` varchar(255) DEFAULT NULL,\\n  `indegree` int(11) DEFAULT NULL,\\n  `outdegree` int(11) DEFAULT NULL,\\n  `bad_user_id` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`user_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=latin1')"
    },
    {
      "input": "Una tabla de artesanos con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('craftsmen', 'CREATE TABLE `craftsmen` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) NOT NULL,\\n  `trip_sup` char(1) NOT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `craftsmen_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de impotente con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('impotenten', 'CREATE TABLE `impotenten` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) NOT NULL,\\n  `trip_sup` char(1) NOT NULL,\\n  `onboard_at_departure` int(11) NOT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `impotenten_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de facturas con las columnas de, número, número sup, viaje, viaje sup, factura, cámara",
      "output": "('invoices', 'CREATE TABLE `invoices` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) NOT NULL,\\n  `trip_sup` char(1) NOT NULL,\\n  `invoice` int(11) DEFAULT NULL,\\n  `chamber` char(1) DEFAULT NULL,\\n  KEY `invoices_number_fkey` (`number`,`number_sup`),\\n  CONSTRAINT `invoices_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de pasajeros con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('passengers', 'CREATE TABLE `passengers` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) NOT NULL,\\n  `trip_sup` char(1) NOT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `passengers_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de gente de mar con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('seafarers', 'CREATE TABLE `seafarers` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) NOT NULL,\\n  `trip_sup` char(1) NOT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `seafarers_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de soldados con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('soldiers', 'CREATE TABLE `soldiers` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) NOT NULL,\\n  `trip_sup` char(1) NOT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `soldiers_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de total con las columnas de, número, número sup, viaje, viaje sup, a bordo a la salida, muerte en el cabo, dejado en el cabo, a bordo en el cabo, muerte durante el viaje, a bordo a la llegada",
      "output": "('total', 'CREATE TABLE `total` (\\n  `number` int(11) NOT NULL  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) NOT NULL,\\n  `onboard_at_departure` int(11) DEFAULT NULL,\\n  `death_at_cape` int(11) DEFAULT NULL,\\n  `left_at_cape` int(11) DEFAULT NULL,\\n  `onboard_at_cape` int(11) DEFAULT NULL,\\n  `death_during_voyage` int(11) DEFAULT NULL,\\n  `onboard_at_arrival` int(11) DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`),\\n  CONSTRAINT `total_number_fkey` FOREIGN KEY (`number`, `number_sup`) REFERENCES `voyages` (`number`, `number_sup`) ON DELETE NO ACTION ON UPDATE NO ACTION\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de viajes con las columnas de, identificación artificial, número, número sup, viaje, viaje sup, nombre del barco, patrón, tonelaje, tipo de barco, construido, comprado, contratado, astillero, cámara, fecha de salida, puerto de salida, llegada al cabo, salida al cabo, llamada al cabo, llegada fecha, puerto de llegada, próximo viaje, detalles",
      "output": "('voyages', 'CREATE TABLE `voyages` (\\n  `artificial_id` char(12) NOT NULL  `number` int(11) NOT NULL,\\n  `number_sup` char(1) NOT NULL,\\n  `trip` int(11) DEFAULT NULL,\\n  `trip_sup` char(1) NOT NULL,\\n  `boatname` varchar(50) DEFAULT NULL,\\n  `master` varchar(50) DEFAULT NULL,\\n  `tonnage` int(11) DEFAULT NULL,\\n  `type_of_boat` varchar(30) DEFAULT NULL,\\n  `built` varchar(15) DEFAULT NULL,\\n  `bought` varchar(15) DEFAULT NULL,\\n  `hired` varchar(15) DEFAULT NULL,\\n  `yard` char(1) DEFAULT NULL,\\n  `chamber` char(1) DEFAULT NULL,\\n  `departure_date` date DEFAULT NULL,\\n  `departure_harbour` varchar(30) DEFAULT NULL,\\n  `cape_arrival` date DEFAULT NULL,\\n  `cape_departure` date DEFAULT NULL,\\n  `cape_call` varchar(5) DEFAULT NULL,\\n  `arrival_date` date DEFAULT NULL,\\n  `arrival_harbour` varchar(30) DEFAULT NULL,\\n  `next_voyage` int(11) DEFAULT NULL,\\n  `particulars` text DEFAULT NULL,\\n  PRIMARY KEY (`number`,`number_sup`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8')"
    },
    {
      "input": "Una tabla de Ciudad con las columnas de, DNI, Nombre, Código País, Distrito, Población",
      "output": "('City', \"CREATE TABLE `City` (\\n  `ID` int(11) NOT NULL AUTO_INCREMENT  `Name` char(35) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `CountryCode` char(3) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `District` char(20) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `Population` int(11) NOT NULL DEFAULT 0,\\n  PRIMARY KEY (`ID`),\\n  KEY `City_CountryCode` (`CountryCode`) USING BTREE,\\n  CONSTRAINT `city_ibfk_1` FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\\n) ENGINE=InnoDB AUTO_INCREMENT=4080 DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de País con las columnas de, Código, Nombre, Continente, Región, Superficie, Año Indep, Población, Esperanza de Vida, PNB, PNB Antiguo, Nombre Local, Forma de Gobierno, Jefe de Estado, Capital, Código",
      "output": "('Country', \"CREATE TABLE `Country` (\\n  `Code` char(3) CHARACTER SET latin1 NOT NULL DEFAULT ''  `Name` char(52) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `Continent` enum('Asia','Europe','North America','Africa','Oceania','Antarctica','South America') CHARACTER SET latin1 NOT NULL DEFAULT 'Asia',\\n  `Region` char(26) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `SurfaceArea` float(10,2) NOT NULL DEFAULT 0.00,\\n  `IndepYear` smallint(6) DEFAULT NULL,\\n  `Population` int(11) NOT NULL DEFAULT 0,\\n  `LifeExpectancy` float(3,1) DEFAULT NULL,\\n  `GNP` float(10,2) DEFAULT NULL,\\n  `GNPOld` float(10,2) DEFAULT NULL,\\n  `LocalName` char(45) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `GovernmentForm` char(45) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `HeadOfState` char(60) CHARACTER SET latin1 DEFAULT NULL,\\n  `Capital` int(11) DEFAULT NULL,\\n  `Code2` char(2) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  PRIMARY KEY (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    },
    {
      "input": "Una tabla de Lenguaje del pais con las columnas de, código de país, idioma, es oficial, porcentaje",
      "output": "('CountryLanguage', \"CREATE TABLE `CountryLanguage` (\\n  `CountryCode` char(3) CHARACTER SET latin1 NOT NULL DEFAULT ''  `Language` char(30) CHARACTER SET latin1 NOT NULL DEFAULT '',\\n  `IsOfficial` enum('T','F') CHARACTER SET latin1 NOT NULL DEFAULT 'F',\\n  `Percentage` float(4,1) NOT NULL DEFAULT 0.0,\\n  PRIMARY KEY (`CountryCode`,`Language`),\\n  KEY `CountryLanguage_CountryCode` (`CountryCode`) USING BTREE,\\n  CONSTRAINT `countryLanguage_ibfk_1` FOREIGN KEY (`CountryCode`) REFERENCES `Country` (`Code`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\")"
    }
  ]
}